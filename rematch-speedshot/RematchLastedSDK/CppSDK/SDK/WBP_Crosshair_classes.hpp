#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Crosshair.WBP_Crosshair_C
// 0x0088 (0x0410 - 0x0388)
class UWBP_Crosshair_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       BallShootedAnim;                                   // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_CrosshairImage_C*                  WBP_CrosshairImage;                                // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ARuntimeCharacter*                      As_Runtime_Character;                              // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGA_BaseShoot_C*                        ShootAbility;                                      // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class URuntimeAbilitySystemComponent*         RuntimeASC;                                        // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         DribbleStanceCounter;                              // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LockMoveCounter;                                   // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsShooting;                                       // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateMagnusPosition;                              // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateShootForce;                                  // 0x03C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedToDefenseIn;                                   // 0x03C3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CrosshairMaterial;                                 // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          PlayDefenseMode;                                   // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BallShootedFeedbackMaxIntensity;                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CrosshairBallShootedAnim;                          // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ShotForceMinimumFillPercentage;                    // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentScale;                                      // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   AvailableColors;                                   // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        BlackColorIndex;                                   // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AbilityActivated(const struct FGameplayAbilitySpecHandle& _abilityHanddle, class UGameplayAbility* _abilityActivated);
	void AbilityFinished(const struct FGameplayAbilitySpecHandle& _abilityHanddle, class UGameplayAbility* _abilityActivated);
	void BallShootedEvent();
	void BallShootedFeedback();
	void Destruct();
	void ExecuteUbergraph_WBP_Crosshair(int32 EntryPoint);
	void Finished_5DD330D14E9CB8A21C6530AF23008A6A();
	void Finished_C7B90A3543AFF95845253599316A3920();
	void Finished_C7B90A3543AFF9584525359936B92615();
	void Finished_C7B90A3543AFF958452535993E980D6A();
	void Finished_C7B90A3543AFF9584525359947CB6B2D();
	void Finished_C7B90A3543AFF95845253599753F5D9C();
	void Finished_C7B90A3543AFF95845253599E6F4E811();
	void OnInitialized();
	void OnPossessedPawnChanged_Event(class APawn* OldPawn, class APawn* NewPawn);
	void OnShoot(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount);
	void OnShootDataApplied(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount);
	void PlaceCrosshair(class ARuntimeCharacter* RuntimeCharacter);
	void PlayAimingIn();
	void PlayAimingOut();
	void PlayDefense(EUMGSequencePlayMode PlayMode);
	void Setup(class APawn* Pawn);
	void ShootAbilityActivated(class UGameplayAbility* GameplayAbility);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UnregisterEvents(class APawn* Pawn);
	void Update_Crosshair_Color(double OptionValue);
	void UpdateCrosshairSize(double OptionValue);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("WBP_Crosshair_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WBP_Crosshair_C")
	}
	static class UWBP_Crosshair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Crosshair_C>();
	}
};
DUMPER7_ASSERTS_UWBP_Crosshair_C;

}

