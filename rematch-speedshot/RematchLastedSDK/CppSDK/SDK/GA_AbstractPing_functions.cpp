#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AbstractPing

#include "Basic.hpp"

#include "GA_AbstractPing_classes.hpp"
#include "GA_AbstractPing_parameters.hpp"


namespace SDK
{

// Function GA_AbstractPing.GA_AbstractPing_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_AbstractPing_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbstractPing_C", "K2_ActivateAbilityFromEvent");

	Params::GA_AbstractPing_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_AbstractPing.GA_AbstractPing_C.TriggerPingEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&InTargetDataHandle                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// class UPingDataAsset*                   InPingDataAsset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_AbstractPing_C::TriggerPingEffect(const struct FGameplayAbilityTargetDataHandle& InTargetDataHandle, class UPingDataAsset* InPingDataAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbstractPing_C", "TriggerPingEffect");

	Params::GA_AbstractPing_C_TriggerPingEffect Parms{};

	Parms.InTargetDataHandle = std::move(InTargetDataHandle);
	Parms.InPingDataAsset = InPingDataAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_AbstractPing.GA_AbstractPing_C.BPE_ClientPreparePayload
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&_handle                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class USCAbilitySystemComponent*  _component                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FGameplayAbilityTargetDataHandle*_result                                                (Parm, OutParm)

void UGA_AbstractPing_C::BPE_ClientPreparePayload(const struct FGameplayAbilityTargetDataHandle& _handle, const class USCAbilitySystemComponent* _component, struct FGameplayAbilityTargetDataHandle* _result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbstractPing_C", "BPE_ClientPreparePayload");

	Params::GA_AbstractPing_C_BPE_ClientPreparePayload Parms{};

	Parms._handle = std::move(_handle);
	Parms._component = _component;

	UObject::ProcessEvent(Func, &Parms);

	if (_result != nullptr)
		*_result = std::move(Parms._result);
}


// Function GA_AbstractPing.GA_AbstractPing_C.Get Ping Data Asset
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&InHandle                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class USCAbilitySystemComponent*        InComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPingDataAsset*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UPingDataAsset* UGA_AbstractPing_C::Get_Ping_Data_Asset(const struct FGameplayAbilityTargetDataHandle& InHandle, class USCAbilitySystemComponent* InComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbstractPing_C", "Get Ping Data Asset");

	Params::GA_AbstractPing_C_Get_Ping_Data_Asset Parms{};

	Parms.InHandle = std::move(InHandle);
	Parms.InComponent = InComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_AbstractPing.GA_AbstractPing_C.K2_CanActivateAbility
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayAbilityActorInfo& ActorInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// const struct FGameplayAbilitySpecHandle&Handle                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer*           RelevantTags                                           (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGA_AbstractPing_C::K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_AbstractPing_C", "K2_CanActivateAbility");

	Params::GA_AbstractPing_C_K2_CanActivateAbility Parms{};

	Parms.ActorInfo = std::move(ActorInfo);
	Parms.Handle = std::move(Handle);

	UObject::ProcessEvent(Func, &Parms);

	if (RelevantTags != nullptr)
		*RelevantTags = std::move(Parms.RelevantTags);

	return Parms.ReturnValue;
}

}

