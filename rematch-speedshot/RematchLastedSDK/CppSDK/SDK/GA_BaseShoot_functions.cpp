#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BaseShoot

#include "Basic.hpp"

#include "GA_BaseShoot_classes.hpp"
#include "GA_BaseShoot_parameters.hpp"


namespace SDK
{

// Function GA_BaseShoot.GA_BaseShoot_C.BindLookatOnFreezeFrameEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABall*                            Ball                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_BaseShoot_C::BindLookatOnFreezeFrameEnd(class ABall* Ball)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BaseShoot_C", "BindLookatOnFreezeFrameEnd");

	Params::GA_BaseShoot_C_BindLookatOnFreezeFrameEnd Parms{};

	Parms.Ball = Ball;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BaseShoot.GA_BaseShoot_C.ExecuteUbergraph_GA_BaseShoot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_BaseShoot_C::ExecuteUbergraph_GA_BaseShoot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BaseShoot_C", "ExecuteUbergraph_GA_BaseShoot");

	Params::GA_BaseShoot_C_ExecuteUbergraph_GA_BaseShoot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BaseShoot.GA_BaseShoot_C.FindAimPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseTrajectoryFirstBounce                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABall*                            Ball                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         ImpactPoint                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   AllowLookAt                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_BaseShoot_C::FindAimPoint(bool UseTrajectoryFirstBounce, class ABall* Ball, struct FVector* ImpactPoint, bool* AllowLookAt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BaseShoot_C", "FindAimPoint");

	Params::GA_BaseShoot_C_FindAimPoint Parms{};

	Parms.UseTrajectoryFirstBounce = UseTrajectoryFirstBounce;
	Parms.Ball = Ball;

	UObject::ProcessEvent(Func, &Parms);

	if (ImpactPoint != nullptr)
		*ImpactPoint = std::move(Parms.ImpactPoint);

	if (AllowLookAt != nullptr)
		*AllowLookAt = Parms.AllowLookAt;
}


// Function GA_BaseShoot.GA_BaseShoot_C.TriggerFinalLookAt
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABall*                            _ball                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FBounceData&               _bounceData                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// float                                   _fSpeedAtBounce                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_BaseShoot_C::TriggerFinalLookAt(class ABall* _ball, const struct FBounceData& _bounceData, float _fSpeedAtBounce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BaseShoot_C", "TriggerFinalLookAt");

	Params::GA_BaseShoot_C_TriggerFinalLookAt Parms{};

	Parms._ball = _ball;
	Parms._bounceData = std::move(_bounceData);
	Parms._fSpeedAtBounce = _fSpeedAtBounce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BaseShoot.GA_BaseShoot_C.TriggerLookAtToAimPoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFinalLookAt                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABall*                            Ball                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_BaseShoot_C::TriggerLookAtToAimPoint(bool IsFinalLookAt, class ABall* Ball)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BaseShoot_C", "TriggerLookAtToAimPoint");

	Params::GA_BaseShoot_C_TriggerLookAtToAimPoint Parms{};

	Parms.IsFinalLookAt = IsFinalLookAt;
	Parms.Ball = Ball;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_BaseShoot.GA_BaseShoot_C.MakeShootDirectionTargetData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FShootPrepTargetData&      InShootPrep                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// struct FGameplayAbilityTargetDataHandle*Result                                                 (Parm, OutParm)

void UGA_BaseShoot_C::MakeShootDirectionTargetData(const struct FShootPrepTargetData& InShootPrep, struct FGameplayAbilityTargetDataHandle* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_BaseShoot_C", "MakeShootDirectionTargetData");

	Params::GA_BaseShoot_C_MakeShootDirectionTargetData Parms{};

	Parms.InShootPrep = std::move(InShootPrep);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}

}

