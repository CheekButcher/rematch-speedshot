#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Sound_Footsteps_Notify

#include "Basic.hpp"

#include "BP_Sound_Footsteps_Notify_classes.hpp"
#include "BP_Sound_Footsteps_Notify_parameters.hpp"


namespace SDK
{

// Function BP_Sound_Footsteps_Notify.BP_Sound_Footsteps_Notify_C.FetchSoundData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsInGameplay                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 PlayerSpeed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsLocallyControlled                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkSwitchValue**                  SurfaceSwitch                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double*                                 PlayerHeight                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Sound_Footsteps_Notify_C::FetchSoundData(class AActor* Owner, bool* IsInGameplay, double* PlayerSpeed, bool* IsLocallyControlled, class UAkSwitchValue** SurfaceSwitch, double* PlayerHeight) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sound_Footsteps_Notify_C", "FetchSoundData");

	Params::BP_Sound_Footsteps_Notify_C_FetchSoundData Parms{};

	Parms.Owner = Owner;

	UObject::ProcessEvent(Func, &Parms);

	if (IsInGameplay != nullptr)
		*IsInGameplay = Parms.IsInGameplay;

	if (PlayerSpeed != nullptr)
		*PlayerSpeed = Parms.PlayerSpeed;

	if (IsLocallyControlled != nullptr)
		*IsLocallyControlled = Parms.IsLocallyControlled;

	if (SurfaceSwitch != nullptr)
		*SurfaceSwitch = Parms.SurfaceSwitch;

	if (PlayerHeight != nullptr)
		*PlayerHeight = Parms.PlayerHeight;
}


// Function BP_Sound_Footsteps_Notify.BP_Sound_Footsteps_Notify_C.GetDefaultTriggerWeightThreshold
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_Sound_Footsteps_Notify_C::GetDefaultTriggerWeightThreshold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sound_Footsteps_Notify_C", "GetDefaultTriggerWeightThreshold");

	Params::BP_Sound_Footsteps_Notify_C_GetDefaultTriggerWeightThreshold Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Sound_Footsteps_Notify.BP_Sound_Footsteps_Notify_C.Received_Notify
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USkeletalMeshComponent*           MeshComp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                Animation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FAnimNotifyEventReference& EventReference                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_Sound_Footsteps_Notify_C::Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sound_Footsteps_Notify_C", "Received_Notify");

	Params::BP_Sound_Footsteps_Notify_C_Received_Notify Parms{};

	Parms.MeshComp = MeshComp;
	Parms.Animation = Animation;
	Parms.EventReference = std::move(EventReference);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

