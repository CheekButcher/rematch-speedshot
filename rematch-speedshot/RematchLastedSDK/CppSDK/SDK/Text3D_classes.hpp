#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Text3D

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Text3D_structs.hpp"


namespace SDK
{

// Class Text3D.Text3DActor
// 0x0008 (0x02B8 - 0x02B0)
class AText3DActor final : public AActor
{
public:
	class UText3DComponent*                       Text3DComponent;                                   // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Text3DActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Text3DActor")
	}
	static class AText3DActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AText3DActor>();
	}
};
DUMPER7_ASSERTS_AText3DActor;

// Class Text3D.Text3DCharacterTransform
// 0x00B0 (0x02F0 - 0x0240)
class UText3DCharacterTransform final : public USceneComponent
{
public:
	bool                                          bLocationEnabled;                                  // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocationProgress;                                  // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EText3DCharacterEffectOrder                   LocationOrder;                                     // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocationRange;                                     // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LocationDistance;                                  // 0x0250(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScaleEnabled;                                     // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScaleProgress;                                     // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EText3DCharacterEffectOrder                   ScaleOrder;                                        // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScaleRange;                                        // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ScaleBegin;                                        // 0x0278(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ScaleEnd;                                          // 0x0290(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRotateEnabled;                                    // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotateProgress;                                    // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EText3DCharacterEffectOrder                   RotateOrder;                                       // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotateRange;                                       // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RotateBegin;                                       // 0x02B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               RotateEnd;                                         // 0x02D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetLocationDistance(const struct FVector& Distance);
	void SetLocationEnabled(bool bEnabled);
	void SetLocationOrder(EText3DCharacterEffectOrder Order);
	void SetLocationProgress(float Progress);
	void SetLocationRange(float Range);
	void SetRotateBegin(const struct FRotator& Value);
	void SetRotateEnabled(bool bEnabled);
	void SetRotateEnd(const struct FRotator& Value);
	void SetRotateOrder(EText3DCharacterEffectOrder Order);
	void SetRotateProgress(float Progress);
	void SetRotateRange(float Range);
	void SetScaleBegin(const struct FVector& Value);
	void SetScaleEnabled(bool bEnabled);
	void SetScaleEnd(const struct FVector& Value);
	void SetScaleOrder(EText3DCharacterEffectOrder Order);
	void SetScaleProgress(float Progress);
	void SetScaleRange(float Range);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Text3DCharacterTransform")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Text3DCharacterTransform")
	}
	static class UText3DCharacterTransform* GetDefaultObj()
	{
		return GetDefaultObjImpl<UText3DCharacterTransform>();
	}
};
DUMPER7_ASSERTS_UText3DCharacterTransform;

// Class Text3D.Text3DComponent
// 0x0140 (0x0380 - 0x0240)
class UText3DComponent final : public USceneComponent
{
public:
	bool                                          bRefreshOnChange;                                  // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0248(0x0010)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                         Extrude;                                           // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Bevel;                                             // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EText3DBevelType                              BevelType;                                         // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BevelSegments;                                     // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOutline;                                          // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OutlineExpand;                                     // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     FrontMaterial;                                     // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     BevelMaterial;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     ExtrudeMaterial;                                   // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     BackMaterial;                                      // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFont*                                  Font;                                              // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   Typeface;                                          // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EText3DHorizontalTextAlignment                HorizontalAlignment;                               // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EText3DVerticalTextAlignment                  VerticalAlignment;                                 // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Kerning;                                           // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LineSpacing;                                       // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WordSpacing;                                       // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasMaxWidth;                                      // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxWidth;                                          // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasMaxHeight;                                     // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxHeight;                                         // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bScaleProportionally;                              // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCastShadow;                                       // 0x02C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C2[0x6];                                      // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        TextRoot;                                          // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void()>              TextGeneratedDelegate;                             // 0x02D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E0[0x78];                                     // 0x02E0(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CharacterKernings;                                 // 0x0358(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>           CharacterMeshes;                                   // 0x0368(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetBounds(struct FVector* Origin, struct FVector* BoxExtent);
	int32 GetGlyphCount();
	class USceneComponent* GetGlyphKerningComponent(int32 Index_0);
	const TArray<class USceneComponent*> GetGlyphKerningComponents();
	class UStaticMeshComponent* GetGlyphMeshComponent(int32 Index_0);
	const TArray<class UStaticMeshComponent*> GetGlyphMeshComponents();
	struct FVector GetTextScale();
	void SetBackMaterial(class UMaterialInterface* Value);
	void SetBevel(const float Value);
	void SetBevelMaterial(class UMaterialInterface* Value);
	void SetBevelSegments(const int32 Value);
	void SetBevelType(const EText3DBevelType Value);
	void SetCastShadow(bool NewCastShadow);
	void SetExtrude(const float Value);
	void SetExtrudeMaterial(class UMaterialInterface* Value);
	void SetFont(class UFont* InFont);
	void SetFreeze(const bool bFreeze);
	void SetFrontMaterial(class UMaterialInterface* Value);
	void SetHasMaxHeight(const bool Value);
	void SetHasMaxWidth(const bool Value);
	void SetHasOutline(const bool bValue);
	void SetHorizontalAlignment(const EText3DHorizontalTextAlignment Value);
	void SetKerning(const float Value);
	void SetLineSpacing(const float Value);
	void SetMaxHeight(const float Value);
	void SetMaxWidth(const float Value);
	void SetOutlineExpand(const float Value);
	void SetScaleProportionally(const bool Value);
	void SetText(const class FText& Value);
	void SetVerticalAlignment(const EText3DVerticalTextAlignment Value);
	void SetWordSpacing(const float Value);

	class FText GetFormattedText() const;
	TArray<class FName> GetTypefaceNames() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Text3DComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Text3DComponent")
	}
	static class UText3DComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UText3DComponent>();
	}
};
DUMPER7_ASSERTS_UText3DComponent;

// Class Text3D.Text3DEngineSubsystem
// 0x0070 (0x00A0 - 0x0030)
class UText3DEngineSubsystem final : public UEngineSubsystem
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              DefaultMaterial;                                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<uint32, struct FCachedFontData>          CachedFonts;                                       // 0x0040(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_90[0x10];                                      // 0x0090(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Text3DEngineSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Text3DEngineSubsystem")
	}
	static class UText3DEngineSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UText3DEngineSubsystem>();
	}
};
DUMPER7_ASSERTS_UText3DEngineSubsystem;

}

