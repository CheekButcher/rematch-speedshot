#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VisualLoggerSnapshot

#include "Basic.hpp"

#include "BP_VisualLoggerSnapshot_classes.hpp"
#include "BP_VisualLoggerSnapshot_parameters.hpp"


namespace SDK
{

// Function BP_VisualLoggerSnapshot.BP_VisualLoggerSnapshot_C.BndEvt__EditableText_156_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualLoggerSnapshot_C::BndEvt__EditableText_156_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualLoggerSnapshot_C", "BndEvt__EditableText_156_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature");

	Params::BP_VisualLoggerSnapshot_C_BndEvt__EditableText_156_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VisualLoggerSnapshot.BP_VisualLoggerSnapshot_C.ExecuteUbergraph_BP_VisualLoggerSnapshot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualLoggerSnapshot_C::ExecuteUbergraph_BP_VisualLoggerSnapshot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualLoggerSnapshot_C", "ExecuteUbergraph_BP_VisualLoggerSnapshot");

	Params::BP_VisualLoggerSnapshot_C_ExecuteUbergraph_BP_VisualLoggerSnapshot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VisualLoggerSnapshot.BP_VisualLoggerSnapshot_C.Setup
// (BlueprintCallable, BlueprintEvent)

void UBP_VisualLoggerSnapshot_C::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualLoggerSnapshot_C", "Setup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VisualLoggerSnapshot.BP_VisualLoggerSnapshot_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualLoggerSnapshot_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualLoggerSnapshot_C", "Tick");

	Params::BP_VisualLoggerSnapshot_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

