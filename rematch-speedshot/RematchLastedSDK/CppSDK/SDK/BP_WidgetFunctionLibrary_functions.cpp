#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WidgetFunctionLibrary

#include "Basic.hpp"

#include "BP_WidgetFunctionLibrary_classes.hpp"
#include "BP_WidgetFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function BP_WidgetFunctionLibrary.BP_WidgetFunctionLibrary_C.CreatePassZoneByTarget
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                InPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ACharacter*                       InTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InVCrosshairPosition                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InVCrosshairDirection                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InHeight                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InWidth                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShowDebug                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         OutVCenter                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         OutVUpAxis                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         OutVRightAxis                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WidgetFunctionLibrary_C::CreatePassZoneByTarget(class APlayerController* InPlayer, class ACharacter* InTarget, const struct FVector& InVCrosshairPosition, const struct FVector& InVCrosshairDirection, double InHeight, double InWidth, bool bShowDebug, class UObject* __WorldContext, struct FVector* OutVCenter, struct FVector* OutVUpAxis, struct FVector* OutVRightAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_WidgetFunctionLibrary_C", "CreatePassZoneByTarget");

	Params::BP_WidgetFunctionLibrary_C_CreatePassZoneByTarget Parms{};

	Parms.InPlayer = InPlayer;
	Parms.InTarget = InTarget;
	Parms.InVCrosshairPosition = std::move(InVCrosshairPosition);
	Parms.InVCrosshairDirection = std::move(InVCrosshairDirection);
	Parms.InHeight = InHeight;
	Parms.InWidth = InWidth;
	Parms.bShowDebug = bShowDebug;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutVCenter != nullptr)
		*OutVCenter = std::move(Parms.OutVCenter);

	if (OutVUpAxis != nullptr)
		*OutVUpAxis = std::move(Parms.OutVUpAxis);

	if (OutVRightAxis != nullptr)
		*OutVRightAxis = std::move(Parms.OutVRightAxis);
}


// Function BP_WidgetFunctionLibrary.BP_WidgetFunctionLibrary_C.GetBundleDataAssetFromFriendlyName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UBP_BundleDataAsset_C>*Out_Row                                                (Parm, OutParm, HasGetValueTypeHash)

void UBP_WidgetFunctionLibrary_C::GetBundleDataAssetFromFriendlyName(class FName RowName, class UObject* __WorldContext, TSoftObjectPtr<class UBP_BundleDataAsset_C>* Out_Row)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_WidgetFunctionLibrary_C", "GetBundleDataAssetFromFriendlyName");

	Params::BP_WidgetFunctionLibrary_C_GetBundleDataAssetFromFriendlyName Parms{};

	Parms.RowName = RowName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out_Row != nullptr)
		*Out_Row = Parms.Out_Row;
}


// Function BP_WidgetFunctionLibrary.BP_WidgetFunctionLibrary_C.GetQualityTierDataFromEnum
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESOSQualityTier                         QualityTier                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FStruct_QualityTier              ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)

struct FStruct_QualityTier UBP_WidgetFunctionLibrary_C::GetQualityTierDataFromEnum(ESOSQualityTier QualityTier, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_WidgetFunctionLibrary_C", "GetQualityTierDataFromEnum");

	Params::BP_WidgetFunctionLibrary_C_GetQualityTierDataFromEnum Parms{};

	Parms.QualityTier = QualityTier;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_WidgetFunctionLibrary.BP_WidgetFunctionLibrary_C.Project World Location in Viewport
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CircleSize                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FUIProjectInViewportResult*      OutProjectionResult                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WidgetFunctionLibrary_C::Project_World_Location_in_Viewport(class APlayerController* PlayerController, const struct FVector& WorldLocation, double CircleSize, class UObject* __WorldContext, struct FUIProjectInViewportResult* OutProjectionResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_WidgetFunctionLibrary_C", "Project World Location in Viewport");

	Params::BP_WidgetFunctionLibrary_C_Project_World_Location_in_Viewport Parms{};

	Parms.PlayerController = PlayerController;
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.CircleSize = CircleSize;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutProjectionResult != nullptr)
		*OutProjectionResult = std::move(Parms.OutProjectionResult);
}


// Function BP_WidgetFunctionLibrary.BP_WidgetFunctionLibrary_C.Project World Location in Viewport with Crosshair
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                InPlayerController                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InWorldLocation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InCrosshairPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InRectangleOffsetMin                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InRectangleOffsetMax                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InRectangleDist                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FUIProjectInViewportResult*      OutProjectionResult                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       OutRectangleOffsetMinResult                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       OutRectangleOffsetMaxResult                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WidgetFunctionLibrary_C::Project_World_Location_in_Viewport_with_Crosshair(class APlayerController* InPlayerController, const struct FVector& InWorldLocation, const struct FVector2D& InCrosshairPosition, const struct FVector2D& InRectangleOffsetMin, const struct FVector2D& InRectangleOffsetMax, double InRectangleDist, class UObject* __WorldContext, struct FUIProjectInViewportResult* OutProjectionResult, struct FVector2D* OutRectangleOffsetMinResult, struct FVector2D* OutRectangleOffsetMaxResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_WidgetFunctionLibrary_C", "Project World Location in Viewport with Crosshair");

	Params::BP_WidgetFunctionLibrary_C_Project_World_Location_in_Viewport_with_Crosshair Parms{};

	Parms.InPlayerController = InPlayerController;
	Parms.InWorldLocation = std::move(InWorldLocation);
	Parms.InCrosshairPosition = std::move(InCrosshairPosition);
	Parms.InRectangleOffsetMin = std::move(InRectangleOffsetMin);
	Parms.InRectangleOffsetMax = std::move(InRectangleOffsetMax);
	Parms.InRectangleDist = InRectangleDist;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutProjectionResult != nullptr)
		*OutProjectionResult = std::move(Parms.OutProjectionResult);

	if (OutRectangleOffsetMinResult != nullptr)
		*OutRectangleOffsetMinResult = std::move(Parms.OutRectangleOffsetMinResult);

	if (OutRectangleOffsetMaxResult != nullptr)
		*OutRectangleOffsetMaxResult = std::move(Parms.OutRectangleOffsetMaxResult);
}


// Function BP_WidgetFunctionLibrary.BP_WidgetFunctionLibrary_C.ProjectWorldLocationInViewport_DistanceCurve
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      InCircleSizeByDist                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  DefaultCircleSize                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FUIProjectInViewportResult*      OutProjectionResult                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WidgetFunctionLibrary_C::ProjectWorldLocationInViewport_DistanceCurve(class APlayerController* PlayerController, const struct FVector& WorldLocation, class UCurveFloat* InCircleSizeByDist, double DefaultCircleSize, class UObject* __WorldContext, struct FUIProjectInViewportResult* OutProjectionResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_WidgetFunctionLibrary_C", "ProjectWorldLocationInViewport_DistanceCurve");

	Params::BP_WidgetFunctionLibrary_C_ProjectWorldLocationInViewport_DistanceCurve Parms{};

	Parms.PlayerController = PlayerController;
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.InCircleSizeByDist = InCircleSizeByDist;
	Parms.DefaultCircleSize = DefaultCircleSize;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutProjectionResult != nullptr)
		*OutProjectionResult = std::move(Parms.OutProjectionResult);
}


// Function BP_WidgetFunctionLibrary.BP_WidgetFunctionLibrary_C.ProjectWorldLocationInViewportWithCrosshair_DistanceCurve
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                InPlayerController                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InWorldLocation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InCrosshairPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FBillBoardSettings&        InBillBoardSettings                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowDebug                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FUIProjectInViewportResult*      OutProjectionResult                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WidgetFunctionLibrary_C::ProjectWorldLocationInViewportWithCrosshair_DistanceCurve(class APlayerController* InPlayerController, const struct FVector& InWorldLocation, const struct FVector2D& InCrosshairPosition, const struct FBillBoardSettings& InBillBoardSettings, bool ShowDebug, class UObject* __WorldContext, struct FUIProjectInViewportResult* OutProjectionResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_WidgetFunctionLibrary_C", "ProjectWorldLocationInViewportWithCrosshair_DistanceCurve");

	Params::BP_WidgetFunctionLibrary_C_ProjectWorldLocationInViewportWithCrosshair_DistanceCurve Parms{};

	Parms.InPlayerController = InPlayerController;
	Parms.InWorldLocation = std::move(InWorldLocation);
	Parms.InCrosshairPosition = std::move(InCrosshairPosition);
	Parms.InBillBoardSettings = std::move(InBillBoardSettings);
	Parms.ShowDebug = ShowDebug;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutProjectionResult != nullptr)
		*OutProjectionResult = std::move(Parms.OutProjectionResult);
}


// Function BP_WidgetFunctionLibrary.BP_WidgetFunctionLibrary_C.ShowBillboard
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                InPlayerController                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FBillBoardSettings&        InBillBoardSettings                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InTargetLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InScreenPositionOffsetMax                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 InScreenPositionOffsetMin                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_WidgetFunctionLibrary_C::ShowBillboard(class APlayerController* InPlayerController, const struct FBillBoardSettings& InBillBoardSettings, const struct FVector& InTargetLocation, const struct FVector2D& InScreenPositionOffsetMax, const struct FVector2D& InScreenPositionOffsetMin, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_WidgetFunctionLibrary_C", "ShowBillboard");

	Params::BP_WidgetFunctionLibrary_C_ShowBillboard Parms{};

	Parms.InPlayerController = InPlayerController;
	Parms.InBillBoardSettings = std::move(InBillBoardSettings);
	Parms.InTargetLocation = std::move(InTargetLocation);
	Parms.InScreenPositionOffsetMax = std::move(InScreenPositionOffsetMax);
	Parms.InScreenPositionOffsetMin = std::move(InScreenPositionOffsetMin);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

