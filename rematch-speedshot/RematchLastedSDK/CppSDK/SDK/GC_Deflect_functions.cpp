#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Deflect

#include "Basic.hpp"

#include "GC_Deflect_classes.hpp"
#include "GC_Deflect_parameters.hpp"


namespace SDK
{

// Function GC_Deflect.GC_Deflect_C.bLock
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Ball                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGC_Deflect_C::bLock(class AActor* Ball)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Deflect_C", "bLock");

	Params::GC_Deflect_C_bLock Parms{};

	Parms.Ball = Ball;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_Deflect.GC_Deflect_C.ClearPreviousShootImpact
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_Deflect_C::ClearPreviousShootImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Deflect_C", "ClearPreviousShootImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Deflect.GC_Deflect_C.ExecuteUbergraph_GC_Deflect
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_Deflect_C::ExecuteUbergraph_GC_Deflect(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Deflect_C", "ExecuteUbergraph_GC_Deflect");

	Params::GC_Deflect_C_ExecuteUbergraph_GC_Deflect Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_Deflect.GC_Deflect_C.InitFromActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGC_Deflect_C::InitFromActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Deflect_C", "InitFromActor");

	Params::GC_Deflect_C_InitFromActor Parms{};

	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_Deflect.GC_Deflect_C.OnActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_Deflect_C::OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Deflect_C", "OnActive");

	Params::GC_Deflect_C_OnActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_Deflect.GC_Deflect_C.OnExecute
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_Deflect_C::OnExecute(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Deflect_C", "OnExecute");

	Params::GC_Deflect_C_OnExecute Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_Deflect.GC_Deflect_C.PausePendingShootImpact
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_Deflect_C::PausePendingShootImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Deflect_C", "PausePendingShootImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Deflect.GC_Deflect_C.Setup Frozen Shoot Impact
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                InVFXComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  InFreezeFrameDuration                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_Deflect_C::Setup_Frozen_Shoot_Impact(class UNiagaraComponent* InVFXComp, double InFreezeFrameDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Deflect_C", "Setup Frozen Shoot Impact");

	Params::GC_Deflect_C_Setup_Frozen_Shoot_Impact Parms{};

	Parms.InVFXComp = InVFXComp;
	Parms.InFreezeFrameDuration = InFreezeFrameDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_Deflect.GC_Deflect_C.StartLogic
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AGC_Deflect_C::StartLogic(class AActor* Actor, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Deflect_C", "StartLogic");

	Params::GC_Deflect_C_StartLogic Parms{};

	Parms.Actor = Actor;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_Deflect.GC_Deflect_C.UnpausePendingShootImpact
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_Deflect_C::UnpausePendingShootImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Deflect_C", "UnpausePendingShootImpact");

	UObject::ProcessEvent(Func, nullptr);
}

}

