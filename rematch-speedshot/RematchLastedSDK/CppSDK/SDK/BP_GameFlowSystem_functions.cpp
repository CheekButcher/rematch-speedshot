#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameFlowSystem

#include "Basic.hpp"

#include "BP_GameFlowSystem_classes.hpp"
#include "BP_GameFlowSystem_parameters.hpp"


namespace SDK
{

// Function BP_GameFlowSystem.BP_GameFlowSystem_C.BPE_Deinitialize
// (Event, Protected, BlueprintEvent)

void UBP_GameFlowSystem_C::BPE_Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "BPE_Deinitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.BPE_Initialize
// (Event, Protected, BlueprintEvent)

void UBP_GameFlowSystem_C::BPE_Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "BPE_Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.BPE_OnGameStateHandleBeginPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASCGameState*                     _gameState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowSystem_C::BPE_OnGameStateHandleBeginPlay(class ASCGameState* _gameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "BPE_OnGameStateHandleBeginPlay");

	Params::BP_GameFlowSystem_C_BPE_OnGameStateHandleBeginPlay Parms{};

	Parms._gameState = _gameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.BPE_StateChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              _previousState                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _currentState                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowSystem_C::BPE_StateChanged(const struct FGameplayTag& _previousState, const struct FGameplayTag& _currentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "BPE_StateChanged");

	Params::BP_GameFlowSystem_C_BPE_StateChanged Parms{};

	Parms._previousState = std::move(_previousState);
	Parms._currentState = std::move(_currentState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.CustomEvent_2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bToggled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowSystem_C::CustomEvent_2(bool bToggled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "CustomEvent_2");

	Params::BP_GameFlowSystem_C_CustomEvent_2 Parms{};

	Parms.bToggled = bToggled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.DeInit Test MVVM
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameFlowSystem_C::DeInit_Test_MVVM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "DeInit Test MVVM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.ExecuteUbergraph_BP_GameFlowSystem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowSystem_C::ExecuteUbergraph_BP_GameFlowSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "ExecuteUbergraph_BP_GameFlowSystem");

	Params::BP_GameFlowSystem_C_ExecuteUbergraph_BP_GameFlowSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.Init Test MVVM
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameFlowSystem_C::Init_Test_MVVM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "Init Test MVVM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.On Enter Practice
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameFlowSystem_C::On_Enter_Practice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "On Enter Practice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.On Leave  Practice
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameFlowSystem_C::On_Leave__Practice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "On Leave  Practice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.OnAllPlayersArrived
// (BlueprintCallable, BlueprintEvent)

void UBP_GameFlowSystem_C::OnAllPlayersArrived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "OnAllPlayersArrived");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.OnExitLaunchScreen
// (BlueprintCallable, BlueprintEvent)

void UBP_GameFlowSystem_C::OnExitLaunchScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "OnExitLaunchScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameFlowSystem.BP_GameFlowSystem_C.OnStateChanged
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              _previousState                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _currentState                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_GameFlowSystem_C::OnStateChanged(const struct FGameplayTag& _previousState, const struct FGameplayTag& _currentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameFlowSystem_C", "OnStateChanged");

	Params::BP_GameFlowSystem_C_OnStateChanged Parms{};

	Parms._previousState = std::move(_previousState);
	Parms._currentState = std::move(_currentState);

	UObject::ProcessEvent(Func, &Parms);
}

}

