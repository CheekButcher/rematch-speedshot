#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameOption_PreferredRegion

#include "Basic.hpp"

#include "BP_GameOption_PreferredRegion_classes.hpp"
#include "BP_GameOption_PreferredRegion_parameters.hpp"


namespace SDK
{

// Function BP_GameOption_PreferredRegion.BP_GameOption_PreferredRegion_C.BPE_SetGameOption
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ASCBasePlayerController*          _controller                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   _fValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameOption_PreferredRegion_C::BPE_SetGameOption(class ASCBasePlayerController* _controller, float _fValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOption_PreferredRegion_C", "BPE_SetGameOption");

	Params::BP_GameOption_PreferredRegion_C_BPE_SetGameOption Parms{};

	Parms._controller = _controller;
	Parms._fValue = _fValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameOption_PreferredRegion.BP_GameOption_PreferredRegion_C.GetValidRegion
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UQoSRegionViewModel*>&     AvalableRegions                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    SavedRegion                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          RegionToSet                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_GameOption_PreferredRegion_C::GetValidRegion(TArray<class UQoSRegionViewModel*>& AvalableRegions, const class FString& SavedRegion, class FString* RegionToSet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameOption_PreferredRegion_C", "GetValidRegion");

	Params::BP_GameOption_PreferredRegion_C_GetValidRegion Parms{};

	Parms.AvalableRegions = std::move(AvalableRegions);
	Parms.SavedRegion = std::move(SavedRegion);

	UObject::ProcessEvent(Func, &Parms);

	AvalableRegions = std::move(Parms.AvalableRegions);

	if (RegionToSet != nullptr)
		*RegionToSet = std::move(Parms.RegionToSet);
}

}

