#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FreeMoveTransitionDB

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SCCore_structs.hpp"
#include "SCCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FreeMoveTransitionDB.FreeMoveTransitionDB_C
// 0x0070 (0x0450 - 0x03E0)
class UFreeMoveTransitionDB_C : public USCTransitionDB
{
public:
	double                                        Start_InterruptionRatio;                           // 0x03E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stop_InterruptionRatio;                            // 0x03E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Turn180_InterruptionRatio;                         // 0x03F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Turn180_V3_InterruptionRatio;                      // 0x03F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Turn90_InterruptionRatio;                          // 0x0400(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Turn90_MaxAngularSpeed;                            // 0x0408(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Turn90_MaxAngularSpeed_Opposite;                   // 0x040C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Turn180_MaxAngularSpeed;                           // 0x0410(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Stop_MaxAngularSpeed;                              // 0x0414(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Start_MaxAngularSpeed;                             // 0x0418(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultMaxAngularSpeed;                            // 0x041C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedChange_MaxAngularSpeed;                       // 0x0420(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatInterval                         StartDirectionModifiableRatioInterval;             // 0x0424(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFloatInterval>                 Turn90DirectionModifiableRatioInterval;            // 0x0430(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize)
	TArray<struct FFloatInterval>                 Turn180DirectionModifiableRatioInterval;           // 0x0440(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize)

public:
	bool BPE_IsTransitionAllowed(const struct FSCTransition& _testingTransition, const struct FSCTransition& _currentTransition, float _fTransitionRatio, bool _bIsInDeccel) const;
	TArray<struct FFloatInterval> BPF_GetModifyTransitionAllowedIntervals(const struct FSCTransition& _testingTransition) const;
	void BPF_GetVelocityAngularSpeed(const struct FSCTransition& _testingTransition, float* _fOutSameWay, float* _fOutOppositeWay) const;

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("FreeMoveTransitionDB_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FreeMoveTransitionDB_C")
	}
	static class UFreeMoveTransitionDB_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFreeMoveTransitionDB_C>();
	}
};
DUMPER7_ASSERTS_UFreeMoveTransitionDB_C;

}

