#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ControlsDisplay

#include "Basic.hpp"

#include "WBP_ControlsDisplay_classes.hpp"
#include "WBP_ControlsDisplay_parameters.hpp"


namespace SDK
{

// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.AddAction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FText&                      DescriptionText                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class USCInputAction*                   Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTagContainer&     ShowOnTag                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FGameplayTagContainer&     HideOnTag                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FGameplayTagContainer&     WhiteOnTag                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FGameplayTagContainer&     GreyOutOnTag                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// EBPE_ControlDisplayCategory             Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_Control_C**                  Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::AddAction(class UClass* Class_0, const class FText& DescriptionText, class USCInputAction* Action, const struct FGameplayTagContainer& ShowOnTag, const struct FGameplayTagContainer& HideOnTag, const struct FGameplayTagContainer& WhiteOnTag, const struct FGameplayTagContainer& GreyOutOnTag, EBPE_ControlDisplayCategory Side, class UWBP_Control_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "AddAction");

	Params::WBP_ControlsDisplay_C_AddAction Parms{};

	Parms.Class_0 = Class_0;
	Parms.DescriptionText = std::move(DescriptionText);
	Parms.Action = Action;
	Parms.ShowOnTag = std::move(ShowOnTag);
	Parms.HideOnTag = std::move(HideOnTag);
	Parms.WhiteOnTag = std::move(WhiteOnTag);
	Parms.GreyOutOnTag = std::move(GreyOutOnTag);
	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.AddCenterWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          InWidget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::AddCenterWidget(class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "AddCenterWidget");

	Params::WBP_ControlsDisplay_C_AddCenterWidget Parms{};

	Parms.InWidget = InWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.AddKeys
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FText&                      DescriptionText                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<struct FKey>&                    OverridingKeys                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FGameplayTagContainer&     ShowOnTag                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FGameplayTagContainer&     HideOnTag                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// EBPE_ControlDisplayCategory             Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_Control_C**                  Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::AddKeys(class UClass* Class_0, const class FText& DescriptionText, TArray<struct FKey>& OverridingKeys, const struct FGameplayTagContainer& ShowOnTag, const struct FGameplayTagContainer& HideOnTag, EBPE_ControlDisplayCategory Side, class UWBP_Control_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "AddKeys");

	Params::WBP_ControlsDisplay_C_AddKeys Parms{};

	Parms.Class_0 = Class_0;
	Parms.DescriptionText = std::move(DescriptionText);
	Parms.OverridingKeys = std::move(OverridingKeys);
	Parms.ShowOnTag = std::move(ShowOnTag);
	Parms.HideOnTag = std::move(HideOnTag);
	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);

	OverridingKeys = std::move(Parms.OverridingKeys);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.AddLeftWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_Control_C*                   InWidget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::AddLeftWidget(class UWBP_Control_C* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "AddLeftWidget");

	Params::WBP_ControlsDisplay_C_AddLeftWidget Parms{};

	Parms.InWidget = InWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.AddRightWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_Control_C*                   InWidget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::AddRightWidget(class UWBP_Control_C* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "AddRightWidget");

	Params::WBP_ControlsDisplay_C_AddRightWidget Parms{};

	Parms.InWidget = InWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.BindWidgetsVisibility
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_ControlsDisplay_C::BindWidgetsVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "BindWidgetsVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.BindWidgetsVisibilityOnTagContainers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FGameplayTagContainer>&   Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class USCAbilitySystemComponent*        Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::BindWidgetsVisibilityOnTagContainers(TArray<struct FGameplayTagContainer>& Array, class USCAbilitySystemComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "BindWidgetsVisibilityOnTagContainers");

	Params::WBP_ControlsDisplay_C_BindWidgetsVisibilityOnTagContainers Parms{};

	Parms.Array = std::move(Array);
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.ClearAllKeys
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ControlsDisplay_C::ClearAllKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "ClearAllKeys");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ControlsDisplay_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.EmptyContainerCheck
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVerticalBox*                     BoxToCheck                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          BoxTitle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::EmptyContainerCheck(class UVerticalBox* BoxToCheck, class UWidget* BoxTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "EmptyContainerCheck");

	Params::WBP_ControlsDisplay_C_EmptyContainerCheck Parms{};

	Parms.BoxToCheck = BoxToCheck;
	Parms.BoxTitle = BoxTitle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.ExecuteUbergraph_WBP_ControlsDisplay
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::ExecuteUbergraph_WBP_ControlsDisplay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "ExecuteUbergraph_WBP_ControlsDisplay");

	Params::WBP_ControlsDisplay_C_ExecuteUbergraph_WBP_ControlsDisplay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.GenerateControl
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FText&                      DescriptionText                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class USCInputAction*                   Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bOverrideWithKeys                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FKey>&                    OverridingKeys                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FGameplayTagContainer&     ShowOnTag                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FGameplayTagContainer&     HideOnTag                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FGameplayTagContainer&     WhiteOnTag                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FGameplayTagContainer&     GreyOutOnTag                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UWBP_Control_C*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWBP_Control_C* UWBP_ControlsDisplay_C::GenerateControl(class APlayerController* OwningPlayer, class UClass* Class_0, const class FText& DescriptionText, class USCInputAction* Action, bool bOverrideWithKeys, TArray<struct FKey>& OverridingKeys, const struct FGameplayTagContainer& ShowOnTag, const struct FGameplayTagContainer& HideOnTag, const struct FGameplayTagContainer& WhiteOnTag, const struct FGameplayTagContainer& GreyOutOnTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "GenerateControl");

	Params::WBP_ControlsDisplay_C_GenerateControl Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.Class_0 = Class_0;
	Parms.DescriptionText = std::move(DescriptionText);
	Parms.Action = Action;
	Parms.bOverrideWithKeys = bOverrideWithKeys;
	Parms.OverridingKeys = std::move(OverridingKeys);
	Parms.ShowOnTag = std::move(ShowOnTag);
	Parms.HideOnTag = std::move(HideOnTag);
	Parms.WhiteOnTag = std::move(WhiteOnTag);
	Parms.GreyOutOnTag = std::move(GreyOutOnTag);

	UObject::ProcessEvent(Func, &Parms);

	OverridingKeys = std::move(Parms.OverridingKeys);

	return Parms.ReturnValue;
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ControlsDisplay_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.On Show Toggle Gameplay Tips Tag Count Changed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USCAbilitySystemComponent*  _abilitySystem                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _gameplayTag                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   _iCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::On_Show_Toggle_Gameplay_Tips_Tag_Count_Changed(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "On Show Toggle Gameplay Tips Tag Count Changed");

	Params::WBP_ControlsDisplay_C_On_Show_Toggle_Gameplay_Tips_Tag_Count_Changed Parms{};

	Parms._abilitySystem = _abilitySystem;
	Parms._gameplayTag = std::move(_gameplayTag);
	Parms._iCount = _iCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.OnPossessedPawnChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            OldPawn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            NewPawn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::OnPossessedPawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "OnPossessedPawnChanged");

	Params::WBP_ControlsDisplay_C_OnPossessedPawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.OnTagCountChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USCAbilitySystemComponent*  _abilitySystem                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _gameplayTag                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   _iCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::OnTagCountChanged(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "OnTagCountChanged");

	Params::WBP_ControlsDisplay_C_OnTagCountChanged Parms{};

	Parms._abilitySystem = _abilitySystem;
	Parms._gameplayTag = std::move(_gameplayTag);
	Parms._iCount = _iCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "PreConstruct");

	Params::WBP_ControlsDisplay_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.RemoveKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETextJustify                            Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWBP_Control_C*                   Widget_Control                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::RemoveKey(ETextJustify Side, class UWBP_Control_C* Widget_Control)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "RemoveKey");

	Params::WBP_ControlsDisplay_C_RemoveKey Parms{};

	Parms.Side = Side;
	Parms.Widget_Control = Widget_Control;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.SetVisibilityForcedFromTags
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForced                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::SetVisibilityForcedFromTags(bool bForced)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "SetVisibilityForcedFromTags");

	Params::WBP_ControlsDisplay_C_SetVisibilityForcedFromTags Parms{};

	Parms.bForced = bForced;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.ToggleVisibilityHeaders
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HideHeader                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::ToggleVisibilityHeaders(bool HideHeader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "ToggleVisibilityHeaders");

	Params::WBP_ControlsDisplay_C_ToggleVisibilityHeaders Parms{};

	Parms.HideHeader = HideHeader;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.Update Widgets Visibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_ControlsDisplay_C::Update_Widgets_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "Update Widgets Visibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ControlsDisplay.WBP_ControlsDisplay_C.UpdateInputsVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ControlsDisplay_C::UpdateInputsVisibility(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ControlsDisplay_C", "UpdateInputsVisibility");

	Params::WBP_ControlsDisplay_C_UpdateInputsVisibility Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}

}

