#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerBase_Skeleton_AnimBP

#include "Basic.hpp"

#include "PlayerBase_Skeleton_AnimBP_classes.hpp"
#include "PlayerBase_Skeleton_AnimBP_parameters.hpp"


namespace SDK
{

// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "AnimGraph");

	Params::PlayerBase_Skeleton_AnimBP_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.BlueprintInitializeAnimation
// (Event, Public, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::BlueprintInitializeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "BlueprintInitializeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.BlueprintThreadSafeUpdateAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::BlueprintThreadSafeUpdateAnimation(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "BlueprintThreadSafeUpdateAnimation");

	Params::PlayerBase_Skeleton_AnimBP_C_BlueprintThreadSafeUpdateAnimation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.BlueprintUninitializeAnimation
// (Event, Public, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::BlueprintUninitializeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "BlueprintUninitializeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "BlueprintUpdateAnimation");

	Params::PlayerBase_Skeleton_AnimBP_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.BPE_OnBallShot
// (HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           _projectile                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FShootParams&              _shootParams                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UPlayerBase_Skeleton_AnimBP_C::BPE_OnBallShot(class AActor* _projectile, const struct FShootParams& _shootParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "BPE_OnBallShot");

	Params::PlayerBase_Skeleton_AnimBP_C_BPE_OnBallShot Parms{};

	Parms._projectile = _projectile;
	Parms._shootParams = std::move(_shootParams);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.BPE_OnGoalScored_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGoalDescription&          _goal                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::BPE_OnGoalScored_Event(const struct FGoalDescription& _goal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "BPE_OnGoalScored_Event");

	Params::PlayerBase_Skeleton_AnimBP_C_BPE_OnGoalScored_Event Parms{};

	Parms._goal = std::move(_goal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.BPE_OnMenuFlowCameraChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bIsInMenuCamera                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::BPE_OnMenuFlowCameraChanged(bool _bIsInMenuCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "BPE_OnMenuFlowCameraChanged");

	Params::PlayerBase_Skeleton_AnimBP_C_BPE_OnMenuFlowCameraChanged Parms{};

	Parms._bIsInMenuCamera = _bIsInMenuCamera;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.BPE_OnSeedReplicated
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   _uiSeed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::BPE_OnSeedReplicated(int32 _uiSeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "BPE_OnSeedReplicated");

	Params::PlayerBase_Skeleton_AnimBP_C_BPE_OnSeedReplicated Parms{};

	Parms._uiSeed = _uiSeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.BPE_OnStartTransition
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::BPE_OnStartTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "BPE_OnStartTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.BPE_OnTimer_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              _timerEventType                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::BPE_OnTimer_Event(const struct FGameplayTag& _timerEventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "BPE_OnTimer_Event");

	Params::PlayerBase_Skeleton_AnimBP_C_BPE_OnTimer_Event Parms{};

	Parms._timerEventType = std::move(_timerEventType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.ExecuteUbergraph_PlayerBase_Skeleton_AnimBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::ExecuteUbergraph_PlayerBase_Skeleton_AnimBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "ExecuteUbergraph_PlayerBase_Skeleton_AnimBP");

	Params::PlayerBase_Skeleton_AnimBP_C_ExecuteUbergraph_PlayerBase_Skeleton_AnimBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.GetNearestAlly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

const class AActor* UPlayerBase_Skeleton_AnimBP_C::GetNearestAlly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "GetNearestAlly");

	Params::PlayerBase_Skeleton_AnimBP_C_GetNearestAlly Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.GetNearestBall
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

const class AActor* UPlayerBase_Skeleton_AnimBP_C::GetNearestBall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "GetNearestBall");

	Params::PlayerBase_Skeleton_AnimBP_C_GetNearestBall Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.GetNearestEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

const class AActor* UPlayerBase_Skeleton_AnimBP_C::GetNearestEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "GetNearestEnemy");

	Params::PlayerBase_Skeleton_AnimBP_C_GetNearestEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.GetNearestEnemyGoal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

const class AActor* UPlayerBase_Skeleton_AnimBP_C::GetNearestEnemyGoal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "GetNearestEnemyGoal");

	Params::PlayerBase_Skeleton_AnimBP_C_GetNearestEnemyGoal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.InitLookAtTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::InitLookAtTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "InitLookAtTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.LogTouchBallFoot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTouchBallAnimFootInfos&   TouchBallAnimFootInfos                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FLinearColor&              LineColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::LogTouchBallFoot(const struct FTouchBallAnimFootInfos& TouchBallAnimFootInfos, const struct FLinearColor& LineColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "LogTouchBallFoot");

	Params::PlayerBase_Skeleton_AnimBP_C_LogTouchBallFoot Parms{};

	Parms.TouchBallAnimFootInfos = std::move(TouchBallAnimFootInfos);
	Parms.LineColor = std::move(LineColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.On Any Montage Ended
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::On_Any_Montage_Ended(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "On Any Montage Ended");

	Params::PlayerBase_Skeleton_AnimBP_C_On_Any_Montage_Ended Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.On Countdown Start
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARuntimeMatchGameState*           _gameState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::On_Countdown_Start(class ARuntimeMatchGameState* _gameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "On Countdown Start");

	Params::PlayerBase_Skeleton_AnimBP_C_On_Countdown_Start Parms{};

	Parms._gameState = _gameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.On Update Enter Idle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::On_Update_Enter_Idle(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "On Update Enter Idle");

	Params::PlayerBase_Skeleton_AnimBP_C_On_Update_Enter_Idle Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnAnySeedChangingTagChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USCAbilitySystemComponent*  _abilitySystem                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _gameplayTag                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   _iCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::OnAnySeedChangingTagChanged(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnAnySeedChangingTagChanged");

	Params::PlayerBase_Skeleton_AnimBP_C_OnAnySeedChangingTagChanged Parms{};

	Parms._abilitySystem = _abilitySystem;
	Parms._gameplayTag = std::move(_gameplayTag);
	Parms._iCount = _iCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnBallGained
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABall*                            Ball                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::OnBallGained(class ABall* Ball)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnBallGained");

	Params::PlayerBase_Skeleton_AnimBP_C_OnBallGained Parms{};

	Parms.Ball = Ball;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnCountdownOver_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARuntimeMatchGameState*           _gameState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::OnCountdownOver_Event(class ARuntimeMatchGameState* _gameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnCountdownOver_Event");

	Params::PlayerBase_Skeleton_AnimBP_C_OnCountdownOver_Event Parms{};

	Parms._gameState = _gameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnEnterIdleRun
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::OnEnterIdleRun(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnEnterIdleRun");

	Params::PlayerBase_Skeleton_AnimBP_C_OnEnterIdleRun Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnEnterIdleState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::OnEnterIdleState(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnEnterIdleState");

	Params::PlayerBase_Skeleton_AnimBP_C_OnEnterIdleState Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnEnterMoveState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::OnEnterMoveState(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnEnterMoveState");

	Params::PlayerBase_Skeleton_AnimBP_C_OnEnterMoveState Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnEnterTransitionStateMachine
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::OnEnterTransitionStateMachine(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnEnterTransitionStateMachine");

	Params::PlayerBase_Skeleton_AnimBP_C_OnEnterTransitionStateMachine Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnHasBallInHandTagChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USCAbilitySystemComponent*  _abilitySystem                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _gameplayTag                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   _iCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::OnHasBallInHandTagChanged(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnHasBallInHandTagChanged");

	Params::PlayerBase_Skeleton_AnimBP_C_OnHasBallInHandTagChanged Parms{};

	Parms._abilitySystem = _abilitySystem;
	Parms._gameplayTag = std::move(_gameplayTag);
	Parms._iCount = _iCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnHinderingBlendSpaceUpdate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::OnHinderingBlendSpaceUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnHinderingBlendSpaceUpdate");

	Params::PlayerBase_Skeleton_AnimBP_C_OnHinderingBlendSpaceUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnMaxStaminaChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayAttribute&        _attribute                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float                                   _fOldValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _fNewValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::OnMaxStaminaChanged(const struct FGameplayAttribute& _attribute, float _fOldValue, float _fNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnMaxStaminaChanged");

	Params::PlayerBase_Skeleton_AnimBP_C_OnMaxStaminaChanged Parms{};

	Parms._attribute = std::move(_attribute);
	Parms._fOldValue = _fOldValue;
	Parms._fNewValue = _fNewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnMontageStarted_Event
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::OnMontageStarted_Event(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnMontageStarted_Event");

	Params::PlayerBase_Skeleton_AnimBP_C_OnMontageStarted_Event Parms{};

	Parms.Montage = Montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnMovementModeChanged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           PrevMovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   PreviousCustomMode                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::OnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnMovementModeChanged");

	Params::PlayerBase_Skeleton_AnimBP_C_OnMovementModeChanged Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnStaminaChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayAttribute&        _attribute                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float                                   _fOldValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _fNewValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::OnStaminaChanged(const struct FGameplayAttribute& _attribute, float _fOldValue, float _fNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnStaminaChanged");

	Params::PlayerBase_Skeleton_AnimBP_C_OnStaminaChanged Parms{};

	Parms._attribute = std::move(_attribute);
	Parms._fOldValue = _fOldValue;
	Parms._fNewValue = _fNewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnUpdateHinderingNode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::OnUpdateHinderingNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnUpdateHinderingNode");

	Params::PlayerBase_Skeleton_AnimBP_C_OnUpdateHinderingNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnUpdateIdleOutputNode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::OnUpdateIdleOutputNode(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnUpdateIdleOutputNode");

	Params::PlayerBase_Skeleton_AnimBP_C_OnUpdateIdleOutputNode Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.OnUpdateModilfyPostActionLeanCurve
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::OnUpdateModilfyPostActionLeanCurve(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "OnUpdateModilfyPostActionLeanCurve");

	Params::PlayerBase_Skeleton_AnimBP_C_OnUpdateModilfyPostActionLeanCurve Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.SetupEnterIdleMirror
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::SetupEnterIdleMirror(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "SetupEnterIdleMirror");

	Params::PlayerBase_Skeleton_AnimBP_C_SetupEnterIdleMirror Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.SetUpFallLandAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::SetUpFallLandAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "SetUpFallLandAnim");

	Params::PlayerBase_Skeleton_AnimBP_C_SetUpFallLandAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.SetupFallMirror
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::SetupFallMirror(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "SetupFallMirror");

	Params::PlayerBase_Skeleton_AnimBP_C_SetupFallMirror Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.SetupIdleAnimation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::SetupIdleAnimation(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "SetupIdleAnimation");

	Params::PlayerBase_Skeleton_AnimBP_C_SetupIdleAnimation Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.SetupSpeedChange
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::SetupSpeedChange(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "SetupSpeedChange");

	Params::PlayerBase_Skeleton_AnimBP_C_SetupSpeedChange Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.SetupSpeedChangeMirror
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::SetupSpeedChangeMirror(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "SetupSpeedChangeMirror");

	Params::PlayerBase_Skeleton_AnimBP_C_SetupSpeedChangeMirror Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.ShouldEnableFootPlacement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPlayerBase_Skeleton_AnimBP_C::ShouldEnableFootPlacement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "ShouldEnableFootPlacement");

	Params::PlayerBase_Skeleton_AnimBP_C_ShouldEnableFootPlacement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.SnapIdleRootOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::SnapIdleRootOffset(double InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "SnapIdleRootOffset");

	Params::PlayerBase_Skeleton_AnimBP_C_SnapIdleRootOffset Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.ToggleProceduralAnimation
// (BlueprintCallable, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::ToggleProceduralAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "ToggleProceduralAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.TryToTriggerTurnInPlace
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::TryToTriggerTurnInPlace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "TryToTriggerTurnInPlace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateCurrentLocoDatasource
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::UpdateCurrentLocoDatasource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateCurrentLocoDatasource");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateCycleAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::UpdateCycleAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateCycleAnim");

	Params::PlayerBase_Skeleton_AnimBP_C_UpdateCycleAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateCycleAnimWithoutSeq
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::UpdateCycleAnimWithoutSeq(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateCycleAnimWithoutSeq");

	Params::PlayerBase_Skeleton_AnimBP_C_UpdateCycleAnimWithoutSeq Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateEnterIdleAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::UpdateEnterIdleAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateEnterIdleAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateFallLandAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::UpdateFallLandAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateFallLandAnim");

	Params::PlayerBase_Skeleton_AnimBP_C_UpdateFallLandAnim Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateHindering
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::UpdateHindering(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateHindering");

	Params::PlayerBase_Skeleton_AnimBP_C_UpdateHindering Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateIdleAnimation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerBase_Skeleton_AnimBP_C::UpdateIdleAnimation(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateIdleAnimation");

	Params::PlayerBase_Skeleton_AnimBP_C_UpdateIdleAnimation Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateLockMoveHumeur
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::UpdateLockMoveHumeur()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateLockMoveHumeur");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateMovementValues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutSpeedRatio                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::UpdateMovementValues(double InDeltaTime, double* OutSpeedRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateMovementValues");

	Params::PlayerBase_Skeleton_AnimBP_C_UpdateMovementValues Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (OutSpeedRatio != nullptr)
		*OutSpeedRatio = Parms.OutSpeedRatio;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateRandSeed
// (BlueprintCallable, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::UpdateRandSeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateRandSeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateRelativeAcceleration
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::UpdateRelativeAcceleration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateRelativeAcceleration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateStaminaRelatedValues
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerBase_Skeleton_AnimBP_C::UpdateStaminaRelatedValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateStaminaRelatedValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateTurnInPlace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::UpdateTurnInPlace(double InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateTurnInPlace");

	Params::PlayerBase_Skeleton_AnimBP_C_UpdateTurnInPlace Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.UpdateYawRootOffsetInIdle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InTargetWorldYaw                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerBase_Skeleton_AnimBP_C::UpdateYawRootOffsetInIdle(double InDeltaTime, double InTargetWorldYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "UpdateYawRootOffsetInIdle");

	Params::PlayerBase_Skeleton_AnimBP_C_UpdateYawRootOffsetInIdle Parms{};

	Parms.InDeltaTime = InDeltaTime;
	Parms.InTargetWorldYaw = InTargetWorldYaw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.Get Move Play Rate 
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UPlayerBase_Skeleton_AnimBP_C::Get_Move_Play_Rate_() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "Get Move Play Rate ");

	Params::PlayerBase_Skeleton_AnimBP_C_Get_Move_Play_Rate_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.GetCharacterMovementAcceleration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UPlayerBase_Skeleton_AnimBP_C::GetCharacterMovementAcceleration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "GetCharacterMovementAcceleration");

	Params::PlayerBase_Skeleton_AnimBP_C_GetCharacterMovementAcceleration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.GetLockMoveHumeurAlphaPostTurnInPlace
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UPlayerBase_Skeleton_AnimBP_C::GetLockMoveHumeurAlphaPostTurnInPlace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "GetLockMoveHumeurAlphaPostTurnInPlace");

	Params::PlayerBase_Skeleton_AnimBP_C_GetLockMoveHumeurAlphaPostTurnInPlace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.GetLockMoveHumeurAlphaPreTurnInPlace
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UPlayerBase_Skeleton_AnimBP_C::GetLockMoveHumeurAlphaPreTurnInPlace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "GetLockMoveHumeurAlphaPreTurnInPlace");

	Params::PlayerBase_Skeleton_AnimBP_C_GetLockMoveHumeurAlphaPreTurnInPlace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.GetLockMoveHumeurSide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPlayerBase_Skeleton_AnimBP_C::GetLockMoveHumeurSide() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "GetLockMoveHumeurSide");

	Params::PlayerBase_Skeleton_AnimBP_C_GetLockMoveHumeurSide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.GetLocomotionAnimTargetDatasource
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UClass* UPlayerBase_Skeleton_AnimBP_C::GetLocomotionAnimTargetDatasource() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "GetLocomotionAnimTargetDatasource");

	Params::PlayerBase_Skeleton_AnimBP_C_GetLocomotionAnimTargetDatasource Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.HasMontageBlockingPostMontage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPlayerBase_Skeleton_AnimBP_C::HasMontageBlockingPostMontage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "HasMontageBlockingPostMontage");

	Params::PlayerBase_Skeleton_AnimBP_C_HasMontageBlockingPostMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.IsSpeedChangeTransition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPlayerBase_Skeleton_AnimBP_C::IsSpeedChangeTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "IsSpeedChangeTransition");

	Params::PlayerBase_Skeleton_AnimBP_C_IsSpeedChangeTransition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.IsStartTransition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPlayerBase_Skeleton_AnimBP_C::IsStartTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "IsStartTransition");

	Params::PlayerBase_Skeleton_AnimBP_C_IsStartTransition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.IsStopTransition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPlayerBase_Skeleton_AnimBP_C::IsStopTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "IsStopTransition");

	Params::PlayerBase_Skeleton_AnimBP_C_IsStopTransition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.IsTurnTransition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPlayerBase_Skeleton_AnimBP_C::IsTurnTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "IsTurnTransition");

	Params::PlayerBase_Skeleton_AnimBP_C_IsTurnTransition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.PickTurnInPlaceAnimation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FAnimSequencePlayInfos*          Output                                                 (Parm, OutParm)

void UPlayerBase_Skeleton_AnimBP_C::PickTurnInPlaceAnimation(struct FAnimSequencePlayInfos* Output) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "PickTurnInPlaceAnimation");

	Params::PlayerBase_Skeleton_AnimBP_C_PickTurnInPlaceAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.PickTurnInPlaceAnimationFromStruct
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FSingleTurnInPlaceSettings&SingleTurnInPlaceStruct                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FAnimSequencePlayInfos           ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FAnimSequencePlayInfos UPlayerBase_Skeleton_AnimBP_C::PickTurnInPlaceAnimationFromStruct(const struct FSingleTurnInPlaceSettings& SingleTurnInPlaceStruct) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "PickTurnInPlaceAnimationFromStruct");

	Params::PlayerBase_Skeleton_AnimBP_C_PickTurnInPlaceAnimationFromStruct Parms{};

	Parms.SingleTurnInPlaceStruct = std::move(SingleTurnInPlaceStruct);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.ShouldQuickInterruptTransition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPlayerBase_Skeleton_AnimBP_C::ShouldQuickInterruptTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "ShouldQuickInterruptTransition");

	Params::PlayerBase_Skeleton_AnimBP_C_ShouldQuickInterruptTransition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.ShouldSlowlyInterruptTransition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPlayerBase_Skeleton_AnimBP_C::ShouldSlowlyInterruptTransition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "ShouldSlowlyInterruptTransition");

	Params::PlayerBase_Skeleton_AnimBP_C_ShouldSlowlyInterruptTransition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerBase_Skeleton_AnimBP.PlayerBase_Skeleton_AnimBP_C.ShouldTriggerPostMontage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*                     _animMontage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UPlayerBase_Skeleton_AnimBP_C::ShouldTriggerPostMontage(class UAnimMontage* _animMontage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerBase_Skeleton_AnimBP_C", "ShouldTriggerPostMontage");

	Params::PlayerBase_Skeleton_AnimBP_C_ShouldTriggerPostMontage Parms{};

	Parms._animMontage = _animMontage;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

