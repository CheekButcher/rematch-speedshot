#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InputActionKey_Data

#include "Basic.hpp"

#include "BP_InputActionKey_Data_classes.hpp"
#include "BP_InputActionKey_Data_parameters.hpp"


namespace SDK
{

// Function BP_InputActionKey_Data.BP_InputActionKey_Data_C.BPE_OnDataUpdated
// (Event, Protected, BlueprintEvent)

void UBP_InputActionKey_Data_C::BPE_OnDataUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputActionKey_Data_C", "BPE_OnDataUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InputActionKey_Data.BP_InputActionKey_Data_C.ExecuteUbergraph_BP_InputActionKey_Data
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputActionKey_Data_C::ExecuteUbergraph_BP_InputActionKey_Data(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputActionKey_Data_C", "ExecuteUbergraph_BP_InputActionKey_Data");

	Params::BP_InputActionKey_Data_C_ExecuteUbergraph_BP_InputActionKey_Data Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputActionKey_Data.BP_InputActionKey_Data_C.GetKeyboardText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FKey&                      Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_InputActionKey_Data_C::GetKeyboardText(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputActionKey_Data_C", "GetKeyboardText");

	Params::BP_InputActionKey_Data_C_GetKeyboardText Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputActionKey_Data.BP_InputActionKey_Data_C.IsKeyValid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputActionKey_Data_C::IsKeyValid(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputActionKey_Data_C", "IsKeyValid");

	Params::BP_InputActionKey_Data_C_IsKeyValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_InputActionKey_Data.BP_InputActionKey_Data_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputActionKey_Data_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputActionKey_Data_C", "PreConstruct");

	Params::BP_InputActionKey_Data_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputActionKey_Data.BP_InputActionKey_Data_C.SetBlack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Black                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputActionKey_Data_C::SetBlack(bool Black)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputActionKey_Data_C", "SetBlack");

	Params::BP_InputActionKey_Data_C_SetBlack Parms{};

	Parms.Black = Black;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputActionKey_Data.BP_InputActionKey_Data_C.SetHoldVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputActionKey_Data_C::SetHoldVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputActionKey_Data_C", "SetHoldVisibility");

	Params::BP_InputActionKey_Data_C_SetHoldVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputActionKey_Data.BP_InputActionKey_Data_C.ToggleTypeVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputActionKey_Data_C::ToggleTypeVisibility(bool IsController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputActionKey_Data_C", "ToggleTypeVisibility");

	Params::BP_InputActionKey_Data_C_ToggleTypeVisibility Parms{};

	Parms.IsController = IsController;

	UObject::ProcessEvent(Func, &Parms);
}

}

