#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ExtraEffort

#include "Basic.hpp"

#include "GA_ExtraEffort_classes.hpp"
#include "GA_ExtraEffort_parameters.hpp"


namespace SDK
{

// Function GA_ExtraEffort.GA_ExtraEffort_C.Added_1398CECD47E4974789968D97016723CC
// (BlueprintCallable, BlueprintEvent)

void UGA_ExtraEffort_C::Added_1398CECD47E4974789968D97016723CC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ExtraEffort_C", "Added_1398CECD47E4974789968D97016723CC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ExtraEffort.GA_ExtraEffort_C.EndFreeBall
// (BlueprintCallable, BlueprintEvent)

void UGA_ExtraEffort_C::EndFreeBall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ExtraEffort_C", "EndFreeBall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ExtraEffort.GA_ExtraEffort_C.EndTimer
// (BlueprintCallable, BlueprintEvent)

void UGA_ExtraEffort_C::EndTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ExtraEffort_C", "EndTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ExtraEffort.GA_ExtraEffort_C.ExecuteUbergraph_GA_ExtraEffort
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_ExtraEffort_C::ExecuteUbergraph_GA_ExtraEffort(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ExtraEffort_C", "ExecuteUbergraph_GA_ExtraEffort");

	Params::GA_ExtraEffort_C_ExecuteUbergraph_GA_ExtraEffort Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ExtraEffort.GA_ExtraEffort_C.K2_CommitExecute
// (Event, Public, BlueprintEvent)

void UGA_ExtraEffort_C::K2_CommitExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ExtraEffort_C", "K2_CommitExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ExtraEffort.GA_ExtraEffort_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_ExtraEffort_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ExtraEffort_C", "K2_OnEndAbility");

	Params::GA_ExtraEffort_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ExtraEffort.GA_ExtraEffort_C.OnSync_70D4216340598282B49BA1A8774DF490
// (BlueprintCallable, BlueprintEvent)

void UGA_ExtraEffort_C::OnSync_70D4216340598282B49BA1A8774DF490()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ExtraEffort_C", "OnSync_70D4216340598282B49BA1A8774DF490");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ExtraEffort.GA_ExtraEffort_C.GetInputInfosForWatchInputTask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USCInputAction**                  InputAction                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FInputGameplayAbilityTargetData* InputTargetData                                        (Parm, OutParm)

void UGA_ExtraEffort_C::GetInputInfosForWatchInputTask(class USCInputAction** InputAction, struct FInputGameplayAbilityTargetData* InputTargetData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ExtraEffort_C", "GetInputInfosForWatchInputTask");

	Params::GA_ExtraEffort_C_GetInputInfosForWatchInputTask Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InputAction != nullptr)
		*InputAction = Parms.InputAction;

	if (InputTargetData != nullptr)
		*InputTargetData = std::move(Parms.InputTargetData);
}

}

