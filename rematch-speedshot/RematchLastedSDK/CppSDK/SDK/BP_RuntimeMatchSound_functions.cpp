#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RuntimeMatchSound

#include "Basic.hpp"

#include "BP_RuntimeMatchSound_classes.hpp"
#include "BP_RuntimeMatchSound_parameters.hpp"


namespace SDK
{

// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.UnbindAllEvents
// (BlueprintCallable, BlueprintEvent)

void UBP_RuntimeMatchSound_C::UnbindAllEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "UnbindAllEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.TimerLeftEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              MatchTimerEvent                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::TimerLeftEvent(const struct FGameplayTag& MatchTimerEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "TimerLeftEvent");

	Params::BP_RuntimeMatchSound_C_TimerLeftEvent Parms{};

	Parms.MatchTimerEvent = std::move(MatchTimerEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.StateChangeDyn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _newMatchState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::StateChangeDyn(class FName _newMatchState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "StateChangeDyn");

	Params::BP_RuntimeMatchSound_C_StateChangeDyn Parms{};

	Parms._newMatchState = _newMatchState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.SetAttackingDefending
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_RuntimeMatchSound_C::SetAttackingDefending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "SetAttackingDefending");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.SetARHomeTeamForMusic
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARuntimeMatchGameState*           _gameState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::SetARHomeTeamForMusic(class ARuntimeMatchGameState* _gameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "SetARHomeTeamForMusic");

	Params::BP_RuntimeMatchSound_C_SetARHomeTeamForMusic Parms{};

	Parms._gameState = _gameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.ScoreChanged
// (BlueprintCallable, BlueprintEvent)

void UBP_RuntimeMatchSound_C::ScoreChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "ScoreChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.Post Music Trigger
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAkTrigger*                       MusicTrigger                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::Post_Music_Trigger(class UAkTrigger* MusicTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "Post Music Trigger");

	Params::BP_RuntimeMatchSound_C_Post_Music_Trigger Parms{};

	Parms.MusicTrigger = MusicTrigger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.OvertimeStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARuntimeMatchGameState*           _gameState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::OvertimeStarted(class ARuntimeMatchGameState* _gameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "OvertimeStarted");

	Params::BP_RuntimeMatchSound_C_OvertimeStarted Parms{};

	Parms._gameState = _gameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.OnMatchStart
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCGameState*                     _gameState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::OnMatchStart(class ASCGameState* _gameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "OnMatchStart");

	Params::BP_RuntimeMatchSound_C_OnMatchStart Parms{};

	Parms._gameState = _gameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.OnMatchOver
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCGameState*                     InGameState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::OnMatchOver(class ASCGameState* InGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "OnMatchOver");

	Params::BP_RuntimeMatchSound_C_OnMatchOver Parms{};

	Parms.InGameState = InGameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.OnGameFlowStateChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              _previous                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _current                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::OnGameFlowStateChanged(const struct FGameplayTag& _previous, const struct FGameplayTag& _current)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "OnGameFlowStateChanged");

	Params::BP_RuntimeMatchSound_C_OnGameFlowStateChanged Parms{};

	Parms._previous = std::move(_previous);
	Parms._current = std::move(_current);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.OnReplayStarted
// (BlueprintCallable, BlueprintEvent)

void UBP_RuntimeMatchSound_C::OnReplayStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "OnReplayStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.OnCountdownReach GO
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARuntimeMatchGameState*           _gameState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::OnCountdownReach_GO(class ARuntimeMatchGameState* _gameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "OnCountdownReach GO");

	Params::BP_RuntimeMatchSound_C_OnCountdownReach_GO Parms{};

	Parms._gameState = _gameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.MusicInit
// (BlueprintCallable, BlueprintEvent)

void UBP_RuntimeMatchSound_C::MusicInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "MusicInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.IsLastGoalToWin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   IndexTeam                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsLastGoal                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::IsLastGoalToWin(uint8 IndexTeam, bool* IsLastGoal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "IsLastGoalToWin");

	Params::BP_RuntimeMatchSound_C_IsLastGoalToWin Parms{};

	Parms.IndexTeam = IndexTeam;

	UObject::ProcessEvent(Func, &Parms);

	if (IsLastGoal != nullptr)
		*IsLastGoal = Parms.IsLastGoal;
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.OnReplayFinished
// (BlueprintCallable, BlueprintEvent)

void UBP_RuntimeMatchSound_C::OnReplayFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "OnReplayFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.Interface ResetMatchNarrativeBonus
// (BlueprintCallable, BlueprintEvent)

void UBP_RuntimeMatchSound_C::Interface_ResetMatchNarrativeBonus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "Interface ResetMatchNarrativeBonus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.Interface Reset Narrative Malus
// (BlueprintCallable, BlueprintEvent)

void UBP_RuntimeMatchSound_C::Interface_Reset_Narrative_Malus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "Interface Reset Narrative Malus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.Interface AddNarrativeMalus
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NarrativeIntensityMalustoAdd                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::Interface_AddNarrativeMalus(double NarrativeIntensityMalustoAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "Interface AddNarrativeMalus");

	Params::BP_RuntimeMatchSound_C_Interface_AddNarrativeMalus Parms{};

	Parms.NarrativeIntensityMalustoAdd = NarrativeIntensityMalustoAdd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.IsLastGoalTiebreak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_RuntimeMatchSound_C::IsLastGoalTiebreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "IsLastGoalTiebreak");

	Params::BP_RuntimeMatchSound_C_IsLastGoalTiebreak Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.HasWonByMercyOrScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   IndexTeam                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   HasWon                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::HasWonByMercyOrScore(uint8 IndexTeam, bool* HasWon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "HasWonByMercyOrScore");

	Params::BP_RuntimeMatchSound_C_HasWonByMercyOrScore Parms{};

	Parms.IndexTeam = IndexTeam;

	UObject::ProcessEvent(Func, &Parms);

	if (HasWon != nullptr)
		*HasWon = Parms.HasWon;
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.GoalScored
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGoalDescription&          _goal                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_RuntimeMatchSound_C::GoalScored(const struct FGoalDescription& _goal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "GoalScored");

	Params::BP_RuntimeMatchSound_C_GoalScored Parms{};

	Parms._goal = std::move(_goal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.GetScoreDiff
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  GoalDiff                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::GetScoreDiff(int32* GoalDiff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "GetScoreDiff");

	Params::BP_RuntimeMatchSound_C_GetScoreDiff Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GoalDiff != nullptr)
		*GoalDiff = Parms.GoalDiff;
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.Interface AddNarrativeBonus
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NarrativeIntensityBonusToAdd                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::Interface_AddNarrativeBonus(double NarrativeIntensityBonusToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "Interface AddNarrativeBonus");

	Params::BP_RuntimeMatchSound_C_Interface_AddNarrativeBonus Parms{};

	Parms.NarrativeIntensityBonusToAdd = NarrativeIntensityBonusToAdd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.GetControlledPlayerTeamID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

uint8 UBP_RuntimeMatchSound_C::GetControlledPlayerTeamID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "GetControlledPlayerTeamID");

	Params::BP_RuntimeMatchSound_C_GetControlledPlayerTeamID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.ExecuteUbergraph_BP_RuntimeMatchSound
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::ExecuteUbergraph_BP_RuntimeMatchSound(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "ExecuteUbergraph_BP_RuntimeMatchSound");

	Params::BP_RuntimeMatchSound_C_ExecuteUbergraph_BP_RuntimeMatchSound Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.ClutchStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EClutchTimeState                        _clutchTimeState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   _iballInfluencingTeam                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::ClutchStateChanged(EClutchTimeState _clutchTimeState, int32 _iballInfluencingTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "ClutchStateChanged");

	Params::BP_RuntimeMatchSound_C_ClutchStateChanged Parms{};

	Parms._clutchTimeState = _clutchTimeState;
	Parms._iballInfluencingTeam = _iballInfluencingTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.InitReplay
// (BlueprintCallable, BlueprintEvent)

void UBP_RuntimeMatchSound_C::InitReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "InitReplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.BPE_Deinitialize
// (Event, Protected, BlueprintEvent)

void UBP_RuntimeMatchSound_C::BPE_Deinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "BPE_Deinitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.AttackDefenseCompute
// (BlueprintCallable, BlueprintEvent)

void UBP_RuntimeMatchSound_C::AttackDefenseCompute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "AttackDefenseCompute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.BPE_OnGameStateHandleBeginPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASCGameState*                     _gameState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::BPE_OnGameStateHandleBeginPlay(class ASCGameState* _gameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "BPE_OnGameStateHandleBeginPlay");

	Params::BP_RuntimeMatchSound_C_BPE_OnGameStateHandleBeginPlay Parms{};

	Parms._gameState = _gameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RuntimeMatchSound.BP_RuntimeMatchSound_C.ShouldPlayNeutralStateMusic
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ABall*                            Ball                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   PlayNeutral                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_RuntimeMatchSound_C::ShouldPlayNeutralStateMusic(class ABall* Ball, bool* PlayNeutral) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RuntimeMatchSound_C", "ShouldPlayNeutralStateMusic");

	Params::BP_RuntimeMatchSound_C_ShouldPlayNeutralStateMusic Parms{};

	Parms.Ball = Ball;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayNeutral != nullptr)
		*PlayNeutral = Parms.PlayNeutral;
}

}

