#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RuntimeMatchSound

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "EMatchTimerEventType_structs.hpp"
#include "SCCore_classes.hpp"
#include "Runtime_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RuntimeMatchSound.BP_RuntimeMatchSound_C
// 0x0070 (0x01D0 - 0x0160)
class UBP_RuntimeMatchSound_C final : public USCWorldSubsystem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0160(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EMatchTimerEventType                          TimeLeftChecker;                                   // 0x0168(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClimaxByTimer;                                     // 0x0169(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInOvertime;                                      // 0x016A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16B[0x1];                                      // 0x016B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Attack_Defense_Compute_Rate;                       // 0x016C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AttackDefenseTimerHandle;                          // 0x0170(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ARuntimeMatchGameState*                 As_Runtime_Match_Game_State;                       // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(double NarrativeIntensityToAdd)> AddMatchNarrativeBonus;           // 0x0180(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(double NarrativeIntensityToAdd)> AddMatchNarrativeMalus;           // 0x0190(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              ResetMatchNarrativeBonus;                          // 0x01A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              ResetMatchNarrativeMalus;                          // 0x01B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsMusicInitialized;                                // 0x01C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GKForcedMatchIntensityForMusic;                    // 0x01C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviousShotWasKickoff;                            // 0x01C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void StateChangeDyn(class FName _newMatchState);
	void UnbindAllEvents();
	void SetAttackingDefending();
	void SetARHomeTeamForMusic(class ARuntimeMatchGameState* _gameState);
	void ScoreChanged();
	void TimerLeftEvent(const struct FGameplayTag& MatchTimerEvent);
	void Post_Music_Trigger(class UAkTrigger* MusicTrigger);
	void OvertimeStarted(class ARuntimeMatchGameState* _gameState);
	void OnReplayStarted();
	void OnReplayFinished();
	void OnMatchStart(class ASCGameState* _gameState);
	void OnMatchOver(class ASCGameState* InGameState);
	void IsLastGoalToWin(uint8 IndexTeam, bool* IsLastGoal);
	bool IsLastGoalTiebreak();
	void Interface_ResetMatchNarrativeBonus();
	void OnGameFlowStateChanged(const struct FGameplayTag& _previous, const struct FGameplayTag& _current);
	void Interface_Reset_Narrative_Malus();
	void Interface_AddNarrativeMalus(double NarrativeIntensityMalustoAdd);
	void Interface_AddNarrativeBonus(double NarrativeIntensityBonusToAdd);
	void OnCountdownReach_GO(class ARuntimeMatchGameState* _gameState);
	void InitReplay();
	void HasWonByMercyOrScore(uint8 IndexTeam, bool* HasWon);
	void GoalScored(const struct FGoalDescription& _goal);
	void MusicInit();
	void GetScoreDiff(int32* GoalDiff);
	void BPE_OnGameStateHandleBeginPlay(class ASCGameState* _gameState);
	void BPE_Deinitialize();
	uint8 GetControlledPlayerTeamID();
	void AttackDefenseCompute();
	void ExecuteUbergraph_BP_RuntimeMatchSound(int32 EntryPoint);
	void ClutchStateChanged(EClutchTimeState _clutchTimeState, int32 _iballInfluencingTeam);

	void ShouldPlayNeutralStateMusic(class ABall* Ball, bool* PlayNeutral) const;

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_RuntimeMatchSound_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_RuntimeMatchSound_C")
	}
	static class UBP_RuntimeMatchSound_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_RuntimeMatchSound_C>();
	}
};
DUMPER7_ASSERTS_UBP_RuntimeMatchSound_C;

}

