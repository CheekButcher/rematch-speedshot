#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BallVFXComponent

#include "Basic.hpp"

#include "BP_BallVFXComponent_classes.hpp"
#include "BP_BallVFXComponent_parameters.hpp"


namespace SDK
{

// Function BP_BallVFXComponent.BP_BallVFXComponent_C.Added_15316E7A43AB5687A887C2B77D92E068
// (BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::Added_15316E7A43AB5687A887C2B77D92E068()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "Added_15316E7A43AB5687A887C2B77D92E068");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.Added_F989450F4C16D76F2DBF9CB46D00BD34
// (BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::Added_F989450F4C16D76F2DBF9CB46D00BD34()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "Added_F989450F4C16D76F2DBF9CB46D00BD34");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.Added_FA16938449A5BA2F0EF082B00112ACB3
// (BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::Added_FA16938449A5BA2F0EF082B00112ACB3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "Added_FA16938449A5BA2F0EF082B00112ACB3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.BounceLocationSubtractID
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::BounceLocationSubtractID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "BounceLocationSubtractID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.CancelHardDefenseFX
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::CancelHardDefenseFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "CancelHardDefenseFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.CleanAsyncAction
// (BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::CleanAsyncAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "CleanAsyncAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.ClearPreviousShootImpact
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::ClearPreviousShootImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "ClearPreviousShootImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.ClearTimer
// (BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::ClearTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "ClearTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.Deactivate All Bounce Location VFX
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::Deactivate_All_Bounce_Location_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "Deactivate All Bounce Location VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.ExecuteUbergraph_BP_BallVFXComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallVFXComponent_C::ExecuteUbergraph_BP_BallVFXComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "ExecuteUbergraph_BP_BallVFXComponent");

	Params::BP_BallVFXComponent_C_ExecuteUbergraph_BP_BallVFXComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.Exlude Lower Values and Remap to 0-1
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_BallVFXComponent_C::Exlude_Lower_Values_and_Remap_to_0_1(double Value, double Min)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "Exlude Lower Values and Remap to 0-1");

	Params::BP_BallVFXComponent_C_Exlude_Lower_Values_and_Remap_to_0_1 Parms{};

	Parms.Value = Value;
	Parms.Min = Min;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.GetAccelerationTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallVFXComponent_C::GetAccelerationTime(double* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "GetAccelerationTime");

	Params::BP_BallVFXComponent_C_GetAccelerationTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.LaunchHardDefenseFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  StatusUntilTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallVFXComponent_C::LaunchHardDefenseFX(double StatusUntilTime, double CurrentTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "LaunchHardDefenseFX");

	Params::BP_BallVFXComponent_C_LaunchHardDefenseFX Parms{};

	Parms.StatusUntilTime = StatusUntilTime;
	Parms.CurrentTime = CurrentTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.OnBallOwnershipChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBallPlayersInteractionComponent* _ballPlayerInteraction                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_BallVFXComponent_C::OnBallOwnershipChanged(class UBallPlayersInteractionComponent* _ballPlayerInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "OnBallOwnershipChanged");

	Params::BP_BallVFXComponent_C_OnBallOwnershipChanged Parms{};

	Parms._ballPlayerInteraction = _ballPlayerInteraction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.OnBounced
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABall*                            _ball                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FBounceData&               _bounceData                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// float                                   _fSpeedAtBounce                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallVFXComponent_C::OnBounced(class ABall* _ball, const struct FBounceData& _bounceData, float _fSpeedAtBounce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "OnBounced");

	Params::BP_BallVFXComponent_C_OnBounced Parms{};

	Parms._ball = _ball;
	Parms._bounceData = std::move(_bounceData);
	Parms._fSpeedAtBounce = _fSpeedAtBounce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.OnRejectedShoot
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FShootParams&              _shootParams                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_BallVFXComponent_C::OnRejectedShoot(const struct FShootParams& _shootParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "OnRejectedShoot");

	Params::BP_BallVFXComponent_C_OnRejectedShoot Parms{};

	Parms._shootParams = std::move(_shootParams);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.OnShoot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABall*                            _ball                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FShootParams&              _shootParams                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_BallVFXComponent_C::OnShoot(class ABall* _ball, const struct FShootParams& _shootParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "OnShoot");

	Params::BP_BallVFXComponent_C_OnShoot Parms{};

	Parms._ball = _ball;
	Parms._shootParams = std::move(_shootParams);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.OnTrajectoryCleared
// (BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::OnTrajectoryCleared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "OnTrajectoryCleared");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.OnTrajectoryUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class ABall*                      _ball                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FShootParams&              _shootParams                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_BallVFXComponent_C::OnTrajectoryUpdated(const class ABall* _ball, const struct FShootParams& _shootParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "OnTrajectoryUpdated");

	Params::BP_BallVFXComponent_C_OnTrajectoryUpdated Parms{};

	Parms._ball = _ball;
	Parms._shootParams = std::move(_shootParams);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.PausePendingShootImpact
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::PausePendingShootImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "PausePendingShootImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.PlaceBounceLocationVFX
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::PlaceBounceLocationVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "PlaceBounceLocationVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.PlayShootGrassVFX
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::PlayShootGrassVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "PlayShootGrassVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_BallVFXComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallVFXComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "ReceiveEndPlay");

	Params::BP_BallVFXComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.Rotate Ball Along trajectory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   trajectory_Split_Index                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallVFXComponent_C::Rotate_Ball_Along_trajectory(int32 trajectory_Split_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "Rotate Ball Along trajectory");

	Params::BP_BallVFXComponent_C_Rotate_Ball_Along_trajectory Parms{};

	Parms.trajectory_Split_Index = trajectory_Split_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.SelectNSImpact
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                NiagaraSystemComponent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTagContainer&     TagContainer                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallVFXComponent_C::SelectNSImpact(class UNiagaraComponent* NiagaraSystemComponent, const struct FGameplayTagContainer& TagContainer, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "SelectNSImpact");

	Params::BP_BallVFXComponent_C_SelectNSImpact Parms{};

	Parms.NiagaraSystemComponent = NiagaraSystemComponent;
	Parms.TagContainer = std::move(TagContainer);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.SetBounceVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   VFXID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PathDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallVFXComponent_C::SetBounceVFX(int32 VFXID, const struct FVector& Position, const struct FVector& Normal, double Time, double PathDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "SetBounceVFX");

	Params::BP_BallVFXComponent_C_SetBounceVFX Parms{};

	Parms.VFXID = VFXID;
	Parms.Position = std::move(Position);
	Parms.Normal = std::move(Normal);
	Parms.Time = Time;
	Parms.PathDuration = PathDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.Setup Frozen Shoot Impact
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                InVFXComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  InFreezeFrameDuration                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallVFXComponent_C::Setup_Frozen_Shoot_Impact(class UNiagaraComponent* InVFXComp, double InFreezeFrameDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "Setup Frozen Shoot Impact");

	Params::BP_BallVFXComponent_C_Setup_Frozen_Shoot_Impact Parms{};

	Parms.InVFXComp = InVFXComp;
	Parms.InFreezeFrameDuration = InFreezeFrameDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.SetupStatusFX
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::SetupStatusFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "SetupStatusFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.UnbindBallEvents
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::UnbindBallEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "UnbindBallEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.UnpausePendingShootImpact
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::UnpausePendingShootImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "UnpausePendingShootImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallVFXComponent.BP_BallVFXComponent_C.WallBounce
// (BlueprintCallable, BlueprintEvent)

void UBP_BallVFXComponent_C::WallBounce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallVFXComponent_C", "WallBounce");

	UObject::ProcessEvent(Func, nullptr);
}

}

