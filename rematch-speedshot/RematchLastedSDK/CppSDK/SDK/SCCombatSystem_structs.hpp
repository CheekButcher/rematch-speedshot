#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SCCombatSystem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SCCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum SCCombatSystem.EBallStealTracking_DirectionSource
// NumValues: 0x0004
enum class EBallStealTracking_DirectionSource : uint8
{
	Velocity                                 = 0,
	Input                                    = 1,
	ActorForward                             = 2,
	EBallStealTracking_MAX                   = 3,
};

// Enum SCCombatSystem.EAttackState
// NumValues: 0x0004
enum class EAttackState : uint8
{
	StartupEnd                               = 0,
	Hit                                      = 1,
	Recovery                                 = 2,
	EAttackState_MAX                         = 3,
};

// Enum SCCombatSystem.EAttackTimeSpace
// NumValues: 0x0003
enum class EAttackTimeSpace : uint8
{
	Anim                                     = 0,
	Gameplay                                 = 1,
	EAttackTimeSpace_MAX                     = 2,
};

// Enum SCCombatSystem.EHitboxRecoveryMethod
// NumValues: 0x0005
enum class EHitboxRecoveryMethod : uint8
{
	HitboxLifespan                           = 0,
	Duration                                 = 1,
	Overlap                                  = 2,
	DurationOrOverlap                        = 3,
	EHitboxRecoveryMethod_MAX                = 4,
};

// Enum SCCombatSystem.EHitboxGroup
// NumValues: 0x0004
enum class EHitboxGroup : uint32
{
	None                                     = 0,
	InstigatorAndTableRow                    = 1,
	TableRow                                 = 2,
	EHitboxGroup_MAX                         = 3,
};

// Enum SCCombatSystem.EHitReactionType
// NumValues: 0x0003
enum class EHitReactionType : uint8
{
	Hit                                      = 0,
	Hurt                                     = 1,
	EHitReactionType_MAX                     = 2,
};

// Enum SCCombatSystem.EHitType
// NumValues: 0x0004
enum class EHitType : uint8
{
	OnlyEnvironment                          = 0,
	OnlyHurtboxes                            = 1,
	All                                      = 2,
	EHitType_MAX                             = 3,
};

// Enum SCCombatSystem.EHurtboxComponentRecoveryScope
// NumValues: 0x0005
enum class EHurtboxComponentRecoveryScope : uint8
{
	DefaultSolverRecoveryScope               = 0,
	Actor                                    = 1,
	PrimitiveComponent                       = 2,
	HurtboxComponent                         = 3,
	EHurtboxComponentRecoveryScope_MAX       = 4,
};

// Enum SCCombatSystem.EHurtboxSolverComponentRecoveryScope
// NumValues: 0x0004
enum class EHurtboxSolverComponentRecoveryScope : uint8
{
	Actor                                    = 0,
	PrimitiveComponent                       = 1,
	HurtboxComponent                         = 2,
	EHurtboxSolverComponentRecoveryScope_MAX = 3,
};

// Enum SCCombatSystem.EAdvancedHitboxGameplayTagConditionType
// NumValues: 0x0004
enum class EAdvancedHitboxGameplayTagConditionType : uint8
{
	AnyTagsMatch                             = 0,
	AllTagsMatch                             = 1,
	NoTagsMatch                              = 2,
	EAdvancedHitboxGameplayTagConditionType_MAX = 3,
};

// ScriptStruct SCCombatSystem.HitRequest
// 0x0070 (0x0078 - 0x0008)
struct FHitRequest final : public FBaseDataBindingContext
{
public:
	struct FDataTableRowHandle                    m_AttackRow;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    m_HitboxRow;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayAbilityTargetDataHandle       m_Context;                                         // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AActor*                                 m_Instigator;                                      // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iHitboxID;                                       // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHitboxData*                            m_Hitbox;                                          // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UShapeHitDetectionDB*                   m_ShapeHitDetection;                               // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSyncTime;                                       // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHitRequest;

// ScriptStruct SCCombatSystem.HitDescription
// 0x01A0 (0x01A0 - 0x0000)
struct FHitDescription final
{
public:
	struct FHitRequest                            m_HitRequest;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UHurtboxComponent*                      m_Hurtbox;                                         // 0x0078(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             m_HitResult;                                       // 0x0080(0x00F8)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_HitOutcomeTags;                                  // 0x0178(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         m_fSpeedOnImpact;                                  // 0x0198(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHitDescription;

// ScriptStruct SCCombatSystem.HitOwnerID
// 0x0018 (0x0018 - 0x0000)
struct FHitOwnerID final
{
public:
	struct FPredictionKey                         m_AbilityPredictionKey;                            // 0x0000(0x0010)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_Tag;                                             // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FHitOwnerID;

// ScriptStruct SCCombatSystem.PendingHit
// 0x0348 (0x0350 - 0x0008)
struct FPendingHit final : public FBaseDataBindingContext
{
public:
	struct FHitDescription                        m_HitDescription;                                  // 0x0008(0x01A0)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         m_fServerTime;                                     // 0x01A8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fClientMoveTime;                                 // 0x01AC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fClientDT;                                       // 0x01B0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitOwnerID                            m_OwnerID;                                         // 0x01B8(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             m_PrevHitboxTransform;                             // 0x01D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             m_NewHitboxTransform;                              // 0x0230(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             m_InstigatorTransform;                             // 0x0290(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPredictionKey                         m_HitPredictionKey;                                // 0x02F0(0x0010)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayEffectContextHandle           m_Context;                                         // 0x0300(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAbilityTargetDataHandle       m_Payload;                                         // 0x0318(0x0028)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_340[0x10];                                     // 0x0340(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPendingHit;

// ScriptStruct SCCombatSystem.BaseHitboxHandler
// 0x00F8 (0x00F8 - 0x0000)
struct alignas(0x08) FBaseHitboxHandler
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bPlaceHurtboxInFrontOfHitboxMovement;            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bKeepActorLocationTargetData;                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0xEE];                                       // 0x000A(0x00EE)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBaseHitboxHandler;

// ScriptStruct SCCombatSystem.AttackHitboxHandler
// 0x0008 (0x0100 - 0x00F8)
struct FAttackHitboxHandler final : public FBaseHitboxHandler
{
public:
	float                                         m_fMaxSampleTimeInterval;                          // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEvaluatePlayingMontage;                         // 0x00FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAttackHitboxHandler;

// ScriptStruct SCCombatSystem.AttackID
// 0x0008 (0x0018 - 0x0010)
struct FAttackID final : public FSCGameplayAbilityTargetData
{
public:
	int32                                         m_uiPlayInstanceID;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAttackID;

// ScriptStruct SCCombatSystem.RemapAngleStruct
// 0x0014 (0x0014 - 0x0000)
struct FRemapAngleStruct final
{
public:
	struct FFloatRange                            m_InputAngleRange;                                 // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fOffsetAngle;                                    // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRemapAngleStruct;

// ScriptStruct SCCombatSystem.HitboxLocationInfos
// 0x00C0 (0x00C0 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x10) FHitboxLocationInfos
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bUseCharacterRotation;                           // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_Delta;                                           // 0x0020(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBaseActorConditionInstance            m_ActivationCondition;                             // 0x0080(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FBoneReference                         m_Bone;                                            // 0x0090(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bUseBoneTransformFromPose;                       // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UHitboxData>                m_CustomHitbox;                                    // 0x00A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHitDetectionDB*                        m_HitDetection;                                    // 0x00B0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
#pragma pack(pop)
DUMPER7_ASSERTS_FHitboxLocationInfos;

// ScriptStruct SCCombatSystem.AnimNotifyBakeData
// 0x04F0 (0x05B0 - 0x00C0)
struct FAnimNotifyBakeData final : public FHitboxLocationInfos
{
public:
	uint8                                         Pad_B8[0x28];                                      // 0x00B8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformCurve                        m_Transforms;                                      // 0x00E0(0x04C0)(NativeAccessSpecifierPublic)
	float                                         m_fStartTime;                                      // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fEndTime;                                        // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A8[0x8];                                      // 0x05A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAnimNotifyBakeData;

// ScriptStruct SCCombatSystem.AnimNotifyHitboxInfos
// 0x05B0 (0x0670 - 0x00C0)
struct FAnimNotifyHitboxInfos final : public FHitboxLocationInfos
{
public:
	struct FCachedFloatCurve                      m_ScaleCurve;                                      // 0x00B8(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C0[0x5B0];                                     // 0x00C0(0x05B0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAnimNotifyHitboxInfos;

// ScriptStruct SCCombatSystem.BaseAttackState
// 0x0370 (0x0370 - 0x0000)
struct FBaseAttackState final
{
public:
	struct FDataTableRowHandle                    m_Row;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bHasHit;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPendingHit                            m_LastHit;                                         // 0x0020(0x0350)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBaseAttackState;

// ScriptStruct SCCombatSystem.AttackMontagePlayer
// 0x0020 (0x0078 - 0x0058)
struct FAttackMontagePlayer final : public FMotionWarpingMontagePlayerContext
{
public:
	uint8                                         Pad_58[0x20];                                      // 0x0058(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAttackMontagePlayer;

// ScriptStruct SCCombatSystem.HitboxDataHandler
// 0x0010 (0x0108 - 0x00F8)
struct FHitboxDataHandler final : public FBaseHitboxHandler
{
public:
	class UHitDetectionDB*                        m_HitDetection;                                    // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHitboxData>                m_HitboxData;                                      // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHitboxDataHandler;

// ScriptStruct SCCombatSystem.HitboxComponentHandler
// 0x0018 (0x0110 - 0x00F8)
struct FHitboxComponentHandler final : public FBaseHitboxHandler
{
public:
	struct FGameplayTag                           m_HitboxID;                                        // 0x00F8(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_100[0x10];                                     // 0x0100(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHitboxComponentHandler;

// ScriptStruct SCCombatSystem.HitboxDataInstance
// 0x0008 (0x0030 - 0x0028)
struct FHitboxDataInstance final : public FPropertyBagInstance
{
public:
	TSubclassOf<class UHitboxData>                m_DefaultClassObject;                              // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHitboxDataInstance;

// ScriptStruct SCCombatSystem.HitboxGroup
// 0x0020 (0x0020 - 0x0000)
struct FHitboxGroup final
{
public:
	class UObject*                                m_Instigator;                                      // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    m_Row;                                             // 0x0008(0x0010)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	EHitboxGroup                                  m_eHitboxGroup;                                    // 0x0018(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iHitboxID;                                       // 0x001C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHitboxGroup;

// ScriptStruct SCCombatSystem.HitReactionInstance
// 0x0010 (0x0010 - 0x0000)
struct FHitReactionInstance final
{
public:
	TSubclassOf<class UHitReaction>               m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHitReaction*                           m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHitReactionInstance;

// ScriptStruct SCCombatSystem.ConditionalHitReactionInfos
// 0x0020 (0x0020 - 0x0000)
struct FConditionalHitReactionInfos final
{
public:
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0000(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHitReactionInstance                   m_HitReaction;                                     // 0x0010(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FConditionalHitReactionInfos;

// ScriptStruct SCCombatSystem.PendingHurtboxSolverHit
// 0x0360 (0x0360 - 0x0000)
struct FPendingHurtboxSolverHit final
{
public:
	struct FPendingHit                            m_Hit;                                             // 0x0000(0x0350)(Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_350[0x10];                                     // 0x0350(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPendingHurtboxSolverHit;

// ScriptStruct SCCombatSystem.BaseHitDescTargetDataHandle
// 0x01A0 (0x03A0 - 0x0200)
struct FBaseHitDescTargetDataHandle : public FRaycastTargetData
{
public:
	struct FHitDescription                        m_Hit;                                             // 0x0200(0x01A0)(BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBaseHitDescTargetDataHandle;

// ScriptStruct SCCombatSystem.HurtTargetDataHandle
// 0x0000 (0x03A0 - 0x03A0)
struct FHurtTargetDataHandle final : public FBaseHitDescTargetDataHandle
{
};
DUMPER7_ASSERTS_FHurtTargetDataHandle;

// ScriptStruct SCCombatSystem.HitTargetDataHandle
// 0x0000 (0x03A0 - 0x03A0)
struct FHitTargetDataHandle final : public FBaseHitDescTargetDataHandle
{
};
DUMPER7_ASSERTS_FHitTargetDataHandle;

// ScriptStruct SCCombatSystem.HurtboxTargetData
// 0x0008 (0x0018 - 0x0010)
struct FHurtboxTargetData final : public FSCGameplayAbilityTargetData
{
public:
	TWeakObjectPtr<class UHurtboxComponent>       m_Hurtbox;                                         // 0x0010(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHurtboxTargetData;

// ScriptStruct SCCombatSystem.HitPredictionResult
// 0x0020 (0x0020 - 0x0000)
struct FHitPredictionResult final
{
public:
	class AActor*                                 m_Instigator;                                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitOwnerID                            m_HitOwnerID;                                      // 0x0008(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHitPredictionResult;

}

