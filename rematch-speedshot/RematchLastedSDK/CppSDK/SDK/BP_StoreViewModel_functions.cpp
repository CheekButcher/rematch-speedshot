#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StoreViewModel

#include "Basic.hpp"

#include "BP_StoreViewModel_classes.hpp"
#include "BP_StoreViewModel_parameters.hpp"


namespace SDK
{

// Function BP_StoreViewModel.BP_StoreViewModel_C.FindSOSStoreItemVMFromID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USOSBindingsStoreItemViewModel**  SOSStoreItemVM                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::FindSOSStoreItemVMFromID(const class FString& ItemId, class USOSBindingsStoreItemViewModel** SOSStoreItemVM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "FindSOSStoreItemVMFromID");

	Params::BP_StoreViewModel_C_FindSOSStoreItemVMFromID Parms{};

	Parms.ItemId = std::move(ItemId);

	UObject::ProcessEvent(Func, &Parms);

	if (SOSStoreItemVM != nullptr)
		*SOSStoreItemVM = Parms.SOSStoreItemVM;
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.CanUseStore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   Purchase_in_Progress                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::CanUseStore(bool* Purchase_in_Progress) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "CanUseStore");

	Params::BP_StoreViewModel_C_CanUseStore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Purchase_in_Progress != nullptr)
		*Purchase_in_Progress = Parms.Purchase_in_Progress;
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetCatalogBundleAtIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USOSBindingsStoreBundleViewModel**Bundle                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::GetCatalogBundleAtIndex(int32 Index_0, class USOSBindingsStoreBundleViewModel** Bundle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetCatalogBundleAtIndex");

	Params::BP_StoreViewModel_C_GetCatalogBundleAtIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Bundle != nullptr)
		*Bundle = Parms.Bundle;
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetCatalogBundleFromID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class FString&                    BundleID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USOSBindingsStoreBundleViewModel**BundleVM                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::GetCatalogBundleFromID(const class FString& BundleID, class USOSBindingsStoreBundleViewModel** BundleVM) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetCatalogBundleFromID");

	Params::BP_StoreViewModel_C_GetCatalogBundleFromID Parms{};

	Parms.BundleID = std::move(BundleID);

	UObject::ProcessEvent(Func, &Parms);

	if (BundleVM != nullptr)
		*BundleVM = Parms.BundleVM;
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetCatalogBundlesFromIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class USOSBindingsStoreBundleViewModel*>*Bundles                                                (Parm, OutParm)

void UBP_StoreViewModel_C::GetCatalogBundlesFromIndex(int32 Index_0, TArray<class USOSBindingsStoreBundleViewModel*>* Bundles) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetCatalogBundlesFromIndex");

	Params::BP_StoreViewModel_C_GetCatalogBundlesFromIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Bundles != nullptr)
		*Bundles = std::move(Parms.Bundles);
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetCurrentSeasonName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText*                            Name_0                                                 (Parm, OutParm)

void UBP_StoreViewModel_C::GetCurrentSeasonName(class FText* Name_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetCurrentSeasonName");

	Params::BP_StoreViewModel_C_GetCurrentSeasonName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetCurrentSeasonNumber
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32*                                  Number                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::GetCurrentSeasonNumber(int32* Number) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetCurrentSeasonNumber");

	Params::BP_StoreViewModel_C_GetCurrentSeasonNumber Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Number != nullptr)
		*Number = Parms.Number;
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetDurationUntilCurrentSeasonEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTimespan*                       Duration                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::GetDurationUntilCurrentSeasonEnd(struct FTimespan* Duration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetDurationUntilCurrentSeasonEnd");

	Params::BP_StoreViewModel_C_GetDurationUntilCurrentSeasonEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = std::move(Parms.Duration);
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetDurationUntilNextChapterStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTimespan*                       Duration                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::GetDurationUntilNextChapterStart(struct FTimespan* Duration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetDurationUntilNextChapterStart");

	Params::BP_StoreViewModel_C_GetDurationUntilNextChapterStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = std::move(Parms.Duration);
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetDurationUntilNextSeasonStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTimespan*                       Duration                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::GetDurationUntilNextSeasonStart(struct FTimespan* Duration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetDurationUntilNextSeasonStart");

	Params::BP_StoreViewModel_C_GetDurationUntilNextSeasonStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = std::move(Parms.Duration);
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetFirstBigFeaturedBundle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USOSBindingsStoreBundleViewModel**Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::GetFirstBigFeaturedBundle(class USOSBindingsStoreBundleViewModel** Output) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetFirstBigFeaturedBundle");

	Params::BP_StoreViewModel_C_GetFirstBigFeaturedBundle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetFullOutfitFromBundle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USOSBindingsStoreBundleViewModel* StoreBundle                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USOSBindingsStoreItemViewModel**  SetVM                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::GetFullOutfitFromBundle(class USOSBindingsStoreBundleViewModel* StoreBundle, class USOSBindingsStoreItemViewModel** SetVM) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetFullOutfitFromBundle");

	Params::BP_StoreViewModel_C_GetFullOutfitFromBundle Parms{};

	Parms.StoreBundle = StoreBundle;

	UObject::ProcessEvent(Func, &Parms);

	if (SetVM != nullptr)
		*SetVM = Parms.SetVM;
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetLastSelectedBundleVM
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USOSBindingsStoreBundleViewModel**LastSelectedBundleVM                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::GetLastSelectedBundleVM(class USOSBindingsStoreBundleViewModel** LastSelectedBundleVM) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetLastSelectedBundleVM");

	Params::BP_StoreViewModel_C_GetLastSelectedBundleVM Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LastSelectedBundleVM != nullptr)
		*LastSelectedBundleVM = Parms.LastSelectedBundleVM;
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetLastSelectedItemVM
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USOSBindingsStoreItemViewModel**  SOSBindingsStoreItemViewModel                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::GetLastSelectedItemVM(class USOSBindingsStoreItemViewModel** SOSBindingsStoreItemViewModel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetLastSelectedItemVM");

	Params::BP_StoreViewModel_C_GetLastSelectedItemVM Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SOSBindingsStoreItemViewModel != nullptr)
		*SOSBindingsStoreItemViewModel = Parms.SOSBindingsStoreItemViewModel;
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetNextSeasonName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText*                            Name_0                                                 (Parm, OutParm)

void UBP_StoreViewModel_C::GetNextSeasonName(class FText* Name_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetNextSeasonName");

	Params::BP_StoreViewModel_C_GetNextSeasonName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.GetPreviousSeasonName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText*                            Name_0                                                 (Parm, OutParm)

void UBP_StoreViewModel_C::GetPreviousSeasonName(class FText* Name_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "GetPreviousSeasonName");

	Params::BP_StoreViewModel_C_GetPreviousSeasonName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function BP_StoreViewModel.BP_StoreViewModel_C.IsItemAffordable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USOSBindingsStoreItemViewModel*   viewModel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   CanAffordHC                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   CanAffordSC                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StoreViewModel_C::IsItemAffordable(class USOSBindingsStoreItemViewModel* viewModel, bool* CanAffordHC, bool* CanAffordSC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StoreViewModel_C", "IsItemAffordable");

	Params::BP_StoreViewModel_C_IsItemAffordable Parms{};

	Parms.viewModel = viewModel;

	UObject::ProcessEvent(Func, &Parms);

	if (CanAffordHC != nullptr)
		*CanAffordHC = Parms.CanAffordHC;

	if (CanAffordSC != nullptr)
		*CanAffordSC = Parms.CanAffordSC;
}

}

