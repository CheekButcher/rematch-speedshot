#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Runtime_PlayerController

#include "Basic.hpp"

#include "BP_Runtime_PlayerController_classes.hpp"
#include "BP_Runtime_PlayerController_parameters.hpp"


namespace SDK
{

// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.Activate Dive Aim Assist
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bToggled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Runtime_PlayerController_C::Activate_Dive_Aim_Assist(bool bToggled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "Activate Dive Aim Assist");

	Params::BP_Runtime_PlayerController_C_Activate_Dive_Aim_Assist Parms{};

	Parms.bToggled = bToggled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.AddControlsDisplay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Runtime_PlayerController_C::AddControlsDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "AddControlsDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.CreateHUDWidget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Runtime_PlayerController_C::CreateHUDWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "CreateHUDWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.ExecuteUbergraph_BP_Runtime_PlayerController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Runtime_PlayerController_C::ExecuteUbergraph_BP_Runtime_PlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "ExecuteUbergraph_BP_Runtime_PlayerController");

	Params::BP_Runtime_PlayerController_C_ExecuteUbergraph_BP_Runtime_PlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.NotifyCommunicationUsed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Runtime_PlayerController_C::NotifyCommunicationUsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "NotifyCommunicationUsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.PlayControllerDynamicForce
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FeedbackIntensity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FeedbackDuration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Runtime_PlayerController_C::PlayControllerDynamicForce(double FeedbackIntensity, double FeedbackDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "PlayControllerDynamicForce");

	Params::BP_Runtime_PlayerController_C_PlayControllerDynamicForce Parms{};

	Parms.FeedbackIntensity = FeedbackIntensity;
	Parms.FeedbackDuration = FeedbackDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Runtime_PlayerController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.ServerEmptyStamina
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Runtime_PlayerController_C::ServerEmptyStamina()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "ServerEmptyStamina");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.Set Mini Map Type from Option
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  _optionValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Runtime_PlayerController_C::Set_Mini_Map_Type_from_Option(double _optionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "Set Mini Map Type from Option");

	Params::BP_Runtime_PlayerController_C_Set_Mini_Map_Type_from_Option Parms{};

	Parms._optionValue = _optionValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.SetControlDisplayVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Runtime_PlayerController_C::SetControlDisplayVisibility(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "SetControlDisplayVisibility");

	Params::BP_Runtime_PlayerController_C_SetControlDisplayVisibility Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.SetEnableLookAtInputFromOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  OptionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Runtime_PlayerController_C::SetEnableLookAtInputFromOption(double OptionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "SetEnableLookAtInputFromOption");

	Params::BP_Runtime_PlayerController_C_SetEnableLookAtInputFromOption Parms{};

	Parms.OptionValue = OptionValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.SetMiniMapSizeFromOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  _optionValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Runtime_PlayerController_C::SetMiniMapSizeFromOption(double _optionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "SetMiniMapSizeFromOption");

	Params::BP_Runtime_PlayerController_C_SetMiniMapSizeFromOption Parms{};

	Parms._optionValue = _optionValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.SetupMenuInputs
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Runtime_PlayerController_C::SetupMenuInputs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "SetupMenuInputs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.StopControllerDynamicForce
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Runtime_PlayerController_C::StopControllerDynamicForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "StopControllerDynamicForce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Runtime_PlayerController.BP_Runtime_PlayerController_C.CanUseCommunication
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Runtime_PlayerController_C::CanUseCommunication() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Runtime_PlayerController_C", "CanUseCommunication");

	Params::BP_Runtime_PlayerController_C_CanUseCommunication Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

