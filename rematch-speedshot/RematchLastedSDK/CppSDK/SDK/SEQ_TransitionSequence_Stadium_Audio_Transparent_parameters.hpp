#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SEQ_TransitionSequence_Stadium_Audio_Transparent

#include "Basic.hpp"

#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function SEQ_TransitionSequence_Stadium_Audio_Transparent.SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP_C.ExecuteUbergraph_SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP
// 0x0058 (0x0058 - 0x0000)
struct SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP_C_ExecuteUbergraph_SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0010(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0020(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_CustomEvent_AkEvent;                        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAkSwitchValue*                   K2Node_CustomEvent_Transition_Switch;              // 0x0050(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP_C_ExecuteUbergraph_SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP;

// Function SEQ_TransitionSequence_Stadium_Audio_Transparent.SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP_C.SequenceEvent
// 0x0008 (0x0008 - 0x0000)
struct SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP_C_SequenceEvent final
{
public:
	class UAkAudioEvent*                          AkEvent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP_C_SequenceEvent;

// Function SEQ_TransitionSequence_Stadium_Audio_Transparent.SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP_C.Set_Transition_Switch
// 0x0008 (0x0008 - 0x0000)
struct SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP_C_Set_Transition_Switch final
{
public:
	const class UAkSwitchValue*                   Transition_Switch;                                 // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_SEQ_TransitionSequence_Stadium_Audio_Transparent_DirectorBP_C_Set_Transition_Switch;

}

