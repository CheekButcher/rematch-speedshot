#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpiderCam_2RailLDCameraData

#include "Basic.hpp"

#include "BP_SpiderCam_2RailLDCameraData_classes.hpp"
#include "BP_SpiderCam_2RailLDCameraData_parameters.hpp"


namespace SDK
{

// Function BP_SpiderCam_2RailLDCameraData.BP_SpiderCam_2RailLDCameraData_C.HandleLockCameraRail
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpiderCam_2RailLDCameraData_C::HandleLockCameraRail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpiderCam_2RailLDCameraData_C", "HandleLockCameraRail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpiderCam_2RailLDCameraData.BP_SpiderCam_2RailLDCameraData_C.DrawHandleLockCameraRailDebug
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AngleInDegrees                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   CamToTargetDir                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpiderCam_2RailLDCameraData_C::DrawHandleLockCameraRailDebug(double AngleInDegrees, const struct FVector& CamToTargetDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpiderCam_2RailLDCameraData_C", "DrawHandleLockCameraRailDebug");

	Params::BP_SpiderCam_2RailLDCameraData_C_DrawHandleLockCameraRailDebug Parms{};

	Parms.AngleInDegrees = AngleInDegrees;
	Parms.CamToTargetDir = std::move(CamToTargetDir);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpiderCam_2RailLDCameraData.BP_SpiderCam_2RailLDCameraData_C.BPE_SwitchToLDCamera
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     _actorToFollowRef                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class AActor*                     _actorToLookAtRef                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class USCCameraData>        _overrideCamera                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_SpiderCam_2RailLDCameraData_C::BPE_SwitchToLDCamera(const class AActor* _actorToFollowRef, const class AActor* _actorToLookAtRef, TSubclassOf<class USCCameraData> _overrideCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpiderCam_2RailLDCameraData_C", "BPE_SwitchToLDCamera");

	Params::BP_SpiderCam_2RailLDCameraData_C_BPE_SwitchToLDCamera Parms{};

	Parms._actorToFollowRef = _actorToFollowRef;
	Parms._actorToLookAtRef = _actorToLookAtRef;
	Parms._overrideCamera = _overrideCamera;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SpiderCam_2RailLDCameraData.BP_SpiderCam_2RailLDCameraData_C.BPE_GetActorRefTransform
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   _fDt                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform ABP_SpiderCam_2RailLDCameraData_C::BPE_GetActorRefTransform(float _fDt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpiderCam_2RailLDCameraData_C", "BPE_GetActorRefTransform");

	Params::BP_SpiderCam_2RailLDCameraData_C_BPE_GetActorRefTransform Parms{};

	Parms._fDt = _fDt;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

