#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NotificationViewModel

#include "Basic.hpp"

#include "BP_NotificationViewModel_classes.hpp"
#include "BP_NotificationViewModel_parameters.hpp"


namespace SDK
{

// Function BP_NotificationViewModel.BP_NotificationViewModel_C.GetBackgroundColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FLinearColor*                    Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NotificationViewModel_C::GetBackgroundColor(struct FLinearColor* Color) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NotificationViewModel_C", "GetBackgroundColor");

	Params::BP_NotificationViewModel_C_GetBackgroundColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function BP_NotificationViewModel.BP_NotificationViewModel_C.GetBorderPadding
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FMargin*                         Padding                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_NotificationViewModel_C::GetBorderPadding(struct FMargin* Padding) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NotificationViewModel_C", "GetBorderPadding");

	Params::BP_NotificationViewModel_C_GetBorderPadding Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Padding != nullptr)
		*Padding = std::move(Parms.Padding);
}


// Function BP_NotificationViewModel.BP_NotificationViewModel_C.GetIcon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>*       Color                                                  (Parm, OutParm, HasGetValueTypeHash)

void UBP_NotificationViewModel_C::GetIcon(TSoftObjectPtr<class UTexture2D>* Color) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NotificationViewModel_C", "GetIcon");

	Params::BP_NotificationViewModel_C_GetIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = Parms.Color;
}


// Function BP_NotificationViewModel.BP_NotificationViewModel_C.GetTitleColor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FSlateColor*                     Color                                                  (Parm, OutParm)

void UBP_NotificationViewModel_C::GetTitleColor(struct FSlateColor* Color) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NotificationViewModel_C", "GetTitleColor");

	Params::BP_NotificationViewModel_C_GetTitleColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function BP_NotificationViewModel.BP_NotificationViewModel_C.ShouldDisplayMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   bDisplay                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NotificationViewModel_C::ShouldDisplayMessage(bool* bDisplay) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NotificationViewModel_C", "ShouldDisplayMessage");

	Params::BP_NotificationViewModel_C_ShouldDisplayMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDisplay != nullptr)
		*bDisplay = Parms.bDisplay;
}

}

