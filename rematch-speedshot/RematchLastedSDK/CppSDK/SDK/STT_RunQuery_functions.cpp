#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_RunQuery

#include "Basic.hpp"

#include "STT_RunQuery_classes.hpp"
#include "STT_RunQuery_parameters.hpp"


namespace SDK
{

// Function STT_RunQuery.STT_RunQuery_C.ExecuteUbergraph_STT_RunQuery
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USTT_RunQuery_C::ExecuteUbergraph_STT_RunQuery(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("STT_RunQuery_C", "ExecuteUbergraph_STT_RunQuery");

	Params::STT_RunQuery_C_ExecuteUbergraph_STT_RunQuery Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function STT_RunQuery.STT_RunQuery_C.On Query Finished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEnvQueryInstanceBlueprintWrapper*QueryInstance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EEnvQueryStatus                         QueryStatus                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USTT_RunQuery_C::On_Query_Finished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("STT_RunQuery_C", "On Query Finished");

	Params::STT_RunQuery_C_On_Query_Finished Parms{};

	Parms.QueryInstance = QueryInstance;
	Parms.QueryStatus = QueryStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function STT_RunQuery.STT_RunQuery_C.ReceiveExitState
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FStateTreeTransitionResult&TRANSITION                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USTT_RunQuery_C::ReceiveExitState(const struct FStateTreeTransitionResult& TRANSITION)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("STT_RunQuery_C", "ReceiveExitState");

	Params::STT_RunQuery_C_ReceiveExitState Parms{};

	Parms.TRANSITION = std::move(TRANSITION);

	UObject::ProcessEvent(Func, &Parms);
}


// Function STT_RunQuery.STT_RunQuery_C.ReceiveLatentEnterState
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FStateTreeTransitionResult&TRANSITION                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USTT_RunQuery_C::ReceiveLatentEnterState(const struct FStateTreeTransitionResult& TRANSITION)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("STT_RunQuery_C", "ReceiveLatentEnterState");

	Params::STT_RunQuery_C_ReceiveLatentEnterState Parms{};

	Parms.TRANSITION = std::move(TRANSITION);

	UObject::ProcessEvent(Func, &Parms);
}


// Function STT_RunQuery.STT_RunQuery_C.Run Query
// (BlueprintCallable, BlueprintEvent)

void USTT_RunQuery_C::Run_Query()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("STT_RunQuery_C", "Run Query");

	UObject::ProcessEvent(Func, nullptr);
}

}

