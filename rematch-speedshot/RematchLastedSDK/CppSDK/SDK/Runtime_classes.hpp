#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Runtime

#include "Basic.hpp"

#include "Runtime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayAbilities_classes.hpp"
#include "SCCore_structs.hpp"
#include "SCCore_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "MotionWarping_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "SCCombatSystem_structs.hpp"
#include "SCCombatSystem_classes.hpp"
#include "DeveloperSettings_classes.hpp"
#include "UMG_classes.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "SCCharacterCustomization_structs.hpp"
#include "SCCharacterCustomization_classes.hpp"
#include "StructUtils_structs.hpp"
#include "SOS_structs.hpp"
#include "SOS_classes.hpp"
#include "AkAudio_structs.hpp"
#include "AkAudio_classes.hpp"
#include "SlateCore_structs.hpp"
#include "Gauntlet_classes.hpp"
#include "GameplayCameras_classes.hpp"
#include "SOSBindings_classes.hpp"
#include "LevelSequence_classes.hpp"
#include "MovieScene_classes.hpp"
#include "MovieSceneTracks_classes.hpp"


namespace SDK
{

// Class Runtime.ForceTouchBallNotifyState
// 0x0008 (0x0040 - 0x0038)
class UForceTouchBallNotifyState final : public USCAbilityMontageNotifyState
{
public:
	float                                         m_fBlendInDuration;                                // 0x0038(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ForceTouchBallNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ForceTouchBallNotifyState")
	}
	static class UForceTouchBallNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UForceTouchBallNotifyState>();
	}
};
DUMPER7_ASSERTS_UForceTouchBallNotifyState;

// Class Runtime.AbilityOwnerSelector
// 0x0050 (0x0290 - 0x0240)
class UAbilityOwnerSelector final : public USceneComponent
{
public:
	class UBoxComponent*                          m_AreaEnter;                                       // 0x0240(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          m_AreaExit;                                        // 0x0248(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        m_SelectionPoint;                                  // 0x0250(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class URuntimeGameplayEffect>     m_AbilityGameplayEffect;                           // 0x0258(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iTeam;                                           // 0x0260(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_264[0x2C];                                     // 0x0264(0x002C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnOverlapBegin(class UPrimitiveComponent* _overlappedComp, class AActor* _otherActor, class UPrimitiveComponent* _otherComp, int32 _otherBodyIndex, bool _bFromSweep, const struct FHitResult& _sweepResult);
	void OnOverlapEnd(class UPrimitiveComponent* _overlappedComp, class AActor* _otherActor, class UPrimitiveComponent* _otherComp, int32 _otherBodyIndex);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityOwnerSelector")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityOwnerSelector")
	}
	static class UAbilityOwnerSelector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityOwnerSelector>();
	}
};
DUMPER7_ASSERTS_UAbilityOwnerSelector;

// Class Runtime.AbilityTask_ApplyAbilityCostOverTime
// 0x0048 (0x00E0 - 0x0098)
class UAbilityTask_ApplyAbilityCostOverTime final : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              onFailure;                                         // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0[0x28];                                      // 0x00B0(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            m_CostEffect;                                      // 0x00D8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UAbilityTask_ApplyAbilityCostOverTime* BPF_ApplyAbilityCostOverTime(class USCGameplayAbility* _owningAbility, TSubclassOf<class UGameplayEffect> _effect, float _fPeriodInSeconds);

	void BPF_SetCheckCommitAbilityCostConditionDelegate(TDelegate<void()> _delegate);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_ApplyAbilityCostOverTime")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_ApplyAbilityCostOverTime")
	}
	static class UAbilityTask_ApplyAbilityCostOverTime* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_ApplyAbilityCostOverTime>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_ApplyAbilityCostOverTime;

// Class Runtime.BallStateActorCondition
// 0x0008 (0x0030 - 0x0028)
class UBallStateActorCondition final : public UBaseActorCondition
{
public:
	ESimulationStep                               m_eBallState;                                      // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallStateActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallStateActorCondition")
	}
	static class UBallStateActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallStateActorCondition>();
	}
};
DUMPER7_ASSERTS_UBallStateActorCondition;

// Class Runtime.ExtraEffortRegenCalculation
// 0x0000 (0x0040 - 0x0040)
class UExtraEffortRegenCalculation final : public UGameplayEffectExecutionCalculation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExtraEffortRegenCalculation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExtraEffortRegenCalculation")
	}
	static class UExtraEffortRegenCalculation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExtraEffortRegenCalculation>();
	}
};
DUMPER7_ASSERTS_UExtraEffortRegenCalculation;

// Class Runtime.AbilityTask_ApplyShoot
// 0x0028 (0x00C0 - 0x0098)
class UAbilityTask_ApplyShoot : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void()>              m_OnShoot;                                         // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              m_OnShootCanceled;                                 // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class ABall*                                  M_Ball;                                            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UAbilityTask_ApplyShoot* BPF_ApplyShootTask(const struct FShootParams& _shootParams, class UGameplayAbility* _instigatorAbility, class ABall* _ball, bool _bAttachedToPlayer);

	void OnShoot(const class ABall* _ball, const struct FShootParams& _shootParams);
	void OnTrajectoryCleared();
	void OnTrajectoryUpdated(const class ABall* _ball, const struct FShootParams& _shootParams);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_ApplyShoot")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_ApplyShoot")
	}
	static class UAbilityTask_ApplyShoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_ApplyShoot>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_ApplyShoot;

// Class Runtime.AbilityTask_ApplyVolleyShoot
// 0x0028 (0x00E8 - 0x00C0)
class UAbilityTask_ApplyVolleyShoot final : public UAbilityTask_ApplyShoot
{
public:
	TMulticastInlineDelegate<void()>              m_OnVolleyRefused;                                 // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D0[0x18];                                      // 0x00D0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_ApplyVolleyShoot* BPF_ApplyVolleyShootTask(const struct FShootParams& _shootParams, class UGameplayAbility* _instigatorAbility, class ABall* _ball, class UAbilityTask_BallInteractionRequest* _ballInteractionRequestTask, bool _bAttachedToPlayer);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_ApplyVolleyShoot")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_ApplyVolleyShoot")
	}
	static class UAbilityTask_ApplyVolleyShoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_ApplyVolleyShoot>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_ApplyVolleyShoot;

// Class Runtime.BallPhysicSettings
// 0x0028 (0x0060 - 0x0038)
class UBallPhysicSettings final : public UDeveloperSettings
{
public:
	float                                         m_fSpeedStopMoving;                                // 0x0038(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPredictionDuration;                             // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPredictionSimFrequency;                         // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 m_fAimPointAngleInDegreesSteps;                    // 0x0048(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	int32                                         m_iMaxAimPointComputationCount;                    // 0x0058(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bHasNoBounceCollisionChannel;                    // 0x005C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECollisionChannel                             m_eNoBounceCollisionChannel;                       // 0x005D(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallPhysicSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallPhysicSettings")
	}
	static class UBallPhysicSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallPhysicSettings>();
	}
};
DUMPER7_ASSERTS_UBallPhysicSettings;

// Class Runtime.ExperienceComponentBase
// 0x0018 (0x0040 - 0x0028)
class UExperienceComponentBase : public UObject
{
public:
	class FText                                   m_Title;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	EExperienceElementType                        m_eType;                                           // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_ComputeComponentData(const class UObject* _worldContext, int32 _iOldTotalExperience, const class FName& _playerId, TArray<struct FExperienceComponentData>& _outComponentsData) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExperienceComponentBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExperienceComponentBase")
	}
	static class UExperienceComponentBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExperienceComponentBase>();
	}
};
DUMPER7_ASSERTS_UExperienceComponentBase;

// Class Runtime.GroupExperienceComponent
// 0x0018 (0x0058 - 0x0040)
class UGroupExperienceComponent final : public UExperienceComponentBase
{
public:
	TArray<struct FExperienceComponentInstance>   m_Components;                                      // 0x0040(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bShouldBeConsideredAsOneComponent;               // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GroupExperienceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GroupExperienceComponent")
	}
	static class UGroupExperienceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroupExperienceComponent>();
	}
};
DUMPER7_ASSERTS_UGroupExperienceComponent;

// Class Runtime.AbilityTask_BallInteractionRequest
// 0x0060 (0x00F8 - 0x0098)
class UAbilityTask_BallInteractionRequest final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void()>              OnRequestSuccess;                                  // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void()>              OnRequestFail;                                     // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x40];                                      // 0x00B8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_BallInteractionRequest* BPF_BallInteractionRequest(class UGameplayAbility* _owningAbility, EBallInteractionRequestType _eType, const struct FGameplayAbilityTargetDataHandle& _context, const struct FGameplayTag& _gameplayTag);

	void ServerReceiveRequest(const struct FGameplayAbilityTargetDataHandle& _data, const struct FGameplayTag& _activationTag);

	void ClearRequest() const;
	bool HasRequestBeenGranted() const;
	bool HasRequestBeenProcessed() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_BallInteractionRequest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_BallInteractionRequest")
	}
	static class UAbilityTask_BallInteractionRequest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_BallInteractionRequest>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_BallInteractionRequest;

// Class Runtime.AbilityTask_HandleHindering
// 0x0058 (0x0140 - 0x00E8)
class UAbilityTask_HandleHindering final : public UAbilityTask_ApplyRootMotion_Base
{
public:
	uint8                                         Pad_E8[0x3C];                                      // 0x00E8(0x003C)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ASCCharacter>            m_Instigator;                                      // 0x0124(0x0008)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_12C[0xC];                                      // 0x012C(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterHinderingConfig*              m_CharacterConfig;                                 // 0x0138(0x0008)(Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UAbilityTask_HandleHindering* BPF_HandleHindering(class UGameplayAbility* _owningAbility, const class AActor* _instigator, const class UCharacterHinderingConfig* _config, ERootMotionFinishVelocityMode _eVelocityOnFinishMode, const struct FVector& _vSetVelocityOnFinish, float _fClampVelocityOnFinish);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_HandleHindering")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_HandleHindering")
	}
	static class UAbilityTask_HandleHindering* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_HandleHindering>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_HandleHindering;

// Class Runtime.CharacterCustomizationParser
// 0x0000 (0x0028 - 0x0028)
class UCharacterCustomizationParser : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterCustomizationParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterCustomizationParser")
	}
	static class UCharacterCustomizationParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterCustomizationParser>();
	}
};
DUMPER7_ASSERTS_UCharacterCustomizationParser;

// Class Runtime.RuntimeGameFlowState
// 0x00D0 (0x0590 - 0x04C0)
class URuntimeGameFlowState : public USCGameFlowState
{
public:
	bool                                          m_bHideBalls;                                      // 0x04C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class FName>        m_MatchTypeToTransition;                           // 0x04C8(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	ERuntimeGameFlowTravelTeamComposition         m_eTeamComposition;                                // 0x0518(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bNotifyServicesPostMatchEnd;                     // 0x0519(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bResetCharacters;                                // 0x051A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bResetBalls;                                     // 0x051B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAkStateValue*>                  m_AkStates;                                        // 0x0520(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                          m_AkEvent;                                         // 0x0530(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUsePrematchStartSpot;                           // 0x0538(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FMenuTransitionData> m_TransitionSequences;                             // 0x0540(0x0050)(Edit, NativeAccessSpecifierPrivate)

public:
	static TArray<class FName> GetMatchStateArray();

	void BPF_ResetBallsAndCharacters();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeGameFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeGameFlowState")
	}
	static class URuntimeGameFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeGameFlowState>();
	}
};
DUMPER7_ASSERTS_URuntimeGameFlowState;

// Class Runtime.LevelSequenceFlowState
// 0x0098 (0x0628 - 0x0590)
class ULevelSequenceFlowState : public URuntimeGameFlowState
{
public:
	bool                                          m_bUseLevelSequenceDurationAsSynchroTime;          // 0x0590(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLevelSequenceDurationTolerance;                 // 0x0594(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ARuntimeLevelSequenceActor*             m_CurrentLevelSequenceActor;                       // 0x0598(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5A0[0x1];                                      // 0x05A0(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	ELevelSequenceFlowStateType                   m_LevelSequenceType;                               // 0x05A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5A2[0x6];                                      // 0x05A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         m_LevelSequenceToPlay;                             // 0x05A8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   m_LevelSequenceActorClass;                         // 0x05B0(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ARuntimeLevelSequenceActor> m_LoadedLevelSequenceActorClass;                   // 0x05D8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_LevelSequenceActorTag;                           // 0x05E0(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bMakeGoalScorerTeamMainTeam;                     // 0x05E8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           m_TeamsTags;                                       // 0x05F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FBindingTagRequest                     m_CaptainBindingTag;                               // 0x0600(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FBindingTagRequest                     m_GoalScorerBindingTag;                            // 0x060C(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bHidePlayerNotBinds;                             // 0x0618(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class APawn>                      m_FakePawnToSpawnClass;                            // 0x0620(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnLevelSequenceFinished();
	void OnLevelSequencePlay();
	void PlayLevelSequenceOnClient();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LevelSequenceFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LevelSequenceFlowState")
	}
	static class ULevelSequenceFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULevelSequenceFlowState>();
	}
};
DUMPER7_ASSERTS_ULevelSequenceFlowState;

// Class Runtime.FinisherHandlerFlowState
// 0x0000 (0x0628 - 0x0628)
class UFinisherHandlerFlowState : public ULevelSequenceFlowState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FinisherHandlerFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FinisherHandlerFlowState")
	}
	static class UFinisherHandlerFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFinisherHandlerFlowState>();
	}
};
DUMPER7_ASSERTS_UFinisherHandlerFlowState;

// Class Runtime.AbilityTask_HandleSteeringLocomotion
// 0x0058 (0x0140 - 0x00E8)
class UAbilityTask_HandleSteeringLocomotion final : public UAbilityTask_ApplyRootMotion_Base
{
public:
	class UCurveFloat*                            m_SpeedCurve;                                      // 0x00E8(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fSpeed;                                          // 0x00F0(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_TrackingCurve;                                   // 0x00F8(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fTrackingSpeed;                                  // 0x0100(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USCInputAction*                         m_action;                                          // 0x0108(0x0008)(Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int16                                         m_iActivationPredictionKey;                        // 0x0110(0x0002)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fServerStartTime;                                // 0x0114(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_118[0x28];                                     // 0x0118(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_HandleSteeringLocomotion* BPF_HandleSteeringLocomotion(class UGameplayAbility* _owningAbility, class FName _taskInstanceName, class USCInputAction* _action, float _fSpeed, class UCurveFloat* _speedCurve, float _fTrackingSpeed, class UCurveFloat* _trackingCurve, float _fInputDelay, float _fUpdateInputFrequency);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_HandleSteeringLocomotion")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_HandleSteeringLocomotion")
	}
	static class UAbilityTask_HandleSteeringLocomotion* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_HandleSteeringLocomotion>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_HandleSteeringLocomotion;

// Class Runtime.AbilityTask_MoveToCollision
// 0x0038 (0x00D0 - 0x0098)
class UAbilityTask_MoveToCollision final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void()>              OnTimedOut;                                        // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTimedOutAndDestinationReached;                   // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_B8[0x18];                                      // 0x00B8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_MoveToCollision* BPF_MoveToCollision(class UGameplayAbility* _owningAbility, float _fMaxDuration, float _fMinDistanceToRun, ECollisionChannel _eCollisionChannel);

	void OnTimedOutAndDestinationReachedCallBack();
	void OnTimedOutCallBack();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_MoveToCollision")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_MoveToCollision")
	}
	static class UAbilityTask_MoveToCollision* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_MoveToCollision>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_MoveToCollision;

// Class Runtime.BaseShootRotationForceComputation
// 0x0000 (0x0028 - 0x0028)
class UBaseShootRotationForceComputation : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseShootRotationForceComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseShootRotationForceComputation")
	}
	static class UBaseShootRotationForceComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseShootRotationForceComputation>();
	}
};
DUMPER7_ASSERTS_UBaseShootRotationForceComputation;

// Class Runtime.ModifierShootRotationForceComputation
// 0x0000 (0x0028 - 0x0028)
class UModifierShootRotationForceComputation : public UBaseShootRotationForceComputation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ModifierShootRotationForceComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ModifierShootRotationForceComputation")
	}
	static class UModifierShootRotationForceComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModifierShootRotationForceComputation>();
	}
};
DUMPER7_ASSERTS_UModifierShootRotationForceComputation;

// Class Runtime.InputShootRotationForceComputation
// 0x0040 (0x0068 - 0x0028)
class UInputShootRotationForceComputation : public UModifierShootRotationForceComputation
{
public:
	bool                                          m_bSwapAxis;                                       // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_XSpinningRotationCurve;                          // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            m_YSpinningRotationCurve;                          // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bWaitInputChange;                                // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fToleranceAngleToActivate;                       // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fDeadZoneToActivate;                             // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bBlockIfForceInputHeld;                          // 0x004C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseAccumulatorSystemCalculation;                // 0x004D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAccumulatorSensibility;                         // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameOption>                m_MagnusSensitivityOption;                         // 0x0058(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bInverseXRotation;                               // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bInverseYRotation;                               // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputShootRotationForceComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputShootRotationForceComputation")
	}
	static class UInputShootRotationForceComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputShootRotationForceComputation>();
	}
};
DUMPER7_ASSERTS_UInputShootRotationForceComputation;

// Class Runtime.GoalInvolvedTargetDataHelpers
// 0x0000 (0x0028 - 0x0028)
class UGoalInvolvedTargetDataHelpers final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GoalInvolvedTargetDataHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GoalInvolvedTargetDataHelpers")
	}
	static class UGoalInvolvedTargetDataHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoalInvolvedTargetDataHelpers>();
	}
};
DUMPER7_ASSERTS_UGoalInvolvedTargetDataHelpers;

// Class Runtime.AbilityTask_NetworkFindBallTarget
// 0x0100 (0x0198 - 0x0098)
class UAbilityTask_NetworkFindBallTarget final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(const struct FBallInterceptionPointTargetData& _found, const struct FTargetingContext& _targetContext)> OnFound; // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FBallInterceptionPointTargetData& _found, const struct FTargetingContext& _targetContext)> OnUnfound; // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FBallInterceptionPointTargetData& _found, const struct FTargetingContext& _targetContext)> OnTargetRejected; // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FBallInterceptionPointTargetData& _found, const struct FTargetingContext& _targetContext)> OnCancel; // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D8[0xC0];                                      // 0x00D8(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_NetworkFindBallTarget* BPF_NetworkFindBallTarget(class UGameplayAbility* _owningAbility, const struct FOnDemandTargetProvider& _targetProvider, const struct FOnDemandTargetProvider& _targetValidationProvider, const struct FGameplayTag& _gameplayTag, bool _bDoOnce);
	static class UAbilityTask_NetworkFindBallTarget* BPF_NetworkFindBallTargetWithCancelInput(class UGameplayAbility* _owningAbility, const struct FOnDemandTargetProvider& _targetProvider, const struct FOnDemandTargetProvider& _targetValidationProvider, const struct FGameplayTag& _gameplayTag, class USCInputAction* _inAction, EInputWatchTrigger _eWatchTrigger, bool _bDoOnce);

	void InitCancel(class USCInputAction* _inAction, EInputWatchTrigger _eWatchTrigger);
	void OnAbilityTaskCancel();
	void OnCancelInput(const class USCInputAction* _action, const struct FInputActionState& _listenerState);
	void OnServerReady();
	void SearchTarget();
	void ServerReceiveTargetData(const struct FGameplayAbilityTargetDataHandle& _data, const struct FGameplayTag& _activationTag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_NetworkFindBallTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_NetworkFindBallTarget")
	}
	static class UAbilityTask_NetworkFindBallTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_NetworkFindBallTarget>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_NetworkFindBallTarget;

// Class Runtime.AbilityTask_NetworkHitProjection
// 0x0090 (0x0128 - 0x0098)
class UAbilityTask_NetworkHitProjection final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnHitPredicted; // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void()>              OnHitProjectionFailed;                             // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	class UAbilityTask_HandleHitboxBase*          m_HandleHitboxBaseTaskPtr;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C0[0x68];                                      // 0x00C0(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_NetworkHitProjection* BPF_NetworkHitProjection(class UGameplayAbility* _owningAbility, const struct FGameplayAbilityTargetDataHandle& _context, TSubclassOf<class UTargetDatasource> _datasource, TSubclassOf<class UTargetPicker> _picker, const struct FGameplayTag& _gameplayTag, class UAbilityTask_HandleHitboxBase* _handleHitboxTaskPtr);

	void ServerReceiveTargetData(const struct FGameplayAbilityTargetDataHandle& _data, const struct FGameplayTag& _activationTag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_NetworkHitProjection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_NetworkHitProjection")
	}
	static class UAbilityTask_NetworkHitProjection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_NetworkHitProjection>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_NetworkHitProjection;

// Class Runtime.Goal
// 0x0068 (0x0318 - 0x02B0)
class AGoal : public AActor
{
public:
	uint8                                         m_uiTeam;                                          // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AGoal* _goal, uint8 _uiTeam)> BPE_OnCrossbarHit;             // 0x02B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                          m_bToggleRestartMatch;                             // 0x02C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bToggleVFX;                                      // 0x02C9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bToggleSFX;                                      // 0x02CA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bToggleUIText;                                   // 0x02CB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vGoalExtraSize;                                  // 0x02D0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E8[0x30];                                     // 0x02E8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_GetCollision(class USceneComponent** _outCollision) const;
	bool BPF_IsPointInGoal(const struct FVector& _vPoint, bool _bUseGoalExtraSize) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Goal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Goal")
	}
	static class AGoal* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGoal>();
	}
};
DUMPER7_ASSERTS_AGoal;

// Class Runtime.AbilityTask_NetworkHitValidation
// 0x0068 (0x0100 - 0x0098)
class UAbilityTask_NetworkHitValidation final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnHitPredicted; // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void()>              OnHitProjectionFailed;                             // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	class UAbilityTask_HandleHitboxBase*          m_HandleHitboxBaseTaskPtr;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C0[0x40];                                      // 0x00C0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_NetworkHitValidation* BPF_NetworkHitValidation(class UGameplayAbility* _owningAbility, const struct FGameplayAbilityTargetDataHandle& _context, TSubclassOf<class UTargetDatasource> _datasource, TSubclassOf<class UTargetPicker> _picker, const struct FGameplayTag& _gameplayTag, class UAbilityTask_HandleHitboxBase* _handleHitboxTaskPtr);

	void ServerReceiveTargetData(const struct FGameplayAbilityTargetDataHandle& _data, const struct FGameplayTag& _activationTag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_NetworkHitValidation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_NetworkHitValidation")
	}
	static class UAbilityTask_NetworkHitValidation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_NetworkHitValidation>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_NetworkHitValidation;

// Class Runtime.AbilityTask_NetworkSyncShootData
// 0x0118 (0x02B8 - 0x01A0)
class UAbilityTask_NetworkSyncShootData final : public UAbilityTask_NetworkSyncWithDelay
{
public:
	uint8                                         Pad_1A0[0x118];                                    // 0x01A0(0x0118)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_NetworkSyncShootData* BPF_NetworkSyncShootDataWithInputs(class USCGameplayAbility* _owningAbility, const struct FRTInputActionsForNetworkSyncShoot& _inputAction, struct FShootPrepTargetData& _inOutShootPrep, const struct FGameplayAbilityTargetDataHandle& _context, const TArray<TSubclassOf<class UTrajectoryStatus>>& _trajectoryStatus, const struct FSCConditionsToSyncEarly& _conditionsToSyncEarly, const struct FRTNetworkSyncShootTimeArg& _networkSyncTimeArg, const struct FSCNetworkSyncData& _syncData, const struct FGameplayTag& _shootTypeTag);

	void BPF_GetShootParams(struct FShootParams* _outShootParams) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_NetworkSyncShootData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_NetworkSyncShootData")
	}
	static class UAbilityTask_NetworkSyncShootData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_NetworkSyncShootData>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_NetworkSyncShootData;

// Class Runtime.BallStealBinder
// 0x0098 (0x0190 - 0x00F8)
class UBallStealBinder final : public UGameStateScopedEventBinder
{
public:
	struct FGameplayTag                           m_FeedLogPlayerStealTag;                           // 0x00F8(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                      m_ThiefRequiredTags;                               // 0x0100(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                      m_StolenRequiredTags;                              // 0x0148(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	void OnBallStolen(class ARuntimePlayerState* _playerStateThief, class ARuntimePlayerState* _playerStateStolen);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallStealBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallStealBinder")
	}
	static class UBallStealBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallStealBinder>();
	}
};
DUMPER7_ASSERTS_UBallStealBinder;

// Class Runtime.RTCustomizationLevelSequenceDataAsset
// 0x0000 (0x0150 - 0x0150)
class URTCustomizationLevelSequenceDataAsset : public USCCustomizationLevelSequenceDataAsset
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTCustomizationLevelSequenceDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTCustomizationLevelSequenceDataAsset")
	}
	static class URTCustomizationLevelSequenceDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTCustomizationLevelSequenceDataAsset>();
	}
};
DUMPER7_ASSERTS_URTCustomizationLevelSequenceDataAsset;

// Class Runtime.FinisherCustomizationDataAsset
// 0x0008 (0x0158 - 0x0150)
class UFinisherCustomizationDataAsset final : public URTCustomizationLevelSequenceDataAsset
{
public:
	bool                                          m_bHideBallDuringSequence;                         // 0x0150(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iMinimumPlayersNumberRequired;                   // 0x0154(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FinisherCustomizationDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FinisherCustomizationDataAsset")
	}
	static class UFinisherCustomizationDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFinisherCustomizationDataAsset>();
	}
};
DUMPER7_ASSERTS_UFinisherCustomizationDataAsset;

// Class Runtime.AbilityTask_NetworkSyncTargetData
// 0x0088 (0x0120 - 0x0098)
class UAbilityTask_NetworkSyncTargetData final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnSync;      // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnTimeOut;   // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnCancel;    // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8[0x58];                                      // 0x00C8(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_NetworkSyncTargetData* BPF_NetworkSyncTargetData(class UGameplayAbility* _owningAbility, const struct FGameplayAbilityTargetDataHandle& _targetData, float _fSleepDuration, float _fListenDuration, float _fLagCompensation);

	void OnCancelledCallback();
	void OnReplicatedCallback(const struct FGameplayAbilityTargetDataHandle& _data, const struct FGameplayTag& _activationTag);
	void OnSignalCallback();
	void SendSignalFromServer();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_NetworkSyncTargetData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_NetworkSyncTargetData")
	}
	static class UAbilityTask_NetworkSyncTargetData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_NetworkSyncTargetData>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_NetworkSyncTargetData;

// Class Runtime.ShootForceShootPrepCondition
// 0x0028 (0x00A0 - 0x0078)
class UShootForceShootPrepCondition final : public UTargetDataCondition
{
public:
	struct FSCMathExpressionFloat                 m_MathExpression;                                  // 0x0078(0x0020)(Edit, NativeAccessSpecifierPrivate)
	bool                                          m_bConvertToPercent;                               // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootForceShootPrepCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootForceShootPrepCondition")
	}
	static class UShootForceShootPrepCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootForceShootPrepCondition>();
	}
};
DUMPER7_ASSERTS_UShootForceShootPrepCondition;

// Class Runtime.AbilityTask_NetworkWaitTargetData
// 0x0070 (0x0108 - 0x0098)
class UAbilityTask_NetworkWaitTargetData final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnReceived;  // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnTimeOut;   // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnCancel;    // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8[0x40];                                      // 0x00C8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_NetworkWaitTargetData* BPF_NetworkWaitTargetData(class UGameplayAbility* _owningAbility, EAbilityTaskNetWaitType _eType, const struct FGameplayAbilityTargetDataHandle& _targetData, float _fSleepDuration, float _fListenDuration);

	void OnCancelledCallback();
	void OnReplicatedCallback(const struct FGameplayAbilityTargetDataHandle& _data, const struct FGameplayTag& _activationTag);
	void OnSignalCallback();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_NetworkWaitTargetData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_NetworkWaitTargetData")
	}
	static class UAbilityTask_NetworkWaitTargetData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_NetworkWaitTargetData>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_NetworkWaitTargetData;

// Class Runtime.GoalKeeperDashInputToBallTargetAngleCondition
// 0x0008 (0x0080 - 0x0078)
class UGoalKeeperDashInputToBallTargetAngleCondition final : public UTargetDataCondition
{
public:
	float                                         m_fHalfAnglePrecision;                             // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GoalKeeperDashInputToBallTargetAngleCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GoalKeeperDashInputToBallTargetAngleCondition")
	}
	static class UGoalKeeperDashInputToBallTargetAngleCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoalKeeperDashInputToBallTargetAngleCondition>();
	}
};
DUMPER7_ASSERTS_UGoalKeeperDashInputToBallTargetAngleCondition;

// Class Runtime.AbilityTask_PlayMontageFromAestheticMontage
// 0x0000 (0x0228 - 0x0228)
class UAbilityTask_PlayMontageFromAestheticMontage final : public UAbilityTask_SCPlayMontageAndWait
{
public:
	static class UAbilityTask_PlayMontageFromAestheticMontage* BPF_PlayMontageFromAestheticMontage(class USCGameplayAbility* _owningAbility, class UAbilityTask_PlaySimulatedAestheticMontage* _aestheticMontageTask, EAbilityExecOrigin _eIn, EAbilityExecOutputWithValidation* _eOut, class FName _taskInstanceName, float _fFallbackStartTime, TSubclassOf<class UAnimSequencePicker> _fallbackPicker, class FName _fallbackSlotName, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_PlayMontageFromAestheticMontage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_PlayMontageFromAestheticMontage")
	}
	static class UAbilityTask_PlayMontageFromAestheticMontage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_PlayMontageFromAestheticMontage>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_PlayMontageFromAestheticMontage;

// Class Runtime.AbilityTask_PlaySimulatedAestheticMontage
// 0x0060 (0x00F8 - 0x0098)
class UAbilityTask_PlaySimulatedAestheticMontage final : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnBlendOut;                                        // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnEnded;                                           // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAnimMontage*                           m_AestheticMontage;                                // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                           m_BaseMontage;                                     // 0x00C8(0x0008)(Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bMirror;                                         // 0x00D0(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fPlayRate;                                       // 0x00D4(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fBlendOutAnimTime;                               // 0x00D8(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_NewSlotTrack;                                    // 0x00DC(0x0008)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E4[0x14];                                      // 0x00E4(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_PlaySimulatedAestheticMontage* BPF_PlaySimulatedAstheticMontage(class UGameplayAbility* _owningAbility, class UAnimMontage* _montage, bool _bMirror, class FName _newSlotTrack, float _fPlayRate, float _fBlendOutAnimTime);
	static class UAbilityTask_PlaySimulatedAestheticMontage* BPF_PlaySimulatedTimedAstheticMontage(class UGameplayAbility* _owningAbility, class UAnimMontage* _montage, bool _bMirror, class FName _newSlotTrack, float _fWorldSyncTime, float _fAnimSyncTime, float _fBlendOutAnimTime);

	void OnAnyMontageBlendingOut(class UAnimMontage* _montage, bool bInterrupted);
	void OnAnyMontageEnded(class UAnimMontage* _montage, bool _bInterrupted);

	float GetMontageInstancePosition() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_PlaySimulatedAestheticMontage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_PlaySimulatedAestheticMontage")
	}
	static class UAbilityTask_PlaySimulatedAestheticMontage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_PlaySimulatedAestheticMontage>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_PlaySimulatedAestheticMontage;

// Class Runtime.ShopItemFilter
// 0x0000 (0x0028 - 0x0028)
class UShopItemFilter : public UObject
{
public:
	bool BPE_ShouldBeRemoved(const class UCustomizationSubsystem* _subsystem, const struct FShopItem& _item, bool _bIsActivated) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShopItemFilter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShopItemFilter")
	}
	static class UShopItemFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemFilter>();
	}
};
DUMPER7_ASSERTS_UShopItemFilter;

// Class Runtime.ShopItemBuyableFilter
// 0x0000 (0x0028 - 0x0028)
class UShopItemBuyableFilter final : public UShopItemFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShopItemBuyableFilter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShopItemBuyableFilter")
	}
	static class UShopItemBuyableFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemBuyableFilter>();
	}
};
DUMPER7_ASSERTS_UShopItemBuyableFilter;

// Class Runtime.HinderingGameplayAbility
// 0x00B0 (0x06F8 - 0x0648)
class UHinderingGameplayAbility : public USCGameplayAbility
{
public:
	struct FGameplayTagContainer                  m_HinderedTags;                                    // 0x0648(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FBaseActorConditionInstance            m_IsImpactedByHinderingCondition;                  // 0x0668(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FBaseActorConditionInstance            m_ActivateCollisionWithPawnsCondition;             // 0x0678(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	ECollisionChannel                             m_eBlockPawnsChannel;                              // 0x0688(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterHinderingConfig*              m_AlliesHinderingConfig;                           // 0x0690(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterHinderingConfig*              m_EnnemiesHinderingConfig;                         // 0x0698(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TWeakObjectPtr<class APlayerState>, TWeakObjectPtr<class UAbilityTask_HandleHindering>> m_HinderingCauserToTask; // 0x06A0(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	class USCDynamicSpeedMovementComponent*       m_MovementComponent;                               // 0x06F0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnPlayerStateRemoved(class APlayerState* _playerState);
	void ServerNotifyHindering(class APlayerState* _player, float _fClientServerTime, float _fTimeSinceLastServerTime);
	void ServerNotifyHinderingFast(class APlayerState* _player, float _fClientServerTime);
	void ServerNotifyHinderingStop(class APlayerState* _player);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HinderingGameplayAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HinderingGameplayAbility")
	}
	static class UHinderingGameplayAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHinderingGameplayAbility>();
	}
};
DUMPER7_ASSERTS_UHinderingGameplayAbility;

// Class Runtime.AbilityTask_PlaySyncMontageBase
// 0x0048 (0x00E0 - 0x0098)
class UAbilityTask_PlaySyncMontageBase : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           m_MasterMontage;                                   // 0x00A0(0x0008)(Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bMasterMirror;                                   // 0x00A8(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fBlendInDuration;                                // 0x00AC(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fLongBlendOutDuration;                           // 0x00B0(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fPlayMontageAtWorldTime;                         // 0x00B4(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fEndMontageAtWorldTime;                          // 0x00B8(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x24];                                      // 0x00BC(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_CancelBlendOutDuration();
	void OnAnyMontageBlendingOut(class UAnimMontage* _montage, bool bInterrupted);
	void OnAnyMontageStarting(class UAnimMontage* _montage);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_PlaySyncMontageBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_PlaySyncMontageBase")
	}
	static class UAbilityTask_PlaySyncMontageBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_PlaySyncMontageBase>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_PlaySyncMontageBase;

// Class Runtime.ShootSnapComputation
// 0x0018 (0x0090 - 0x0078)
class UShootSnapComputation final : public USnapAnimationComputation
{
public:
	bool                                          m_bUseShootDirectionToPlaceSnapLocation;           // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_DirectionTargetDataName;                         // 0x007C(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseBallDirectionToPlaceSnapLocation;            // 0x0084(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bKeepActorForwardToPlaceSnapLocation;            // 0x0085(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USnapAnimationComputation*              m_NextStep;                                        // 0x0088(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootSnapComputation")
	}
	static class UShootSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootSnapComputation>();
	}
};
DUMPER7_ASSERTS_UShootSnapComputation;

// Class Runtime.AbilityTask_PlaySyncAestheticMontage
// 0x0018 (0x00F8 - 0x00E0)
class UAbilityTask_PlaySyncAestheticMontage final : public UAbilityTask_PlaySyncMontageBase
{
public:
	class UAnimMontage*                           m_FollowerMontage;                                 // 0x00E0(0x0008)(Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bFollowerMirror;                                 // 0x00E8(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_NewSlotTrack;                                    // 0x00EC(0x0008)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_PlaySyncAestheticMontage* BPF_PlayAbilitySyncAestheticMontage(class UGameplayAbility* _owningAbility, class UAnimMontage* _followerMontage, bool _bFollowerMirror, float _fPlayMontageAtWorldTime, float _fEndMontageAtWorldTime, class FName _newSlotTrack, float _fBlendInDuration, float _fLongBlendOutDuration);
	static class UAbilityTask_PlaySyncAestheticMontage* BPF_PlaySyncAestheticMontage(class UGameplayAbility* _owningAbility, class UAnimMontage* _masterMontage, bool _bMasterMirror, class UAnimMontage* _followerMontage, bool _bFollowerMirror, float _fPlayMontageAtWorldTime, float _fEndMontageAtWorldTime, class FName _newSlotTrack, float _fBlendInDuration, float _fLongBlendOutDuration);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_PlaySyncAestheticMontage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_PlaySyncAestheticMontage")
	}
	static class UAbilityTask_PlaySyncAestheticMontage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_PlaySyncAestheticMontage>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_PlaySyncAestheticMontage;

// Class Runtime.RuntimeAnimationMetadata
// 0x0028 (0x03E0 - 0x03B8)
class URuntimeAnimationMetadata : public UPlayMontageAnimationMetadata
{
public:
	TSoftClassPtr<class UClass>                   m_BaseCharacter;                                   // 0x03B8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeAnimationMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeAnimationMetadata")
	}
	static class URuntimeAnimationMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeAnimationMetadata>();
	}
};
DUMPER7_ASSERTS_URuntimeAnimationMetadata;

// Class Runtime.BallCaptureCondition
// 0x0038 (0x0060 - 0x0028)
class UBallCaptureCondition final : public UObject
{
public:
	struct FAnimSequencePickerInstance            m_MontagePicker;                                   // 0x0028(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	bool BPF_PredictCapture(const class ARuntimeCharacter* _character, class ABall* _ball, struct FGameplayAbilityTargetDataHandle* _outResult) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallCaptureCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallCaptureCondition")
	}
	static class UBallCaptureCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallCaptureCondition>();
	}
};
DUMPER7_ASSERTS_UBallCaptureCondition;

// Class Runtime.AbilityTask_PredictBallCapture
// 0x0060 (0x00F8 - 0x0098)
class UAbilityTask_PredictBallCapture final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& _result)> OnCapturePredicted; // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A8[0x50];                                      // 0x00A8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_PredictBallCapture* BPF_PredictBallCapture(class UGameplayAbility* _owningAbility, const struct FGameplayTagQuery& _tagCondition, TSubclassOf<class UBallCaptureCondition> _condition);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_PredictBallCapture")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_PredictBallCapture")
	}
	static class UAbilityTask_PredictBallCapture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_PredictBallCapture>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_PredictBallCapture;

// Class Runtime.ShootOrientationShootPrepCondition
// 0x0008 (0x0080 - 0x0078)
class UShootOrientationShootPrepCondition final : public UTargetDataCondition
{
public:
	ESCCardinalPoints                             m_eCardinalPoint;                                  // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseVelocityAsRefDir;                            // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootOrientationShootPrepCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootOrientationShootPrepCondition")
	}
	static class UShootOrientationShootPrepCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootOrientationShootPrepCondition>();
	}
};
DUMPER7_ASSERTS_UShootOrientationShootPrepCondition;

// Class Runtime.GoalScopedBinder
// 0x0000 (0x00F8 - 0x00F8)
class UGoalScopedBinder : public UGameStateScopedEventBinder
{
public:
	void OnGoalRegistered(class AGoal* _goal);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GoalScopedBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GoalScopedBinder")
	}
	static class UGoalScopedBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoalScopedBinder>();
	}
};
DUMPER7_ASSERTS_UGoalScopedBinder;

// Class Runtime.GoalCrossbarHitBinder
// 0x0000 (0x00F8 - 0x00F8)
class UGoalCrossbarHitBinder final : public UGoalScopedBinder
{
public:
	void OnGoalCrossbarHit(class AGoal* _goal, uint8 _uiTeam);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GoalCrossbarHitBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GoalCrossbarHitBinder")
	}
	static class UGoalCrossbarHitBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoalCrossbarHitBinder>();
	}
};
DUMPER7_ASSERTS_UGoalCrossbarHitBinder;

// Class Runtime.AbilityTask_BallCapture
// 0x0050 (0x00E8 - 0x0098)
class UAbilityTask_BallCapture final : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x50];                                      // 0x0098(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_BallCapture* BPF_CaptureBall(class UGameplayAbility* _owningAbility, TSubclassOf<class UBallCaptureCondition> _condition);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_BallCapture")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_BallCapture")
	}
	static class UAbilityTask_BallCapture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_BallCapture>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_BallCapture;

// Class Runtime.AbilityTask_TagsPerMovementMode
// 0x0060 (0x00F8 - 0x0098)
class UAbilityTask_TagsPerMovementMode final : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x10];                                      // 0x0098(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EMovementMode, TSubclassOf<class UTagAvailabilityLayerContainer>> m_TagsPerMovementMode;    // 0x00A8(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static class UAbilityTask_TagsPerMovementMode* BPF_TagsPerMovementMode(class UGameplayAbility* _owningAbility, const TMap<EMovementMode, TSubclassOf<class UTagAvailabilityLayerContainer>>& _tagsPerMovementMode);

	void OnMovementModeChanged(class ACharacter* _inCharacter, EMovementMode _ePrevMovementMode, uint8 _uiPreviousCustomMode);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_TagsPerMovementMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_TagsPerMovementMode")
	}
	static class UAbilityTask_TagsPerMovementMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_TagsPerMovementMode>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_TagsPerMovementMode;

// Class Runtime.CustomizationPartParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationPartParser : public UCharacterCustomizationParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationPartParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationPartParser")
	}
	static class UCustomizationPartParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationPartParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationPartParser;

// Class Runtime.CustomizationParameterParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationParameterParser : public UCustomizationPartParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationParameterParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationParameterParser")
	}
	static class UCustomizationParameterParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationParameterParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationParameterParser;

// Class Runtime.CustomizationTextureParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationTextureParser final : public UCustomizationParameterParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationTextureParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationTextureParser")
	}
	static class UCustomizationTextureParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationTextureParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationTextureParser;

// Class Runtime.AbilityTask_WaitForBoolean
// 0x0020 (0x00B8 - 0x0098)
class UAbilityTask_WaitForBoolean final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void()>              OnConditionTrue;                                   // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x10];                                      // 0x00A8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_WaitForBoolean* BPF_WaitForBoolean(class UGameplayAbility* _owningAbility, bool& _bConditionToCheck, bool _bExecuteImmediatlyIfTrue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_WaitForBoolean")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_WaitForBoolean")
	}
	static class UAbilityTask_WaitForBoolean* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_WaitForBoolean>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_WaitForBoolean;

// Class Runtime.AbilityTask_WaitForComponentOverlap
// 0x0018 (0x00B0 - 0x0098)
class UAbilityTask_WaitForComponentOverlap final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(class AActor* HitActor)> OnOverlap;                                // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_WaitForComponentOverlap* BPF_WaitForOverlapOnComponent(class UGameplayAbility* _owningAbility, class UPrimitiveComponent* _component);

	void OnHitCallback(class UPrimitiveComponent* _overlappedComponent, class AActor* _otherActor, class UPrimitiveComponent* _otherComp, int32 _iOtherBodyIndex, bool _bFromSweep, const struct FHitResult& _sweepResult);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_WaitForComponentOverlap")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_WaitForComponentOverlap")
	}
	static class UAbilityTask_WaitForComponentOverlap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_WaitForComponentOverlap>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_WaitForComponentOverlap;

// Class Runtime.LockerRoomPrematchStateViewModel
// 0x0138 (0x01A8 - 0x0070)
class ULockerRoomPrematchStateViewModel final : public USCViewModel
{
public:
	struct FColorPalette                          m_LocalPlayerHomePalette;                          // 0x0070(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColorPalette                          m_LocalPlayerAwayPalette;                          // 0x0088(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColorPalette                          m_LocalPlayerTeamCaptainPalette;                   // 0x00A0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColorPalette                          m_SquadCaptainPalette;                             // 0x00B8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETeamColorKitType                             m_eTeamColorSelectedKit;                           // 0x00D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColorPalette                          m_OpponentColorPalette;                            // 0x00D8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColorPalette                          m_MatchHomeColorPalette;                           // 0x00F0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColorPalette                          m_MatchAwayColorPalette;                           // 0x0108(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCustomizationARDataAsset> m_TeamAr;                                        // 0x0120(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCustomizationARDataAsset> m_OpponentAr;                                    // 0x0148(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USCMapCustomizationDataAsset> m_Stadium;                                    // 0x0170(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_ConnectedPlayers;                                // 0x0198(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_ExpectedPlayers;                                 // 0x019C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bShowPrematchTeamDisplay;                        // 0x01A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FColorPalette BPF_GetSelectedPalette() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LockerRoomPrematchStateViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LockerRoomPrematchStateViewModel")
	}
	static class ULockerRoomPrematchStateViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULockerRoomPrematchStateViewModel>();
	}
};
DUMPER7_ASSERTS_ULockerRoomPrematchStateViewModel;

// Class Runtime.AbilityTask_WaitForCondition
// 0x0028 (0x00C0 - 0x0098)
class UAbilityTask_WaitForCondition final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void()>              OnConditionTrue;                                   // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x18];                                      // 0x00A8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_WaitForCondition* BPF_WaitForCondition(class UGameplayAbility* _owningAbility, TDelegate<void()> _conditionToCheck, bool _bExecuteImmediatlyIfTrue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_WaitForCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_WaitForCondition")
	}
	static class UAbilityTask_WaitForCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_WaitForCondition>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_WaitForCondition;

// Class Runtime.AbilityTask_WaitTagContainerAdded
// 0x0058 (0x00F0 - 0x0098)
class UAbilityTask_WaitTagContainerAdded final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void()>              Added;                                             // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x48];                                      // 0x00A8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_WaitTagContainerAdded* BPF_GT_WaitGameplayTagContainerAdded(TScriptInterface<class IGameplayTaskOwnerInterface> _taskOwner, const struct FGameplayTagContainer& _tagContainer);
	static class UAbilityTask_WaitTagContainerAdded* BPF_WaitGameplayTagContainerAdded(class UGameplayAbility* _owningAbility, const struct FGameplayTagContainer& _tagContainer);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_WaitTagContainerAdded")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_WaitTagContainerAdded")
	}
	static class UAbilityTask_WaitTagContainerAdded* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_WaitTagContainerAdded>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_WaitTagContainerAdded;

// Class Runtime.CustomizationGlobalFilterParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationGlobalFilterParser final : public UCharacterCustomizationParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationGlobalFilterParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationGlobalFilterParser")
	}
	static class UCustomizationGlobalFilterParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationGlobalFilterParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationGlobalFilterParser;

// Class Runtime.ActionCommand
// 0x0000 (0x0028 - 0x0028)
class UActionCommand final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActionCommand")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActionCommand")
	}
	static class UActionCommand* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionCommand>();
	}
};
DUMPER7_ASSERTS_UActionCommand;

// Class Runtime.ActionCommandsComponent
// 0x0028 (0x00E0 - 0x00B8)
class UActionCommandsComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void()>              ActionCompletedDelegate;                           // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UActionCommand*                         m_CurrentAction;                                   // 0x00C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAbilitySpecHandle>     m_AbilitiesSpecHandle;                             // 0x00D0(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActionCommandsComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActionCommandsComponent")
	}
	static class UActionCommandsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionCommandsComponent>();
	}
};
DUMPER7_ASSERTS_UActionCommandsComponent;

// Class Runtime.CustomizationMeshParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationMeshParser final : public UCustomizationPartParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationMeshParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationMeshParser")
	}
	static class UCustomizationMeshParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationMeshParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationMeshParser;

// Class Runtime.ActionCommandsManager
// 0x0038 (0x02E8 - 0x02B0)
class AActionCommandsManager final : public AActor
{
public:
	uint8                                         Pad_2B0[0x8];                                      // 0x02B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActionCommandsStep*>            m_Steps;                                           // 0x02B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class ARuntimeCharacter>          m_AIClass;                                         // 0x02C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ARuntimeCharacter*                      m_AI;                                              // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         m_uiAITeam;                                        // 0x02D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActionCommandsComponent*               m_ActionCommandsComp;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UActionCommand* BPE_GetMoveToAction(const struct FVector& _vector, ESCCharacterSpeedState _aiSpeed);
	void BPF_RestartBehavior();
	void BPF_StartBehavior();
	void OnActionSucceded();
	void UpdateHelpers();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActionCommandsManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActionCommandsManager")
	}
	static class AActionCommandsManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AActionCommandsManager>();
	}
};
DUMPER7_ASSERTS_AActionCommandsManager;

// Class Runtime.ActionCommandsStep
// 0x0028 (0x02D8 - 0x02B0)
class AActionCommandsStep final : public AActor
{
public:
	TArray<struct FActionCommandDatasourceInstance> m_ActionsData;                                   // 0x02B0(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UActionCommand*>                 m_Actions;                                         // 0x02C0(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	ESCCharacterSpeedState                        m_DefaultAISpeed;                                  // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_UpdateStepHelpers();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActionCommandsStep")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActionCommandsStep")
	}
	static class AActionCommandsStep* GetDefaultObj()
	{
		return GetDefaultObjImpl<AActionCommandsStep>();
	}
};
DUMPER7_ASSERTS_AActionCommandsStep;

// Class Runtime.RuntimeLevelSequenceActor
// 0x0070 (0x05D0 - 0x0560)
class ARuntimeLevelSequenceActor : public ASCLevelSequenceActor
{
public:
	bool                                          m_bReleaseBalls;                                   // 0x0558(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_559[0x3];                                      // 0x0559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCMovieSceneObjectBindingName         m_ShooterBinding;                                  // 0x055C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_ShootTypeTagContainer;                           // 0x0568(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FShootForceComputationInstance         m_OnActorUnboundForceComputation;                  // 0x0588(0x0010)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FShootDirectionComputationInstance     m_OnActorUnboundDirectionComputation;              // 0x0598(0x0010)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A8[0x8];                                      // 0x05A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkStateValue*                          m_AkStateValueOnStarting;                          // 0x05B0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkStateValue*                          m_AkStateValueOnFinished;                          // 0x05B8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            m_PlayRateCurveFloat;                              // 0x05C0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bEnableNameTag;                                  // 0x05C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLocalCharacterCustomizationChange(class UCharacterCustomizationComponent* _characterCustomizationComponent, bool _bWasCharacterGenerated);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeLevelSequenceActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeLevelSequenceActor")
	}
	static class ARuntimeLevelSequenceActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeLevelSequenceActor>();
	}
};
DUMPER7_ASSERTS_ARuntimeLevelSequenceActor;

// Class Runtime.LockerPrematchLevelSequenceActor
// 0x0010 (0x05E0 - 0x05D0)
class ALockerPrematchLevelSequenceActor final : public ARuntimeLevelSequenceActor
{
public:
	uint8                                         m_uiTeam;                                          // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5D1[0xF];                                      // 0x05D1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LockerPrematchLevelSequenceActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LockerPrematchLevelSequenceActor")
	}
	static class ALockerPrematchLevelSequenceActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALockerPrematchLevelSequenceActor>();
	}
};
DUMPER7_ASSERTS_ALockerPrematchLevelSequenceActor;

// Class Runtime.ActionDirectionComputation
// 0x0098 (0x00C0 - 0x0028)
class UActionDirectionComputation final : public UObject
{
public:
	float                                         m_fValue;                                          // 0x0028(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventBinderInstance                   m_PossessionChangedBinder;                         // 0x0030(0x0038)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FEventBinderInstance                   m_OnSprintBinder;                                  // 0x0068(0x0038)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UEventBinder*                           m_PossessionChangedBinderInstance;                 // 0x00A0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEventBinder*                           m_OnSprintBinderInstance;                          // 0x00A8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x10];                                      // 0x00B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_Deinitialize();
	void BPE_Initialize();
	void BPE_OnPossessionChanged(const struct FGameplayAbilityTargetDataHandle& _targetData);
	void BPE_OnSprint(const struct FGameplayAbilityTargetDataHandle& _targetData);
	void BPE_Tick(float _fDt);

	float BPF_GetValue() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActionDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActionDirectionComputation")
	}
	static class UActionDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UActionDirectionComputation;

// Class Runtime.FActiveGameplayEffectHandleWrapper
// 0x0008 (0x0030 - 0x0028)
class UFActiveGameplayEffectHandleWrapper final : public UObject
{
public:
	struct FActiveGameplayEffectHandle            m_Handle;                                          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FActiveGameplayEffectHandleWrapper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FActiveGameplayEffectHandleWrapper")
	}
	static class UFActiveGameplayEffectHandleWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFActiveGameplayEffectHandleWrapper>();
	}
};
DUMPER7_ASSERTS_UFActiveGameplayEffectHandleWrapper;

// Class Runtime.MatchEffectEmitterComponent
// 0x0008 (0x00C0 - 0x00B8)
class UMatchEffectEmitterComponent : public UActorComponent
{
public:
	int32                                         m_iTeam;                                           // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BPF_GetTeam() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchEffectEmitterComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchEffectEmitterComponent")
	}
	static class UMatchEffectEmitterComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchEffectEmitterComponent>();
	}
};
DUMPER7_ASSERTS_UMatchEffectEmitterComponent;

// Class Runtime.MatchEffectSFXEmitterComponent
// 0x0008 (0x00C8 - 0x00C0)
class UMatchEffectSFXEmitterComponent final : public UMatchEffectEmitterComponent
{
public:
	TWeakObjectPtr<class UAkComponent>            m_AkComponent;                                     // 0x00C0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchEffectSFXEmitterComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchEffectSFXEmitterComponent")
	}
	static class UMatchEffectSFXEmitterComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchEffectSFXEmitterComponent>();
	}
};
DUMPER7_ASSERTS_UMatchEffectSFXEmitterComponent;

// Class Runtime.AnimNotifyState_ScaleGravity
// 0x0008 (0x0038 - 0x0030)
class UAnimNotifyState_ScaleGravity final : public UAnimNotifyState
{
public:
	float                                         m_fGravity;                                        // 0x0030(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotifyState_ScaleGravity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotifyState_ScaleGravity")
	}
	static class UAnimNotifyState_ScaleGravity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_ScaleGravity>();
	}
};
DUMPER7_ASSERTS_UAnimNotifyState_ScaleGravity;

// Class Runtime.AnimNotifyState_ShootMotionWarping
// 0x0008 (0x0040 - 0x0038)
class UAnimNotifyState_ShootMotionWarping : public UAnimNotifyState_MotionWarping
{
public:
	struct FFloatInterval                         m_HorizontalTolerance;                             // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotifyState_ShootMotionWarping")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotifyState_ShootMotionWarping")
	}
	static class UAnimNotifyState_ShootMotionWarping* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_ShootMotionWarping>();
	}
};
DUMPER7_ASSERTS_UAnimNotifyState_ShootMotionWarping;

// Class Runtime.MatchCountdownStartBinder
// 0x0000 (0x00F8 - 0x00F8)
class UMatchCountdownStartBinder final : public UGameStateScopedEventBinder
{
public:
	void OnMatchCountdownStart(class ARuntimeMatchGameState* _matchGameState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchCountdownStartBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchCountdownStartBinder")
	}
	static class UMatchCountdownStartBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchCountdownStartBinder>();
	}
};
DUMPER7_ASSERTS_UMatchCountdownStartBinder;

// Class Runtime.FreezeNotify_Shoot
// 0x0000 (0x0040 - 0x0040)
class UFreezeNotify_Shoot : public UFreezeFrameMontageNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FreezeNotify_Shoot")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FreezeNotify_Shoot")
	}
	static class UFreezeNotify_Shoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFreezeNotify_Shoot>();
	}
};
DUMPER7_ASSERTS_UFreezeNotify_Shoot;

// Class Runtime.AnimNotify_Shoot
// 0x0000 (0x0088 - 0x0088)
class UAnimNotify_Shoot : public UTimeStretchNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_Shoot")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_Shoot")
	}
	static class UAnimNotify_Shoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_Shoot>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_Shoot;

// Class Runtime.IsBallOwnerActorCondition
// 0x0008 (0x0030 - 0x0028)
class UIsBallOwnerActorCondition final : public UBaseActorTargetCondition
{
public:
	bool                                          m_bHandleNoOwnership;                              // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IsBallOwnerActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IsBallOwnerActorCondition")
	}
	static class UIsBallOwnerActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIsBallOwnerActorCondition>();
	}
};
DUMPER7_ASSERTS_UIsBallOwnerActorCondition;

// Class Runtime.Ball
// 0x0110 (0x03C0 - 0x02B0)
class alignas(0x10) ABall : public AActor
{
public:
	uint8                                         Pad_2B0[0xB8];                                     // 0x02B0(0x00B8)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bHapticEnabledOnOwnershipGained;                 // 0x0368(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBallRollbackComponent*                 m_RollbackComponent;                               // 0x0370(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBallPhysicComponent*                   m_BallPhysicComponent;                             // 0x0378(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBallPlayersInteractionComponent*       m_BallPlayerInteractionComponent;                  // 0x0380(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   m_Mesh;                                            // 0x0388(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBallAbilitySystemComponent*            m_AbilitySystemComponent;                          // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bOverrideBallRadius;                             // 0x0398(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fBallRadiusOverride;                             // 0x039C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fCurrentBallRadius;                              // 0x03A0(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A4[0x1C];                                     // 0x03A4(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_ResetState(bool _bApplyPhysics);
	void BPF_ResetStateAtLocation(const struct FVector& _vLocation, bool _bApplyPhysics);
	void OnResetPreviousOwner();

	float BPF_GetBallRadius() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Ball")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Ball")
	}
	static class ABall* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABall>();
	}
};
DUMPER7_ASSERTS_ABall;

// Class Runtime.BallAbilitySystemComponent
// 0x0000 (0x1A40 - 0x1A40)
class UBallAbilitySystemComponent final : public USCAbilitySystemComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallAbilitySystemComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallAbilitySystemComponent")
	}
	static class UBallAbilitySystemComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallAbilitySystemComponent>();
	}
};
DUMPER7_ASSERTS_UBallAbilitySystemComponent;

// Class Runtime.MatchEffectReaction
// 0x0088 (0x00B0 - 0x0028)
class UMatchEffectReaction final : public UObject
{
public:
	float                                         m_fCooldownDuration;                               // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEventBinderInstance>           m_Binders;                                         // 0x0030(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FMatchEffectActionInstance>     m_ActionInstances;                                 // 0x0040(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x30];                                      // 0x0050(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UEventBinder*>                   m_BinderInstances;                                 // 0x0080(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UMatchEffectAction*>             m_Actions;                                         // 0x0090(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchEffectReaction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchEffectReaction")
	}
	static class UMatchEffectReaction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchEffectReaction>();
	}
};
DUMPER7_ASSERTS_UMatchEffectReaction;

// Class Runtime.BallAttributeSet
// 0x0078 (0x0100 - 0x0088)
class UBallAttributeSet final : public USCAttributeSet
{
public:
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttributeData                 ParallelBounciness;                                // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 PerpendicularBounciness;                           // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MagnusBounciness;                                  // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Friction;                                          // 0x00C0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 DragForce;                                         // 0x00D0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 Mass;                                              // 0x00E0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxSpeed;                                          // 0x00F0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

public:
	void OnRep_DragForce(const struct FGameplayAttributeData& _oldDragForce);
	void OnRep_Friction(const struct FGameplayAttributeData& _oldFriction);
	void OnRep_MagnusBounciness(const struct FGameplayAttributeData& _oldMagnusBounciness);
	void OnRep_Mass(const struct FGameplayAttributeData& _oldMass);
	void OnRep_MaxSpeed(const struct FGameplayAttributeData& _oldMaxSpeed);
	void OnRep_ParallelBounciness(const struct FGameplayAttributeData& _oldParallelBounciness);
	void OnRep_PerpendicularBounciness(const struct FGameplayAttributeData& _oldPerpendicularBounciness);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallAttributeSet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallAttributeSet")
	}
	static class UBallAttributeSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallAttributeSet>();
	}
};
DUMPER7_ASSERTS_UBallAttributeSet;

// Class Runtime.BallScopedBinder
// 0x0010 (0x0108 - 0x00F8)
class UBallScopedBinder : public UGameStateScopedEventBinder
{
public:
	uint8                                         Pad_F8[0x10];                                      // 0x00F8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnBallRegistered(class ABall* _ball);
	void OnBallRegistered(class ABall* _ball);

	class ABall* BPF_GetBall(int32 _iIndex) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallScopedBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallScopedBinder")
	}
	static class UBallScopedBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallScopedBinder>();
	}
};
DUMPER7_ASSERTS_UBallScopedBinder;

// Class Runtime.MatchViewModel
// 0x0088 (0x00F8 - 0x0070)
class UMatchViewModel : public USCViewModel
{
public:
	bool                                          m_bWarnAfk;                                        // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iLocalPlayerIndex;                               // 0x0074(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iLocalPlayerTeam;                                // 0x0078(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iSquadCaptainIndex;                              // 0x007C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class USCInputAction*, class FText>      m_FinisherPerInput;                                // 0x0080(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	int32                                         m_iHomeCaptainIndex;                               // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iAwayCaptainIndex;                               // 0x00D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMatchPlayerViewModel*>          m_Players;                                         // 0x00D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ARuntimeMatchGameState>  m_GameState;                                       // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x8];                                       // 0x00F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCaptainsSet(class ARuntimeMatchGameState* _gameState);
	void OnLocalCharacterGenerated(class UCharacterCustomizationComponent* _characterCustomizationComponent, bool _bWasCharacterGenerated);
	void OnMVPSet(class ARuntimePlayerState* _playerState);
	void OnPlayerAdded(class APlayerState* _player);
	void OnPlayerInitialReplication(class ASCPlayerState* _playerState);
	void OnPlayerPawnSet(class APlayerState* _player, class APawn* _newPawn, class APawn* _oldPawn);
	void OnPlayerProfileCustoSet(class ARuntimePlayerState* _playerState);
	void OnPlayerRemoved(class APlayerState* _player);
	void OnPlayerSanitizedNameChanged(class ARuntimePlayerState* _playerState);
	void OnPlayerTeamChanged(class ARuntimePlayerState* _playerState, uint8 _uiNewTeam, int32 _iNumberInTeam);
	void OnPlayerUniqueIdReplicated(class ASCPlayerState* _playerState);

	TArray<class UMatchPlayerViewModel*> BPF_GetAwayTeam() const;
	TArray<class UMatchPlayerViewModel*> BPF_GetHomeTeam() const;
	TArray<class UMatchPlayerViewModel*> BPF_GetLocalTeam() const;
	TArray<class UMatchPlayerViewModel*> BPF_GetOpponentTeam() const;
	const class UMatchPlayerViewModel* BPF_GetPlayerViewModelFromPlayerState(const class ARuntimePlayerState* _runtimePlayerState) const;
	bool BPF_IsCaptain() const;
	bool BPF_IsInSquad() const;
	bool BPF_IsLocalPlayerInHomeTeam() const;
	bool BPF_IsSquadLeader() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchViewModel")
	}
	static class UMatchViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchViewModel>();
	}
};
DUMPER7_ASSERTS_UMatchViewModel;

// Class Runtime.BallEngagedBinder
// 0x0008 (0x0110 - 0x0108)
class UBallEngagedBinder final : public UBallScopedBinder
{
public:
	struct FGameplayTag                           m_FeedLogPlayerEngageTag;                          // 0x0108(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnBallEngaged(class ARuntimePlayerState* _playerState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallEngagedBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallEngagedBinder")
	}
	static class UBallEngagedBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallEngagedBinder>();
	}
};
DUMPER7_ASSERTS_UBallEngagedBinder;

// Class Runtime.BallShootInstigatorReactionTarget
// 0x0000 (0x0028 - 0x0028)
class UBallShootInstigatorReactionTarget final : public UHitReactionTarget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallShootInstigatorReactionTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallShootInstigatorReactionTarget")
	}
	static class UBallShootInstigatorReactionTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallShootInstigatorReactionTarget>();
	}
};
DUMPER7_ASSERTS_UBallShootInstigatorReactionTarget;

// Class Runtime.MatchingBoneDiveAnimWeightEvaluation
// 0x00B0 (0x00E0 - 0x0030)
class UMatchingBoneDiveAnimWeightEvaluation : public UTargetWeightEvaluation
{
public:
	bool                                          m_bVeryVerboseVlog;                                // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDebugDisplayDuration;                           // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_BoneName;                                        // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fDefaultAnimRatio;                               // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTimeOffset;                                     // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETimingEvaluationMethod                       m_eTimingEvaluationMethod;                         // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fDefaultPredictionDuration;                      // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fPredictionInterval;                             // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIgnoreInstigatorYawInComputations;              // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_55[0xB];                                       // 0x0055(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_InstigatorRefTransformOffset;                    // 0x0060(0x0060)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWeightOperator                               m_eBitMaskScoreOperator;                           // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWeightOperator                               m_eRowScoreOperator;                               // 0x00C1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bResultAsRatio;                                  // 0x00C2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMatchingBoneEvaluationParams>  m_ScoresParams;                                    // 0x00C8(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool IsMatchingSectionNotifyState(const class USection_NotifyState* _notifyState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchingBoneDiveAnimWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchingBoneDiveAnimWeightEvaluation")
	}
	static class UMatchingBoneDiveAnimWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchingBoneDiveAnimWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UMatchingBoneDiveAnimWeightEvaluation;

// Class Runtime.HurtBallOwnerHitReactionTarget
// 0x0008 (0x0030 - 0x0028)
class UHurtBallOwnerHitReactionTarget final : public UHurtHitReactionTarget
{
public:
	bool                                          m_bReturnBallIfNoOwner;                            // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HurtBallOwnerHitReactionTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HurtBallOwnerHitReactionTarget")
	}
	static class UHurtBallOwnerHitReactionTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHurtBallOwnerHitReactionTarget>();
	}
};
DUMPER7_ASSERTS_UHurtBallOwnerHitReactionTarget;

// Class Runtime.BallShootHitReaction
// 0x00B8 (0x00E0 - 0x0028)
class UBallShootHitReaction final : public UHitReaction
{
public:
	struct FGameplayTagContainerDataBinding       m_ShootTypeTag;                                    // 0x0028(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FClassDataBinding                      m_ShootData;                                       // 0x0070(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bUseHitBoneLocation;                             // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UTrajectoryStatus>>  m_TrajectoryStatus;                                // 0x00B0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                         m_iPriority;                                       // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bStaticFreezeDuration;                           // 0x00C4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fFreezeDuration;                                 // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_FrameCountTargetDataTag;                         // 0x00CC(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_UntilWorldTimeTargetDataTag;                     // 0x00D4(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_GenerateShootPrepTargetData(const class USCGameplayAbility* _ability, const struct FPendingHit& _hit, class UBallPhysicComponent* _ballPhysicComponent, struct FShootPrepTargetData* _result) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallShootHitReaction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallShootHitReaction")
	}
	static class UBallShootHitReaction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallShootHitReaction>();
	}
};
DUMPER7_ASSERTS_UBallShootHitReaction;

// Class Runtime.MatchEffectAction
// 0x0018 (0x0040 - 0x0028)
class UMatchEffectAction : public UObject
{
public:
	EEmitterSelectionType                         m_eEmitterSelectionType;                           // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ERelationshipType                             m_eRelationEmitterTeamAndLocalPlayerTeam;          // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class AActor>>          m_PickedEmitters;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	void BPE_DoProcess(const TArray<TSoftObjectPtr<class UMatchEffectEmitterComponent>>& _emitters) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchEffectAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchEffectAction")
	}
	static class UMatchEffectAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchEffectAction>();
	}
};
DUMPER7_ASSERTS_UMatchEffectAction;

// Class Runtime.MatchEffectCrowdIntensityAction
// 0x0008 (0x0048 - 0x0040)
class UMatchEffectCrowdIntensityAction final : public UMatchEffectAction
{
public:
	ECrowdIntensityActionType                     m_eActionType;                                     // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fIntensityValue;                                 // 0x0044(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchEffectCrowdIntensityAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchEffectCrowdIntensityAction")
	}
	static class UMatchEffectCrowdIntensityAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchEffectCrowdIntensityAction>();
	}
};
DUMPER7_ASSERTS_UMatchEffectCrowdIntensityAction;

// Class Runtime.BallCaptureHitReaction
// 0x0000 (0x0028 - 0x0028)
class UBallCaptureHitReaction final : public UHitReaction
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallCaptureHitReaction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallCaptureHitReaction")
	}
	static class UBallCaptureHitReaction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallCaptureHitReaction>();
	}
};
DUMPER7_ASSERTS_UBallCaptureHitReaction;

// Class Runtime.BallStatusTargetDataCondition
// 0x0048 (0x00C0 - 0x0078)
class UBallStatusTargetDataCondition final : public UTargetDataCondition
{
public:
	struct FGameplayTagQuery                      m_Query;                                           // 0x0078(0x0048)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallStatusTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallStatusTargetDataCondition")
	}
	static class UBallStatusTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallStatusTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UBallStatusTargetDataCondition;

// Class Runtime.BallInteractionBinder
// 0x0008 (0x0110 - 0x0108)
class UBallInteractionBinder : public UBallScopedBinder
{
public:
	uint32                                        m_uiBallInteractionType;                           // 0x0108(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EBallInteractionPlayerInvolvedType            m_ePlayerInvolvedType;                             // 0x010C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnBallInteraction(class UBallPlayersInteractionComponent* _ballPlayersInteraction, EBallInteractionType _eBallInteractionType, bool _bIsSamePreviousOwner);
	void BPE_OnBallReset(class UBallPlayersInteractionComponent* _ballPlayersInteraction);
	void OnBallReset(class UBallPlayersInteractionComponent* _ballPlayerInteraction);
	void OnOwnershipChanged(class UBallPlayersInteractionComponent* _ballPlayersInteraction);
	void OnPreviousOwnerChanged(class UBallPlayersInteractionComponent* _ballPlayersInteraction, EBallInteractionType _eInteractionType, bool _bIsSamePreviousOwner);

	bool BPF_CanTrigger(class UBallPlayersInteractionComponent* _ballPlayersInteraction, const struct FShootParams& _shootParams, EBallInteractionType _eBallInteractionType, const struct FGameplayTagQuery& _newOwnerQuery, const struct FGameplayTagQuery& _shootTypeQuery, bool _bIngoreKickOffCpp, bool _bOnlyOnTeamChanged, const struct FGameplayTagQuery& _PreviousOwnerQuery, const struct FGameplayTagQuery& _PreviousShootTypeQuery, const struct FShootParams& _PreviousShootParams, bool _bIsSamePreviousOwner) const;
	void BPF_GetNewAndPreviousInteracters(class UBallPlayersInteractionComponent* _ballPlayersInteraction, EBallInteractionType _eBallInteractionType, bool _bIsSamePreviousOwner, class ARuntimePlayerState** _outNewInteracter, class ARuntimePlayerState** _outPreviousInteracter) const;
	class ARuntimePlayerState* BPF_GetPreviousInteracter(class UBallPlayersInteractionComponent* _ballPlayersInteraction, EBallInteractionType _eBallInteractionType, int32 _iIndexInteraction) const;
	bool BPF_HasTeamChanged(class UBallPlayersInteractionComponent* _ballPlayersInteraction, EBallInteractionType _eBallInteractionType, bool _bIsSamePreviousOwner) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallInteractionBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallInteractionBinder")
	}
	static class UBallInteractionBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallInteractionBinder>();
	}
};
DUMPER7_ASSERTS_UBallInteractionBinder;

// Class Runtime.MatchTimerStatBehaviour
// 0x0010 (0x0068 - 0x0058)
class UMatchTimerStatBehaviour final : public USCStatBehaviourTimer
{
public:
	ETimeConversionUnit                           m_eUnits;                                          // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_59[0xF];                                       // 0x0059(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchTimerStatBehaviour")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchTimerStatBehaviour")
	}
	static class UMatchTimerStatBehaviour* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchTimerStatBehaviour>();
	}
};
DUMPER7_ASSERTS_UMatchTimerStatBehaviour;

// Class Runtime.BallInterceptionPointTargetDatasource
// 0x0010 (0x0090 - 0x0080)
class UBallInterceptionPointTargetDatasource final : public UTargetDatasource
{
public:
	bool                                          m_bIgnoreBallWithOwner;                            // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fGenerateImmobilePointsMaxDelay;                 // 0x0084(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fGenerateImmobilePointsFrequency;                // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIgnoreServerValidation;                         // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool BPF_FindSingleTarget(const struct FGameplayAbilityTargetDataHandle& _handle, struct FBallInterceptionPointTargetData* _outData);
	static class ABall* BPF_GetBall(const struct FBallInterceptionPointTargetData& _targetData);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallInterceptionPointTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallInterceptionPointTargetDatasource")
	}
	static class UBallInterceptionPointTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallInterceptionPointTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UBallInterceptionPointTargetDatasource;

// Class Runtime.BallPlayersInteractionComponent
// 0x01C0 (0x0278 - 0x00B8)
class UBallPlayersInteractionComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ARuntimePlayerState* _playerState)> BPE_OnBallEngaged;       // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UBallPlayersInteractionComponent* _ballPlayerInteraction)> OnBallReset; // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UBallPlayersInteractionComponent* _ballPlayerInteraction)> OnOwnershipChangedDelegate; // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UBallPlayersInteractionComponent* _ballPlayerInteraction, EBallInteractionType _eInteractionType, bool _bIsSamePreviousOwner)> OnPreviousOwnersChangedDelegate; // 0x00F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UBallPlayersInteractionComponent* _ballPlayerInteraction)> OnNoOwnershipInteractionDelegate; // 0x0100(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UBallPlayersInteractionComponent* _ballPlayerInteraction)> OnNewBallInteractionRequest; // 0x0110(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_BallOwnershipTag;                                // 0x0120(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UPlayerBallOwnership>    m_ServerOwner;                                     // 0x0128(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_130[0x30];                                     // 0x0130(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBallInteractionRequestData            m_BallInteractionPrio;                             // 0x0160(0x0058)(Net, Transient, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_NoOwnershipInteractionTags;                      // 0x01B8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  m_VolleyInteractionTags;                           // 0x01D8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	int32                                         m_iMaxInteractionsNumber;                          // 0x01F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iMaxPreviousOwnersNumber;                        // 0x01FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_200[0x58];                                     // 0x0200(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UHurtboxSolverComponent> m_HurtboxSolver;                                   // 0x0258(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_260[0x18];                                     // 0x0260(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_ClearBallOwnership(class USCAbilitySystemComponent* _predictionOwner);
	void BPF_GetBallOwnership(class UPlayerBallOwnership** _OutOwnerRef, EExecSuccessEnum* _OutExecBranches);
	void MulticastOnBallKickedOff(class ARuntimePlayerState* _kickOffOwner);
	void OnRep_BallInteractionPrio();
	void OnRep_ServerOwner();
	void SwapInteractionRequestToFirst(int32 _iIndex);

	class ABall* BPF_GetBall() const;
	class UPlayerBallOwnership* BPF_GetInteracter(int32 _iIndex) const;
	void BPF_GetInteracters(TArray<class UPlayerBallOwnership*>* _outInteracters) const;
	class ARuntimePlayerState* BPF_GetLastOwnerByTeam(int32 _iTeam) const;
	class UPlayerBallOwnership* BPF_GetPlayerBallOwnership(bool _bIgnorePrediction) const;
	class ARuntimePlayerState* BPF_GetPreviousOwner(int32 _iIndex) const;
	void BPF_GetPreviousOwners(TArray<class ARuntimePlayerState*>* _outPlayerStates) const;
	bool BPF_HasOwner(bool _bIgnorePrediction) const;
	bool BPF_IsFreeToTake() const;
	bool BPF_TryGetBallOwningTeam(uint8* _uiOutOwningTeam) const;
	const TArray<struct FBallInteractionRequestData> GetBallInteractionRequests() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallPlayersInteractionComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallPlayersInteractionComponent")
	}
	static class UBallPlayersInteractionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallPlayersInteractionComponent>();
	}
};
DUMPER7_ASSERTS_UBallPlayersInteractionComponent;

// Class Runtime.GetOffsetedBallInterceptionPointDatasource
// 0x0008 (0x0088 - 0x0080)
class UGetOffsetedBallInterceptionPointDatasource final : public UTargetDatasource
{
public:
	float                                         m_fTimeOffset;                                     // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool BPF_FindSingleTarget(const struct FGameplayAbilityTargetDataHandle& _handle, struct FBallInterceptionPointTargetData* _outData);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GetOffsetedBallInterceptionPointDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GetOffsetedBallInterceptionPointDatasource")
	}
	static class UGetOffsetedBallInterceptionPointDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGetOffsetedBallInterceptionPointDatasource>();
	}
};
DUMPER7_ASSERTS_UGetOffsetedBallInterceptionPointDatasource;

// Class Runtime.PingBehavior
// 0x0000 (0x0028 - 0x0028)
class UPingBehavior : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PingBehavior")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PingBehavior")
	}
	static class UPingBehavior* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPingBehavior>();
	}
};
DUMPER7_ASSERTS_UPingBehavior;

// Class Runtime.BallInterceptionPointHelpers
// 0x0000 (0x0028 - 0x0028)
class UBallInterceptionPointHelpers final : public UBlueprintFunctionLibrary
{
public:
	static struct FGameplayTagContainer BPF_GetStatus(const class AActor* _actor, const struct FBallInterceptionPointTargetData& _ballInterceptionPointTargetData);
	static bool BPF_IsEmpty(const struct FBallInterceptionPointTargetData& _ballInterceptionPointTargetData);
	static bool BPF_IsImmobile(const struct FBallInterceptionPointTargetData& _ballInterceptionPointTargetData);
	static bool BPF_IsValid(const struct FBallInterceptionPointTargetData& _ballInterceptionPointTargetData);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallInterceptionPointHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallInterceptionPointHelpers")
	}
	static class UBallInterceptionPointHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallInterceptionPointHelpers>();
	}
};
DUMPER7_ASSERTS_UBallInterceptionPointHelpers;

// Class Runtime.BallInterceptionPointTimeSinceShootCondition
// 0x0008 (0x0080 - 0x0078)
class UBallInterceptionPointTimeSinceShootCondition final : public UTargetDataCondition
{
public:
	EOperationType                                m_eOperator;                                       // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bAcceptPointWithoutTime;                         // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fValue;                                          // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallInterceptionPointTimeSinceShootCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallInterceptionPointTimeSinceShootCondition")
	}
	static class UBallInterceptionPointTimeSinceShootCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallInterceptionPointTimeSinceShootCondition>();
	}
};
DUMPER7_ASSERTS_UBallInterceptionPointTimeSinceShootCondition;

// Class Runtime.MoveAlongSplineComponent
// 0x0018 (0x00D0 - 0x00B8)
class UMoveAlongSplineComponent final : public UActorComponent
{
public:
	float                                         m_fSpeed;                                          // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASplineActor*                           m_Path;                                            // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bLoopBack;                                       // 0x00C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetLocationOnPath(float _fDistanceOnPath);
	void SetPath(class ASplineActor* _newPath);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MoveAlongSplineComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MoveAlongSplineComponent")
	}
	static class UMoveAlongSplineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoveAlongSplineComponent>();
	}
};
DUMPER7_ASSERTS_UMoveAlongSplineComponent;

// Class Runtime.BallMaterialUserData
// 0x0000 (0x0028 - 0x0028)
class UBallMaterialUserData final : public UAssetUserData
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallMaterialUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallMaterialUserData")
	}
	static class UBallMaterialUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallMaterialUserData>();
	}
};
DUMPER7_ASSERTS_UBallMaterialUserData;

// Class Runtime.BallSpawnMarker
// 0x0010 (0x02C0 - 0x02B0)
class ABallSpawnMarker final : public AActor
{
public:
	class USceneComponent*                        m_SceneComponent;                                  // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiNbPlayerExpected;                              // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiTeamSide;                                      // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnerType                                  m_eSpawnertype;                                    // 0x02BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallSpawnMarker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallSpawnMarker")
	}
	static class ABallSpawnMarker* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABallSpawnMarker>();
	}
};
DUMPER7_ASSERTS_ABallSpawnMarker;

// Class Runtime.BallOwnedWithIntensityDiffBinder
// 0x0028 (0x0138 - 0x0110)
class UBallOwnedWithIntensityDiffBinder final : public UBallInteractionBinder
{
public:
	struct FSCMathExpressionFloat                 m_IntensityMathExpression;                         // 0x0110(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	EValueSignType                                m_eValueSignType;                                  // 0x0130(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallOwnedWithIntensityDiffBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallOwnedWithIntensityDiffBinder")
	}
	static class UBallOwnedWithIntensityDiffBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallOwnedWithIntensityDiffBinder>();
	}
};
DUMPER7_ASSERTS_UBallOwnedWithIntensityDiffBinder;

// Class Runtime.MatchPartTransitionFlowState
// 0x0000 (0x0590 - 0x0590)
class UMatchPartTransitionFlowState : public URuntimeGameFlowState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchPartTransitionFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchPartTransitionFlowState")
	}
	static class UMatchPartTransitionFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchPartTransitionFlowState>();
	}
};
DUMPER7_ASSERTS_UMatchPartTransitionFlowState;

// Class Runtime.BallPhysicComponent
// 0x07F0 (0x08A8 - 0x00B8)
class UBallPhysicComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x28];                                      // 0x00B8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class ABall* _ball, const struct FShootParams& _shootParams)> OnTrajectoryUpdated; // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FQuat& _rotation)> OnBallRotation;                    // 0x00F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABall* _ball, const struct FBounceData& _bounceData, float _fSpeedAtBounce)> OnFreezeOrCustomPartOver; // 0x0100(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABall* _ball, const struct FBounceData& _bounceData, float _fSpeedAtBounce)> OnBounced; // 0x0110(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class ABall* _ball, const struct FShootParams& _shootParams)> OnShoot; // 0x0120(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_130[0x18];                                     // 0x0130(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FShootParams& _shootParams)> OnRejectedShoot;         // 0x0148(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTrajectoryCleared;                               // 0x0158(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_CharacterDetectionCollisionProfile;              // 0x0168(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fAngularSpeedDecreaseOverTime;                   // 0x0170(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      m_AttachedToPlayerShootTagQuery;                   // 0x0178(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_InsideGoalTag;                                   // 0x01C0(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDynamicCollisionPredictTime;                    // 0x01C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCriticalSpeedThreshold;                         // 0x01CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSpeedCompensation;                              // 0x01D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBallPhysicComponentPostPhysicsTickFunction m_PostPhysicsTickFunction;                    // 0x01D8(0x0030)(NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UTrajectoryStatus>>  m_DefaultTrajectoryStatus;                         // 0x0208(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FShootStartPoint                       m_ServerTrajectoryStartingPoint;                   // 0x0218(0x0138)(Net, Transient, RepNotify, NativeAccessSpecifierPublic)
	struct FFloatInterval                         m_AcceptableBallSampleDistance;                    // 0x0350(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            m_ToRollBounceMaxAngleBySpeedCurve;                // 0x0358(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                             m_InteractPhysicalMaterialDataTable;               // 0x0360(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bStartSimulating;                                // 0x0368(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWeightedTrajectoryModifier>    m_TrajectoryModifiers;                             // 0x0370(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	ESimulationStep                               m_eLastSimulationStep;                             // 0x0380(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            m_ApplyShootPredictionEffect;                      // 0x0388(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UPhysicalMaterial*, EBounceHit>    m_AssignMaterialToSurface;                         // 0x0390(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E0[0x4C8];                                    // 0x03E0(0x04C8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_ApplyShoot(const struct FShootParams& _shootParams, const class UGameplayAbility* _instigatorAbility, bool _bAttachedToPlayer);
	float BPF_GetTimeToReachLocation(const struct FVector& _vLocationToReach);
	bool BPF_IsLocationOnFutureTrajectory(const struct FVector& _vLocation, float _fExcludePointBeforeTime, float _fDistanceTolerance);
	bool BPF_IsPointOnFutureTrajectory(const struct FPredictProjectilePathPointData& keypoint, float _fDistanceTolerance);
	void BPF_TryToBroadcastRejectedShootEvent(const struct FShootParams& _shootParamsOverride);
	void OnBallInteractionPrioUpdated();
	void OnBallOwnerChanged(class UBallPlayersInteractionComponent* _ballPlayerInteraction);
	void OnRep_ServerTrajectoryStartingPoint(const struct FShootStartPoint& _prevServerTrajectoryStartingPoint);

	bool BPF_CurrentTrajectoryStartedFromSpecifiedBounce(int32 _iSurfaces) const;
	class ABall* BPF_GetAttachedBall() const;
	const struct FShootParams BPF_GetCurrentShootParams() const;
	bool BPF_GetLastShootParamsFromHistory(struct FShootParams* _shootParams) const;
	float BPF_GetStatusTimeLimit(const struct FGameplayTag& _tag, bool* _bSuccess, bool _bGetShootInstigatorTime) const;
	struct FBallTrajectoryResult BPF_GetTrajectory() const;
	struct FVector BPF_GetVelocity() const;
	bool BPF_HasBallStatus(const struct FGameplayTag& _tag, const bool _bOnShootInstigator) const;
	void BPF_MakeBallInterceptionPointTargetData(float _fTime, struct FBallInterceptionPointTargetData* _result) const;
	void BPF_MakeBallInterceptionPointTargetDataFromCurrentState(float _fTime, struct FBallInterceptionPointTargetData* _result) const;
	struct FPredictProjectilePathPointData BPF_MakeBallPathPointData(float _fTime) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallPhysicComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallPhysicComponent")
	}
	static class UBallPhysicComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallPhysicComponent>();
	}
};
DUMPER7_ASSERTS_UBallPhysicComponent;

// Class Runtime.BallReachableOnTimeTargetDatasource
// 0x0010 (0x0178 - 0x0168)
class UBallReachableOnTimeTargetDatasource final : public UReachableOnTimeTargetDatasource
{
public:
	bool                                          m_bApplyScoreToContext;                            // 0x0168(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDelayScoreMalus;                                // 0x016C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fVelocityScoreMalus;                             // 0x0170(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallReachableOnTimeTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallReachableOnTimeTargetDatasource")
	}
	static class UBallReachableOnTimeTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallReachableOnTimeTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UBallReachableOnTimeTargetDatasource;

// Class Runtime.BallRollbackComponent
// 0x0000 (0x01E8 - 0x01E8)
class UBallRollbackComponent final : public UActorRollbackComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallRollbackComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallRollbackComponent")
	}
	static class UBallRollbackComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallRollbackComponent>();
	}
};
DUMPER7_ASSERTS_UBallRollbackComponent;

// Class Runtime.BallShootTypeActorCondition
// 0x0048 (0x0070 - 0x0028)
class UBallShootTypeActorCondition final : public UBaseActorCondition
{
public:
	struct FGameplayTagQuery                      m_Query;                                           // 0x0028(0x0048)(Edit, BlueprintReadOnly, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallShootTypeActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallShootTypeActorCondition")
	}
	static class UBallShootTypeActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallShootTypeActorCondition>();
	}
};
DUMPER7_ASSERTS_UBallShootTypeActorCondition;

// Class Runtime.BaseTargetWidget
// 0x0010 (0x0C00 - 0x0BF0)
class UBaseTargetWidget : public USCUserWidget
{
public:
	class AActor*                                 m_Target;                                          // 0x0BF0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BF8[0x8];                                      // 0x0BF8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseTargetWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseTargetWidget")
	}
	static class UBaseTargetWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseTargetWidget>();
	}
};
DUMPER7_ASSERTS_UBaseTargetWidget;

// Class Runtime.BodyTypeParser
// 0x0000 (0x0028 - 0x0028)
class UBodyTypeParser final : public UCharacterCustomizationParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BodyTypeParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BodyTypeParser")
	}
	static class UBodyTypeParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBodyTypeParser>();
	}
};
DUMPER7_ASSERTS_UBodyTypeParser;

// Class Runtime.BTDecorator_CheckWantsToSprint
// 0x0028 (0x0090 - 0x0068)
class UBTDecorator_CheckWantsToSprint final : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                 m_ActorToCheck;                                    // 0x0068(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BTDecorator_CheckWantsToSprint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BTDecorator_CheckWantsToSprint")
	}
	static class UBTDecorator_CheckWantsToSprint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTDecorator_CheckWantsToSprint>();
	}
};
DUMPER7_ASSERTS_UBTDecorator_CheckWantsToSprint;

// Class Runtime.CameraComponentThird
// 0x0010 (0x1990 - 0x1980)
class UCameraComponentThird : public USCCameraComponent
{
public:
	class UMaterialParameterCollection*           m_MaterialParameterCollectionCameraDither;         // 0x1980(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_CameraDistanceMPCParameterName;                  // 0x1988(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool BPF_FreezeWithService(bool _bShutdownWhenStickReleased, float _FSCDeadZone);
	bool BPF_UnfreezeWithService();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraComponentThird")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraComponentThird")
	}
	static class UCameraComponentThird* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraComponentThird>();
	}
};
DUMPER7_ASSERTS_UCameraComponentThird;

// Class Runtime.CameraFreezeService
// 0x0010 (0x0058 - 0x0048)
class UCameraFreezeService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraFreezeService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraFreezeService")
	}
	static class UCameraFreezeService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraFreezeService>();
	}
};
DUMPER7_ASSERTS_UCameraFreezeService;

// Class Runtime.CameraLockBallService
// 0x01D0 (0x0218 - 0x0048)
class UCameraLockBallService final : public USCCameraBaseLockService
{
public:
	uint8                                         Pad_48[0x1CC];                                     // 0x0048(0x01CC)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fZeroDampingDistanceArroundCharacter;            // 0x0214(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BPF_OverrideLookAtBallPredictionDelay(float fNewDelay);
	void BPF_StopLookAt();
	int32 BPF_TryStartLookAt(const struct FSCCameraLookAtServiceBehavior& _lookAtBehavior, float _fBallPosPredictionDelay);

	int32 BPF_GetLookAtHandle() const;
	struct FVector2D BPF_GetLookAtScreenSpaceRedirection() const;
	bool BPF_IsSleeping() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraLockBallService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraLockBallService")
	}
	static class UCameraLockBallService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraLockBallService>();
	}
};
DUMPER7_ASSERTS_UCameraLockBallService;

// Class Runtime.CameraNodeServiceRuntimeBase
// 0x0008 (0x0040 - 0x0038)
class UCameraNodeServiceRuntimeBase : public USCCameraNodeBaseService
{
public:
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class AActor* BPF_GetBall() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraNodeServiceRuntimeBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraNodeServiceRuntimeBase")
	}
	static class UCameraNodeServiceRuntimeBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraNodeServiceRuntimeBase>();
	}
};
DUMPER7_ASSERTS_UCameraNodeServiceRuntimeBase;

// Class Runtime.CameraNodeServiceGoalKeeper
// 0x0008 (0x0048 - 0x0040)
class UCameraNodeServiceGoalKeeper final : public UCameraNodeServiceRuntimeBase
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraNodeServiceGoalKeeper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraNodeServiceGoalKeeper")
	}
	static class UCameraNodeServiceGoalKeeper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraNodeServiceGoalKeeper>();
	}
};
DUMPER7_ASSERTS_UCameraNodeServiceGoalKeeper;

// Class Runtime.CameraNodeServiceLockMove
// 0x0020 (0x0060 - 0x0040)
class UCameraNodeServiceLockMove final : public UCameraNodeServiceRuntimeBase
{
public:
	uint8                                         Pad_40[0x20];                                      // 0x0040(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraNodeServiceLockMove")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraNodeServiceLockMove")
	}
	static class UCameraNodeServiceLockMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraNodeServiceLockMove>();
	}
};
DUMPER7_ASSERTS_UCameraNodeServiceLockMove;

// Class Runtime.CameraServiceGoalKeeper
// 0x0060 (0x00A8 - 0x0048)
class UCameraServiceGoalKeeper : public USCCameraService
{
public:
	uint8                                         Pad_48[0x18];                                      // 0x0048(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMinDistanceThreshold;                           // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fMaxDistanceThreshold;                           // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fOutgoingDistanceDamping;                        // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fIncomingDistanceDamping;                        // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  m_ActivationGameplayTagContainer;                  // 0x0070(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_90[0x18];                                      // 0x0090(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class USCAbilitySystemComponent* BPF_GetASC() const;
	class AActor* BPF_GetBall() const;
	double BPF_GetDistanceBasedRatio() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraServiceGoalKeeper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraServiceGoalKeeper")
	}
	static class UCameraServiceGoalKeeper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraServiceGoalKeeper>();
	}
};
DUMPER7_ASSERTS_UCameraServiceGoalKeeper;

// Class Runtime.CelebrationHandlerFlowState
// 0x0080 (0x0610 - 0x0590)
class UCelebrationHandlerFlowState : public URuntimeGameFlowState
{
public:
	class FName                                   m_SkipFinisherName;                                // 0x0590(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCelebrations                          m_CelebrationsGameplayEffects;                     // 0x0598(0x0020)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_5B8[0x58];                                     // 0x05B8(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CelebrationHandlerFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CelebrationHandlerFlowState")
	}
	static class UCelebrationHandlerFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCelebrationHandlerFlowState>();
	}
};
DUMPER7_ASSERTS_UCelebrationHandlerFlowState;

// Class Runtime.NoneParser
// 0x0000 (0x0028 - 0x0028)
class UNoneParser final : public UCharacterCustomizationParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NoneParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NoneParser")
	}
	static class UNoneParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoneParser>();
	}
};
DUMPER7_ASSERTS_UNoneParser;

// Class Runtime.CustomizationCurveIndexParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationCurveIndexParser final : public UCustomizationParameterParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationCurveIndexParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationCurveIndexParser")
	}
	static class UCustomizationCurveIndexParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationCurveIndexParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationCurveIndexParser;

// Class Runtime.CustomizationFloatParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationFloatParser final : public UCustomizationParameterParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationFloatParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationFloatParser")
	}
	static class UCustomizationFloatParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationFloatParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationFloatParser;

// Class Runtime.CustomizationColorParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationColorParser final : public UCustomizationParameterParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationColorParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationColorParser")
	}
	static class UCustomizationColorParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationColorParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationColorParser;

// Class Runtime.CustomizationExtraInfoParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationExtraInfoParser : public UCharacterCustomizationParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationExtraInfoParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationExtraInfoParser")
	}
	static class UCustomizationExtraInfoParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationExtraInfoParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationExtraInfoParser;

// Class Runtime.CustomizationTeamPaletteParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationTeamPaletteParser final : public UCustomizationExtraInfoParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationTeamPaletteParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationTeamPaletteParser")
	}
	static class UCustomizationTeamPaletteParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationTeamPaletteParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationTeamPaletteParser;

// Class Runtime.TrajectoryModifier
// 0x0008 (0x0030 - 0x0028)
class UTrajectoryModifier : public UObject
{
public:
	uint8                                         m_uiTrajectoryStep;                                // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrajectoryModifier")
	}
	static class UTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_UTrajectoryModifier;

// Class Runtime.LocationFollowerTrajectoryModifier
// 0x0018 (0x0048 - 0x0030)
class ULocationFollowerTrajectoryModifier final : public UTrajectoryModifier
{
public:
	class UCurveVector*                           m_LocationCurve;                                   // 0x0030(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFlatShootDirection;                             // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELocationFollowerStretchType                  m_eStretchType;                                    // 0x0039(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fCurveTimeToCalculateSpeed;                      // 0x003C(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDeltaTimeToCalculateSpeed;                      // 0x0040(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fBakedCurveStartSpeed;                           // 0x0044(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LocationFollowerTrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LocationFollowerTrajectoryModifier")
	}
	static class ULocationFollowerTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULocationFollowerTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_ULocationFollowerTrajectoryModifier;

// Class Runtime.CustomizationARParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationARParser final : public UCustomizationExtraInfoParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationARParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationARParser")
	}
	static class UCustomizationARParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationARParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationARParser;

// Class Runtime.CustomizationStadiumParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationStadiumParser final : public UCustomizationExtraInfoParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationStadiumParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationStadiumParser")
	}
	static class UCustomizationStadiumParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationStadiumParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationStadiumParser;

// Class Runtime.CustomizationCreatedPaletteParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationCreatedPaletteParser final : public UCustomizationExtraInfoParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationCreatedPaletteParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationCreatedPaletteParser")
	}
	static class UCustomizationCreatedPaletteParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationCreatedPaletteParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationCreatedPaletteParser;

// Class Runtime.CustomizationVoiceTypeParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationVoiceTypeParser final : public UCustomizationExtraInfoParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationVoiceTypeParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationVoiceTypeParser")
	}
	static class UCustomizationVoiceTypeParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationVoiceTypeParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationVoiceTypeParser;

// Class Runtime.TrajectoryStatusTimedCondition
// 0x0000 (0x0028 - 0x0028)
class UTrajectoryStatusTimedCondition : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrajectoryStatusTimedCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrajectoryStatusTimedCondition")
	}
	static class UTrajectoryStatusTimedCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrajectoryStatusTimedCondition>();
	}
};
DUMPER7_ASSERTS_UTrajectoryStatusTimedCondition;

// Class Runtime.CustomizationVoicePitchParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationVoicePitchParser final : public UCustomizationExtraInfoParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationVoicePitchParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationVoicePitchParser")
	}
	static class UCustomizationVoicePitchParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationVoicePitchParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationVoicePitchParser;

// Class Runtime.CustomizationSwapColorsParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationSwapColorsParser final : public UCustomizationExtraInfoParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationSwapColorsParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationSwapColorsParser")
	}
	static class UCustomizationSwapColorsParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationSwapColorsParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationSwapColorsParser;

// Class Runtime.CustomizationSetParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationSetParser final : public UCustomizationExtraInfoParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationSetParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationSetParser")
	}
	static class UCustomizationSetParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationSetParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationSetParser;

// Class Runtime.CustomizationAccessoriesUsingPaletteParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationAccessoriesUsingPaletteParser final : public UCustomizationExtraInfoParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationAccessoriesUsingPaletteParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationAccessoriesUsingPaletteParser")
	}
	static class UCustomizationAccessoriesUsingPaletteParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationAccessoriesUsingPaletteParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationAccessoriesUsingPaletteParser;

// Class Runtime.TrajectoryStatusDeactivateCondition
// 0x0008 (0x0030 - 0x0028)
class UTrajectoryStatusDeactivateCondition : public UTrajectoryStatusTimedCondition
{
public:
	bool                                          m_bOnlyAffectShootInstigator;                      // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bActiveDuringFreezeFrame;                        // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrajectoryStatusDeactivateCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrajectoryStatusDeactivateCondition")
	}
	static class UTrajectoryStatusDeactivateCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrajectoryStatusDeactivateCondition>();
	}
};
DUMPER7_ASSERTS_UTrajectoryStatusDeactivateCondition;

// Class Runtime.BounceTrajectoryStatusDeactivateCondition
// 0x0008 (0x0038 - 0x0030)
class UBounceTrajectoryStatusDeactivateCondition final : public UTrajectoryStatusDeactivateCondition
{
public:
	bool                                          m_bSpecificSurface;                                // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iSurface;                                        // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BPE_SetSurface(const struct FShootParams& _shootParams, bool* _bSpecificSurface, int32* _iSurface) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BounceTrajectoryStatusDeactivateCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BounceTrajectoryStatusDeactivateCondition")
	}
	static class UBounceTrajectoryStatusDeactivateCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBounceTrajectoryStatusDeactivateCondition>();
	}
};
DUMPER7_ASSERTS_UBounceTrajectoryStatusDeactivateCondition;

// Class Runtime.CustomizationExtraAssetParser
// 0x0000 (0x0028 - 0x0028)
class UCustomizationExtraAssetParser final : public UCharacterCustomizationParser
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationExtraAssetParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationExtraAssetParser")
	}
	static class UCustomizationExtraAssetParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationExtraAssetParser>();
	}
};
DUMPER7_ASSERTS_UCustomizationExtraAssetParser;

// Class Runtime.CharacterFXComponent
// 0x0010 (0x00C8 - 0x00B8)
class UCharacterFXComponent final : public UActorComponent
{
public:
	class FName                                   m_MPCFeetLocationParameterName;                    // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*           m_MPCGenericGameplay;                              // 0x00C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterFXComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterFXComponent")
	}
	static class UCharacterFXComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterFXComponent>();
	}
};
DUMPER7_ASSERTS_UCharacterFXComponent;

// Class Runtime.CharacterGameplayTagWithEffectContextBinder
// 0x0048 (0x01F8 - 0x01B0)
class UCharacterGameplayTagWithEffectContextBinder final : public UCharacterGameplayTagBinder
{
public:
	struct FGameplayTagQuery                      m_GameplayTagsInContextToCheck;                    // 0x01B0(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterGameplayTagWithEffectContextBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterGameplayTagWithEffectContextBinder")
	}
	static class UCharacterGameplayTagWithEffectContextBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterGameplayTagWithEffectContextBinder>();
	}
};
DUMPER7_ASSERTS_UCharacterGameplayTagWithEffectContextBinder;

// Class Runtime.ColorListIndexMapDataAsset
// 0x0060 (0x0090 - 0x0030)
class UColorListIndexMapDataAsset final : public UDataAsset
{
public:
	TMap<struct FLinearColor, int32>              m_ColorToColorListIndex;                           // 0x0030(0x0050)(Edit, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           m_ColorListIndexToName;                            // 0x0080(0x0010)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ColorListIndexMapDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ColorListIndexMapDataAsset")
	}
	static class UColorListIndexMapDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UColorListIndexMapDataAsset>();
	}
};
DUMPER7_ASSERTS_UColorListIndexMapDataAsset;

// Class Runtime.TrajectoryStatus
// 0x0028 (0x0050 - 0x0028)
class UTrajectoryStatus : public UObject
{
public:
	struct FGameplayTag                           m_Status;                                          // 0x0028(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTrajectoryStatusDeactivateConditionInstance> m_DeactivationConditions;            // 0x0030(0x0010)(ZeroConstructor, Deprecated, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTrajectoryStatusTimedConditionInstance> m_TimedConditions;                        // 0x0040(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrajectoryStatus")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrajectoryStatus")
	}
	static class UTrajectoryStatus* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrajectoryStatus>();
	}
};
DUMPER7_ASSERTS_UTrajectoryStatus;

// Class Runtime.ColorPaletteDataAsset
// 0x0018 (0x0098 - 0x0080)
class UColorPaletteDataAsset final : public USCBaseCustomizationDataAsset
{
public:
	struct FColorPalette                          m_Palette;                                         // 0x0080(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ColorPaletteDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ColorPaletteDataAsset")
	}
	static class UColorPaletteDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UColorPaletteDataAsset>();
	}
};
DUMPER7_ASSERTS_UColorPaletteDataAsset;

// Class Runtime.ColorPaletteHelpers
// 0x0000 (0x0028 - 0x0028)
class UColorPaletteHelpers final : public UBlueprintFunctionLibrary
{
public:
	static int32 BPF_FindColorPaletteAssetIndexFromColors(const class UObject* _context, const TArray<class UColorPaletteDataAsset*>& _palettes, const TArray<struct FLinearColor>& _paletteToFind);
	static int32 BPF_FindColorPaletteIndexFromColors(const class UObject* _context, const TArray<struct FColorPalette>& _palettes, const TArray<struct FLinearColor>& _paletteToFind);
	static void BPF_GetPaletteColorArray(const class UObject* _context, const struct FColorPalette& _palette, TArray<struct FLinearColor>* _outColors);
	static void BPF_GetPaletteColors(const class UObject* _context, const struct FColorPalette& _palette, struct FLinearColor* _primaryColor, struct FLinearColor* _secondaryColor, struct FLinearColor* _tertiaryColor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ColorPaletteHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ColorPaletteHelpers")
	}
	static class UColorPaletteHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UColorPaletteHelpers>();
	}
};
DUMPER7_ASSERTS_UColorPaletteHelpers;

// Class Runtime.CorridorFlowState
// 0x0000 (0x0590 - 0x0590)
class UCorridorFlowState final : public URuntimeGameFlowState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CorridorFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CorridorFlowState")
	}
	static class UCorridorFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCorridorFlowState>();
	}
};
DUMPER7_ASSERTS_UCorridorFlowState;

// Class Runtime.CrowdSoundState
// 0x0000 (0x0028 - 0x0028)
class UCrowdSoundState : public UObject
{
public:
	bool BPE_CanEnterState(float _fRawIntensity);
	bool BPE_CanLeaveState(float _fRawIntensity);

	float BPE_ComputeIntensity(float _fComputeRate, float _fRawIntensity, float _fOldMatchIntensity) const;
	class FString BPE_GetComputeDebugDisplay() const;
	class FString BPE_GetEnterDebugDisplay() const;
	class FString BPE_GetLeaveDebugDisplay() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CrowdSoundState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CrowdSoundState")
	}
	static class UCrowdSoundState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrowdSoundState>();
	}
};
DUMPER7_ASSERTS_UCrowdSoundState;

// Class Runtime.DefaultCrowdSoundState
// 0x0008 (0x0030 - 0x0028)
class UDefaultCrowdSoundState final : public UCrowdSoundState
{
public:
	float                                         m_fDecreasePerSecond;                              // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DefaultCrowdSoundState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DefaultCrowdSoundState")
	}
	static class UDefaultCrowdSoundState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDefaultCrowdSoundState>();
	}
};
DUMPER7_ASSERTS_UDefaultCrowdSoundState;

// Class Runtime.PostReactionCrowdSoundState
// 0x0000 (0x0028 - 0x0028)
class UPostReactionCrowdSoundState final : public UCrowdSoundState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PostReactionCrowdSoundState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PostReactionCrowdSoundState")
	}
	static class UPostReactionCrowdSoundState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPostReactionCrowdSoundState>();
	}
};
DUMPER7_ASSERTS_UPostReactionCrowdSoundState;

// Class Runtime.CustomizationARDataAsset
// 0x0070 (0x00F0 - 0x0080)
class UCustomizationARDataAsset : public USCBaseCustomizationDataAsset
{
public:
	struct FGameplayTag                           m_StageARTag;                                      // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UWorld>>          m_Levels;                                          // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ULevelSequence>          m_TransitionSequence;                              // 0x0098(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTextureCube>            m_ReflectionCubemap;                               // 0x00C0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bDynamicShadows;                                 // 0x00E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bSeparateTranslucency;                           // 0x00E9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationARDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationARDataAsset")
	}
	static class UCustomizationARDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationARDataAsset>();
	}
};
DUMPER7_ASSERTS_UCustomizationARDataAsset;

// Class Runtime.CustomizationUICategoryViewModel
// 0x0178 (0x01E8 - 0x0070)
class UCustomizationUICategoryViewModel : public USCViewModel
{
public:
	ECustomizationUICategoryType                  m_eType;                                           // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsBodyType;                                     // 0x0071(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCharacterPartEnumHandler>      m_eCharacterParts;                                 // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class FName                                   m_ParameterName;                                   // 0x0088(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCCharacterPartParameterTypes                m_eParameterType;                                  // 0x0090(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExtraAssetEnumHandler                 m_eExtraAsset;                                     // 0x0098(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExtraInfoEnumHandler                  m_eExtraInfo;                                      // 0x00F8(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_UITag;                                           // 0x0158(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_Filters;                                         // 0x0160(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	bool                                          m_bUseFiltersAsExclusion;                          // 0x0180(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_ParameterBasedOn;                                // 0x0184(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCColorChannel                               m_eColorChannelToMapWith;                          // 0x018C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fCurveDisplayValue;                              // 0x0190(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_Title;                                           // 0x0198(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UCustomizationUICategoryViewModel*> m_SubCategories;                                // 0x01A8(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCustomizationUICategoryViewModel*      m_ParentViewModel;                                 // 0x01B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UShopItemViewModel*>             m_Items;                                           // 0x01C0(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                         m_fCurrentValue;                                   // 0x01D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatInterval                         m_fMinMax;                                         // 0x01D4(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStepBetweenValues;                              // 0x01DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iIndexInParent;                                  // 0x01E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bShouldBeHidden;                                 // 0x01E4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsAvailable;                                    // 0x01E5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1E6[0x2];                                      // 0x01E6(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	const class UCustomizationUICategoryViewModel* BPF_GetChildCategoryFromTag(const struct FGameplayTag& _UITag) const;
	struct FSCCustomizationId BPF_GetCustoId() const;
	TArray<class FText> GetTitles() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationUICategoryViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationUICategoryViewModel")
	}
	static class UCustomizationUICategoryViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationUICategoryViewModel>();
	}
};
DUMPER7_ASSERTS_UCustomizationUICategoryViewModel;

// Class Runtime.ShopItemViewModel
// 0x0198 (0x0208 - 0x0070)
class UShopItemViewModel : public USCViewModel
{
public:
	ECustomizationUICategoryType                  m_eType;                                           // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsBodyType;                                     // 0x0071(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCharacterPartEnumHandler>      m_eCharacterParts;                                 // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class FName                                   m_ParameterName;                                   // 0x0088(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCCharacterPartParameterTypes                m_eParameterType;                                  // 0x0090(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExtraAssetEnumHandler                 m_eExtraAsset;                                     // 0x0098(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExtraInfoEnumHandler                  m_eExtraInfo;                                      // 0x00F8(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   m_Name;                                            // 0x0158(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	class FText                                   m_Description;                                     // 0x0168(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	class FString                                 m_DebugName;                                       // 0x0178(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_DefaultID;                                       // 0x0188(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iIndex;                                          // 0x0198(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iMaxIndex;                                       // 0x019C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsOwnedByDefault;                               // 0x01A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsEquipped;                                     // 0x01A1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsEquipable;                                    // 0x01A2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsBuyable;                                      // 0x01A3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomizationUICategoryViewModel*      m_ParentViewModel;                                 // 0x01A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USOSBindingsStoreItemViewModel> m_SOSViewModel;                             // 0x01B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USOSBindingsStoreBundleViewModel> m_OwningBundleViewModel;                  // 0x01B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UObject>                 m_Asset;                                           // 0x01C0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                   m_Colors;                                          // 0x01E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FInstancedStruct                       m_GenericData;                                     // 0x01F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)

public:
	struct FSCCustomizationId BPF_GetCustoId() const;
	const class USOSBindingsStoreItemViewModel* BPF_GetSOSItemViewModel() const;
	class FString BPF_GetUniqueID() const;
	bool BPF_IsAvailable() const;
	bool BPF_IsOwned() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShopItemViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShopItemViewModel")
	}
	static class UShopItemViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemViewModel>();
	}
};
DUMPER7_ASSERTS_UShopItemViewModel;

// Class Runtime.GlobalCustomizationViewModel
// 0x0020 (0x0090 - 0x0070)
class UGlobalCustomizationViewModel : public USCViewModel
{
public:
	class UCustomizationUICategoryViewModel*      m_BaseViewModel;                                   // 0x0070(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActivatedRulesIDs                     m_ActivatedMandatoryRulesIDs;                      // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bIsUsingHomeKit;                                 // 0x0088(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GlobalCustomizationViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GlobalCustomizationViewModel")
	}
	static class UGlobalCustomizationViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGlobalCustomizationViewModel>();
	}
};
DUMPER7_ASSERTS_UGlobalCustomizationViewModel;

// Class Runtime.CustomizationPresetViewModel
// 0x00F8 (0x0168 - 0x0070)
class UCustomizationPresetViewModel : public USCViewModel
{
public:
	int32                                         m_iSlotID;                                         // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsEquipped;                                     // 0x0074(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCCharacterCustomizationDescription   m_Description;                                     // 0x0078(0x00F0)(BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationPresetViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationPresetViewModel")
	}
	static class UCustomizationPresetViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationPresetViewModel>();
	}
};
DUMPER7_ASSERTS_UCustomizationPresetViewModel;

// Class Runtime.CustomizationPresetListViewModel
// 0x0018 (0x0088 - 0x0070)
class UCustomizationPresetListViewModel : public USCViewModel
{
public:
	int32                                         m_iCurrentIndex;                                   // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iSlotCount;                                      // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UCustomizationPresetViewModel*>  m_Presets;                                         // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationPresetListViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationPresetListViewModel")
	}
	static class UCustomizationPresetListViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationPresetListViewModel>();
	}
};
DUMPER7_ASSERTS_UCustomizationPresetListViewModel;

// Class Runtime.CustomizationSubsystem
// 0x0880 (0x09D0 - 0x0150)
class UCustomizationSubsystem : public USCSubsystem
{
public:
	class UDataTable*                             m_CustomizationItemsInventory;                     // 0x0150(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_IgnoreAssetWithTag;                              // 0x0158(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExtraInfoEnumHandler                  m_eHomePalette;                                    // 0x0160(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExtraInfoEnumHandler                  m_eAwayPalette;                                    // 0x01C0(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExtraInfoEnumHandler                  m_eCreatedPalette;                                 // 0x0220(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExtraInfoEnumHandler                  m_eHomeAr;                                         // 0x0280(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExtraInfoEnumHandler                  m_eAwayAr;                                         // 0x02E0(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExtraInfoEnumHandler                  m_eStadium;                                        // 0x0340(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExtraInfoEnumHandler                  m_eSwapColors;                                     // 0x03A0(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExtraInfoEnumHandler                  m_eAccessoriesUsingPalette;                        // 0x0400(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExtraInfoEnumHandler                  m_eSet;                                            // 0x0460(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameOption>                m_ColorblindnessOptionClass;                       // 0x04C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColorExclusionConfiguration           m_ColorExclusionConfiguration;                     // 0x04C8(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FOwnersToParameters>            m_TeamColorsApplicationRules;                      // 0x0500(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         m_iNumberColorExcludingByHomePalette;              // 0x0510(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iNumberColorExcludingByAwayPalette;              // 0x0514(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<struct FColorExclusionPair>              m_AllowedColorPairs;                               // 0x0518(0x0050)(Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
	TSet<struct FColorExclusionPair>              m_DisallowedColorPairs;                            // 0x0568(0x0050)(Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
	TSet<class FName>                             m_DisallowedOutlineColors;                         // 0x05B8(0x0050)(Edit, NativeAccessSpecifierPublic)
	float                                         m_fMaxDiffForAwaySecondaryColor;                   // 0x0608(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_60C[0x4];                                      // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActivatedRulesIDs                     m_CachedActivatedMandatoryRulesIDs;                // 0x0610(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSCCustomizationId>             m_IDsToRemoveNullIfRulesBroken;                    // 0x0620(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bUseHomePalette;                                 // 0x0630(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FShopItemSorterInstance>        m_SortingOptions;                                  // 0x0638(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<TSubclassOf<class UShopItemFilter>, struct FShopItemFilterData> m_FilterToActivationMap;    // 0x0648(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class USCCharacterCustomizationUIInfosAsset*  m_CustomizationUIInfos;                            // 0x0698(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USCColorListDataAsset*                  m_ColorListForPalettes;                            // 0x06A0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UColorListIndexMapDataAsset*            m_ColorListIndexMapForPalettes;                    // 0x06A8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6B0[0x1E0];                                    // 0x06B0(0x01E0)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   m_DefaultPlayerCustomization;                      // 0x0890(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USCCharacterCustomizationMandatoryRulesDataAsset> m_RequiredCustomizationAssets; // 0x08B8(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8E0[0x10];                                     // 0x08E0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ARuntimePlayerState>     m_LocalPlayerState;                                // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8F8[0x50];                                     // 0x08F8(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UGlobalCustomizationViewModel*          m_GlobalCustomizationViewModel;                    // 0x0948(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomizationPresetListViewModel*      m_GlobalPresetListViewModel;                       // 0x0950(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_958[0x4];                                      // 0x0958(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iSOSSerializationDecimalCount;                   // 0x095C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_960[0x30];                                     // 0x0960(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_GameFlowCustomizationState;                      // 0x0990(0x0020)(Edit, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class UCustomizationSubsystem* _customizationSubsystem, bool _bWasInMenu)> m_OnGameFlowCustomizationStateChanged; // 0x09B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C0[0x10];                                     // 0x09C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnGameFlowCustomizationStateChanged(bool _bWasInMenu);
	void BPE_SetCurrentCustomizationIDs(const TArray<struct FSCCustomizationId>& _ids, const TArray<struct FShopItem>& _items);
	int32 BPF_AddItemInCategory(const class UCustomizationUICategoryViewModel* _categoryViewModel);
	bool BPF_AddPreset();
	void BPF_CancelPreview(bool _bCancelPresetPreview);
	void BPF_CopyPreset(int32 _iFromPreset, int32 _iToPreset);
	void BPF_EditPreset(int32 _iPresetIndexToEdit);
	void BPF_PreviewFromSOSID(const class FString& _previewSOSID, const class FString& _cinematicSOSID);
	bool BPF_RemoveItemFromCategory(const class UShopItemViewModel* _itemViewModel);
	bool BPF_RemovePreset(int32 _iPresetIndex);
	void BPF_RequestSave(bool _bLocalOnly, bool _bClearLocalSave);
	void BPF_ResetEditingPresetToDefault();
	void BPF_SetColorPaletteToUse(bool _bUseHome);
	void BPF_SetCurrentPresetIndex(int32 _iPresetIndex, bool _bIsPreview);
	void BPF_SetDescription(const struct FSCCharacterCustomizationDescription& _customizationDescription, bool _bIsPreview, bool _bForce);
	void BPF_SetFilterActivated(const TSubclassOf<class UShopItemFilter> _filterClass, bool _bIsActivated);
	void BPF_SetValueFromCategoryViewModel(const class UCustomizationUICategoryViewModel* _categoryViewModel, float _fValue, bool _bIsPreview);
	void BPF_SetValueFromItemViewModel(const class UShopItemViewModel* _shopItemViewModel, bool _bIsPreview, bool _bUpdateAchievement);
	void OnSOSConnected(bool _bSuccessful);

	struct FGameplayTag BPF_GetCurrentCustomizationState() const;
	const struct FSCCharacterCustomizationDescription BPF_GetEditingDescription() const;
	struct FLinearColor BPF_GetFirstColorDifferentFromPalette(const struct FColorPalette& _excludingPalette, const class USCColorListDataAsset* _overridingColorList) const;
	int32 BPF_GetFirstColorDifferentFromPaletteAsIndex(const struct FColorPalette& _excludingPalette) const;
	const class UColorPaletteDataAsset* BPF_GetFirstPaletteAssetDifferentFromPalette(const struct FColorPalette& _excludingPalette, const TArray<class UColorPaletteDataAsset*>& _paletteList) const;
	int32 BPF_GetFirstPaletteDifferentFromPalette(const struct FColorPalette& _excludingPalette, const TArray<struct FColorPalette>& _paletteList) const;
	void BPF_GetItemsFromSosId(const class FString& _sosId, TArray<struct FShopItem>* _outItems) const;
	int32 BPF_GetMaxPresetCount() const;
	struct FLinearColor BPF_GetMostDifferentColorFromColors(const TArray<struct FLinearColor>& _excludingColors, const class USCColorListDataAsset* _overridingColorList) const;
	void BPF_GetParameterDisplaySettings(const struct FCharacterPartEnumHandler& _eCharacterPart, const class FName& _parameterName, struct FCustomizationParameterDisplaySettings* _outParameterDisplaySettings) const;
	void BPF_GetPossibleValues(ECustomizationUICategoryType _eType, const struct FSCCustomizationId& _customizationID, TArray<struct FShopItem>* _outItems, struct FFloatInterval* _fOutInterval) const;
	int32 BPF_GetPresetCount() const;
	bool BPF_GetShopItemFromItem(const TSoftObjectPtr<class UObject>& _item, struct FShopItem* _outShopItem, const struct FSCCustomizationId& _customizationID) const;
	bool BPF_IsColorDifferentFromPalette(const struct FLinearColor& _colorToCheck, const struct FColorPalette& _excludingPalette) const;
	bool BPF_IsColorPairAllowed(const struct FLinearColor& _color0, const struct FLinearColor& _color1) const;
	bool BPF_IsInCustomizationMenu() const;
	bool BPF_IsPaletteDifferentFromPalette(const struct FColorPalette& _paletteToCheck, const struct FColorPalette& _excludingPalette) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomizationSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomizationSubsystem")
	}
	static class UCustomizationSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomizationSubsystem>();
	}
};
DUMPER7_ASSERTS_UCustomizationSubsystem;

// Class Runtime.MatchDangerComputation
// 0x0008 (0x0030 - 0x0028)
class UMatchDangerComputation : public UObject
{
public:
	float                                         m_fCoefficient;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float BPE_ComputeValue(const class ARuntimeGameState* _gameState, uint8 _uiDefendingTeam, uint8 _uiBallOwningTeam, const struct FVector& _vDefendingTeamGoalLocation, const struct FVector& _vBallOwningTeamGoalLocation, const struct FVector& _vBallLocation);
	void BPE_Deinitialize();
	void BPE_Initialize();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchDangerComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchDangerComputation")
	}
	static class UMatchDangerComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchDangerComputation>();
	}
};
DUMPER7_ASSERTS_UMatchDangerComputation;

// Class Runtime.DefendersCountComputation
// 0x0008 (0x0038 - 0x0030)
class UDefendersCountComputation final : public UMatchDangerComputation
{
public:
	uint8                                         m_uiDefendersLeftToReachMax;                       // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DefendersCountComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DefendersCountComputation")
	}
	static class UDefendersCountComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDefendersCountComputation>();
	}
};
DUMPER7_ASSERTS_UDefendersCountComputation;

// Class Runtime.DirectionAlignmentActorTargetCondition
// 0x0008 (0x0030 - 0x0028)
class UDirectionAlignmentActorTargetCondition final : public UBaseActorTargetCondition
{
public:
	float                                         m_fAlignmentAngleThreshold;                        // 0x0028(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bMustBeLowerThanAlignmentAngleThreshold;         // 0x002C(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseRelativeVelocity;                            // 0x002D(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_b2DEvaluation;                                   // 0x002E(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseAbsoluteDotProduct;                          // 0x002F(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DirectionAlignmentActorTargetCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DirectionAlignmentActorTargetCondition")
	}
	static class UDirectionAlignmentActorTargetCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDirectionAlignmentActorTargetCondition>();
	}
};
DUMPER7_ASSERTS_UDirectionAlignmentActorTargetCondition;

// Class Runtime.DistanceWithBallEdgeCondition
// 0x0018 (0x0040 - 0x0028)
class UDistanceWithBallEdgeCondition final : public UBaseActorTargetCondition
{
public:
	struct FFloatRange                            m_DistanceRange;                                   // 0x0028(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCheckIn3D;                                      // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bZeroDistIfOverlap;                              // 0x0039(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DistanceWithBallEdgeCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DistanceWithBallEdgeCondition")
	}
	static class UDistanceWithBallEdgeCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDistanceWithBallEdgeCondition>();
	}
};
DUMPER7_ASSERTS_UDistanceWithBallEdgeCondition;

// Class Runtime.EffectAttributorVolume
// 0x00B8 (0x0368 - 0x02B0)
class AEffectAttributorVolume : public AActor
{
public:
	bool                                          m_bIsVolumeActive;                                 // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCanAssignRoleToAIs;                             // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAreaExitExtraSize;                              // 0x02B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          m_AreaEnter;                                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          m_AreaExit;                                        // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        m_SelectionPoint;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class URuntimeGameplayEffect>     m_AbilityGameplayEffect;                           // 0x02D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class URuntimeGameplayEffect>     m_AbilityGameplayEffectPendingRemove;              // 0x02D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      m_GameflowConditionGameplayTagQuery;               // 0x02E0(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<ERuntimeMatchState>                    m_eInMatchStateRequirement;                        // 0x0328(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_OngoingAbilityBlockingRemoval;                   // 0x0338(0x0008)(BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  m_AbilitiesThatCanBlockRemoval;                    // 0x0340(0x0020)(Edit, BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected)
	class AActor*                                 m_CurrentAffectedActor;                            // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BPE_AssignCurrentEffectOwner(class AActor* _actor);
	void BPE_CantRemoveEffectFromTarget(class AActor* _actor);
	void BPE_RemoveCurrentEffectOwner(class AActor* _actor);
	void BPF_AssignEffectToTarget(class AActor* _actor);
	void BPF_RemoveEffectFromCurrentAndUpdateCurrentOwner();
	void BPF_RemoveEffectFromCurrentOwner();
	void BPF_RemoveEffectFromTarget(class AActor* _actor);
	void BPF_RemoveEffectFromTargetAndUpdateCurrentOwner(class AActor* _target);
	bool BPF_TryReassignEffectToTarget(class AActor* _actor);
	void OnOverlapBegin(class UPrimitiveComponent* _overlappedComp, class AActor* _otherActor, class UPrimitiveComponent* _otherComp, int32 _otherBodyIndex, bool _bFromSweep, const struct FHitResult& _sweepResult);
	void OnOverlapEnd(class UPrimitiveComponent* _overlappedComp, class AActor* _otherActor, class UPrimitiveComponent* _otherComp, int32 _otherBodyIndex);

	bool BPE_CanAssignEffectToTarget(const class AActor* _actor) const;
	bool BPE_CanRemoveEffectFromTarget(const class AActor* _actor) const;
	bool BPE_CanUseEffectAttributorVolume() const;
	bool BPF_CanAssignEffectToTarget(const class AActor* _actor, const bool _bIgnoreCurrentOwnerCondition) const;
	bool BPF_CanRemoveEffectFromTarget(const class AActor* _actor) const;
	bool BPF_CanUseEffectAttributorVolume() const;
	bool BPF_IsMatchingCurrentMatchFlowAndStateRequirement() const;
	bool BPF_IsRemovalBlockedByOngoingAbility(const class AActor* _actor) const;
	bool BPF_ShouldLogDetailedInfos() const;
	class FName BPF_VLOGCategory() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EffectAttributorVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EffectAttributorVolume")
	}
	static class AEffectAttributorVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEffectAttributorVolume>();
	}
};
DUMPER7_ASSERTS_AEffectAttributorVolume;

// Class Runtime.ScoreExperienceComponent
// 0x0000 (0x0040 - 0x0040)
class UScoreExperienceComponent final : public UExperienceComponentBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScoreExperienceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScoreExperienceComponent")
	}
	static class UScoreExperienceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreExperienceComponent>();
	}
};
DUMPER7_ASSERTS_UScoreExperienceComponent;

// Class Runtime.ScoreToExpMultiplierExperienceComponent
// 0x0000 (0x0040 - 0x0040)
class UScoreToExpMultiplierExperienceComponent final : public UExperienceComponentBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScoreToExpMultiplierExperienceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScoreToExpMultiplierExperienceComponent")
	}
	static class UScoreToExpMultiplierExperienceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreToExpMultiplierExperienceComponent>();
	}
};
DUMPER7_ASSERTS_UScoreToExpMultiplierExperienceComponent;

// Class Runtime.MatchResultExperienceComponent
// 0x0000 (0x0040 - 0x0040)
class UMatchResultExperienceComponent final : public UExperienceComponentBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchResultExperienceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchResultExperienceComponent")
	}
	static class UMatchResultExperienceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchResultExperienceComponent>();
	}
};
DUMPER7_ASSERTS_UMatchResultExperienceComponent;

// Class Runtime.MatchDurationExperienceComponent
// 0x0000 (0x0040 - 0x0040)
class UMatchDurationExperienceComponent final : public UExperienceComponentBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchDurationExperienceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchDurationExperienceComponent")
	}
	static class UMatchDurationExperienceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchDurationExperienceComponent>();
	}
};
DUMPER7_ASSERTS_UMatchDurationExperienceComponent;

// Class Runtime.OvertimeDurationExperienceComponent
// 0x0000 (0x0040 - 0x0040)
class UOvertimeDurationExperienceComponent final : public UExperienceComponentBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("OvertimeDurationExperienceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"OvertimeDurationExperienceComponent")
	}
	static class UOvertimeDurationExperienceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOvertimeDurationExperienceComponent>();
	}
};
DUMPER7_ASSERTS_UOvertimeDurationExperienceComponent;

// Class Runtime.FinisherQuickTimeEventFlowState
// 0x0020 (0x05B0 - 0x0590)
class UFinisherQuickTimeEventFlowState : public URuntimeGameFlowState
{
public:
	TSubclassOf<class UGameplayEffect>            m_FinisherGameplayEffectClass;                     // 0x0590(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_598[0x8];                                      // 0x0598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USCInputContext*                        m_CelebrationContext;                              // 0x05A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bSkipRightAfterInputPressed;                     // 0x05A8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFinisherInput(class APlayerState* _playerState, class USCInputAction* _inputAction);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FinisherQuickTimeEventFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FinisherQuickTimeEventFlowState")
	}
	static class UFinisherQuickTimeEventFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFinisherQuickTimeEventFlowState>();
	}
};
DUMPER7_ASSERTS_UFinisherQuickTimeEventFlowState;

// Class Runtime.FreecamController
// 0x0000 (0x0A10 - 0x0A10)
class AFreecamController final : public ADebugCameraController
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FreecamController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FreecamController")
	}
	static class AFreecamController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFreecamController>();
	}
};
DUMPER7_ASSERTS_AFreecamController;

// Class Runtime.GoalDescriptionHelpers
// 0x0000 (0x0028 - 0x0028)
class UGoalDescriptionHelpers final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GoalDescriptionHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GoalDescriptionHelpers")
	}
	static class UGoalDescriptionHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoalDescriptionHelpers>();
	}
};
DUMPER7_ASSERTS_UGoalDescriptionHelpers;

// Class Runtime.GoalProximityComputation
// 0x0000 (0x0030 - 0x0030)
class UGoalProximityComputation final : public UMatchDangerComputation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GoalProximityComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GoalProximityComputation")
	}
	static class UGoalProximityComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoalProximityComputation>();
	}
};
DUMPER7_ASSERTS_UGoalProximityComputation;

// Class Runtime.GoalScoredBinder
// 0x0038 (0x0130 - 0x00F8)
class UGoalScoredBinder : public UGameStateScopedEventBinder
{
public:
	ETriggerConditionGoalScoredBinder             m_eCondition;                                      // 0x00F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseCondition;                                   // 0x00F9(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bTriggerOnLocalPlayerTeamScored;                 // 0x00FA(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bTriggerDependingOnShootType;                    // 0x00FB(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_ShootTypeTagContainer;                           // 0x0100(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bTriggerDependingOnLastSurfaceHit;               // 0x0120(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EBounceHit                                    m_eLastSurface;                                    // 0x0121(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bNotifyAlsoForOwnGoal;                           // 0x0122(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_123[0x1];                                      // 0x0123(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_FeedLogPlayerScoreTag;                           // 0x0124(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iVersion;                                        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnGoaldScored(const struct FGoalDescription& _goalDescription);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GoalScoredBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GoalScoredBinder")
	}
	static class UGoalScoredBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoalScoredBinder>();
	}
};
DUMPER7_ASSERTS_UGoalScoredBinder;

// Class Runtime.ShootAnimationMetadata
// 0x00A8 (0x0488 - 0x03E0)
class UShootAnimationMetadata : public URuntimeAnimationMetadata
{
public:
	struct FIntDataBinding                        m_iBuildUpFrameCount;                              // 0x03E0(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bSkipStretchTimeByBuildUp;                       // 0x0428(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bSnapBallOnBallBoneDuringFreezeFrame;            // 0x0429(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_42A[0x6];                                      // 0x042A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UTimeStretchNotify>         m_NotifyStretchBuildUp;                            // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_438[0x50];                                     // 0x0438(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootAnimationMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootAnimationMetadata")
	}
	static class UShootAnimationMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootAnimationMetadata>();
	}
};
DUMPER7_ASSERTS_UShootAnimationMetadata;

// Class Runtime.TrajectoryModifierTargetDatasource
// 0x0000 (0x00A8 - 0x00A8)
class UTrajectoryModifierTargetDatasource final : public UGenericTargetDatasource
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrajectoryModifierTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrajectoryModifierTargetDatasource")
	}
	static class UTrajectoryModifierTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrajectoryModifierTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UTrajectoryModifierTargetDatasource;

// Class Runtime.HighPowerShootAnimationMetadata
// 0x0000 (0x0488 - 0x0488)
class UHighPowerShootAnimationMetadata : public UShootAnimationMetadata
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HighPowerShootAnimationMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HighPowerShootAnimationMetadata")
	}
	static class UHighPowerShootAnimationMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHighPowerShootAnimationMetadata>();
	}
};
DUMPER7_ASSERTS_UHighPowerShootAnimationMetadata;

// Class Runtime.HinderingComponent
// 0x0050 (0x0108 - 0x00B8)
class UHinderingComponent : public UActorComponent
{
public:
	TSubclassOf<class UHinderingGameplayAbility>  m_VisualHinderingAbility;                          // 0x00B8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fHinderingIntensity;                             // 0x00C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLeanIntensity;                                  // 0x00C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fHinderingAngle;                                 // 0x00C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bHinderingActive;                                // 0x00CC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            m_HinderingBlendSpace;                             // 0x00D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          m_AkEvent;                                         // 0x00D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E0[0x10];                                      // 0x00E0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_HinderingTag;                                    // 0x00F0(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLastTargetLifeSpan;                             // 0x00F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FC[0xC];                                       // 0x00FC(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HinderingComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HinderingComponent")
	}
	static class UHinderingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHinderingComponent>();
	}
};
DUMPER7_ASSERTS_UHinderingComponent;

// Class Runtime.HinderingConfig
// 0x0448 (0x0478 - 0x0030)
class UHinderingConfig final : public UDataAsset
{
public:
	struct FVector2D                              m_vInDetectionEllipse;                             // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              m_vOutDetectionEllipse;                            // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_fVelocityMultiplierByVelocityAngleDiff;          // 0x0050(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_fRepulsionAngleRemappingCurve;                   // 0x00D8(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         m_fInitialForce;                                   // 0x0160(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCAlphaBlendArgs                      m_IntialToBaseForceBlendArgs;                      // 0x0168(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fBaseForce;                                      // 0x0178(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fForceInterpSpeed;                               // 0x017C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_fForceMultiplierByVelocityAngleDiff;             // 0x0180(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         m_fForceMultiplierOnBothPlayersStatic;             // 0x0208(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fForceMultiplierOnCauserStatic;                  // 0x020C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fForceMultiplierOnHinderedStatic;                // 0x0210(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     m_fForceMultiplierBySpeedDiff;                     // 0x0218(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                              m_vNoPenetrationEllipse;                           // 0x02A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fNotPenetrationForceOverride;                    // 0x02B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            m_HinderingBlendSpace;                             // 0x02B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOverrideVisualDetectionEllipse;                 // 0x02C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              m_vVisualDetectionEllipse;                         // 0x02C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_BlendspaceIntensityByDistance;                   // 0x02D8(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_LeanIntensityByDistance;                         // 0x0360(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_LeanIntensityMultiplierByAngle;                  // 0x03E8(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          m_AkEvent;                                         // 0x0470(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HinderingConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HinderingConfig")
	}
	static class UHinderingConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHinderingConfig>();
	}
};
DUMPER7_ASSERTS_UHinderingConfig;

// Class Runtime.CharacterHinderingConfig
// 0x0028 (0x0058 - 0x0030)
class UCharacterHinderingConfig final : public UDataAsset
{
public:
	struct FBaseActorConditionInstance            m_NoHinderingCondition;                            // 0x0030(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UHinderingConfig*                       m_DefaultConfig;                                   // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHinderingConfigOverride>       m_Overrides;                                       // 0x0048(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	class UHinderingConfig* BPF_GetHinderingConfig(const class AActor* _hindering, const class AActor* _hindered) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterHinderingConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterHinderingConfig")
	}
	static class UCharacterHinderingConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterHinderingConfig>();
	}
};
DUMPER7_ASSERTS_UCharacterHinderingConfig;

// Class Runtime.HUDRegisterableInterface
// 0x0000 (0x0000 - 0x0000)
class IHUDRegisterableInterface final
{
public:
	void RegisterToHUD(class UHUD_Widget* _HUD);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HUDRegisterableInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HUDRegisterableInterface")
	}
	static class IHUDRegisterableInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IHUDRegisterableInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IHUDRegisterableInterface;

// Class Runtime.HUD_NameTagManagerWidget
// 0x0010 (0x0C00 - 0x0BF0)
class UHUD_NameTagManagerWidget final : public USCUserWidget
{
public:
	TArray<class UBaseTargetWidget*>              m_VisibleNameTagArray;                             // 0x0BF0(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void BPF_SortNameTagArrayByDistanceFromTarget(class AActor* _target);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HUD_NameTagManagerWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HUD_NameTagManagerWidget")
	}
	static class UHUD_NameTagManagerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_NameTagManagerWidget>();
	}
};
DUMPER7_ASSERTS_UHUD_NameTagManagerWidget;

// Class Runtime.HUD_Widget
// 0x0000 (0x0BF0 - 0x0BF0)
class UHUD_Widget : public USCUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HUD_Widget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HUD_Widget")
	}
	static class UHUD_Widget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_Widget>();
	}
};
DUMPER7_ASSERTS_UHUD_Widget;

// Class Runtime.LockerRoomFlowState
// 0x0048 (0x05D8 - 0x0590)
class ULockerRoomFlowState : public URuntimeGameFlowState
{
public:
	struct FGameplayTagQuery                      m_LevelSequenceToStopTag;                          // 0x0590(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LockerRoomFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LockerRoomFlowState")
	}
	static class ULockerRoomFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULockerRoomFlowState>();
	}
};
DUMPER7_ASSERTS_ULockerRoomFlowState;

// Class Runtime.MatchCountdownOverBinder
// 0x0010 (0x0108 - 0x00F8)
class UMatchCountdownOverBinder : public UGameStateScopedEventBinder
{
public:
	uint8                                         Pad_F8[0x10];                                      // 0x00F8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMatchCountdownOver(class ARuntimeMatchGameState* _matchGameState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchCountdownOverBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchCountdownOverBinder")
	}
	static class UMatchCountdownOverBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchCountdownOverBinder>();
	}
};
DUMPER7_ASSERTS_UMatchCountdownOverBinder;

// Class Runtime.MatchEffectSFXAction
// 0x0008 (0x0048 - 0x0040)
class UMatchEffectSFXAction final : public UMatchEffectAction
{
public:
	class UAkAudioEvent*                          m_AkEvent;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchEffectSFXAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchEffectSFXAction")
	}
	static class UMatchEffectSFXAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchEffectSFXAction>();
	}
};
DUMPER7_ASSERTS_UMatchEffectSFXAction;

// Class Runtime.MatchEffectSubsystem
// 0x0198 (0x02F8 - 0x0160)
class UMatchEffectSubsystem final : public USCWorldSubsystem
{
public:
	TMulticastInlineDelegate<void(float _fValue)> OnDangerValueChanged;                              // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float _fValue)> OnCrowdIntensityChanged;                           // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UMatchDangerComputation>> m_DangerComputationClasses;                   // 0x0180(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UMatchEffectReaction>> m_ReactionClasses;                               // 0x0190(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSubclassOf<class UActionDirectionComputation> m_ActionDirectionClass;                           // 0x01A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fUpdateRate;                                     // 0x01A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchCrowdIntensitySettings           m_MatchCrowdIntensitySettings;                     // 0x01B0(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                         m_fCurrentIntensitySoftCap;                        // 0x0228(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMatchDangerComputation*>        m_DangerComputationParts;                          // 0x0230(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UMatchEffectReaction*>           m_Reactions;                                       // 0x0240(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UCrowdSoundState*>               m_CrowdSoundStates;                                // 0x0250(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UActionDirectionComputation*            m_ActionDirectionComputation;                      // 0x0260(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEventBinder*                           m_ResetToDefaultBinderInstance;                    // 0x0268(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAkComponent>            m_CrowdBEDSEmitter;                                // 0x0270(0x0008)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, struct FEmittersList>             m_TeamEmittersMap;                                 // 0x0278(0x0050)(Edit, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C8[0x30];                                     // 0x02C8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_RegisterCrowdBEDSEmitter(class UAkComponent* _emitter);
	void BPF_UnregisterCrowdBEDSEmitter(class UAkComponent* _emitter);
	void OnBallEngaged(class ARuntimePlayerState* _playerState);
	void OnBallRegistered(class ABall* _ball);

	float BPF_GetCrowdIntensityValue() const;
	float BPF_GetMatchDangerValue() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchEffectSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchEffectSubsystem")
	}
	static class UMatchEffectSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchEffectSubsystem>();
	}
};
DUMPER7_ASSERTS_UMatchEffectSubsystem;

// Class Runtime.MatchOverBinder
// 0x0000 (0x00F8 - 0x00F8)
class UMatchOverBinder : public UGameStateScopedEventBinder
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchOverBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchOverBinder")
	}
	static class UMatchOverBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchOverBinder>();
	}
};
DUMPER7_ASSERTS_UMatchOverBinder;

// Class Runtime.MatchStartBinder
// 0x0010 (0x0108 - 0x00F8)
class UMatchStartBinder final : public UGameStateScopedEventBinder
{
public:
	uint8                                         Pad_F8[0x10];                                      // 0x00F8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchStartBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchStartBinder")
	}
	static class UMatchStartBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchStartBinder>();
	}
};
DUMPER7_ASSERTS_UMatchStartBinder;

// Class Runtime.MatchPlayerViewModel
// 0x0098 (0x0108 - 0x0070)
class UMatchPlayerViewModel final : public USCViewModel
{
public:
	int32                                         m_iTeam;                                           // 0x0070(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iNumberInTeam;                                   // 0x0074(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_PlayerName;                                      // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsCaptain;                                      // 0x0088(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsSquadLeader;                                  // 0x0089(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsSquadMember;                                  // 0x008A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       m_UniqueID;                                        // 0x0090(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsMVP;                                          // 0x00C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_AvatarItemId;                                    // 0x00C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_BannerItemId;                                    // 0x00D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_TitleItemId;                                     // 0x00E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESOSFirstParty                                m_eFirstParty;                                     // 0x00F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsCrossplay;                                    // 0x00F9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ARuntimePlayerState>     m_PlayerState;                                     // 0x00FC(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchPlayerViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchPlayerViewModel")
	}
	static class UMatchPlayerViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchPlayerViewModel>();
	}
};
DUMPER7_ASSERTS_UMatchPlayerViewModel;

// Class Runtime.MaterialHelperLibrary
// 0x0000 (0x0028 - 0x0028)
class UMaterialHelperLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_ApplyMaterialParametersOnMesh(class UMeshComponent* _meshComponent, const struct FMaterialParametersStruct& _materialParamsStruct);
	static void BPF_ApplyMaterialParametersStructOnMaterial(class UMaterialInstanceDynamic* _materialInstance, const struct FMaterialParametersStruct& _materialParamsStruct);
	static float BPF_AsFloat(int32 _Value);
	static int32 BPF_AsInt(float _Value);
	static class UTexture2D* BPF_GetTextureFromSkeletalMeshMaterial(class USkeletalMesh* _skeletalMesh, class FName _textureName, int32 _iMaterialIndex);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MaterialHelperLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MaterialHelperLibrary")
	}
	static class UMaterialHelperLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMaterialHelperLibrary>();
	}
};
DUMPER7_ASSERTS_UMaterialHelperLibrary;

// Class Runtime.MultiPositionAmbientSound
// 0x0030 (0x0320 - 0x02F0)
class AMultiPositionAmbientSound : public AAkAmbientSound
{
public:
	TArray<struct FTransform>                     m_MultiPositionsTransforms;                        // 0x02F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	EAkMultiPositionType                          m_eMultiPositionType;                              // 0x0300(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bShowDebugInGame;                                // 0x0301(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_DebugText;                                       // 0x0308(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                             m_BillboardTexture;                                // 0x0318(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MultiPositionAmbientSound")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MultiPositionAmbientSound")
	}
	static class AMultiPositionAmbientSound* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMultiPositionAmbientSound>();
	}
};
DUMPER7_ASSERTS_AMultiPositionAmbientSound;

// Class Runtime.OnlineGameOption
// 0x0000 (0x0030 - 0x0030)
class UOnlineGameOption : public UGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("OnlineGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"OnlineGameOption")
	}
	static class UOnlineGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnlineGameOption>();
	}
};
DUMPER7_ASSERTS_UOnlineGameOption;

// Class Runtime.VoiceChatGameOption
// 0x0000 (0x0030 - 0x0030)
class UVoiceChatGameOption final : public UOnlineGameOption
{
public:
	static EVoiceChatOptions BPF_GetVoiceChatGameOption(class ASCBasePlayerController* _controller);
	static void BPF_SetVoiceChatGameOption(class ASCBasePlayerController* _controller, EVoiceChatOptions _eInOption, bool _bSave);
	static void BPF_ToggleDeafenSelf(class ASCBasePlayerController* _controller, bool _bSave);
	static void BPF_ToggleMuteSelf(class ASCBasePlayerController* _controller, bool _bSave);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VoiceChatGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VoiceChatGameOption")
	}
	static class UVoiceChatGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoiceChatGameOption>();
	}
};
DUMPER7_ASSERTS_UVoiceChatGameOption;

// Class Runtime.OutOfStaminaCalculation
// 0x0000 (0x0040 - 0x0040)
class UOutOfStaminaCalculation final : public UGameplayEffectExecutionCalculation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("OutOfStaminaCalculation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"OutOfStaminaCalculation")
	}
	static class UOutOfStaminaCalculation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOutOfStaminaCalculation>();
	}
};
DUMPER7_ASSERTS_UOutOfStaminaCalculation;

// Class Runtime.PingBinder
// 0x0020 (0x0118 - 0x00F8)
class UPingBinder final : public UGameStateScopedEventBinder
{
public:
	struct FGameplayTag                           m_FeedLogPingTag;                                  // 0x00F8(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_PingDataAssetTag;                                // 0x0100(0x0008)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_PingIdTag;                                       // 0x0108(0x0008)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_IsActiveTag;                                     // 0x0110(0x0008)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnPingTriggered(const struct FPingStateDescription& _pingState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PingBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PingBinder")
	}
	static class UPingBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPingBinder>();
	}
};
DUMPER7_ASSERTS_UPingBinder;

// Class Runtime.PingDataAsset
// 0x01A0 (0x01D0 - 0x0030)
class UPingDataAsset final : public UPrimaryDataAsset
{
public:
	class FText                                   m_DisplayName;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            m_Icon;                                            // 0x0040(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_Type;                                            // 0x0110(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDuration;                                       // 0x0118(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bShowOnlyOnAllies;                               // 0x011C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           m_TagActorsToShow;                                 // 0x0120(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     m_PingMarkerClass;                                 // 0x0130(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsIndependantMarker;                            // 0x0138(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeTargetRequest                  m_TargetRequest;                                   // 0x0140(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UPingBehavior*                          m_behavior;                                        // 0x01C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PingDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PingDataAsset")
	}
	static class UPingDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPingDataAsset>();
	}
};
DUMPER7_ASSERTS_UPingDataAsset;

// Class Runtime.PlayerBallOwnership
// 0x0118 (0x01D0 - 0x00B8)
class UPlayerBallOwnership final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastSparseDelegateProperty_             BPE_OnBallAutoCapturable;                          // 0x00C0(0x0001)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastSparseDelegateProperty_             BPE_OnBallOwnershipGained;                         // 0x00C1(0x0001)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastSparseDelegateProperty_             BPE_OnBallOwnershipLost;                           // 0x00C2(0x0001)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bMustFaceBallToAutoCapture;                      // 0x00C3(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_HasBallTagPred;                                  // 0x00C4(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_HasBallTag;                                      // 0x00CC(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_LoseBallEventTag;                                // 0x00D4(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBallCaptureDescription                m_MainAutoCaptureDescription;                      // 0x00E0(0x0040)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FBallCaptureDescription                m_AutoCaptureDescriptions[0x2];                    // 0x0120(0x0040)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            m_SetBallEffect;                                   // 0x01A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            m_RemoveBallEffect;                                // 0x01A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0[0x20];                                     // 0x01B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_GetBall(class ABall** _outBallRef, EExecSuccessEnum* _OutExecBranches);
	bool BPF_SetBall(class ABall* _ball, bool _bSteal);

	class ABall* BPF_GetBallPure() const;
	class ARuntimePlayerState* BPF_GetPlayerState() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerBallOwnership")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerBallOwnership")
	}
	static class UPlayerBallOwnership* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerBallOwnership>();
	}
};
DUMPER7_ASSERTS_UPlayerBallOwnership;

// Class Runtime.PlayerColorChoiceSequenceActor
// 0x0010 (0x05E0 - 0x05D0)
class APlayerColorChoiceSequenceActor final : public ARuntimeLevelSequenceActor
{
public:
	uint8                                         m_uiTeam;                                          // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         m_uiTeamSize;                                      // 0x05D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5D2[0xE];                                      // 0x05D2(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerColorChoiceSequenceActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerColorChoiceSequenceActor")
	}
	static class APlayerColorChoiceSequenceActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerColorChoiceSequenceActor>();
	}
};
DUMPER7_ASSERTS_APlayerColorChoiceSequenceActor;

// Class Runtime.BaseShootForceComputation
// 0x0000 (0x0028 - 0x0028)
class UBaseShootForceComputation : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseShootForceComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseShootForceComputation")
	}
	static class UBaseShootForceComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseShootForceComputation>();
	}
};
DUMPER7_ASSERTS_UBaseShootForceComputation;

// Class Runtime.ModifierShootForceComputation
// 0x0000 (0x0028 - 0x0028)
class UModifierShootForceComputation : public UBaseShootForceComputation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ModifierShootForceComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ModifierShootForceComputation")
	}
	static class UModifierShootForceComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModifierShootForceComputation>();
	}
};
DUMPER7_ASSERTS_UModifierShootForceComputation;

// Class Runtime.StaticShootForceComputation
// 0x0008 (0x0030 - 0x0028)
class UStaticShootForceComputation final : public UModifierShootForceComputation
{
public:
	float                                         m_fForce;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StaticShootForceComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StaticShootForceComputation")
	}
	static class UStaticShootForceComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaticShootForceComputation>();
	}
};
DUMPER7_ASSERTS_UStaticShootForceComputation;

// Class Runtime.PlayerJoinBinder
// 0x0058 (0x0150 - 0x00F8)
class UPlayerJoinBinder final : public UGameStateScopedEventBinder
{
public:
	struct FGameplayTag                           m_FeedLogPlayerJoinTag;                            // 0x00F8(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_100[0x50];                                     // 0x0100(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPlayerAdded(class APlayerState* _playerState);
	void OnPlayerRemoved(class APlayerState* _playerState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerJoinBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerJoinBinder")
	}
	static class UPlayerJoinBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerJoinBinder>();
	}
};
DUMPER7_ASSERTS_UPlayerJoinBinder;

// Class Runtime.PlayerLeftBinder
// 0x0008 (0x0100 - 0x00F8)
class UPlayerLeftBinder final : public UGameStateScopedEventBinder
{
public:
	struct FGameplayTag                           m_FeedLogPlayerLeftTag;                            // 0x00F8(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnPlayerRemoved(class APlayerState* _playerState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerLeftBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerLeftBinder")
	}
	static class UPlayerLeftBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerLeftBinder>();
	}
};
DUMPER7_ASSERTS_UPlayerLeftBinder;

// Class Runtime.BaseShootDirectionComputation
// 0x0018 (0x0040 - 0x0028)
class UBaseShootDirectionComputation : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseShootDirectionComputation")
	}
	static class UBaseShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UBaseShootDirectionComputation;

// Class Runtime.LockedDirShootDirectionComputation
// 0x0018 (0x0058 - 0x0040)
class ULockedDirShootDirectionComputation : public UBaseShootDirectionComputation
{
public:
	struct FVector_NetQuantizeNormal              m_vLockedDir;                                      // 0x0040(0x0018)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LockedDirShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LockedDirShootDirectionComputation")
	}
	static class ULockedDirShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULockedDirShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_ULockedDirShootDirectionComputation;

// Class Runtime.PlayerProfileCategoryViewModel
// 0x0080 (0x00F0 - 0x0070)
class UPlayerProfileCategoryViewModel final : public USCViewModel
{
public:
	class FText                                   m_Title;                                           // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FPlayerProfileCategoryEnumHandler      m_Category;                                        // 0x0080(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_UITag;                                           // 0x00D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UShopItemViewModel*>             m_Items;                                           // 0x00D8(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                         m_CurrentIndex;                                    // 0x00E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerProfileCategoryViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerProfileCategoryViewModel")
	}
	static class UPlayerProfileCategoryViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerProfileCategoryViewModel>();
	}
};
DUMPER7_ASSERTS_UPlayerProfileCategoryViewModel;

// Class Runtime.GlobalPlayerProfileCustomizationViewModel
// 0x0018 (0x0088 - 0x0070)
class UGlobalPlayerProfileCustomizationViewModel : public USCViewModel
{
public:
	TArray<class UPlayerProfileCategoryViewModel*> m_CategoryViewModels;                             // 0x0070(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                         m_CurrentIndex;                                    // 0x0080(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GlobalPlayerProfileCustomizationViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GlobalPlayerProfileCustomizationViewModel")
	}
	static class UGlobalPlayerProfileCustomizationViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGlobalPlayerProfileCustomizationViewModel>();
	}
};
DUMPER7_ASSERTS_UGlobalPlayerProfileCustomizationViewModel;

// Class Runtime.ShootModifier
// 0x0008 (0x0030 - 0x0028)
class UShootModifier : public UObject
{
public:
	ETargetForceType                              m_eTargetForceType;                                // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMagnusType                                   m_eMagnusAxisToApplyModifier;                      // 0x0029(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_ApplyAngle(const class AActor* _actor, const struct FShootPrepTargetData& _ShootData, float* _fPitch, EApplyMode* _PitchApplyMode, float* _fYaw, EApplyMode* _YawApplyMode) const;
	float BPE_ApplyMultiplierForce(const class AActor* _actor, const struct FShootPrepTargetData& _ShootData) const;
	float BPE_ApplyMultiplierRotationForce(const class AActor* _actor, const struct FShootPrepTargetData& _ShootData, EMagnusType* _MagnusToApply) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootModifier")
	}
	static class UShootModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootModifier>();
	}
};
DUMPER7_ASSERTS_UShootModifier;

// Class Runtime.PlayerProfileDescriptionViewModel
// 0x0010 (0x0080 - 0x0070)
class UPlayerProfileDescriptionViewModel : public USCViewModel
{
public:
	struct FPlayerProfileDescription              m_Description;                                     // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerProfileDescriptionViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerProfileDescriptionViewModel")
	}
	static class UPlayerProfileDescriptionViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerProfileDescriptionViewModel>();
	}
};
DUMPER7_ASSERTS_UPlayerProfileDescriptionViewModel;

// Class Runtime.PlayerProfileHelpers
// 0x0000 (0x0028 - 0x0028)
class UPlayerProfileHelpers final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_SetCategoryAsset(struct FPlayerProfileDescription& _description, const struct FPlayerProfileCategoryEnumHandler& _eCategory, TSoftObjectPtr<class UPlayerProfileBaseAsset> _asset);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerProfileHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerProfileHelpers")
	}
	static class UPlayerProfileHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerProfileHelpers>();
	}
};
DUMPER7_ASSERTS_UPlayerProfileHelpers;

// Class Runtime.StringsHelper
// 0x0000 (0x0028 - 0x0028)
class UStringsHelper final : public UObject
{
public:
	static int32 BPF_HashString(const class FString& _str);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StringsHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StringsHelper")
	}
	static class UStringsHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStringsHelper>();
	}
};
DUMPER7_ASSERTS_UStringsHelper;

// Class Runtime.PlayerProfileParser
// 0x0000 (0x0028 - 0x0028)
class UPlayerProfileParser final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerProfileParser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerProfileParser")
	}
	static class UPlayerProfileParser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerProfileParser>();
	}
};
DUMPER7_ASSERTS_UPlayerProfileParser;

// Class Runtime.PlayerProfileBaseAsset
// 0x0028 (0x0058 - 0x0030)
class UPlayerProfileBaseAsset : public UDataAsset
{
public:
	struct FGameplayTag                           m_Type;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   m_DisplayName;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   m_Description;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerProfileBaseAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerProfileBaseAsset")
	}
	static class UPlayerProfileBaseAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerProfileBaseAsset>();
	}
};
DUMPER7_ASSERTS_UPlayerProfileBaseAsset;

// Class Runtime.ShootModifierComputationData
// 0x0000 (0x0028 - 0x0028)
class UShootModifierComputationData : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootModifierComputationData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootModifierComputationData")
	}
	static class UShootModifierComputationData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootModifierComputationData>();
	}
};
DUMPER7_ASSERTS_UShootModifierComputationData;

// Class Runtime.ComputedShootModifierComputationData
// 0x0010 (0x0038 - 0x0028)
class UComputedShootModifierComputationData : public UShootModifierComputationData
{
public:
	ESourceModifierType                           m_eSource;                                         // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseRatio;                                       // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatInterval                         m_RangeToComputeRatio;                             // 0x002C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iVersion;                                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ComputedShootModifierComputationData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ComputedShootModifierComputationData")
	}
	static class UComputedShootModifierComputationData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComputedShootModifierComputationData>();
	}
};
DUMPER7_ASSERTS_UComputedShootModifierComputationData;

// Class Runtime.PlayerProfileTextureAsset
// 0x0028 (0x0080 - 0x0058)
class UPlayerProfileTextureAsset final : public UPlayerProfileBaseAsset
{
public:
	TSoftObjectPtr<class UTexture2D>              m_Texture;                                         // 0x0058(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerProfileTextureAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerProfileTextureAsset")
	}
	static class UPlayerProfileTextureAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerProfileTextureAsset>();
	}
};
DUMPER7_ASSERTS_UPlayerProfileTextureAsset;

// Class Runtime.PlayerProfilePoseAsset
// 0x0080 (0x00D8 - 0x0058)
class UPlayerProfilePoseAsset final : public UPlayerProfileBaseAsset
{
public:
	TSoftObjectPtr<class ULevelSequence>          m_ViewSequence;                                    // 0x0058(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>           m_AnimSequence;                                    // 0x0080(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fAnimTime;                                       // 0x00A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              m_DefaultTexture;                                  // 0x00B0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerProfilePoseAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerProfilePoseAsset")
	}
	static class UPlayerProfilePoseAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerProfilePoseAsset>();
	}
};
DUMPER7_ASSERTS_UPlayerProfilePoseAsset;

// Class Runtime.ModifierShootDirectionComputation
// 0x0000 (0x0040 - 0x0040)
class UModifierShootDirectionComputation : public UBaseShootDirectionComputation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ModifierShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ModifierShootDirectionComputation")
	}
	static class UModifierShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModifierShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UModifierShootDirectionComputation;

// Class Runtime.ControllerShootDirectionComputation
// 0x00C8 (0x0108 - 0x0040)
class UControllerShootDirectionComputation : public UModifierShootDirectionComputation
{
public:
	TArray<ECollisionChannel>                     m_CollisionChannelToIgnore;                        // 0x0040(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	ELockDirectionOption                          m_eLockDirectionOption;                            // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_PitchRange;                                      // 0x0054(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_TrajectoryPitchByCameraPitch;                    // 0x0068(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            m_TrajectoryYawByXAxis;                            // 0x0070(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                           m_ShootPitchCorrectionByYAxis;                     // 0x0078(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                     m_VerticalMagnusMultiplier;                        // 0x0080(0x0088)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ControllerShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ControllerShootDirectionComputation")
	}
	static class UControllerShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControllerShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UControllerShootDirectionComputation;

// Class Runtime.InputForwardShootDirectionComputation
// 0x00B8 (0x01C0 - 0x0108)
class UInputForwardShootDirectionComputation : public UControllerShootDirectionComputation
{
public:
	bool                                          m_bUseAccumulatorSystemCalculation;                // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAccumulatorSensibility;                         // 0x010C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseInputFromContext;                            // 0x0110(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fVerticalAngle;                                  // 0x0114(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EShootDirectionSpace                          m_eDefaultShootDirectionSpace;                     // 0x0118(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseClampWithActorForward;                       // 0x0119(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fClampWithActorForward;                          // 0x011C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseVerticalAngleAfterClamp;                     // 0x0120(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bKeepLastDirectionAtNeutralPos;                  // 0x0121(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     m_JoystickDeadZone;                                // 0x0128(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bUseDataTableSpace;                              // 0x01B0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             m_ShootDatatable;                                  // 0x01B8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputForwardShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputForwardShootDirectionComputation")
	}
	static class UInputForwardShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputForwardShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UInputForwardShootDirectionComputation;

// Class Runtime.FilteredForwardInputShootDirectionComputation
// 0x0048 (0x0208 - 0x01C0)
class UFilteredForwardInputShootDirectionComputation : public UInputForwardShootDirectionComputation
{
public:
	bool                                          m_bUseLerpSystem;                                  // 0x01C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLerpActivationDelay;                            // 0x01C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fLerpSmoothDynamic;                              // 0x01C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bDeactivateDependingOnAngleDiff;                 // 0x01CC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAngle;                                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatRange                            m_AccelerationRange;                               // 0x01D4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatRange                            m_AccelerationMultiplier;                          // 0x01E4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameOption>                m_AccelerationRangeOption;                         // 0x01F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameOption>                m_AccelerationMultiplierOption;                    // 0x0200(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FilteredForwardInputShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FilteredForwardInputShootDirectionComputation")
	}
	static class UFilteredForwardInputShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFilteredForwardInputShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UFilteredForwardInputShootDirectionComputation;

// Class Runtime.PlayerProfileBaseAssetContainer
// 0x0010 (0x0040 - 0x0030)
class UPlayerProfileBaseAssetContainer final : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UPlayerProfileBaseAsset>> m_Assets;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerProfileBaseAssetContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerProfileBaseAssetContainer")
	}
	static class UPlayerProfileBaseAssetContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerProfileBaseAssetContainer>();
	}
};
DUMPER7_ASSERTS_UPlayerProfileBaseAssetContainer;

// Class Runtime.PlayerProfileSettings
// 0x01A8 (0x01F0 - 0x0048)
class UPlayerProfileSettings final : public USCBaseGameSettings
{
public:
	struct FSCUserEnumSetting                     m_ProjectUserEnums;                                // 0x0048(0x0048)(Edit, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_90[0x70];                                      // 0x0090(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPlayerProfileUIInfosAsset> m_UIInfos;                                      // 0x0100(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UPlayerProfileBaseAsset> m_DefaultAssets[0x5];                              // 0x0128(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerProfileSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerProfileSettings")
	}
	static class UPlayerProfileSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerProfileSettings>();
	}
};
DUMPER7_ASSERTS_UPlayerProfileSettings;

// Class Runtime.SpeedStateShootModifier
// 0x0028 (0x0058 - 0x0030)
class USpeedStateShootModifier final : public UShootModifier
{
public:
	struct FMultiplierSpeedStateData              m_MultiplierBySpeedState;                          // 0x0030(0x0010)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_Multipliers[0x4];                                // 0x0040(0x0004)(BlueprintReadOnly, ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fBlendTime;                                      // 0x0050(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iDataVersion;                                    // 0x0054(0x0004)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpeedStateShootModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpeedStateShootModifier")
	}
	static class USpeedStateShootModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpeedStateShootModifier>();
	}
};
DUMPER7_ASSERTS_USpeedStateShootModifier;

// Class Runtime.PlayerProfileSubsystem
// 0x02D8 (0x0428 - 0x0150)
class UPlayerProfileSubsystem : public USCSubsystem
{
public:
	class UDataTable*                             m_ProfileItemsInventory;                           // 0x0150(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayerProfileUIInfosAsset*             m_UIInfos;                                         // 0x0158(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_160[0x2A0];                                    // 0x0160(0x02A0)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ARuntimePlayerState>     m_LocalPlayerState;                                // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_408[0x10];                                     // 0x0408(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UGlobalPlayerProfileCustomizationViewModel* m_GlobalPlayerProfileCustomizationViewModel;   // 0x0418(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerProfileDescriptionViewModel*     m_GlobalPlayerProfileDescriptionViewModel;         // 0x0420(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BPF_RequestSave(bool _bLocalOnly);
	void BPF_SetAssetByViewModel(class UShopItemViewModel* _viewModel);
	void BPF_SetDescription(const struct FPlayerProfileDescription& _description, bool _bIsPreview, bool _bForce);
	void BPF_SetWorkshopData(const struct FPlayerProfileWorkshopData& _workshopData);
	void OnChangeUnwrittenAchievements();
	void OnSOSConnected(bool _bSuccessful);

	TSoftObjectPtr<class UObject> BPF_GetAssetFromSosId(const class FString& _sosId) const;
	TSoftObjectPtr<class UObject> BPF_GetCurrentAssetForCategory(const struct FPlayerProfileCategoryEnumHandler& _eCategory) const;
	class FString BPF_GetCurrentSosIdForCategory(const struct FPlayerProfileCategoryEnumHandler& _eCategory) const;
	class FText BPF_GetDisplayNameFromSosId(const class FString& _sosId, const struct FPlayerProfileCategoryEnumHandler& _eCategory) const;
	const struct FPlayerProfileDescription BPF_GetEditingDescription() const;
	TSoftObjectPtr<class UTexture2D> BPF_GetTextureFromSosId(const class FString& _sosId, const struct FPlayerProfileCategoryEnumHandler& _eCategory) const;
	const struct FPlayerProfileWorkshopData BPF_GetWorkshopData() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerProfileSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerProfileSubsystem")
	}
	static class UPlayerProfileSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerProfileSubsystem>();
	}
};
DUMPER7_ASSERTS_UPlayerProfileSubsystem;

// Class Runtime.PlayerProfileUIInfosAsset
// 0x0070 (0x00A0 - 0x0030)
class UPlayerProfileUIInfosAsset final : public UDataAsset
{
public:
	struct FPlayerProfileCategoryDataArray        m_PlayerProfileCategoriesData;                     // 0x0030(0x0010)(Edit, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FSoftObjectArray> m_AssetsPerType;                              // 0x0040(0x0050)(Edit, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_90[0x10];                                      // 0x0090(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_GeneratePlayerProfileData();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerProfileUIInfosAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerProfileUIInfosAsset")
	}
	static class UPlayerProfileUIInfosAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerProfileUIInfosAsset>();
	}
};
DUMPER7_ASSERTS_UPlayerProfileUIInfosAsset;

// Class Runtime.PlayerStartHolder
// 0x0008 (0x02B8 - 0x02B0)
class APlayerStartHolder : public AActor
{
public:
	uint8                                         m_uiTeam;                                          // 0x02B0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerStartHolder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerStartHolder")
	}
	static class APlayerStartHolder* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerStartHolder>();
	}
};
DUMPER7_ASSERTS_APlayerStartHolder;

// Class Runtime.PredictProjectileCollisionWithActor
// 0x0098 (0x0118 - 0x0080)
class UPredictProjectileCollisionWithActor final : public UTargetDatasource
{
public:
	struct FTargetDatasourceInstance              m_Actors;                                          // 0x0080(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetDatasourceInstance              m_ProjectileFutureLocations;                       // 0x00C8(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bAddActorToProjectileContext;                    // 0x0110(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fProjectileRadius;                               // 0x0114(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PredictProjectileCollisionWithActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PredictProjectileCollisionWithActor")
	}
	static class UPredictProjectileCollisionWithActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPredictProjectileCollisionWithActor>();
	}
};
DUMPER7_ASSERTS_UPredictProjectileCollisionWithActor;

// Class Runtime.TutorialObjective
// 0x0048 (0x0070 - 0x0028)
class UTutorialObjective : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UTutorialObjective* _objective)> ObjectiveCompleteDelegate;  // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class FText                                   m_ObjectiveName;                                   // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int32                                         m_iIterationCountRequired;                         // 0x0050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iIterationCountRealized;                         // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ARuntimeCharacter>       m_TutorialPlayer;                                  // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                          m_ObjectiveIterationSucceedSound;                  // 0x0060(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                          m_ObjectiveSucceedSound;                           // 0x0068(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool IsObjectiveOver();
	void ObjectiveAchievedOnce();
	void ObjectiveCompleted();
	void OnEndObjective();
	void OnInitObjective();

	class ATutorialManager* GetManagerOwner() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialObjective")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialObjective")
	}
	static class UTutorialObjective* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialObjective>();
	}
};
DUMPER7_ASSERTS_UTutorialObjective;

// Class Runtime.PreMatchFlowState
// 0x0000 (0x0590 - 0x0590)
class UPreMatchFlowState final : public URuntimeGameFlowState
{
public:
	void ClientGoToNextState(class ARuntimeMatchGameState* _gameState);
	void EnteringState(class USCFlowGraphNode* _previousState, class USCFlowGraphNode* _currentState, struct FSCFlowGraphTransition* _transition);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PreMatchFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PreMatchFlowState")
	}
	static class UPreMatchFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPreMatchFlowState>();
	}
};
DUMPER7_ASSERTS_UPreMatchFlowState;

// Class Runtime.RedirectShootInterceptionPoint
// 0x0008 (0x00D0 - 0x00C8)
class URedirectShootInterceptionPoint final : public UParentTargetDatasource
{
public:
	bool                                          m_bTargetCurrentActorLocation;                     // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RedirectShootInterceptionPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RedirectShootInterceptionPoint")
	}
	static class URedirectShootInterceptionPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<URedirectShootInterceptionPoint>();
	}
};
DUMPER7_ASSERTS_URedirectShootInterceptionPoint;

// Class Runtime.RematchCharacterCustomizationComponent
// 0x0030 (0x0678 - 0x0648)
class URematchCharacterCustomizationComponent : public UCharacterCustomizationComponent
{
public:
	TArray<struct FSwapColorParameters>           m_SwapColorParametersArray;                        // 0x0648(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_658[0x20];                                     // 0x0658(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetForceSyncLoad(bool _bForceSyncLoad);
	void BPF_SetMainWorld(class UObject* _mainWorldContext);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RematchCharacterCustomizationComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RematchCharacterCustomizationComponent")
	}
	static class URematchCharacterCustomizationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URematchCharacterCustomizationComponent>();
	}
};
DUMPER7_ASSERTS_URematchCharacterCustomizationComponent;

// Class Runtime.BrandDataAsset
// 0x0048 (0x0078 - 0x0030)
class UBrandDataAsset final : public UDataAsset
{
public:
	class FText                                   m_Name;                                            // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              m_Logo;                                            // 0x0040(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   m_Description;                                     // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BrandDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BrandDataAsset")
	}
	static class UBrandDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBrandDataAsset>();
	}
};
DUMPER7_ASSERTS_UBrandDataAsset;

// Class Runtime.UsedColorChannelsAssetUserData
// 0x0010 (0x0038 - 0x0028)
class UUsedColorChannelsAssetUserData final : public UAssetUserData
{
public:
	TArray<ESCColorChannel>                       m_eColorChannels;                                  // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)

public:
	void BPF_ComputeUsedColorChannels();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UsedColorChannelsAssetUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UsedColorChannelsAssetUserData")
	}
	static class UUsedColorChannelsAssetUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUsedColorChannelsAssetUserData>();
	}
};
DUMPER7_ASSERTS_UUsedColorChannelsAssetUserData;

// Class Runtime.RematchGameModeDataAsset
// 0x0038 (0x0068 - 0x0030)
class URematchGameModeDataAsset final : public UDataAsset
{
public:
	class FText                                   m_Title;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   m_GameMode;                                        // 0x0040(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RematchGameModeDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RematchGameModeDataAsset")
	}
	static class URematchGameModeDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<URematchGameModeDataAsset>();
	}
};
DUMPER7_ASSERTS_URematchGameModeDataAsset;

// Class Runtime.RematchMapDataAsset
// 0x0050 (0x0120 - 0x00D0)
class URematchMapDataAsset final : public USCMapCustomizationDataAsset
{
public:
	TMap<int32, TSoftObjectPtr<class UWorld>>     m_NumberPlayerPerTeamToMap;                        // 0x00D0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	const TSoftObjectPtr<class UWorld> BPF_GetMapFromNumberOfPlayersPerTeam(int32 _iNumberOfPlayerPerTeam);

	bool BPF_ContainsLevelPath(const class FName& _levelPath) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RematchMapDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RematchMapDataAsset")
	}
	static class URematchMapDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<URematchMapDataAsset>();
	}
};
DUMPER7_ASSERTS_URematchMapDataAsset;

// Class Runtime.LocalDirShootDirectionComputation
// 0x0020 (0x0060 - 0x0040)
class ULocalDirShootDirectionComputation : public UModifierShootDirectionComputation
{
public:
	struct FVector_NetQuantizeNormal              m_vLocalDir;                                       // 0x0040(0x0018)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseExecutionContext;                            // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LocalDirShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LocalDirShootDirectionComputation")
	}
	static class ULocalDirShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULocalDirShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_ULocalDirShootDirectionComputation;

// Class Runtime.RematchServerMapFlowState
// 0x0010 (0x05A0 - 0x0590)
class URematchServerMapFlowState : public URuntimeGameFlowState
{
public:
	TArray<TSoftObjectPtr<class URematchMapDataAsset>> m_RematchMaps;                                // 0x0590(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	int32 BPF_GetMapDataAssetIndexFromLevelPath(const class FName& _levelPath) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RematchServerMapFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RematchServerMapFlowState")
	}
	static class URematchServerMapFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<URematchServerMapFlowState>();
	}
};
DUMPER7_ASSERTS_URematchServerMapFlowState;

// Class Runtime.RematchSetDataAsset
// 0x0020 (0x0190 - 0x0170)
class URematchSetDataAsset final : public USCCustomizationSetDataAsset
{
public:
	TArray<struct FCharacterPartEnumHandler>      m_AccessoriesToApplyPalette;                       // 0x0170(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCharacterPartEnumHandler>      m_AccessoriesToClearParameters;                    // 0x0180(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RematchSetDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RematchSetDataAsset")
	}
	static class URematchSetDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<URematchSetDataAsset>();
	}
};
DUMPER7_ASSERTS_URematchSetDataAsset;

// Class Runtime.VictoryMoodHandlerFlowState
// 0x0120 (0x06B0 - 0x0590)
class UVictoryMoodHandlerFlowState : public URuntimeGameFlowState
{
public:
	bool                                          m_bSkipIfNoUniqueWinner;                           // 0x0590(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bDestroySequenceActorOnExit;                     // 0x0591(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_592[0x6];                                      // 0x0592(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         m_MainLevelSequenceAsset;                          // 0x0598(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   m_LevelSequenceActorClass;                         // 0x05A0(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EVictoryMoodRole, struct FTransform>     m_VictoryMoodTransformEvenNumberPlayer;            // 0x05C8(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<EVictoryMoodRole, struct FTransform>     m_VictoryMoodTransformOddNumberPlayer;             // 0x0618(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<EVictoryMoodRole>                      m_VictoryMoodPriority;                             // 0x0668(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FName                                   m_VictoryMoodBindingTag;                           // 0x0678(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bHideBallAndLosers;                              // 0x0680(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_681[0x7];                                      // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ACharacter>                 m_FakeCharacterToSpawnClass;                       // 0x0688(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASCLevelSequenceActor*                  m_MainLevelSequenceActor;                          // 0x0690(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASCLevelSequenceActor*>          m_VictoryMoodLevelSequenceActors;                  // 0x0698(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TSubclassOf<class ARuntimeLevelSequenceActor> m_LoadedLevelSequenceActorClass;                   // 0x06A8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	const class FName BPF_GetVictoryMoodBindingTag() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VictoryMoodHandlerFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VictoryMoodHandlerFlowState")
	}
	static class UVictoryMoodHandlerFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVictoryMoodHandlerFlowState>();
	}
};
DUMPER7_ASSERTS_UVictoryMoodHandlerFlowState;

// Class Runtime.RematchVersionedDataAsset
// 0x0008 (0x0038 - 0x0030)
class URematchVersionedDataAsset final : public UDataAsset
{
public:
	uint32                                        m_uiVersion;                                       // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void IncrementVersion();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RematchVersionedDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RematchVersionedDataAsset")
	}
	static class URematchVersionedDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<URematchVersionedDataAsset>();
	}
};
DUMPER7_ASSERTS_URematchVersionedDataAsset;

// Class Runtime.RematchWelcomeFlowDataAsset
// 0x0010 (0x0040 - 0x0030)
class URematchWelcomeFlowDataAsset final : public UPrimaryDataAsset
{
public:
	TArray<struct FRematchWelcomeFlowContent>     m_Content;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void AddNews();
	void AddSeasonEnd();
	void AddSeasonEndWarning();
	void AddSeasonStart();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RematchWelcomeFlowDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RematchWelcomeFlowDataAsset")
	}
	static class URematchWelcomeFlowDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<URematchWelcomeFlowDataAsset>();
	}
};
DUMPER7_ASSERTS_URematchWelcomeFlowDataAsset;

// Class Runtime.AngleShootModifier
// 0x0010 (0x0040 - 0x0030)
class UAngleShootModifier : public UShootModifier
{
public:
	EApplyMode                                    m_eApplyMode;                                      // 0x0030(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAxisRotation                                 m_eAxis;                                           // 0x0031(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UShootModifierComputationData*          m_Modifier;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AngleShootModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AngleShootModifier")
	}
	static class UAngleShootModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAngleShootModifier>();
	}
};
DUMPER7_ASSERTS_UAngleShootModifier;

// Class Runtime.RoleVolumeAttributor
// 0x0008 (0x0370 - 0x0368)
class ARoleVolumeAttributor : public AEffectAttributorVolume
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ARoleVolumeAttributor* BPF_FindTeamRoleAttributorVolume(const class ACharacter* _character, TSubclassOf<class ARoleVolumeAttributor> _roleVolumeAttributorClass);

	int32 BPF_GetTeam() const;
	bool IsSameTeam(const class APawn* _pawn) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RoleVolumeAttributor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RoleVolumeAttributor")
	}
	static class ARoleVolumeAttributor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARoleVolumeAttributor>();
	}
};
DUMPER7_ASSERTS_ARoleVolumeAttributor;

// Class Runtime.RootMotionModifier_BlendFromSequences
// 0x03B0 (0x04D0 - 0x0120)
class URootMotionModifier_BlendFromSequences final : public USCRootMotionModifier
{
public:
	TSubclassOf<class UAnimNotifyState>           m_RangeNotifyStateClass;                           // 0x0120(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   m_Sequences;                                       // 0x0128(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatDataBinding                      m_fHorizontalDistanceBinding;                      // 0x0150(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FFloatDataBinding                      m_fVerticalDistanceBinding;                        // 0x0198(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FAnimSequencePlayInfos                 m_Target;                                          // 0x01E0(0x0130)(NativeAccessSpecifierPrivate)
	struct FAnimSequencePlayInfos                 m_Base;                                            // 0x0310(0x0130)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_440[0x90];                                     // 0x0440(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_BlendFromSequences")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_BlendFromSequences")
	}
	static class URootMotionModifier_BlendFromSequences* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_BlendFromSequences>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_BlendFromSequences;

// Class Runtime.WallRunSnapComputation
// 0x0018 (0x0090 - 0x0078)
class UWallRunSnapComputation final : public USnapAnimationComputation
{
public:
	TArray<EObjectTypeQuery>                      m_RaycastObjectTypes;                              // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         m_fSnapAngle;                                      // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxSnapDistanceFromPreSnapLocation;             // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WallRunSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WallRunSnapComputation")
	}
	static class UWallRunSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWallRunSnapComputation>();
	}
};
DUMPER7_ASSERTS_UWallRunSnapComputation;

// Class Runtime.RootMotionModifier_Dive
// 0x01F0 (0x0310 - 0x0120)
class URootMotionModifier_Dive final : public USCRootMotionModifier
{
public:
	TSubclassOf<class UAnimNotifyState>           m_ApexNotifyState;                                 // 0x0120(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatDataBinding                      m_fHorizontalDistanceBinding;                      // 0x0128(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FFloatDataBinding                      m_fVerticalDistanceBinding;                        // 0x0170(0x0048)(Edit, NativeAccessSpecifierPrivate)
	bool                                          m_fUseFullDistanceWithoutInputInvolvement;         // 0x01B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fStartInputAngleThreshold;                       // 0x01BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                     m_VerticalCurve;                                   // 0x01C0(0x0088)(Edit, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                     m_HorizontalCurve;                                 // 0x0248(0x0088)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D0[0x40];                                     // 0x02D0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_Dive")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_Dive")
	}
	static class URootMotionModifier_Dive* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_Dive>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_Dive;

// Class Runtime.RootMotionModifier_RedirectToBallTrajectory
// 0x0090 (0x01B0 - 0x0120)
class URootMotionModifier_RedirectToBallTrajectory final : public USCRootMotionModifier
{
public:
	TSubclassOf<class UAnimNotifyState>           m_NotifyState;                                     // 0x0120(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EBounceHit                                    m_eUntilHit;                                       // 0x0128(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseEndTrajectoryLocation;                       // 0x0129(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int8                                          m_iBounce;                                         // 0x012A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12B[0x85];                                     // 0x012B(0x0085)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BPF_GenerateRequiredPayloadForRedirectToBallTrajectory(class URuntimeShootGameplayAbility* _owningAbility, const class ARuntimeCharacter* _runtimeCharacter, class ABall* _ball, const struct FGameplayAbilityTargetDataHandle& _context, TSubclassOf<class UAnimNotifyState> _notifyState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_RedirectToBallTrajectory")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_RedirectToBallTrajectory")
	}
	static class URootMotionModifier_RedirectToBallTrajectory* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_RedirectToBallTrajectory>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_RedirectToBallTrajectory;

// Class Runtime.InputShootForceComputation
// 0x0018 (0x0040 - 0x0028)
class UInputShootForceComputation final : public UModifierShootForceComputation
{
public:
	bool                                          m_bUseTimeSpentOnInputStack;                       // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       m_SourceForce;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputShootForceComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputShootForceComputation")
	}
	static class UInputShootForceComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputShootForceComputation>();
	}
};
DUMPER7_ASSERTS_UInputShootForceComputation;

// Class Runtime.RootMotionModifier_RedirectToHitLocation
// 0x0000 (0x01D0 - 0x01D0)
class URootMotionModifier_RedirectToHitLocation final : public URootMotionModifier_RedirectToLocation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_RedirectToHitLocation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_RedirectToHitLocation")
	}
	static class URootMotionModifier_RedirectToHitLocation* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_RedirectToHitLocation>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_RedirectToHitLocation;

// Class Runtime.RootMotionModifier_ScaleFalling
// 0x0030 (0x0150 - 0x0120)
class URootMotionModifier_ScaleFalling final : public USCRootMotionModifier
{
public:
	TSubclassOf<class UAnimNotify>                m_ApexNotify;                                      // 0x0120(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimNotifyState>           m_NotifyState;                                     // 0x0128(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_130[0x20];                                     // 0x0130(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_ScaleFalling")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_ScaleFalling")
	}
	static class URootMotionModifier_ScaleFalling* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_ScaleFalling>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_ScaleFalling;

// Class Runtime.ShopItemSorter
// 0x0008 (0x0030 - 0x0028)
class UShopItemSorter : public UObject
{
public:
	bool                                          m_bIsDescending;                                   // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	ESortResult BPE_Compare(const struct FShopItem& _first, const struct FShopItem& _second) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShopItemSorter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShopItemSorter")
	}
	static class UShopItemSorter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemSorter>();
	}
};
DUMPER7_ASSERTS_UShopItemSorter;

// Class Runtime.ShopItemByRaritySorter
// 0x0000 (0x0030 - 0x0030)
class UShopItemByRaritySorter final : public UShopItemSorter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShopItemByRaritySorter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShopItemByRaritySorter")
	}
	static class UShopItemByRaritySorter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemByRaritySorter>();
	}
};
DUMPER7_ASSERTS_UShopItemByRaritySorter;

// Class Runtime.RTBinderRecorder
// 0x00D0 (0x00F8 - 0x0028)
class URTBinderRecorder : public UObject
{
public:
	float                                         m_SecondsToRecord;                                 // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEventBinderInstance>           m_BindersToActivateRecorder;                       // 0x0030(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FEventBinderInstance>           m_BindersToDeactivateRecorder;                     // 0x0040(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FEventBinderInstance>           m_BindersToRecord;                                 // 0x0050(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UEventBinder*>                   m_Binders;                                         // 0x0068(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_78[0x50];                                      // 0x0078(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& _handle)> m_OnRecordedBinderAdded; // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& _handle)> m_OnDeactivate; // 0x00E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void BPF_Clear();
	void BPF_Sleeping();
	void BPF_WakeUp();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTBinderRecorder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTBinderRecorder")
	}
	static class URTBinderRecorder* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTBinderRecorder>();
	}
};
DUMPER7_ASSERTS_URTBinderRecorder;

// Class Runtime.RTCharacterRollbackComponent
// 0x0000 (0x01F0 - 0x01F0)
class URTCharacterRollbackComponent final : public UCharacterRollbackComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTCharacterRollbackComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTCharacterRollbackComponent")
	}
	static class URTCharacterRollbackComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTCharacterRollbackComponent>();
	}
};
DUMPER7_ASSERTS_URTCharacterRollbackComponent;

// Class Runtime.AngleTargetDatasource
// 0x0058 (0x00D8 - 0x0080)
class UAngleTargetDatasource final : public UTargetDatasource
{
public:
	TArray<struct FAngleTargetDatasourceData>     m_Datasources;                                     // 0x0080(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetDatasourceInstance              m_Fallback;                                        // 0x0090(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AngleTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AngleTargetDatasource")
	}
	static class UAngleTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAngleTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UAngleTargetDatasource;

// Class Runtime.RTGauntletCoordinatorController
// 0x00E8 (0x0118 - 0x0030)
class URTGauntletCoordinatorController : public UGauntletTestController
{
public:
	uint8                                         Pad_30[0xE8];                                      // 0x0030(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnGauntletCoordinatorMessage(const class FString& _message);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTGauntletCoordinatorController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTGauntletCoordinatorController")
	}
	static class URTGauntletCoordinatorController* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTGauntletCoordinatorController>();
	}
};
DUMPER7_ASSERTS_URTGauntletCoordinatorController;

// Class Runtime.RTControllerOnlineTest
// 0x0050 (0x0168 - 0x0118)
class URTControllerOnlineTest final : public URTGauntletCoordinatorController
{
public:
	uint8                                         Pad_118[0x50];                                     // 0x0118(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLoginFinished(bool _bSuccess);
	void OnLogoutFinished(bool _bSuccess);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTControllerOnlineTest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTControllerOnlineTest")
	}
	static class URTControllerOnlineTest* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTControllerOnlineTest>();
	}
};
DUMPER7_ASSERTS_URTControllerOnlineTest;

// Class Runtime.SoundWidgetComponent
// 0x0050 (0x0078 - 0x0028)
class USoundWidgetComponent final : public USCWidgetComponent
{
public:
	TMap<struct FGameplayTag, class UAkAudioEvent*> m_AkEventByWidgetEvent;                          // 0x0028(0x0050)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SoundWidgetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SoundWidgetComponent")
	}
	static class USoundWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundWidgetComponent>();
	}
};
DUMPER7_ASSERTS_USoundWidgetComponent;

// Class Runtime.RTFieldARConfig
// 0x0018 (0x0048 - 0x0030)
class URTFieldARConfig final : public UDataAsset
{
public:
	TArray<struct FRTProjectionMesh>              m_ProjectionMeshes;                                // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         m_fRenderScale;                                    // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTFieldARConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTFieldARConfig")
	}
	static class URTFieldARConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTFieldARConfig>();
	}
};
DUMPER7_ASSERTS_URTFieldARConfig;

// Class Runtime.RTGameplayPhaseSubsystem
// 0x0130 (0x0290 - 0x0160)
class URTGameplayPhaseSubsystem : public USCWorldSubsystem
{
public:
	TMulticastInlineDelegate<void(const class AActor* _actorToLookAt, const class AActor* _actorToFollow)> m_OnPhaseChanged; // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	class URTBinderRecorder*                      m_BinderRecorder;                                  // 0x0170(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class URTBinderRecorder>          m_BinderRecorderClass;                             // 0x0178(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fDurationEntranceCamera;                         // 0x0180(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRTGameplayPhaseCameraData             m_EntranceCameraData;                              // 0x0188(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          m_bDisableCameraTransitionOut;                     // 0x01A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRTGameplayPhaseCameraData             m_DefaultCameraData;                               // 0x01B0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FRTGameplayPhaseCameraData>     m_AlternativeCameraData;                           // 0x01D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FRTGameplayPhaseDataContainer>  m_Phases;                                          // 0x01E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F0[0xA0];                                     // 0x01F0(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_BackToDefaultCameraBehavior();
	void BPF_LaunchReplay(const struct FRTGameplayPhaseContainer& _gameplayPhaseContainer, const float _fStartTime, const bool _bTurnOffRecorder);
	void BPF_NextAlternativeCamera();
	void BPF_PreviousAlternativeCamera();
	void BPF_StopReplay(const bool _bTurnOnRecorder);

	const class URTBinderRecorder* BPF_GetBinderRecorder() const;
	struct FGameplayTag BPF_GetCurrentPhaseTag() const;
	class AActor* BPF_GetFollowActorFromCurrentPhase() const;
	struct FRTGameplayPhaseContainer BPF_TryToGenerateGameplayPhases(const uint8 _uiTeamID, const float _fOverrideSnapshotDuration) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTGameplayPhaseSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTGameplayPhaseSubsystem")
	}
	static class URTGameplayPhaseSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTGameplayPhaseSubsystem>();
	}
};
DUMPER7_ASSERTS_URTGameplayPhaseSubsystem;

// Class Runtime.RTGauntletCinematicBaseController
// 0x0018 (0x0048 - 0x0030)
class URTGauntletCinematicBaseController : public UGauntletTestController
{
public:
	TArray<class ATutorialManager*>               PendingSteps;                                      // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCameraCut(class UCameraComponent* CameraComponent);
	void OnSequencePlay();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTGauntletCinematicBaseController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTGauntletCinematicBaseController")
	}
	static class URTGauntletCinematicBaseController* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTGauntletCinematicBaseController>();
	}
};
DUMPER7_ASSERTS_URTGauntletCinematicBaseController;

// Class Runtime.RTGauntletCinematicProfilerController
// 0x0008 (0x0050 - 0x0048)
class URTGauntletCinematicProfilerController final : public URTGauntletCinematicBaseController
{
public:
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTGauntletCinematicProfilerController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTGauntletCinematicProfilerController")
	}
	static class URTGauntletCinematicProfilerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTGauntletCinematicProfilerController>();
	}
};
DUMPER7_ASSERTS_URTGauntletCinematicProfilerController;

// Class Runtime.StaminaLossCalculation
// 0x0000 (0x0040 - 0x0040)
class UStaminaLossCalculation final : public UGameplayEffectExecutionCalculation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StaminaLossCalculation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StaminaLossCalculation")
	}
	static class UStaminaLossCalculation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaminaLossCalculation>();
	}
};
DUMPER7_ASSERTS_UStaminaLossCalculation;

// Class Runtime.RTGauntletCinematicScreenshotController
// 0x0010 (0x0058 - 0x0048)
class URTGauntletCinematicScreenshotController final : public URTGauntletCinematicBaseController
{
public:
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTGauntletCinematicScreenshotController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTGauntletCinematicScreenshotController")
	}
	static class URTGauntletCinematicScreenshotController* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTGauntletCinematicScreenshotController>();
	}
};
DUMPER7_ASSERTS_URTGauntletCinematicScreenshotController;

// Class Runtime.RTScenePortal
// 0x0020 (0x02D0 - 0x02B0)
class ARTScenePortal : public AActor
{
public:
	class UNiagaraComponent*                      m_TransitionEffect;                                // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCTransitionState                            m_CurrentTransitionState;                          // 0x02B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bPortalSceneIsReady;                             // 0x02B9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UScenePortalComponent*                  m_PortalSceneCapture;                              // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScenePortalComponent*                  m_TransitionSceneCapture;                          // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTScenePortal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTScenePortal")
	}
	static class ARTScenePortal* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARTScenePortal>();
	}
};
DUMPER7_ASSERTS_ARTScenePortal;

// Class Runtime.RTScenePortalReflection
// 0x0070 (0x0320 - 0x02B0)
class ARTScenePortalReflection final : public AActor
{
public:
	TMap<struct FGameplayTag, class URTBlendableReflectionComponent*> m_BoxReflectionComponents;     // 0x02B0(0x0050)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class URTBlendableReflectionComponent*        m_DefaultBoxReflectionComponent;                   // 0x0300(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_308[0x18];                                     // 0x0308(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTScenePortalReflection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTScenePortalReflection")
	}
	static class ARTScenePortalReflection* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARTScenePortalReflection>();
	}
};
DUMPER7_ASSERTS_ARTScenePortalReflection;

// Class Runtime.RTStadiumARConfig
// 0x00B8 (0x00E8 - 0x0030)
class URTStadiumARConfig : public UDataAsset
{
public:
	TSoftObjectPtr<class ADirectionalLight>       m_EnvironmentLight;                                // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveLinearColorAtlas>  m_FieldCurveAtlas;                                 // 0x0058(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_GrassHighlightTS;                                // 0x0080(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ULevelSequence>          m_TransitionSequence;                              // 0x0090(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveLinearColorAtlas*                 m_pFieldCurveAtlas;                                // 0x00B8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C0[0x10];                                      // 0x00C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         m_pTransitionSequence;                             // 0x00D0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UCurveLinearColorAtlas* GetFieldCurveAtlas();
	class ULevelSequence* GetTransitionSequence();

	class ADirectionalLight* GetEnvironmentLight(const class UObject* _worldContextObject) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTStadiumARConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTStadiumARConfig")
	}
	static class URTStadiumARConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTStadiumARConfig>();
	}
};
DUMPER7_ASSERTS_URTStadiumARConfig;

// Class Runtime.TargetTeamCondition
// 0x0008 (0x0030 - 0x0028)
class UTargetTeamCondition final : public UBaseActorTargetCondition
{
public:
	bool                                          m_bPlayerFromDifferentTeam;                        // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bHandleNoOwnership;                              // 0x0029(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetTeamCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetTeamCondition")
	}
	static class UTargetTeamCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetTeamCondition>();
	}
};
DUMPER7_ASSERTS_UTargetTeamCondition;

// Class Runtime.BallInterceptionCacheTargetDatasource
// 0x0018 (0x00F8 - 0x00E0)
class UBallInterceptionCacheTargetDatasource final : public UCacheTargetDatasource
{
public:
	float                                         m_fLifeSpanBallInterceptionCaching;                // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetDataConditionInstance           m_ConditionToClean;                                // 0x00E8(0x0010)(Edit, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BallInterceptionCacheTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BallInterceptionCacheTargetDatasource")
	}
	static class UBallInterceptionCacheTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBallInterceptionCacheTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UBallInterceptionCacheTargetDatasource;

// Class Runtime.RuntimeAbilitySystemComponent
// 0x00D0 (0x1E40 - 0x1D70)
class URuntimeAbilitySystemComponent final : public USCCharacterAbilitySystemComponent
{
public:
	uint8                                         Pad_1D70[0x18];                                    // 0x1D70(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UGameplayAbility>>   m_AutoActivatingAbilities;                         // 0x1D88(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_EnableHinderingFeatureTag;                       // 0x1D98(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1DA0[0xA0];                                    // 0x1DA0(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BPF_FindRuntimeEffectContextFromGrantedTag(struct FRuntimeGameplayEffectContext* _outContext, struct FActiveGameplayEffectHandle* _outHandle, const struct FGameplayTagContainer& _grantedTags);
	bool BPF_FindRuntimeEffectContextWithQuery(struct FRuntimeGameplayEffectContext* _outContext, struct FActiveGameplayEffectHandle* _outHandle, const struct FGameplayEffectQuery& _query);

	bool BPF_FindActiveRuntimeGameplayEffectContext(const TArray<struct FActiveGameplayEffectHandle>& _handle, struct FRuntimeGameplayEffectContext* _outContext) const;
	bool BPF_GetActiveRuntimeGameplayEffectContext(const struct FActiveGameplayEffectHandle& _handle, struct FRuntimeGameplayEffectContext* _outContext) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeAbilitySystemComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeAbilitySystemComponent")
	}
	static class URuntimeAbilitySystemComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeAbilitySystemComponent>();
	}
};
DUMPER7_ASSERTS_URuntimeAbilitySystemComponent;

// Class Runtime.AnimPosShootPrepCondition
// 0x0028 (0x00A0 - 0x0078)
class UAnimPosShootPrepCondition final : public UTargetDataCondition
{
public:
	struct FSCMathExpressionFloat                 m_MathExpression;                                  // 0x0078(0x0020)(Edit, NativeAccessSpecifierPrivate)
	bool                                          m_bUseGameplayValue;                               // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bConvertToPercent;                               // 0x0099(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseShootNotifyInsteadOfAnimEnd;                 // 0x009A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimPosShootPrepCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimPosShootPrepCondition")
	}
	static class UAnimPosShootPrepCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimPosShootPrepCondition>();
	}
};
DUMPER7_ASSERTS_UAnimPosShootPrepCondition;

// Class Runtime.RuntimeAbilitySystemGlobals
// 0x0000 (0x02F8 - 0x02F8)
class URuntimeAbilitySystemGlobals final : public UAbilitySystemGlobals
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeAbilitySystemGlobals")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeAbilitySystemGlobals")
	}
	static class URuntimeAbilitySystemGlobals* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeAbilitySystemGlobals>();
	}
};
DUMPER7_ASSERTS_URuntimeAbilitySystemGlobals;

// Class Runtime.RuntimeAIController
// 0x0010 (0x03F8 - 0x03E8)
class ARuntimeAIController : public ASCAIController
{
public:
	class UStateTreeComponent*                    m_StateTreeComponent;                              // 0x03E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USCAIMovementComponent*                 m_AIMovementComponent;                             // 0x03F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BPF_SetStateTreeRef(const struct FStateTreeReference& _stateTreeRef);
	void StartLogic();
	void StopLogic(const class FString& _reason);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeAIController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeAIController")
	}
	static class ARuntimeAIController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeAIController>();
	}
};
DUMPER7_ASSERTS_ARuntimeAIController;

// Class Runtime.RuntimeAISubsystem
// 0x0120 (0x0280 - 0x0160)
class URuntimeAISubsystem : public USCWorldSubsystem
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARuntimeCharacter*>              m_GoalKeepers;                                     // 0x0168(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, NativeAccessSpecifierPrivate)
	TArray<class ARuntimeCharacter*>              m_PlayersClosestToBall;                            // 0x0178(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, NativeAccessSpecifierPrivate)
	class ABall*                                  M_Ball;                                            // 0x0188(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAIEventTag                            m_StateTreeEventsTags;                             // 0x0190(0x0028)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                                m_vBallPosition;                                   // 0x01B8(0x0018)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         m_uiBallOwnerTeam;                                 // 0x01D0(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bBallHasOwner;                                   // 0x01D1(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARuntimeCharacter*                      m_BallOwner;                                       // 0x01D8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ARuntimeCharacter*                      m_PreviousBallOwner;                               // 0x01E0(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ARuntimeCharacter*                      m_NextBallOwner;                                   // 0x01E8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FEventBinderInstance                   m_HasBallEventBinder;                              // 0x01F0(0x0038)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UEventBinder*                           m_HasBallEventBinderInstance;                      // 0x0228(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_230[0x8];                                      // 0x0230(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventBinderInstance                   m_PingEventBinder;                                 // 0x0238(0x0038)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UEventBinder*                           m_PingEventEventBinderInstance;                    // 0x0270(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_278[0x8];                                      // 0x0278(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetBall(class ABall* _ball);
	void BPF_UnregisterAllCharacters();
	void OnBallFree();
	void OnBallOwned(const class ARuntimeCharacter* _character);

	class ABall* BPF_GetBall() const;
	bool BPF_GetBallHasOwner() const;
	const class ARuntimeCharacter* BPF_GetBallOwner() const;
	uint8 BPF_GetBallOwnerTeam() const;
	class AGoal* BPF_GetEnemyTeamGoal(uint8 _uiTeam) const;
	TArray<class ARuntimeCharacter*> BPF_GetGoalKeepers() const;
	const class ARuntimeCharacter* BPF_GetNextBallOwner() const;
	TArray<class ARuntimeCharacter*> BPF_GetOpponents(uint8 _currentTeam, bool _bWithoutGoalKeeper) const;
	TArray<class ARuntimeCharacter*> BPF_GetPlayersClosestToBall() const;
	const class ARuntimeCharacter* BPF_GetPreviousBallOwner() const;
	class AGoal* BPF_GetTeamGoal(uint8 _uiTeam) const;
	TArray<class ARuntimeCharacter*> BPF_GetTeammates(class ARuntimeCharacter* _currentChar, bool _bWithoutGoalKeeper) const;
	class ARuntimeCharacter* BPF_SpawnAI(const struct FAISpawnParameters& _spawnParameters) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeAISubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeAISubsystem")
	}
	static class URuntimeAISubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeAISubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeAISubsystem;

// Class Runtime.ShootForceAnimationPicker
// 0x0018 (0x00B8 - 0x00A0)
class UShootForceAnimationPicker final : public UAnimSequencePicker
{
public:
	EForceType                                    m_eForceType;                                      // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EForceComputation                             m_eForceComputation;                               // 0x00A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTargetAnimationPicker_PickerPerFloat> m_PerForceAnimationPicker;                  // 0x00A8(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootForceAnimationPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootForceAnimationPicker")
	}
	static class UShootForceAnimationPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootForceAnimationPicker>();
	}
};
DUMPER7_ASSERTS_UShootForceAnimationPicker;

// Class Runtime.SplineActor
// 0x0008 (0x02B8 - 0x02B0)
class ASplineActor final : public AActor
{
public:
	class USplineComponent*                       m_SplineComponent;                                 // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SplineActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SplineActor")
	}
	static class ASplineActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASplineActor>();
	}
};
DUMPER7_ASSERTS_ASplineActor;

// Class Runtime.TouchBallAnimInfosMetaData
// 0x0040 (0x0068 - 0x0028)
class UTouchBallAnimInfosMetaData final : public UAnimMetaData
{
public:
	uint8                                         m_uiTouchFrameRate;                                // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDistanceFromRoot;                               // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vFootOffsetFromBall;                             // 0x0030(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTouchBallAnimInfos                    m_Infos;                                           // 0x0048(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TouchBallAnimInfosMetaData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TouchBallAnimInfosMetaData")
	}
	static class UTouchBallAnimInfosMetaData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTouchBallAnimInfosMetaData>();
	}
};
DUMPER7_ASSERTS_UTouchBallAnimInfosMetaData;

// Class Runtime.MirrorableLocomotionAnimMetaData
// 0x0018 (0x0040 - 0x0028)
class UMirrorableLocomotionAnimMetaData final : public UAnimMetaData
{
public:
	struct FRotator                               m_RefRotation;                                     // 0x0028(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MirrorableLocomotionAnimMetaData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MirrorableLocomotionAnimMetaData")
	}
	static class UMirrorableLocomotionAnimMetaData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMirrorableLocomotionAnimMetaData>();
	}
};
DUMPER7_ASSERTS_UMirrorableLocomotionAnimMetaData;

// Class Runtime.BaseImpactPointShootDirectionComputation
// 0x0000 (0x0040 - 0x0040)
class UBaseImpactPointShootDirectionComputation : public UModifierShootDirectionComputation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseImpactPointShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseImpactPointShootDirectionComputation")
	}
	static class UBaseImpactPointShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseImpactPointShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UBaseImpactPointShootDirectionComputation;

// Class Runtime.ImpactPointShootDirectionComputation
// 0x0008 (0x0048 - 0x0040)
class UImpactPointShootDirectionComputation final : public UBaseImpactPointShootDirectionComputation
{
public:
	ESimulationStep                               m_eSimulationStep;                                 // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ImpactPointShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ImpactPointShootDirectionComputation")
	}
	static class UImpactPointShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UImpactPointShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UImpactPointShootDirectionComputation;

// Class Runtime.TouchBallPushPhaseNotify
// 0x0020 (0x0050 - 0x0030)
class UTouchBallPushPhaseNotify final : public UAnimNotifyState
{
public:
	bool                                          m_bIsLeftFoot;                                     // 0x0030(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x1F];                                      // 0x0031(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TouchBallPushPhaseNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TouchBallPushPhaseNotify")
	}
	static class UTouchBallPushPhaseNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTouchBallPushPhaseNotify>();
	}
};
DUMPER7_ASSERTS_UTouchBallPushPhaseNotify;

// Class Runtime.RuntimeAnimInstance
// 0x0580 (0x14C0 - 0x0F40)
class URuntimeAnimInstance : public USCTransitionAnimInstance
{
public:
	bool                                          m_bUseAccelerationAsVelocityOnAdditiveSources;     // 0x0F40(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F41[0x3];                                      // 0x0F41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLocomotionAnimAngleThresold;                    // 0x0F44(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              m_vLocomotionPlayRateClamp;                        // 0x0F48(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_BoneRefForLocomotionMirroring;                   // 0x0F58(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_LocomotionAnimationWeightCurve;                  // 0x0F60(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_LocomotionNodeTag;                               // 0x0F68(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTouchBallIkSpringSpeed;                         // 0x0F70(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F74[0x4];                                      // 0x0F74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vFootOffsetFromBallFallback;                     // 0x0F78(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseTouchBallLocoPlayRate;                       // 0x0F90(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F91[0x3];                                      // 0x0F91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLocoPlayRateDuringTouchBall;                    // 0x0F94(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInputScaleBiasClamp                   m_LocoPlayRateDuringTouchBallModifier;             // 0x0F98(0x0030)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         m_fTouchBallBlendDurationFallback;                 // 0x0FC8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTouchBallInvalidationTimeDiffThresold;          // 0x0FCC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCBlendType                                  m_eTouchBallBlendInType;                           // 0x0FD0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCBlendType                                  m_eTouchBallBlendOutType;                          // 0x0FD1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_FD2[0x2];                                      // 0x0FD2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTouchBallBlendSpaceBlendOutDurationMultiplier;  // 0x0FD4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTouchBallAllowBothFeetMaxDistance;              // 0x0FD8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTouchBallAllowBothFeetMaxAngle;                 // 0x0FDC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagBlueprintPropertyMap       m_GameplayTagBlueprintPropertyMap;                 // 0x0FE0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSCSkeletonSlot>                m_MontageSlotsTriggeringPostMontageAnim;           // 0x1000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1010[0x40];                                    // 0x1010(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePlayInfos                 m_LocomotionAnimPlayInfos;                         // 0x1050(0x0130)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	float                                         m_fLocomotionAnimSpeed;                            // 0x1180(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1184[0xC];                                     // 0x1184(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePlayInfos                 m_IdleAnimPlayInfos;                               // 0x1190(0x0130)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTransitionAnimSequencePlayInfos> m_BakedIdleAnimPlayInfosArray;                   // 0x12C0(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UAnimNotifyState>           m_FreezingLocomotionAnimSeqNotifyStateClass;       // 0x12D0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USpeedDescriptionDB>        m_FallbackSpeedDescriptionDB;                      // 0x12D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FRuntimeLocomotionRefreshSettings> m_LocomotionRefreshSettingsPerLOD;              // 0x12E0(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                m_vPreviewVelocity;                                // 0x12F0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1308[0x8];                                     // 0x1308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_PreviewTransform;                                // 0x1310(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTouchBallAnimFootInfos                m_TouchBallRightFootInfos;                         // 0x1370(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FTouchBallAnimFootInfos                m_TouchBallLeftFootInfos;                          // 0x1400(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1490[0x30];                                    // 0x1490(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnMenuFlowCameraChanged(bool _bIsInMenuCamera);
	void BPE_OnSeedReplicated(int32 _uiSeed);
	void BPF_SetUpTouchBallLeftBlendSpace(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_SetUpTouchBallRightBlendSpace(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_TryToUpdateLocomotionAnimation(float _fDt, TSubclassOf<class UTargetDatasource> _locomotionAnimTargetDataSource, float _fOrientationToVelocityAngle, ESCCharacterSpeedState _eCharacterSpeedState, bool _bCanUpdateIdleMirror);
	void BPF_UpdateAnimPlayInfos(struct FAnimSequencePlayInfos& _animPlayInfosRef, TSubclassOf<class UTargetDatasource> _animTargetDataSource, float _fOrientationToVelocityAngle, ESCCharacterSpeedState _eCharacterSpeedState, const struct FGameplayAbilityTargetDataHandle& _optionalHandle);
	void BPF_UpdateFreezableProceduralAnimNode(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_UpdateLocomotionAnimation(TSubclassOf<class UTargetDatasource> _locomotionAnimTargetDataSource, float _fOrientationToVelocityAngle, ESCCharacterSpeedState _eCharacterSpeedState, bool _bCanUpdateIdleMirror);

	ESCCardinalPoints BPF_ComputeCurrentCardinal() const;
	ESCCardinalPoints BPF_ComputeWantedCardinal() const;
	struct FRotator BPF_GetOwnerRotator() const;
	ESCCharacterSpeedState BPF_GetOwnerSpeedState() const;
	struct FTransform BPF_GetOwnerTransform() const;
	struct FVector BPF_GetOwnerVelocity() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeAnimInstance")
	}
	static class URuntimeAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeAnimInstance>();
	}
};
DUMPER7_ASSERTS_URuntimeAnimInstance;

// Class Runtime.RuntimeAttributeSet
// 0x0100 (0x0188 - 0x0088)
class URuntimeAttributeSet final : public USCAttributeSet
{
public:
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttributeData                 Stamina;                                           // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxStamina;                                        // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 StaminaRegenPerSec;                                // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 StaminaRegenOnPointPerSec;                         // 0x00C0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            m_RegenClass;                                      // 0x00D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxStaminaOvercharge;                              // 0x00D8(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 StaminaOverchargeLossPerSec;                       // 0x00E8(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ExtraEffortGauge;                                  // 0x00F8(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 MaxExtraEffortGauge;                               // 0x0108(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ExtraEffortGaugeRegenPerSec;                       // 0x0118(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ExtraEffortGaugeRegenMultiplier;                   // 0x0128(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ExtraEffortGaugeRegenMultiplierThreshold;          // 0x0138(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ExtraEffortSpeed;                                  // 0x0148(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 PowerShoot;                                        // 0x0158(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ExhaustStateStaminaRegenPerPeriod;                 // 0x0168(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 ExhaustStateExit;                                  // 0x0178(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

public:
	void OnRep_ExhaustStateExit(const struct FGameplayAttributeData& _oldExhaustStateExit);
	void OnRep_ExhaustStateStaminaRegenPerPeriod(const struct FGameplayAttributeData& _oldExhaustStateStaminaRegenPerPeriod);
	void OnRep_ExtraEffortGauge(const struct FGameplayAttributeData& _oldExtraEffortGauge);
	void OnRep_ExtraEffortGaugeRegenMultiplier(const struct FGameplayAttributeData& _oldExtraEffortGaugeRegenMultiplier);
	void OnRep_ExtraEffortGaugeRegenMultiplierThreshold(const struct FGameplayAttributeData& _oldExtraEffortGaugeRegenMultiplierThreshold);
	void OnRep_ExtraEffortGaugeRegenPerSec(const struct FGameplayAttributeData& _oldExtraEffortGaugeRegenPerSec);
	void OnRep_ExtraEffortSpeed(const struct FGameplayAttributeData& _oldExtraEffortSpeed);
	void OnRep_MaxExtraEffortGauge(const struct FGameplayAttributeData& _oldMaxExtraEffortGauge);
	void OnRep_MaxStamina(const struct FGameplayAttributeData& _oldMaxStamina);
	void OnRep_MaxStaminaOvercharge(const struct FGameplayAttributeData& _oldMMaxStaminaOvercharge);
	void OnRep_PowerShoot(const struct FGameplayAttributeData& _oldPowerShoot);
	void OnRep_Stamina(const struct FGameplayAttributeData& _oldStamina);
	void OnRep_StaminaOverchargeLossPerSec(const struct FGameplayAttributeData& _oldStaminaOverchargeLossPerSec);
	void OnRep_StaminaRegenOnPointPerSec(const struct FGameplayAttributeData& _oldStaminaRegenOnPointPerSec);
	void OnRep_StaminaRegenPerSec(const struct FGameplayAttributeData& _oldStaminaRegenPerSec);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeAttributeSet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeAttributeSet")
	}
	static class URuntimeAttributeSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeAttributeSet>();
	}
};
DUMPER7_ASSERTS_URuntimeAttributeSet;

// Class Runtime.RuntimeCameraData
// 0x0020 (0x0240 - 0x0220)
class URuntimeCameraData : public USCCameraData
{
public:
	bool                                          m_bLockBallAllowed;                                // 0x0220(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bGoalKeeperService;                              // 0x0221(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_222[0x2];                                      // 0x0222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fGoalKeeperServiceMaxDistanceFOV;                // 0x0224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_fGoalKeeperOffsetFromDistance;                   // 0x0228(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeCameraData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeCameraData")
	}
	static class URuntimeCameraData* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeCameraData>();
	}
};
DUMPER7_ASSERTS_URuntimeCameraData;

// Class Runtime.HitDeflectShootDirectionComputation
// 0x0098 (0x00D8 - 0x0040)
class UHitDeflectShootDirectionComputation final : public UBaseShootDirectionComputation
{
public:
	struct FFloatDataBinding                      m_fForwardAngleOffset;                             // 0x0040(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FFloatDataBinding                      m_fVerticalAngleOffset;                            // 0x0088(0x0048)(Edit, NativeAccessSpecifierPrivate)
	bool                                          m_bAlwaysUp;                                       // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HitDeflectShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HitDeflectShootDirectionComputation")
	}
	static class UHitDeflectShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitDeflectShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UHitDeflectShootDirectionComputation;

// Class Runtime.RuntimeCharacter
// 0x01E0 (0x0A80 - 0x08A0)
class ARuntimeCharacter : public ASCCharacter
{
public:
	uint8                                         Pad_8A0[0x20];                                     // 0x08A0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerBallOwnership*                   m_BallOwnership;                                   // 0x08C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URuntimeAbilitySystemComponent*         m_RuntimeAbilitySystemComponent;                   // 0x08C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHurtboxSolverComponent*                m_HurtComponent;                                   // 0x08D0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHitComponent*                          m_HitComponent;                                    // 0x08D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTouchBallComponent*                    m_TouchBallComponent;                              // 0x08E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMotionWarpingComponent*                m_MotionWarpingComponent;                          // 0x08E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URTCharacterRollbackComponent*          m_RollbackComponent;                               // 0x08F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class APlayerState* _playerState)> OnPlayerStateReplicated;  // 0x08F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>    m_DefaultEffects;                                  // 0x0908(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAbilitySpecConfig>     m_DefaultAbilities;                                // 0x0918(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            m_RefillAttributeEffect;                           // 0x0928(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>    m_InputModeGameAbilities;                          // 0x0930(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_AimingTag;                                       // 0x0940(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_HasBallTag;                                      // 0x0948(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_IsGoalKeeperTag;                                 // 0x0950(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_IsSweeperTag;                                    // 0x0958(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 _uiSeed)> m_OnSeedReplicated;                                // 0x0960(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         m_fIsInViewScreenRatio;                            // 0x0970(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_974[0x4];                                      // 0x0974(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterFXComponent*                  m_FXComponent;                                     // 0x0978(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_980[0x8];                                      // 0x0980(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_JogTags;                                         // 0x0988(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                      m_JogEnabledTagQuery;                              // 0x09A8(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bForceLODLevelOnDedicatedServer;                 // 0x09F0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9F1[0x3];                                      // 0x09F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iForcedLODLevelOnDedicatedServer;                // 0x09F4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9F8[0x70];                                     // 0x09F8(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UCameraComponentThird>   m_Camera;                                          // 0x0A68(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_uiReplicatedSeed;                                // 0x0A70(0x0004)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A74[0xC];                                      // 0x0A74(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_GetExtraEffects(TArray<TSubclassOf<class UGameplayEffect>>& _effects);
	void BPF_GenerateSeed();
	void ClientNotifyBallServerOwnerUpdate(class ABall* _ball, class UPlayerBallOwnership* _owner, const struct FRevisionID& _revisionID);
	void ClientNotifyBallServerTrajectoryUpdate(class ABall* _ball, class UPlayerBallOwnership* _owner, const struct FShootStartPoint& _serverTrajectoryStartingPoint);
	void OnRep_ReplicatedSeed();

	class UCameraComponentThird* BPF_GetCameraThird() const;
	TArray<class URuntimeGameplayAbility*> BPF_GetGameplayAbilitiesByAllMatchingTags(const struct FGameplayTagContainer& GameplayTagContainer, bool bOnlyAbilitiesThatSatisfyTagRequirements) const;
	class URuntimeGameplayAbility* BPF_GetGameplayAbilityByMatchingTag(const struct FGameplayTag& GameplayTag, bool bOnlyAbilitiesThatSatisfyTagRequirements) const;
	class UHinderingComponent* BPF_GetHinderingComponent() const;
	int32 BPF_GetReplicatedSeed() const;
	class URuntimeAbilitySystemComponent* BPF_GetRuntimeAbilitySystemComponent() const;
	class URuntimeMovementComponent* BPF_GetRuntimeMovementComponent() const;
	int32 BPF_GetTagCount(const struct FGameplayTag& _tagToCheck) const;
	bool BPF_HasBall() const;
	bool BPF_IsAiming() const;
	bool BPF_IsGoalKeeper() const;
	bool BPF_IsSweeper() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeCharacter")
	}
	static class ARuntimeCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeCharacter>();
	}
};
DUMPER7_ASSERTS_ARuntimeCharacter;

// Class Runtime.RuntimeCheatManager
// 0x0000 (0x0088 - 0x0088)
class URuntimeCheatManager : public UCheatManager
{
public:
	void cmdChangeTeam();
	void cmdEnableAbilityOwnerSelectors(const bool _bEnable);
	void cmdEndGame();
	void cmdEndGameWithScore(uint8 _uiScoreTeam1, uint8 _uiScoreTeam2);
	void cmdGoToNextHalf(float _fSecondsBeforeHalf);
	void cmdPauseTimer();
	void cmdResetBalls();
	void cmdResetGame();
	void cmdResetMe();
	void cmdResumeTimer();
	void cmdSetScore(uint8 _uiScoreTeam1, uint8 _uiScoreTeam2);
	void ServerChangeTeam();
	void ServerClearScore();
	void ServerEnableAbilityOwnerSelectors(const bool _bEnable);
	void ServerEndGame();
	void ServerGoToNextHalf(float _fSecondsBeforeHalf);
	void ServerPauseTimer();
	void ServerResetBalls();
	void ServerResetCharacters();
	void ServerResetGame();
	void ServerResetTimer();
	void ServerResumeTimer();
	void ServerSetScore(const TArray<uint8>& _scores);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeCheatManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeCheatManager")
	}
	static class URuntimeCheatManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeCheatManager>();
	}
};
DUMPER7_ASSERTS_URuntimeCheatManager;

// Class Runtime.ThumbnailFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UThumbnailFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_ClearThumbnailSceneCache(bool bCollectGarbage);
	static class ULevelSequencePlayer* BPF_CreateLevelSequence(class UObject* WorldContextObject, class ULevelSequence* InLevelSequence, const struct FMovieSceneSequencePlaybackSettings& Settings, const struct FTransform& Transform, class AThumbnailLevelSequenceActor** OutActor);
	static struct FVector2D BPF_GetRenderTargetCapacity();
	static TArray<class UObject*> BPF_GetSpawnables(class AThumbnailLevelSequenceActor* Actor);
	static class FString BPF_ObjectPathToObjectName(const class FString& _objectPath);
	static void BPF_ReleaseRenderTargets();
	static void BPF_SetForceMipStreaming(class UPrimitiveComponent* Component, bool bForceMipStreaming);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ThumbnailFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ThumbnailFunctionLibrary")
	}
	static class UThumbnailFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UThumbnailFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UThumbnailFunctionLibrary;

// Class Runtime.RuntimeCollisionSettings
// 0x0008 (0x0040 - 0x0038)
class URuntimeCollisionSettings final : public UDeveloperSettings
{
public:
	ECollisionChannel                             m_eHitboxChannel;                                  // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeCollisionSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeCollisionSettings")
	}
	static class URuntimeCollisionSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeCollisionSettings>();
	}
};
DUMPER7_ASSERTS_URuntimeCollisionSettings;

// Class Runtime.RuntimeCustomizationHelpers
// 0x0000 (0x0028 - 0x0028)
class URuntimeCustomizationHelpers final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_ApplyPaletteToParts(const struct FColorPalette& _palette, const class UCustomizationSubsystem* _customizationSubsystem, const TArray<struct FCharacterPartEnumHandler>& _eParts, struct FSCCharacterCustomizationDescription* _inOutDescription);
	static bool BPF_IsOwnedShopItemOwned(const struct FShopItem& _item);
	static void BPF_RemovePaletteFromParts(const struct FColorPalette& _palette, const class UCustomizationSubsystem* _customizationSubsystem, const TArray<struct FCharacterPartEnumHandler>& _eParts, struct FSCCharacterCustomizationDescription* _inOutDescription);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeCustomizationHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeCustomizationHelpers")
	}
	static class URuntimeCustomizationHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeCustomizationHelpers>();
	}
};
DUMPER7_ASSERTS_URuntimeCustomizationHelpers;

// Class Runtime.CameraShootDirectionComputation
// 0x0000 (0x0108 - 0x0108)
class UCameraShootDirectionComputation : public UControllerShootDirectionComputation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraShootDirectionComputation")
	}
	static class UCameraShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UCameraShootDirectionComputation;

// Class Runtime.RuntimeCustomizationUIInfosAsset
// 0x0070 (0x01B8 - 0x0148)
class URuntimeCustomizationUIInfosAsset final : public USCCharacterCustomizationUIInfosAsset
{
public:
	TSoftObjectPtr<class USCColorListDataAsset>   m_SoftColorListForPalettes;                        // 0x0148(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UColorListIndexMapDataAsset> m_SoftColorListIndexMapForPalettes;            // 0x0170(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         m_uiMaxNumberOfColorInPalette;                     // 0x0198(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatInterval                         m_VoiceTypeInterval;                               // 0x019C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fVoiceTypeStep;                                  // 0x01A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatInterval                         m_VoicePitchInterval;                              // 0x01A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fVoicePitchStep;                                 // 0x01B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeCustomizationUIInfosAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeCustomizationUIInfosAsset")
	}
	static class URuntimeCustomizationUIInfosAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeCustomizationUIInfosAsset>();
	}
};
DUMPER7_ASSERTS_URuntimeCustomizationUIInfosAsset;

// Class Runtime.RuntimeDebug
// 0x0000 (0x0028 - 0x0028)
class URuntimeDebug final : public UObject
{
public:
	static void BPF_MetricGrid(const class AActor* _owner, const struct FVector& _vOriginPosition, float _fXSize, const struct FVector& _vXAxis, float _fYSize, const struct FVector& _vYAxis, int32 _iNbrPolyByHalfAxis, const struct FColor& _color, bool _bPersistentLines, float _fLifeTime, uint8 _uPriority, float _fThickness);
	static void BPF_RTVisualLog(const class AActor* _owner, const class FString& _category, EDisplayLevel _eVerbosity, const class FString& _inString);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeDebug")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeDebug")
	}
	static class URuntimeDebug* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeDebug>();
	}
};
DUMPER7_ASSERTS_URuntimeDebug;

// Class Runtime.ShopItemByIsNoneSorter
// 0x0000 (0x0030 - 0x0030)
class UShopItemByIsNoneSorter final : public UShopItemSorter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShopItemByIsNoneSorter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShopItemByIsNoneSorter")
	}
	static class UShopItemByIsNoneSorter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemByIsNoneSorter>();
	}
};
DUMPER7_ASSERTS_UShopItemByIsNoneSorter;

// Class Runtime.RuntimeDebugDisplaySubsystem
// 0x0000 (0x0890 - 0x0890)
class URuntimeDebugDisplaySubsystem final : public USCDebugDisplaySubsystem
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeDebugDisplaySubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeDebugDisplaySubsystem")
	}
	static class URuntimeDebugDisplaySubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeDebugDisplaySubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeDebugDisplaySubsystem;

// Class Runtime.RuntimeGameMode
// 0x0028 (0x0458 - 0x0430)
class ARuntimeGameMode : public ASCGameMode
{
public:
	TSubclassOf<class ABall>                      m_BallClass;                                       // 0x0430(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiTeamCount;                                     // 0x0438(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        m_LoadedObjects;                                   // 0x0440(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_450[0x8];                                      // 0x0450(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BPF_ResetAllBallsAtLocation(const struct FVector& _vLocation, bool _bTriggerGameState, bool _bApplyPhysics);
	bool BPF_ResetSpecifiedBallAtLocation(const struct FVector& _vLocation, class ABall* _ball, bool _bTriggerGameState, bool _bApplyPhysics);
	bool BPF_ScorePoint(const struct FGoalDescription& _goalDscription, bool _bChangeMatchState);
	TArray<class ABall*> BPF_SpawnBalls(int32 _iCount);

	int32 BPE_GetBallPoints(class ABall* _ball, uint8 _uiGoalTeamID, int32 _iGoalDefaultScore) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeGameMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeGameMode")
	}
	static class ARuntimeGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeGameMode>();
	}
};
DUMPER7_ASSERTS_ARuntimeGameMode;

// Class Runtime.SimulationStepHelper
// 0x0000 (0x0028 - 0x0028)
class USimulationStepHelper final : public UBlueprintFunctionLibrary
{
public:
	static bool BPF_IsCustomOrFreezingSimulationStep(ESimulationStep _eSimulationStep);
	static bool BPF_IsFlyingOrRollingSimulationStep(ESimulationStep _eSimulationStep);
	static bool BPF_IsSimulationStepValid(ESimulationStep _eSimulationStep);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SimulationStepHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SimulationStepHelper")
	}
	static class USimulationStepHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimulationStepHelper>();
	}
};
DUMPER7_ASSERTS_USimulationStepHelper;

// Class Runtime.RuntimeMatchGameMode
// 0x02A8 (0x0700 - 0x0458)
class ARuntimeMatchGameMode : public ARuntimeGameMode
{
public:
	TMulticastInlineDelegate<void()>              OnRematch;                                         // 0x0458(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                         Pad_468[0x8];                                      // 0x0468(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            m_CountdownGE;                                     // 0x0470(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fBackfillEnabledMinRemainingTime;                // 0x0478(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         m_uiBackfillEnabledMaxScoreDiff;                   // 0x047C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bComputeBackfillEnabledMinPlayerCountFromTeamSize; // 0x047D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         m_uiBackfillEnabledMinPlayerCount;                 // 0x047E(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         m_uiBackfillEnabledMinPlayerTeamSizeOffset;        // 0x047F(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAISpawnParameters                     m_SpawnAIParameters;                               // 0x0480(0x00F0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	ECageType                                     m_eCageType;                                       // 0x0570(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_571[0x3];                                      // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        m_uiForceParamsBitmask;                            // 0x0574(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRuntimeMatchParameters                m_MatchParams;                                     // 0x0578(0x00B8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          m_bForceModifyMatchParams;                         // 0x0630(0x0001)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_631[0x67];                                     // 0x0631(0x0067)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UGameplayEffect>>    m_AppliedGEs;                                      // 0x0698(0x0010)(Edit, ZeroConstructor, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSet<TWeakObjectPtr<class APlayerController>> m_PlayerServerReports;                             // 0x06A8(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6F8[0x8];                                      // 0x06F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class FName BPF_GetMatchStateName(ERuntimeMatchState _eState);

	void BPE_OnCountdownOver(class ARuntimeMatchGameState* _gameState);
	void BPE_OnCountdownStart(class ARuntimeMatchGameState* _gameState);
	void BPF_ClearScores();
	void BPF_PushPopGameplayEffect(TSubclassOf<class UGameplayEffect> _effect, bool _bPush);
	void OnCountdownOver(class ARuntimeMatchGameState* _gameState);
	void OnCountdownStart(class ARuntimeMatchGameState* _gameState);

	const struct FRuntimeMatchParameters BPF_GetMatchParameters() const;
	bool BPF_HasDuration() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeMatchGameMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeMatchGameMode")
	}
	static class ARuntimeMatchGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeMatchGameMode>();
	}
};
DUMPER7_ASSERTS_ARuntimeMatchGameMode;

// Class Runtime.RuntimeDebugGameMode
// 0x0000 (0x0700 - 0x0700)
class ARuntimeDebugGameMode final : public ARuntimeMatchGameMode
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeDebugGameMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeDebugGameMode")
	}
	static class ARuntimeDebugGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeDebugGameMode>();
	}
};
DUMPER7_ASSERTS_ARuntimeDebugGameMode;

// Class Runtime.OverridableConstantTrajectoryModifier
// 0x0040 (0x0070 - 0x0030)
class UOverridableConstantTrajectoryModifier : public UTrajectoryModifier
{
public:
	bool                                          m_bOverrideConstant;                               // 0x0030(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseGameplayAttribute;                           // 0x0031(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseAttributeFromShooter;                        // 0x0032(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fConstantOverride;                               // 0x0034(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                     m_Attribute;                                       // 0x0038(0x0038)(Edit, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("OverridableConstantTrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"OverridableConstantTrajectoryModifier")
	}
	static class UOverridableConstantTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOverridableConstantTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_UOverridableConstantTrajectoryModifier;

// Class Runtime.RuntimeGameplayAbility
// 0x0010 (0x0658 - 0x0648)
class URuntimeGameplayAbility : public USCGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>            m_StateGameplayEffectClass;                        // 0x0648(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle            m_StateEffectHandle;                               // 0x0650(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class URuntimeAbilitySystemComponent* BPF_GetRuntimeAbilitySystemComponentFromActorInfos() const;
	class ARuntimeCharacter* BPF_GetRuntimeCharacter() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeGameplayAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeGameplayAbility")
	}
	static class URuntimeGameplayAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeGameplayAbility>();
	}
};
DUMPER7_ASSERTS_URuntimeGameplayAbility;

// Class Runtime.RuntimeDiveGameplayAbility
// 0x0708 (0x0D60 - 0x0658)
class URuntimeDiveGameplayAbility : public URuntimeGameplayAbility
{
public:
	bool                                          m_bDebugPrediction;                                // 0x0658(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bLivePrintDebug;                                 // 0x0659(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_65A[0x2];                                      // 0x065A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLivePrintDisplayDuration;                       // 0x065C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                m_InitialPawnLocation;                             // 0x0660(0x0018)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fInitialTime;                                    // 0x0678(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_67C[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputGameplayAbilityTargetData        m_TargetData_Input;                                // 0x0680(0x0058)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_6D8[0x8];                                      // 0x06D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBallInterceptionPointTargetData       m_TargetData_BallInterception;                     // 0x06E0(0x0120)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	struct FSlotAnimSequencePlayInfos             m_TargetData_AnimSequencePlayInfo;                 // 0x0800(0x0130)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UIntermediateDatasource>> m_TestedBallInterceptionTargetPickerArray;    // 0x0930(0x0010)(BlueprintVisible, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          m_bUseAestheticMontagePrediction;                  // 0x0940(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_941[0x7];                                      // 0x0941(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       m_AestheticMontagePredictionTargetData;            // 0x0948(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         m_fBlendInDuration;                                // 0x0970(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fStartTimeOffset;                                // 0x0974(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fEndTimeOffset;                                  // 0x0978(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_97C[0x4];                                      // 0x097C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasicMontagePlayerConfiguration*       m_PlayerRedirection;                               // 0x0980(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBasicMontagePlayerConfiguration*       m_PlayerRedirectionUsingTarget;                    // 0x0988(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fHalfAngleMaxForDiveUp;                          // 0x0990(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_994[0x4];                                      // 0x0994(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAnimSequencePickerSlotContainer> m_OnHitCatchPicker;                          // 0x0998(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimSequencePickerSlotContainer> m_OnHitDeflectPicker;                        // 0x09A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBasicMontagePlayerConfiguration*       m_OnHitOverridePlayerConfiguration;                // 0x09A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPendingHit                            m_TargetData_PendingHit;                           // 0x09B0(0x0350)(BlueprintVisible, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_OnHitCatchGameplayCue;                           // 0x0D00(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_OnHitDeflectGameplayCue;                         // 0x0D08(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDiveDataCaseLink>              m_DiveCaseLinks;                                   // 0x0D10(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          m_bBuildingPayload;                                // 0x0D20(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D21[0x7];                                      // 0x0D21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       m_TargetData_Combined;                             // 0x0D28(0x0028)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	class FName                                   m_PickedAnimSlot;                                  // 0x0D50(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDiveDetectionCase                            m_eDiveCase;                                       // 0x0D58(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D59[0x7];                                      // 0x0D59(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float BPF_GetPlayingMontageInstanceTime() const;
	bool BPF_ShouldLivePrintDebug() const;
	void GetDiveCaseAnimAndDataSourceFromEnum(const EDiveDetectionCase _eDiveCase, TSubclassOf<class UIntermediateDatasource>* _outTargetPickerDataSource, TSubclassOf<class UAnimSequencePickerSlotContainer>* _outAnimPickerSlotContainer) const;
	void GetDiveCaseEnumAndAnimFromDataSource(const TSubclassOf<class UTargetDatasource>& _targetPickerDataSource, EDiveDetectionCase* _outEDiveCase, TSubclassOf<class UAnimSequencePickerSlotContainer>* _outAnimPickerSlotContainer) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeDiveGameplayAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeDiveGameplayAbility")
	}
	static class URuntimeDiveGameplayAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeDiveGameplayAbility>();
	}
};
DUMPER7_ASSERTS_URuntimeDiveGameplayAbility;

// Class Runtime.TrajectoryStatusActivateCondition
// 0x0000 (0x0028 - 0x0028)
class UTrajectoryStatusActivateCondition : public UTrajectoryStatusTimedCondition
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrajectoryStatusActivateCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrajectoryStatusActivateCondition")
	}
	static class UTrajectoryStatusActivateCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrajectoryStatusActivateCondition>();
	}
};
DUMPER7_ASSERTS_UTrajectoryStatusActivateCondition;

// Class Runtime.RuntimeFakeCharacter
// 0x0010 (0x06A0 - 0x0690)
class ARuntimeFakeCharacter : public ACharacter
{
public:
	class UWidgetComponent*                       m_NameTagWidgetComponent;                          // 0x0690(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_698[0x8];                                      // 0x0698(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_SetupNameTagWidget();

	class APlayerState* GetImitatedPlayerState() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeFakeCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeFakeCharacter")
	}
	static class ARuntimeFakeCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeFakeCharacter>();
	}
};
DUMPER7_ASSERTS_ARuntimeFakeCharacter;

// Class Runtime.RuntimeGameFlow
// 0x0008 (0x0188 - 0x0180)
class URuntimeGameFlow final : public USCGameFlow
{
public:
	bool                                          m_bIsHandlingResetonMatchStart;                    // 0x0180(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeGameFlow")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeGameFlow")
	}
	static class URuntimeGameFlow* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeGameFlow>();
	}
};
DUMPER7_ASSERTS_URuntimeGameFlow;

// Class Runtime.ItemThumbnailComponent
// 0x00F8 (0x0480 - 0x0388)
class UItemThumbnailComponent final : public UUserWidget
{
public:
	TDelegate<void()>                             SceneClassDelegate;                                // 0x0388(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             MaterialDelegate;                                  // 0x0398(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UItemThumbnailScene* Scene)> OnSetupView;                                   // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B8[0x10];                                     // 0x03B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UItemThumbnailScene>        SceneClass;                                        // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FThumbnailMaterial                     Material;                                          // 0x03D0(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E0[0xA0];                                     // 0x03E0(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InvalidateCamera();
	void OnBeginLoading(const TSoftObjectPtr<class UObject>& AssetName, bool bIsInitialLoad);
	void OnFinishLoading(const TSoftObjectPtr<class UObject>& AssetName);
	void SetMaterial(const struct FThumbnailMaterial& InMaterial);
	void SetSceneClass(TSubclassOf<class UItemThumbnailScene> InSceneClass);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ItemThumbnailComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ItemThumbnailComponent")
	}
	static class UItemThumbnailComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemThumbnailComponent>();
	}
};
DUMPER7_ASSERTS_UItemThumbnailComponent;

// Class Runtime.MatchGameFlowState
// 0x0000 (0x0590 - 0x0590)
class UMatchGameFlowState : public URuntimeGameFlowState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchGameFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchGameFlowState")
	}
	static class UMatchGameFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchGameFlowState>();
	}
};
DUMPER7_ASSERTS_UMatchGameFlowState;

// Class Runtime.ReplayGameFlowState
// 0x0020 (0x05B0 - 0x0590)
class UReplayGameFlowState : public URuntimeGameFlowState
{
public:
	uint8                                         Pad_590[0x18];                                     // 0x0590(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_OnReplayEndTransitionName;                       // 0x05A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReplayGameFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReplayGameFlowState")
	}
	static class UReplayGameFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReplayGameFlowState>();
	}
};
DUMPER7_ASSERTS_UReplayGameFlowState;

// Class Runtime.DistanceTrajectoryStatusDeactivateCondition
// 0x0008 (0x0038 - 0x0030)
class UDistanceTrajectoryStatusDeactivateCondition final : public UTrajectoryStatusDeactivateCondition
{
public:
	bool                                          m_bCheckOnlyDistance2D;                            // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDefaultDistance;                                // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BPE_SetDistance(const struct FShootParams& _shootParams, float* _fDistance) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DistanceTrajectoryStatusDeactivateCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DistanceTrajectoryStatusDeactivateCondition")
	}
	static class UDistanceTrajectoryStatusDeactivateCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDistanceTrajectoryStatusDeactivateCondition>();
	}
};
DUMPER7_ASSERTS_UDistanceTrajectoryStatusDeactivateCondition;

// Class Runtime.RuntimeGameFlowSubsystem
// 0x0020 (0x0510 - 0x04F0)
class URuntimeGameFlowSubsystem : public USCGameFlowSubsystem
{
public:
	bool                                          m_bSkipAllSequences;                               // 0x04F0(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bForceWaitForPlayersSuccessful;                  // 0x04F1(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4F2[0x2];                                      // 0x04F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_LeaveMatchState;                                 // 0x04F4(0x0008)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_MainMenuState;                                   // 0x04FC(0x0008)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bLeavingMatchToMainMenu;                         // 0x0504(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_505[0xB];                                      // 0x0505(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeGameFlowSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeGameFlowSubsystem")
	}
	static class URuntimeGameFlowSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeGameFlowSubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeGameFlowSubsystem;

// Class Runtime.RuntimeGameInstance
// 0x0018 (0x0438 - 0x0420)
class URuntimeGameInstance : public USCGameInstance
{
public:
	uint8                                         Pad_420[0x18];                                     // 0x0420(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_UpdateAchievementProgress(class ARuntimeMatchGameState* _runtimeMatchGameState, bool _bMatchWon);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeGameInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeGameInstance")
	}
	static class URuntimeGameInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeGameInstance>();
	}
};
DUMPER7_ASSERTS_URuntimeGameInstance;

// Class Runtime.HeightFollowerTrajectoryModifier
// 0x0198 (0x01C8 - 0x0030)
class UHeightFollowerTrajectoryModifier final : public UTrajectoryModifier
{
public:
	struct FRuntimeFloatCurve                     m_Height;                                          // 0x0030(0x0088)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_HeightStretchByInitialBounceSpeed;               // 0x00B8(0x0088)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_TimeStretchByInitialBounceSpeed;                 // 0x0140(0x0088)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HeightFollowerTrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HeightFollowerTrajectoryModifier")
	}
	static class UHeightFollowerTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeightFollowerTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_UHeightFollowerTrajectoryModifier;

// Class Runtime.RuntimeGameplayEffect
// 0x0000 (0x0B00 - 0x0B00)
class URuntimeGameplayEffect : public UGameplayEffect
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeGameplayEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeGameplayEffect")
	}
	static class URuntimeGameplayEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeGameplayEffect>();
	}
};
DUMPER7_ASSERTS_URuntimeGameplayEffect;

// Class Runtime.RuntimeGameplayEffectContextHelpers
// 0x0000 (0x0028 - 0x0028)
class URuntimeGameplayEffectContextHelpers final : public UBlueprintFunctionLibrary
{
public:
	static bool BPF_GetRuntimeGameplayEffectContext(const struct FGameplayEffectContextHandle& _handle, struct FRuntimeGameplayEffectContext* _outContext);
	static void BPF_MakeRuntimeGameplayEffectContextHandle(class UGameplayAbility* _owningAbility, const struct FShootPrepTargetData& _ShootData, const struct FShootParams& _shootParams, const struct FGameplayTagContainer& _tagContainer, const struct FGameplayAbilityTargetDataHandle& _targetDataHandle, struct FGameplayEffectContextHandle* _outHandle);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeGameplayEffectContextHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeGameplayEffectContextHelpers")
	}
	static class URuntimeGameplayEffectContextHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeGameplayEffectContextHelpers>();
	}
};
DUMPER7_ASSERTS_URuntimeGameplayEffectContextHelpers;

// Class Runtime.TravelledDistanceStatDataCompute
// 0x0018 (0x0040 - 0x0028)
class UTravelledDistanceStatDataCompute final : public USCStatDataCompute
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TravelledDistanceStatDataCompute")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TravelledDistanceStatDataCompute")
	}
	static class UTravelledDistanceStatDataCompute* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTravelledDistanceStatDataCompute>();
	}
};
DUMPER7_ASSERTS_UTravelledDistanceStatDataCompute;

// Class Runtime.RuntimeGameplayTagBinder
// 0x0008 (0x01B8 - 0x01B0)
class URuntimeGameplayTagBinder final : public UCharacterGameplayTagBinder
{
public:
	ETeamFilterType                               m_eTeamFilterType;                                 // 0x01B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeGameplayTagBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeGameplayTagBinder")
	}
	static class URuntimeGameplayTagBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeGameplayTagBinder>();
	}
};
DUMPER7_ASSERTS_URuntimeGameplayTagBinder;

// Class Runtime.RuntimeGameSettings
// 0x0198 (0x01E0 - 0x0048)
class URuntimeGameSettings final : public USCBaseGameSettings
{
public:
	struct FSCUserEnumSetting                     m_ProjectUserEnums[0x2];                           // 0x0048(0x0048)(Edit, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x80];                                      // 0x00D8(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRuntimeStatAchievementTrackerData> MatchStatTracker;                              // 0x0158(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FRuntimeCombinationStatAchievementTrackerData> MatchCombinationTrackers;           // 0x0168(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FRuntimeStatAchievement>        StatAchievements;                                  // 0x0178(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class URematchVersionedDataAsset> m_EULAVersionedDataAsset;                       // 0x0188(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class URematchWelcomeFlowDataAsset> m_WelcomeFlowDataAsset;                       // 0x01B0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          MarketModeEnabled;                                 // 0x01D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PressModeEnabled;                                  // 0x01D9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static const class URuntimeGameSettings* BPF_GetRuntimeMainSettings();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeGameSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeGameSettings")
	}
	static class URuntimeGameSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeGameSettings>();
	}
};
DUMPER7_ASSERTS_URuntimeGameSettings;

// Class Runtime.TouchBallComponent
// 0x0768 (0x0820 - 0x00B8)
class alignas(0x10) UTouchBallComponent : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class ABall* _ball)> m_OnBallTouched;                              // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         m_fDefaultBlendToAttachDuration;                   // 0x00C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fInstantSnapDistanceAllowance;                   // 0x00CC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                        m_uiSnapDuringTransitionTypesBitmask;              // 0x00D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fBlendToAttachTransitionDurationRatio;           // 0x00D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fBlendToAttachForcedRatio;                       // 0x00D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBoneReference                         m_BoneToAttachBallTo;                              // 0x00DC(0x0010)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                   m_TouchEnabledCurveName;                           // 0x00EC(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vNormalizedBoneRelativeLocation;                 // 0x00F8(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETouchBallMontageHandling                     m_MontageHandlingMethod;                           // 0x0110(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCBlendType                                  m_eFromPredictedToBoneBlendType;                   // 0x0111(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bTouchBallEnabled;                               // 0x0112(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMirrorDataTable*                       m_MirrorDataTable;                                 // 0x0118(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatInterval                         m_fTouchFrameRateOffsetInterval;                   // 0x0120(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         m_uiTouchFrameRateFallback;                        // 0x0128(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     m_fTouchFrameRateMultiplierPerVelocityTurnRate;    // 0x0130(0x0088)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         m_fTouchDistanceFromRootFallback;                  // 0x01B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iSimulatedFrameRate;                             // 0x01BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                     m_BallDynamic;                                     // 0x01C0(0x0088)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                     m_fTargetSpringFactorByAlpha;                      // 0x0248(0x0088)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                     m_fMaxProjectedYDistance;                          // 0x02D0(0x0088)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bVelocityPredictionEnabled;                      // 0x0358(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDefaultVelocityRotationRateMultiplier;          // 0x035C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fOnAngularVelocityRotationRateMultiplier;        // 0x0360(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fBlendToAttachTimeElapsed;                       // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fBlendToAttachDuration;                          // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsFallingBlend;                                 // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_36D[0x3D3];                                    // 0x036D(0x03D3)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FName>                             m_ParalyzedStack;                                  // 0x0740(0x0050)(NativeAccessSpecifierPrivate)
	TMap<int32, TWeakObjectPtr<class ABall>>      m_ForcedBallMap;                                   // 0x0790(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ABall>                   m_ForcedBall;                                      // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ABall>                   m_OwnedBall;                                       // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7F0[0x30];                                     // 0x07F0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetParalyzed(bool _bParalized, class FName _idName, float _fBlendAttachDuration);
	void OnBallOwnershipGained(class ABall* _nextBall);
	void OnBallOwnershipLost();
	void OnMontageStarted(class UAnimMontage* _animMontage);
	void OnMovementModeChanged(class ACharacter* _character, EMovementMode _ePrevMovementMode, uint8 _uiPreviousCustomMode);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TouchBallComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TouchBallComponent")
	}
	static class UTouchBallComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTouchBallComponent>();
	}
};
DUMPER7_ASSERTS_UTouchBallComponent;

// Class Runtime.RuntimeGameState
// 0x0098 (0x0610 - 0x0578)
class ARuntimeGameState : public ASCGameState
{
public:
	TMulticastInlineDelegate<void(const struct FPingStateDescription& _pingState)> BPE_OnPingStateChanged; // 0x0578(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastSparseDelegateProperty_             BPE_OnBallsReset;                                  // 0x0588(0x0001)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ABall* _ball)> BPE_OnBallRegistered;                         // 0x0590(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ABall* _ball)> BPE_OnBallUnregistered;                       // 0x05A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGoalDescription& _goal)> BPE_OnGoalScored;           // 0x05B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class ABall*>                          m_Balls;                                           // 0x05C0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TSubclassOf<class ABall>                      m_BallClass;                                       // 0x05D0(0x0008)(Net, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(class AGoal* _goal)> BPE_OnGoalRegistered;                         // 0x05D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AGoal* _goal)> BPE_OnGoalUnregistered;                       // 0x05E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FGoalArray>                     m_GoalsPerTeam;                                    // 0x05F8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         m_uiTeamCount;                                     // 0x0608(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MulticastOnBallsReset();

	class ABall* BPF_GetBall() const;
	void BPF_GetBalls(TArray<class ABall*>* _outBallsArray) const;
	void BPF_GetGoals(TArray<class AGoal*>* _outGoals) const;
	const TArray<class AGoal*> BPF_GetGoalsFromTeam(uint8 _uiTeam) const;
	uint8 BPF_GetTeamCount() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeGameState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeGameState")
	}
	static class ARuntimeGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeGameState>();
	}
};
DUMPER7_ASSERTS_ARuntimeGameState;

// Class Runtime.RuntimeHUD
// 0x0018 (0x03C0 - 0x03A8)
class ARuntimeHUD : public ASCHUD
{
public:
	class UTexture*                               m_DebugInterceptionMarkerTexture;                  // 0x03A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_LaunchingGameplayTag;                            // 0x03B0(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeHUD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeHUD")
	}
	static class ARuntimeHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeHUD>();
	}
};
DUMPER7_ASSERTS_ARuntimeHUD;

// Class Runtime.RuntimeInGameMenuGameFlowSubsystem
// 0x0000 (0x04F0 - 0x04F0)
class URuntimeInGameMenuGameFlowSubsystem : public USCGameFlowSubsystem
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeInGameMenuGameFlowSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeInGameMenuGameFlowSubsystem")
	}
	static class URuntimeInGameMenuGameFlowSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeInGameMenuGameFlowSubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeInGameMenuGameFlowSubsystem;

// Class Runtime.RuntimeLockerPreMatchPlayerStart
// 0x0010 (0x0338 - 0x0328)
class ARuntimeLockerPreMatchPlayerStart final : public ASCPlayerStart
{
public:
	uint8                                         m_uiTeam;                                          // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ARuntimeLevelSequenceActor> m_PlayerLockerRoomSequenceActor;                // 0x032C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeLockerPreMatchPlayerStart")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeLockerPreMatchPlayerStart")
	}
	static class ARuntimeLockerPreMatchPlayerStart* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeLockerPreMatchPlayerStart>();
	}
};
DUMPER7_ASSERTS_ARuntimeLockerPreMatchPlayerStart;

// Class Runtime.DurationTrajectoryStatusDeactivateCondition
// 0x0008 (0x0038 - 0x0030)
class UDurationTrajectoryStatusDeactivateCondition final : public UTrajectoryStatusDeactivateCondition
{
public:
	float                                         m_fDefaultDuration;                                // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bTakeInAccountFreezeFrameTime;                   // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_SetDuration(const struct FShootParams& _shootParams, float* _fDuration) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DurationTrajectoryStatusDeactivateCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DurationTrajectoryStatusDeactivateCondition")
	}
	static class UDurationTrajectoryStatusDeactivateCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDurationTrajectoryStatusDeactivateCondition>();
	}
};
DUMPER7_ASSERTS_UDurationTrajectoryStatusDeactivateCondition;

// Class Runtime.CageAsLevelStreamingDynamic
// 0x0008 (0x0030 - 0x0028)
class UCageAsLevelStreamingDynamic final : public ULevelStreamingDynamicOverrider
{
public:
	uint32                                        m_uiCageTypeBitmask;                               // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CageAsLevelStreamingDynamic")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CageAsLevelStreamingDynamic")
	}
	static class UCageAsLevelStreamingDynamic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCageAsLevelStreamingDynamic>();
	}
};
DUMPER7_ASSERTS_UCageAsLevelStreamingDynamic;

// Class Runtime.RuntimeMatchGameState
// 0x04C8 (0x0AD8 - 0x0610)
class ARuntimeMatchGameState : public ARuntimeGameState
{
public:
	TMulticastInlineDelegate<void(class ARuntimeMatchGameState* _gameState)> BPE_OnOvertimeStart;    // 0x0610(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ARuntimeMatchGameState* _gameState)> BPE_OnCountdownStart;   // 0x0620(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ARuntimeMatchGameState* _gameState)> BPE_OnCountdownOver;    // 0x0630(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              BPE_OnScoreChange;                                 // 0x0640(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayTag& _timerEventType)> BPE_OnTimer;          // 0x0650(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 _pointLeftBeforeLeft)> BPE_OnScore;                          // 0x0660(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ARuntimePlayerState* _playerStateThief, class ARuntimePlayerState* _playerStateStolen)> BPE_OnBallStolen; // 0x0670(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                         Pad_680[0x20];                                     // 0x0680(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_ServerRegion;                                    // 0x06A0(0x0010)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                 m_ScorePerTeam;                                    // 0x06B0(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGoalDescriptionContainer              m_GoalHistory;                                     // 0x06C0(0x0120)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_7E0[0x4];                                      // 0x07E0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatInterval                         m_CountdownInterval;                               // 0x07E4(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStartTime;                                      // 0x07EC(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fAccumulatedTime;                                // 0x07F0(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7F4[0x4];                                      // 0x07F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeMatchParameters                m_MatchParams;                                     // 0x07F8(0x00B8)(BlueprintVisible, BlueprintReadOnly, Net, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bIsInOvertime;                                   // 0x08B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8B1[0x3];                                      // 0x08B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInt32Point                            m_vPlayerExpectedNum;                              // 0x08B4(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bOverrideTeamStages;                             // 0x08BC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8BD[0x3];                                      // 0x08BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCustomizationARDataAsset*>      m_TeamStageOverrides;                              // 0x08C0(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_MatchType;                                       // 0x08D0(0x0008)(Edit, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bOverrideFlowInterrupt;                          // 0x08D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8D9[0x3];                                      // 0x08D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCGameFlowInterrupt                   m_FlowInterruptOverride;                           // 0x08DC(0x0018)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_8F4[0x4];                                      // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FScoreNameToValue>              m_ScoreKeyToValueArray;                            // 0x08F8(0x0010)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_908[0x50];                                     // 0x0908(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   m_MatchTimerEventTagArray;                         // 0x0958(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_968[0x8];                                      // 0x0968(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ARuntimeMatchGameState* _gameState)> m_OnArPerTeamReplicated; // 0x0970(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UCustomizationARDataAsset*>      m_ArPerTeam;                                       // 0x0980(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class ARuntimeMatchGameState* _gameState)> BPE_OnCaptainsSet;      // 0x0990(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                          m_bAreCaptainAssigned;                             // 0x09A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9A1[0x7];                                      // 0x09A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              BPE_OnTeamColorChanged;                            // 0x09A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class ULockerRoomPrematchStateViewModel*      m_LockerRoomPrematchStateViewModel;                // 0x09B8(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMatchViewModel*                        m_MatchViewModel;                                  // 0x09C0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(EClutchTimeState _clutchTimeState, int32 _iballInfluencingTeam)> m_OnClutchTimeStateChanged; // 0x09C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EClutchTimeState                              m_eClutchTimeState;                                // 0x09D8(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9D9[0x3];                                      // 0x09D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iLosingTeamGoaldDiffForLastShot;                 // 0x09DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9E0[0x8];                                      // 0x09E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EClutchTimeState, struct FClutchTimeStateData> m_DataPerClutchTimeType;                     // 0x09E8(0x0050)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<EClutchTimeState, struct FEventBinderInstanceArray> m_ClutchTimeEndBinderInstancesPerState; // 0x0A38(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_A88[0x20];                                     // 0x0A88(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 _iNewMatchPart, int32 _iNumberMatchBreak)> m_OnMatchPartChanged; // 0x0AA8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 _iNewMatchPart, int32 _iNumberMatchBreak)> m_OnStartMatchPartTransition; // 0x0AB8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         m_iNumberOfMatchBreak;                             // 0x0AC8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iCurrentMatchPart;                               // 0x0ACC(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsInMatchPartTransition;                        // 0x0AD0(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMatchPartKickOffType                         m_eMatchPartKickOffType;                           // 0x0AD1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AD2[0x6];                                      // 0x0AD2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_BallStolen(class ARuntimePlayerState* _playerStateThief, class ARuntimePlayerState* _playerStateStolen);
	bool BPF_CheckTimeReached(const float _fTimeToCheck, const struct FGameplayTag& _matchTimerEventTag, float _fSecondsTolerance);
	void BPF_NotifyServicesMatchEnded(class APlayerController* _controller);
	void MulticastOnBallStolen(class ARuntimePlayerState* _playerStateThief, class ARuntimePlayerState* _playerStateStolen);
	void OnNativeTeamColorChanged();
	void OnOwnershipChanged(class UBallPlayersInteractionComponent* _ballPlayerInteraction);
	void OnPlayerRemoved(const class ARuntimePlayerState* _playerState);
	void OnPlayerStateReplicatedInController(class APlayerState* _playerState);
	void OnPreviousOwnerChanged(class UBallPlayersInteractionComponent* _ballPlayerInteraction, EBallInteractionType _eInteractionType, bool _bIsSamePreviousOwner);
	void OnRep_AreCaptainAssigned();
	void OnRep_ArPerTeam();
	void OnRep_ClutchTimeState();
	void OnRep_Countdown();
	void OnRep_CurrentMatchPart();
	void OnRep_GoalHistory();
	void OnRep_IsInMatchPartTransition();
	void OnRep_IsInOvertime();
	void OnRep_PlayerExpectedNum();
	void OnRep_ScoreKeyToValueArray();
	void OnShowPrematchTeamDisplayChanged();

	class ARuntimePlayerState* BPF_GetCaptain(uint8 _uiTeam) const;
	TArray<class ARuntimePlayerState*> BPF_GetCaptains() const;
	bool BPF_GetCaptainTeamColor(uint8 _uiTeam, struct FLinearColor* _mainColor, struct FLinearColor* _secondaryColor, struct FLinearColor* _tertiaryColor) const;
	EClutchTimeState BPF_GetClutchTimeState() const;
	float BPF_GetCountdown() const;
	float BPF_GetCountdownDuration() const;
	float BPF_GetCurrentMatchPartEndTime() const;
	float BPF_GetCurrentMatchTime() const;
	float BPF_GetMatchDuration() const;
	float BPF_GetMatchDurationWithOvertime() const;
	int32 BPF_GetMatchPart() const;
	struct FGameplayTag BPF_GetMatchType() const;
	int32 BPF_GetNumberOfMatchBreak() const;
	class FString BPF_GetServerRegion() const;
	int32 BPF_GetTeamScore(uint8 _uiTeam) const;
	class UCustomizationARDataAsset* BPF_GetTeamStageAR(uint8 _uiTeam) const;
	struct FGameplayTag BPF_GetTeamStageARTag(uint8 _uiTeam) const;
	float BPF_GetTimer() const;
	void BPF_GetUniqueWinningTeam(uint8* _uiOutTeam, bool* _bOutHasUniqueWinner) const;
	bool BPF_HasDuration() const;
	bool BPF_HasOvertimeDuration() const;
	bool BPF_IsCountdownRunning() const;
	bool BPF_IsInClutchTime() const;
	bool BPF_IsInMatchPartTransition() const;
	bool BPF_IsOvertimeInfinite() const;
	void BPF_TriggerOnScoreEvent(const int32 _iPointLeftBeforeLeft) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeMatchGameState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeMatchGameState")
	}
	static class ARuntimeMatchGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeMatchGameState>();
	}
};
DUMPER7_ASSERTS_ARuntimeMatchGameState;

// Class Runtime.RuntimeMatchSubsystem
// 0x0050 (0x01A0 - 0x0150)
class URuntimeMatchSubsystem final : public USCSubsystem
{
public:
	uint8                                         Pad_150[0x50];                                     // 0x0150(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BPF_GetNbPlayersInCurrentMatch() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeMatchSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeMatchSubsystem")
	}
	static class URuntimeMatchSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeMatchSubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeMatchSubsystem;

// Class Runtime.RuntimeMenuCameraActor
// 0x0000 (0x0A50 - 0x0A50)
class ARuntimeMenuCameraActor final : public ASCCineCameraActor
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeMenuCameraActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeMenuCameraActor")
	}
	static class ARuntimeMenuCameraActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeMenuCameraActor>();
	}
};
DUMPER7_ASSERTS_ARuntimeMenuCameraActor;

// Class Runtime.DragTrajectoryModifier
// 0x0008 (0x0078 - 0x0070)
class UDragTrajectoryModifier : public UOverridableConstantTrajectoryModifier
{
public:
	float                                         m_fDefaultDragForce;                               // 0x0070(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DragTrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DragTrajectoryModifier")
	}
	static class UDragTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDragTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_UDragTrajectoryModifier;

// Class Runtime.RuntimeMenuFlowSubsystem
// 0x00F0 (0x0250 - 0x0160)
class alignas(0x10) URuntimeMenuFlowSubsystem : public USCWorldSubsystem
{
public:
	uint8                                         Pad_160[0xB0];                                     // 0x0160(0x00B0)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCLevelSequenceActor*                  m_CurrentTransitionLevelSequenceActor;             // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   m_LevelSequenceActorClass;                         // 0x0218(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class ASCLevelSequenceActor>      m_LoadedLevelSequenceActorClass;                   // 0x0240(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_PlayMenuCameraSequence(class ULevelSequence* _levelSequenceToPlay, const struct FMenuCameraSequenceParams& _menuSequenceParams);
	void BPF_SwitchToLocalCharacterCam();
	void BPF_SwitchToRegisteredMenuCam();
	void OnTransitionSequenceFinished();

	bool BPF_IsInMenuCamera() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeMenuFlowSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeMenuFlowSubsystem")
	}
	static class URuntimeMenuFlowSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeMenuFlowSubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeMenuFlowSubsystem;

// Class Runtime.RuntimeMovementAttributeSet
// 0x0158 (0x01E0 - 0x0088)
class URuntimeMovementAttributeSet final : public USCAttributeSet
{
public:
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttributeData                 FreemoveV1;                                        // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 FreemoveV2;                                        // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 FreemoveV3;                                        // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 FreemoveWithBallV1;                                // 0x00C0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 FreemoveWithBallV2;                                // 0x00D0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 FreemoveWithBallV3;                                // 0x00E0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 LockmoveV1;                                        // 0x00F0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 LockmoveV2;                                        // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 LockmoveV3;                                        // 0x0110(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 LockmoveWithBallV1;                                // 0x0120(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 LockmoveWithBallV2;                                // 0x0130(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 LockmoveWithBallV3;                                // 0x0140(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 GoalKeeperV1;                                      // 0x0150(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 GoalKeeperV2;                                      // 0x0160(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 GoalKeeperV3;                                      // 0x0170(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 GoalKeeperWithBallV1;                              // 0x0180(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 GoalKeeperWithBallV2;                              // 0x0190(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 GoalKeeperWithBallV3;                              // 0x01A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 LockmoveGoalKeeperV1;                              // 0x01B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 LockmoveGoalKeeperV2;                              // 0x01C0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 LockmoveGoalKeeperV3;                              // 0x01D0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

public:
	void OnRep_FreemoveV1(const struct FGameplayAttributeData& _oldFreemoveV1);
	void OnRep_FreemoveV2(const struct FGameplayAttributeData& _oldFreemoveV2);
	void OnRep_FreemoveV3(const struct FGameplayAttributeData& _oldFreemoveV3);
	void OnRep_FreemoveWithBallV1(const struct FGameplayAttributeData& _oldFreemoveWithBallV1);
	void OnRep_FreemoveWithBallV2(const struct FGameplayAttributeData& _oldFreemoveWithBallV2);
	void OnRep_FreemoveWithBallV3(const struct FGameplayAttributeData& _oldFreemoveWithBallV3);
	void OnRep_GoalKeeperV1(const struct FGameplayAttributeData& _oldGoalKeeperV1);
	void OnRep_GoalKeeperV2(const struct FGameplayAttributeData& _oldGoalKeeperV2);
	void OnRep_GoalKeeperV3(const struct FGameplayAttributeData& _oldGoalKeeperV3);
	void OnRep_GoalKeeperWithBallV1(const struct FGameplayAttributeData& _oldGoalKeeperWithBallV1);
	void OnRep_GoalKeeperWithBallV2(const struct FGameplayAttributeData& _oldGoalKeeperWithBallV2);
	void OnRep_GoalKeeperWithBallV3(const struct FGameplayAttributeData& _oldGoalKeeperWithBallV3);
	void OnRep_LockmoveGoalKeeperV1(const struct FGameplayAttributeData& _oldLockmoveGoalKeeperV1);
	void OnRep_LockmoveGoalKeeperV2(const struct FGameplayAttributeData& _oldLockmoveGoalKeeperV2);
	void OnRep_LockmoveGoalKeeperV3(const struct FGameplayAttributeData& _oldLockmoveGoalKeeperV3);
	void OnRep_LockmoveV1(const struct FGameplayAttributeData& _oldLockmoveV1);
	void OnRep_LockmoveV2(const struct FGameplayAttributeData& _oldLockmoveV2);
	void OnRep_LockmoveV3(const struct FGameplayAttributeData& _oldLockmoveV3);
	void OnRep_LockmoveWithBallV1(const struct FGameplayAttributeData& _oldLockmoveWithBallV1);
	void OnRep_LockmoveWithBallV2(const struct FGameplayAttributeData& _oldLockmoveWithBallV2);
	void OnRep_LockmoveWithBallV3(const struct FGameplayAttributeData& _oldLockmoveWithBallV3);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeMovementAttributeSet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeMovementAttributeSet")
	}
	static class URuntimeMovementAttributeSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeMovementAttributeSet>();
	}
};
DUMPER7_ASSERTS_URuntimeMovementAttributeSet;

// Class Runtime.RuntimeMovementComponent
// 0x00D0 (0x1B20 - 0x1A50)
class URuntimeMovementComponent final : public USCTransitionMovementComponent
{
public:
	uint8                                         Pad_1A50[0x34];                                    // 0x1A50(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fNotifyTeleportMinDist;                          // 0x1A84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1A88[0x98];                                    // 0x1A88(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_FreezeSpeedState();
	void BPF_UnfreezeSpeedState();

	float BPF_GetDefaultMaxSpeed() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeMovementComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeMovementComponent")
	}
	static class URuntimeMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeMovementComponent>();
	}
};
DUMPER7_ASSERTS_URuntimeMovementComponent;

// Class Runtime.RuntimeMultiPositionAmbientSound
// 0x0008 (0x0328 - 0x0320)
class ARuntimeMultiPositionAmbientSound : public AMultiPositionAmbientSound
{
public:
	uint8                                         m_uiTeam;                                          // 0x0320(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	uint8 BPF_GetTeam() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeMultiPositionAmbientSound")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeMultiPositionAmbientSound")
	}
	static class ARuntimeMultiPositionAmbientSound* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeMultiPositionAmbientSound>();
	}
};
DUMPER7_ASSERTS_ARuntimeMultiPositionAmbientSound;

// Class Runtime.TutorialLogicStep
// 0x0020 (0x0048 - 0x0028)
class UTutorialLogicStep final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ARuntimeCharacter>       m_TutorialPlayer;                                  // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bHasStartDelay;                                  // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fStartDelay;                                     // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnEndLogicStep();
	void OnStartLogicStep();

	class ATutorialManager* GetManagerOwner() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialLogicStep")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialLogicStep")
	}
	static class UTutorialLogicStep* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialLogicStep>();
	}
};
DUMPER7_ASSERTS_UTutorialLogicStep;

// Class Runtime.RuntimePerformanceTelemetry
// 0x4710 (0x49C8 - 0x02B8)
class URuntimePerformanceTelemetry final : public USCPerformanceTelemetry
{
public:
	uint8                                         Pad_2B8[0x30];                                     // 0x02B8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bForceCaptureAlways;                             // 0x02E8(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E9[0x46DF];                                   // 0x02E9(0x46DF)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMatchGameStateEndPlay(class AActor* _actor, EEndPlayReason _eEndPlayReason);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimePerformanceTelemetry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimePerformanceTelemetry")
	}
	static class URuntimePerformanceTelemetry* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimePerformanceTelemetry>();
	}
};
DUMPER7_ASSERTS_URuntimePerformanceTelemetry;

// Class Runtime.RuntimePlayerCameraManager
// 0x0000 (0x24F0 - 0x24F0)
class ARuntimePlayerCameraManager : public ASCPlayerCameraManager
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimePlayerCameraManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimePlayerCameraManager")
	}
	static class ARuntimePlayerCameraManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimePlayerCameraManager>();
	}
};
DUMPER7_ASSERTS_ARuntimePlayerCameraManager;

// Class Runtime.RuntimePlayerController
// 0x0030 (0x1370 - 0x1340)
class ARuntimePlayerController : public ASCBasePlayerController
{
public:
	TMulticastInlineDelegate<void(class APlayerState* _playerState)> BPE_OnPlayerStateReplicated;    // 0x1338(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnGameStateValidDelegate;                          // 0x1348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class URuntimeSOSComponent*                   m_SOSComponent;                                    // 0x1358(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1360[0x10];                                    // 0x1360(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<struct FInputActionKeyMapping> BPF_GetMappingsForAction(class FName _action);
	void BPF_ReportServer();
	void BPF_Server_ReassignCaptainInTeam();
	void BPF_SetPlayerName(const class FString& Name_0);
	void BPF_SetShowMouseCursor(bool _bShow);
	void ClientNotifyBallServerOwnerChanged(class ABall* _ball, class UPlayerBallOwnership* _owner, const struct FRevisionID& _revisionID);
	void ClientNotifyBallServerTrajectory(class ABall* _ball, class UPlayerBallOwnership* _owner, const struct FShootStartPoint& _serverTrajectoryStartingPoint, const struct FRevisionID& _revisionID);
	void ExecuteRemoteConsoleCommandRPC(const class FString& _command);
	void OnGameStateValid(class AGameStateBase* _gameState);
	void RemoteCmd(const class FString& _command);
	void SendRemoteCommandResult(const class FString& _commandResult);
	void ServerRequestOverrideSpecialActorsNetParams(const float _fNetUpdateFrequency, const float _fMinNetUpdateFrequency, const float _fNetPriority);
	void StartVisLog();
	void StopVisLog();

	class ARuntimeCharacter* BPF_GetRuntimeCharacter() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimePlayerController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimePlayerController")
	}
	static class ARuntimePlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimePlayerController>();
	}
};
DUMPER7_ASSERTS_ARuntimePlayerController;

// Class Runtime.TotalScoreViewModel
// 0x0008 (0x0078 - 0x0070)
class UTotalScoreViewModel final : public USCViewModel
{
public:
	int32                                         m_iTotal;                                          // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TotalScoreViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TotalScoreViewModel")
	}
	static class UTotalScoreViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTotalScoreViewModel>();
	}
};
DUMPER7_ASSERTS_UTotalScoreViewModel;

// Class Runtime.TrajectoryStatics
// 0x0000 (0x0028 - 0x0028)
class UTrajectoryStatics final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrajectoryStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrajectoryStatics")
	}
	static class UTrajectoryStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrajectoryStatics>();
	}
};
DUMPER7_ASSERTS_UTrajectoryStatics;

// Class Runtime.TeamTotalScoresViewModel
// 0x0018 (0x0088 - 0x0070)
class UTeamTotalScoresViewModel final : public USCViewModel
{
public:
	TArray<class UTotalScoreViewModel*>           m_TotalScoreByEventViewModels;                     // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UTotalScoreViewModel*                   m_TotalViewModel;                                  // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TeamTotalScoresViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TeamTotalScoresViewModel")
	}
	static class UTeamTotalScoresViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTeamTotalScoresViewModel>();
	}
};
DUMPER7_ASSERTS_UTeamTotalScoresViewModel;

// Class Runtime.RuntimePlayerScoreViewModel
// 0x0008 (0x00A0 - 0x0098)
class URuntimePlayerScoreViewModel : public UPlayerScoreViewModel
{
public:
	bool                                          m_bIsMVP;                                          // 0x0098(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMVPSet(class ARuntimePlayerState* _runtimePlayerState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimePlayerScoreViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimePlayerScoreViewModel")
	}
	static class URuntimePlayerScoreViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimePlayerScoreViewModel>();
	}
};
DUMPER7_ASSERTS_URuntimePlayerScoreViewModel;

// Class Runtime.WelcomeFlowViewModel
// 0x0028 (0x0098 - 0x0070)
class UWelcomeFlowViewModel final : public USCViewModel
{
public:
	EWelcomeFlowStep                              m_CurrentWelcomeFlowStep;                          // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bShouldDisplayEULA;                              // 0x0071(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bShouldDisplayRemappingResetWarning;             // 0x0072(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWelcomeFlowContentViewModel*>   m_UnreadContentViewModels;                         // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UWelcomeFlowContentViewModel*>   m_ActiveNewsViewModels;                            // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	TArray<class UWelcomeFlowContentViewModel*> BPF_GetUnreadContentViewModelsByType(ERematchWelcomeFlowContentType _type) const;
	bool BPF_HasUnreadContentOfType(ERematchWelcomeFlowContentType _type) const;
	bool HasActiveNews() const;
	bool HasUnreadContent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WelcomeFlowViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WelcomeFlowViewModel")
	}
	static class UWelcomeFlowViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWelcomeFlowViewModel>();
	}
};
DUMPER7_ASSERTS_UWelcomeFlowViewModel;

// Class Runtime.RuntimePlayerScoreGlobalContainerViewModel
// 0x0128 (0x01B0 - 0x0088)
class URuntimePlayerScoreGlobalContainerViewModel : public UPlayerScoreGlobalContainerViewModel
{
public:
	float                                         m_fExpBoost;                                       // 0x0088(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_MatchTypeName;                                   // 0x0090(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	struct FSlateBrush                            m_MatchTypeIcon;                                   // 0x00A0(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	float                                         m_fMatchTypeExpBoost;                              // 0x0170(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTeamTotalScoresViewModel*>      m_TotalScoreByEventByTeam;                         // 0x0178(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	struct FTotalExperienceData                   m_LocalPlayerTotalExperienceData;                  // 0x0188(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A0[0x10];                                     // 0x01A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimePlayerScoreGlobalContainerViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimePlayerScoreGlobalContainerViewModel")
	}
	static class URuntimePlayerScoreGlobalContainerViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimePlayerScoreGlobalContainerViewModel>();
	}
};
DUMPER7_ASSERTS_URuntimePlayerScoreGlobalContainerViewModel;

// Class Runtime.RuntimePlayerScoreEventHistory
// 0x0008 (0x0100 - 0x00F8)
class URuntimePlayerScoreEventHistory final : public USCPlayerScoreEventHistory
{
public:
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimePlayerScoreEventHistory")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimePlayerScoreEventHistory")
	}
	static class URuntimePlayerScoreEventHistory* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimePlayerScoreEventHistory>();
	}
};
DUMPER7_ASSERTS_URuntimePlayerScoreEventHistory;

// Class Runtime.UtilityAIPreset
// 0x0010 (0x0040 - 0x0030)
class UUtilityAIPreset final : public UPrimaryDataAsset
{
public:
	TArray<struct FUtilityAITaskDatasourceInstance> m_Tasks;                                         // 0x0030(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UtilityAIPreset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UtilityAIPreset")
	}
	static class UUtilityAIPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUtilityAIPreset>();
	}
};
DUMPER7_ASSERTS_UUtilityAIPreset;

// Class Runtime.RuntimePlayersScoreSubsystem
// 0x0110 (0x0380 - 0x0270)
class URuntimePlayersScoreSubsystem : public USCPlayersScoreSubsystem
{
public:
	struct FExperienceComponentInstance           m_ExperienceFormula;                               // 0x0270(0x0010)(Edit, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UClass>>           m_EqualityMvpStatsCheckOrder;                      // 0x0280(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                          m_bCommitScoreOnLeftPlayers;                       // 0x0290(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iMatchWonScore;                                  // 0x0294(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iMatchLossScore;                                 // 0x0298(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iDrawMatchScore;                                 // 0x029C(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iMatchScorePerMin;                               // 0x02A0(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iOvertimeScorePerMin;                            // 0x02A4(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FSCMatchTypeInfos> m_MatchTypeInfos;                            // 0x02A8(0x0050)(Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSCDynamicPlayerScoreMultiplier        m_fScoreBoostMultiplier;                           // 0x02F8(0x0038)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, struct FSCFieldPath>        m_JsonToPropertyMap;                               // 0x0330(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	void OnLocalPlayerTotalExperienceDataSet(class ARuntimePlayerState* _playerState);

	int32 BPF_GetDrawMatchScore() const;
	int32 BPF_GetMatchLossScore() const;
	int32 BPF_GetMatchScorePerMin() const;
	int32 BPF_GetMatchWonScore() const;
	int32 BPF_GetOvertimeScorePerMin() const;
	float BPF_GetScoreMultiplierByMatchType(const struct FGameplayTag& _matchType) const;
	float BPF_GetScoreToExpMultiplier() const;
	TArray<class UClass*> GetScoreEventClasses() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimePlayersScoreSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimePlayersScoreSubsystem")
	}
	static class URuntimePlayersScoreSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimePlayersScoreSubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimePlayersScoreSubsystem;

// Class Runtime.RuntimePlayerStart
// 0x0010 (0x0338 - 0x0328)
class ARuntimePlayerStart final : public ASCPlayerStart
{
public:
	TWeakObjectPtr<class UAnimSequence>           m_IdleSequence;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiTeam;                                          // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiNbPlayerExpected;                              // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiIndexCycleOrder;                               // 0x0332(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsInAttackPosition;                             // 0x0333(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsBallKicker;                                   // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnerType                                  m_eSpawnertype;                                    // 0x0335(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_336[0x2];                                      // 0x0336(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimePlayerStart")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimePlayerStart")
	}
	static class ARuntimePlayerStart* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimePlayerStart>();
	}
};
DUMPER7_ASSERTS_ARuntimePlayerStart;

// Class Runtime.MovieSceneTransitionSection
// 0x0108 (0x01F8 - 0x00F0)
class UMovieSceneTransitionSection final : public UMovieSceneSection
{
public:
	struct FMovieSceneTransitionChannel           m_TransitionCurve;                                 // 0x00F0(0x0108)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneTransitionSection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneTransitionSection")
	}
	static class UMovieSceneTransitionSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneTransitionSection>();
	}
};
DUMPER7_ASSERTS_UMovieSceneTransitionSection;

// Class Runtime.RuntimePlayerStatsViewModel
// 0x0000 (0x00F8 - 0x00F8)
class URuntimePlayerStatsViewModel : public UPlayerStatsViewModel
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimePlayerStatsViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimePlayerStatsViewModel")
	}
	static class URuntimePlayerStatsViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimePlayerStatsViewModel>();
	}
};
DUMPER7_ASSERTS_URuntimePlayerStatsViewModel;

// Class Runtime.RuntimePreMatchData
// 0x0000 (0x0028 - 0x0028)
class URuntimePreMatchData final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimePreMatchData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimePreMatchData")
	}
	static class URuntimePreMatchData* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimePreMatchData>();
	}
};
DUMPER7_ASSERTS_URuntimePreMatchData;

// Class Runtime.RangeShootModifierComputationData
// 0x0020 (0x0058 - 0x0038)
class URangeShootModifierComputationData final : public UComputedShootModifierComputationData
{
public:
	struct FVector2D                              m_vRange;                                          // 0x0038(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESourceModifierType                           m_eSourceType;                                     // 0x0048(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatInterval                         m_IntervalToComputeRatio;                          // 0x004C(0x0008)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RangeShootModifierComputationData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RangeShootModifierComputationData")
	}
	static class URangeShootModifierComputationData* GetDefaultObj()
	{
		return GetDefaultObjImpl<URangeShootModifierComputationData>();
	}
};
DUMPER7_ASSERTS_URangeShootModifierComputationData;

// Class Runtime.RuntimeReplaySubsystem
// 0x01E0 (0x0330 - 0x0150)
class URuntimeReplaySubsystem final : public USCSubsystem
{
public:
	uint8                                         Pad_150[0x18];                                     // 0x0150(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnRuntimeReplayStarted;                            // 0x0168(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class AActor* _actorToLookAt, const class AActor* _actorToFollow)> OnRuntimeReplayPhaseChanged; // 0x0178(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnRuntimeReplayFinished;                           // 0x0188(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FReplayCameraFadeSettings              m_ReplayCameraFadeAtStart;                         // 0x0198(0x0020)(Edit, Config, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FReplayCameraFadeSettings              m_ReplayCameraFadeAtEnd;                           // 0x01B8(0x0020)(Edit, Config, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         m_fReplayLengthBeforeGoalScored;                   // 0x01D8(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fReplayLengthAfterGoalScored;                    // 0x01DC(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bGarbageCollectOnReplayEnd;                      // 0x01E0(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1E1[0x14F];                                    // 0x01E1(0x014F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnGoaldScored(const struct FGoalDescription& _goalDescription);
	void OnReplayPhaseChanged(const class AActor* _actorToLookAt, const class AActor* _actorToFollow);

	class AActor* BPF_GetFollowActorFromCurrentPhase() const;
	bool BPF_GetReplayActor(uint8 _uiTeam, int32 _iNumberInTeam, class ARuntimeCharacter** _outCharacter, class ARuntimePlayerState** _outPlayerState) const;
	bool BPF_GetReplayScorerActor(class ARuntimeCharacter** _outCharacter, class ARuntimePlayerState** _outPlayerState) const;
	class ARuntimePlayerState* BPF_GetScorer() const;
	class FString BPF_GetScorerName() const;
	bool BPF_IsPlayingReplay() const;
	bool BPF_ScorerIsAnAlly() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeReplaySubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeReplaySubsystem")
	}
	static class URuntimeReplaySubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeReplaySubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeReplaySubsystem;

// Class Runtime.RuntimeSaveObjectGameData
// 0x01D8 (0x03B8 - 0x01E0)
class URuntimeSaveObjectGameData : public USCSaveObjectGameData
{
public:
	struct FSCCharacterCustomizationDescription   m_CharacterCusto;                                  // 0x01E0(0x00F0)(SaveGame, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSCCharacterCustomizationDescription> m_CustomizationPresets;                      // 0x02D0(0x0010)(Edit, ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	int32                                         m_iCurrentPresetIndex;                             // 0x02E0(0x0004)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerProfileDescription              m_PlayerProfileDescription;                        // 0x02E8(0x0010)(Edit, SaveGame, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPlayerProfileWorkshopData             m_PlayerProfileWorkshopData;                       // 0x02F8(0x0050)(Edit, SaveGame, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, float>                    m_UnwrittenAchievements;                           // 0x0348(0x0050)(Edit, SaveGame, Protected, NativeAccessSpecifierProtected)
	struct FSCUnwrittenAchievementsData           m_UnwrittenAchievementsData;                       // 0x0398(0x0020)(Edit, SaveGame, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeSaveObjectGameData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeSaveObjectGameData")
	}
	static class URuntimeSaveObjectGameData* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeSaveObjectGameData>();
	}
};
DUMPER7_ASSERTS_URuntimeSaveObjectGameData;

// Class Runtime.RTStadiumARLevelStreaming
// 0x0010 (0x01D0 - 0x01C0)
class URTStadiumARLevelStreaming final : public ULevelStreamingDynamic
{
public:
	uint8                                         Pad_1C0[0x10];                                     // 0x01C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleLevelShown();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTStadiumARLevelStreaming")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTStadiumARLevelStreaming")
	}
	static class URTStadiumARLevelStreaming* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTStadiumARLevelStreaming>();
	}
};
DUMPER7_ASSERTS_URTStadiumARLevelStreaming;

// Class Runtime.RuntimeSaveSubsystem
// 0x0000 (0x0670 - 0x0670)
class URuntimeSaveSubsystem : public USCSaveSubsystem
{
public:
	void OnAuthenticated(bool _bSuccess, const struct FSOSErrorInfos& _errorInfos);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeSaveSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeSaveSubsystem")
	}
	static class URuntimeSaveSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeSaveSubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeSaveSubsystem;

// Class Runtime.RuntimeShootCameraShake
// 0x0010 (0x0100 - 0x00F0)
class URuntimeShootCameraShake : public UDefaultCameraShakeBase
{
public:
	class UCurveFloat*                            m_MultiplierByRatioPower;                          // 0x00F0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FRuntimeShootCameraShakeParams BPE_GetShootCameraShakeParams(class AActor* _actor, const struct FShootPrepTargetData& _data) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeShootCameraShake")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeShootCameraShake")
	}
	static class URuntimeShootCameraShake* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeShootCameraShake>();
	}
};
DUMPER7_ASSERTS_URuntimeShootCameraShake;

// Class Runtime.WeightedAnimSelectTargetPicker
// 0x0028 (0x0050 - 0x0028)
class UWeightedAnimSelectTargetPicker final : public UTargetPicker
{
public:
	struct FWeightedAnimSelectTargetPickerFilterOptions m_FilterOptionsWhenNoFullyMatchingTargetFound; // 0x0028(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FWeightedAnimSelectTargetPickerFilterOptions m_FilterOptionsWhenFullyMatchingTargetsFound; // 0x0030(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	float                                         m_fScoreThresholdForFullyMatchingTargets;          // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bEarlyReturnFirstFullyMatchingTarget;            // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bReturnAtLeastOneTarget;                         // 0x003D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAnimSequencePicker>        m_AnimationPicker;                                 // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bVeryVerboseVlog;                                // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeightedAnimSelectTargetPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeightedAnimSelectTargetPicker")
	}
	static class UWeightedAnimSelectTargetPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeightedAnimSelectTargetPicker>();
	}
};
DUMPER7_ASSERTS_UWeightedAnimSelectTargetPicker;

// Class Runtime.ShootCameraShakeHelpers
// 0x0000 (0x0028 - 0x0028)
class UShootCameraShakeHelpers final : public UBlueprintFunctionLibrary
{
public:
	static struct FRuntimeShootCameraShakeParams BPF_GetShootCameraShakeParams(class AActor* _actor, const struct FShootPrepTargetData& _data);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootCameraShakeHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootCameraShakeHelpers")
	}
	static class UShootCameraShakeHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootCameraShakeHelpers>();
	}
};
DUMPER7_ASSERTS_UShootCameraShakeHelpers;

// Class Runtime.RuntimeShootGameplayAbility
// 0x0358 (0x09B0 - 0x0658)
class URuntimeShootGameplayAbility : public URuntimeGameplayAbility
{
public:
	uint8                                         Pad_658[0x8];                                      // 0x0658(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePlayInfos                 m_ShootAnimSequenceInfos;                          // 0x0660(0x0130)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAnimSequencePlayInfos                 m_BuildUpAnimSequenceInfos;                        // 0x0790(0x0130)(BlueprintVisible, NativeAccessSpecifierPublic)
	TSubclassOf<class UShootAbilityData>          m_ShootAbilityData;                                // 0x08C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FShootPrepTargetData                   m_ShootPrep;                                       // 0x08C8(0x00E0)(BlueprintVisible, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_9A8[0x8];                                      // 0x09A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeShootGameplayAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeShootGameplayAbility")
	}
	static class URuntimeShootGameplayAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeShootGameplayAbility>();
	}
};
DUMPER7_ASSERTS_URuntimeShootGameplayAbility;

// Class Runtime.MeshMergeFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UMeshMergeFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_MergeMeshComponents(const TArray<class USkeletalMeshComponent*>& _meshComponents, const struct FSkeletalMeshMergeParams& _params);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MeshMergeFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MeshMergeFunctionLibrary")
	}
	static class UMeshMergeFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshMergeFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UMeshMergeFunctionLibrary;

// Class Runtime.RuntimeSOSBindingsSubsystem
// 0x02E0 (0x05D8 - 0x02F8)
class URuntimeSOSBindingsSubsystem final : public USOSBindingsSubsystem
{
public:
	TMap<class FName, struct FGameplayTag>        m_NameToTagMatchType;                              // 0x02F8(0x0050)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	float                                         m_fAfkPlayerWarningTimer;                          // 0x0348(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinAwayFromKeyboardDuration;                    // 0x034C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fAfkDurationFromMatchDurationRatio;              // 0x0350(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fGoalkeeperAfkMaxDist;                           // 0x0354(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeMatchParameters                m_CustomMatchDefaultParams;                        // 0x0358(0x00B8)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_410[0xC0];                                     // 0x0410(0x00C0)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<ERuntimeMatchParameterTypes>             m_VisibleCustomMatchParams;                        // 0x04D0(0x0050)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TSet<struct FUserCustomMatchParamEnumHandler> m_VisibleCustomMatchUserParams;                    // 0x0520(0x0050)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                      m_MatchAllowJoinSquadsQuery;                       // 0x0570(0x0048)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayAbility>>   m_LoadedAbilitiesResettingAfk;                     // 0x05B8(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UClass>>           m_AbilitiesResettingAfk;                           // 0x05C8(0x0010)(Edit, ZeroConstructor, Config, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	void BPF_ResetCustomMatchParams();
	void BPF_SaveCustomMatchParams();

	bool BPF_IsAllowedToJoinSquads(const struct FGameplayTag& _matchType) const;
	bool BPF_IsCustomMatchParamVisible(ERuntimeMatchParameterTypes _eParam) const;
	bool BPF_IsCustomMatchUserParamVisible(uint8 _eParam) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeSOSBindingsSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeSOSBindingsSubsystem")
	}
	static class URuntimeSOSBindingsSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeSOSBindingsSubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeSOSBindingsSubsystem;

// Class Runtime.TutorialObjectiveOperator
// 0x0028 (0x0098 - 0x0070)
class UTutorialObjectiveOperator final : public UTutorialObjective
{
public:
	EConditionGroupOperators                      m_eOperator;                                       // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTutorialObjectiveDatasourceInstance> m_TutorialSubObjectivesData;                 // 0x0078(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UTutorialObjective*>             m_TutorialSubObjectives;                           // 0x0088(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void OnSubObjectiveComplete(class UTutorialObjective* _objective);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialObjectiveOperator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialObjectiveOperator")
	}
	static class UTutorialObjectiveOperator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialObjectiveOperator>();
	}
};
DUMPER7_ASSERTS_UTutorialObjectiveOperator;

// Class Runtime.RuntimeSOSComponent
// 0x0078 (0x0258 - 0x01E0)
class URuntimeSOSComponent final : public USOSActorComponent
{
public:
	uint8                                         Pad_1E0[0x78];                                     // 0x01E0(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAbilityActivated(const struct FGameplayAbilitySpecHandle& _abilityHanddle, class UGameplayAbility* _abilityActivated);
	void OnCountdownOver(class ARuntimeMatchGameState* _gameState);
	void OnCountdownStart(class ARuntimeMatchGameState* _gameState);
	void OnPossessedPawnChanged(class APawn* _oldPawn, class APawn* _newPawn);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeSOSComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeSOSComponent")
	}
	static class URuntimeSOSComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeSOSComponent>();
	}
};
DUMPER7_ASSERTS_URuntimeSOSComponent;

// Class Runtime.RuntimeSoundSubsystem
// 0x0008 (0x0188 - 0x0180)
class URuntimeSoundSubsystem : public USCSoundSubsystem
{
public:
	uint8                                         Pad_180[0x8];                                      // 0x0180(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnLoadingScreenVisibilityChanged(bool _bVisible);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeSoundSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeSoundSubsystem")
	}
	static class URuntimeSoundSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeSoundSubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeSoundSubsystem;

// Class Runtime.ItemThumbnailScene
// 0x00C8 (0x00F0 - 0x0028)
class UItemThumbnailScene : public UObject
{
public:
	bool                                          bPostProcessPropagateAlpha;                        // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableDynamicShadows;                             // 0x0029(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableAmbientOcclusion;                           // 0x002A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnablePostProcessMaterial;                        // 0x002B(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C[0xC];                                       // 0x002C(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FViewKey, int32>                  ViewKeys;                                          // 0x0038(0x0050)(NativeAccessSpecifierPrivate)
	TArray<struct FViewPoolEntry>                 ViewPool;                                          // 0x0088(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_98[0x58];                                      // 0x0098(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UActorComponent* AddComponent(TSubclassOf<class UActorComponent> Class_0, const struct FTransform& LocalToWorld, bool bAttachToRoot);
	class UWorld* GetThumbnailWorld();
	void PrepareScene();
	void SetBackgroundColor(const struct FLinearColor& InColor);
	class AActor* SpawnActor(TSubclassOf<class AActor> Class_0);
	class AActor* SpawnActorForKey(const struct FGenericStruct& Key, TSubclassOf<class AActor> Class_0, int32* OutViewIndex);

	class AActor* GetActorForView(int32 ViewIndex) const;
	void GetViewMatrixParameters(int32 SceneView, struct FViewParameters* OutParameters) const;
	void OnBuildActor() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ItemThumbnailScene")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ItemThumbnailScene")
	}
	static class UItemThumbnailScene* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemThumbnailScene>();
	}
};
DUMPER7_ASSERTS_UItemThumbnailScene;

// Class Runtime.RuntimeSpectatorPawn
// 0x0008 (0x0490 - 0x0488)
class ARuntimeSpectatorPawn : public ASCSpectatorPawn
{
public:
	class USCInputAction*                         m_LookAtBallInputAction;                           // 0x0488(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeSpectatorPawn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeSpectatorPawn")
	}
	static class ARuntimeSpectatorPawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimeSpectatorPawn>();
	}
};
DUMPER7_ASSERTS_ARuntimeSpectatorPawn;

// Class Runtime.RuntimeSprintGameplayAbility
// 0x0010 (0x0668 - 0x0658)
class URuntimeSprintGameplayAbility final : public URuntimeGameplayAbility
{
public:
	bool                                          m_bStopWhenRelease;                                // 0x0658(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bStopWhenHasSpentStamina;                        // 0x0659(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bStopOnLowSpeed;                                 // 0x065A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_65B[0x1];                                      // 0x065B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAbilityCostApplyPeriod;                         // 0x065C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bHasSpentStamina;                                // 0x0660(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CheckIfMoving();
	bool CheckIfStationnary();
	void OnCannotSpendAbilityCost();
	void OnSprintInputRelease(const struct FInputActionState& _state, bool _bActivated);
	void OnStopMoving();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeSprintGameplayAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeSprintGameplayAbility")
	}
	static class URuntimeSprintGameplayAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeSprintGameplayAbility>();
	}
};
DUMPER7_ASSERTS_URuntimeSprintGameplayAbility;

// Class Runtime.RuntimeSequencerBindingLibrary
// 0x0000 (0x0028 - 0x0028)
class URuntimeSequencerBindingLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FMovieSceneDynamicBindingResolveResult GetCharacterBodyPart(const struct FMovieSceneDynamicBindingResolveParams& Params_0, const struct FCharacterPartEnumHandler& BodyPart);
	static struct FMovieSceneDynamicBindingResolveResult GoalScorer(class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeSequencerBindingLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeSequencerBindingLibrary")
	}
	static class URuntimeSequencerBindingLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeSequencerBindingLibrary>();
	}
};
DUMPER7_ASSERTS_URuntimeSequencerBindingLibrary;

// Class Runtime.RuntimeStadiumEditorSystem
// 0x0040 (0x0190 - 0x0150)
class URuntimeStadiumEditorSystem final : public USCSubsystem
{
public:
	uint8                                         Pad_150[0x40];                                     // 0x0150(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void LaunchStadiumMapsOptimization();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeStadiumEditorSystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeStadiumEditorSystem")
	}
	static class URuntimeStadiumEditorSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeStadiumEditorSystem>();
	}
};
DUMPER7_ASSERTS_URuntimeStadiumEditorSystem;

// Class Runtime.RuntimeStatBehaviourTimer
// 0x0010 (0x0068 - 0x0058)
class URuntimeStatBehaviourTimer final : public USCStatBehaviourTimer
{
public:
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnOvertimeStart(class ARuntimeMatchGameState* _gameState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeStatBehaviourTimer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeStatBehaviourTimer")
	}
	static class URuntimeStatBehaviourTimer* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeStatBehaviourTimer>();
	}
};
DUMPER7_ASSERTS_URuntimeStatBehaviourTimer;

// Class Runtime.RuntimeStatDataIsInRange
// 0x0020 (0x0048 - 0x0028)
class URuntimeStatDataIsInRange final : public USCStatDataCompute
{
public:
	ERuntimeStatDataRangeActorType                m_eRangeTargetActorType;                           // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatInterval                         m_fRange;                                          // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bInvertCondition;                                // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class AActor* BPF_GetRangeTargetActor(const class APawn* _instigatorPawn) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeStatDataIsInRange")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeStatDataIsInRange")
	}
	static class URuntimeStatDataIsInRange* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeStatDataIsInRange>();
	}
};
DUMPER7_ASSERTS_URuntimeStatDataIsInRange;

// Class Runtime.RuntimeStatsSubsystem
// 0x0188 (0x03D0 - 0x0248)
class URuntimeStatsSubsystem final : public USCStatsSubsystem
{
public:
	uint8                                         Pad_248[0x188];                                    // 0x0248(0x0188)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnGoalScored(const struct FGoalDescription& _goalDescription);
	void OnMatchCountdownFinished(class ARuntimeMatchGameState* _gameState);
	void OnMatchFirstCountdownFinished(class ARuntimeMatchGameState* _gameState);
	void OnRematch();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeStatsSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeStatsSubsystem")
	}
	static class URuntimeStatsSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeStatsSubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeStatsSubsystem;

// Class Runtime.VolleyPrioTargetDataCondition
// 0x0008 (0x0080 - 0x0078)
class UVolleyPrioTargetDataCondition final : public UTargetDataCondition
{
public:
	bool                                          m_bCheckPlayerHasPriority;                         // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VolleyPrioTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VolleyPrioTargetDataCondition")
	}
	static class UVolleyPrioTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVolleyPrioTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UVolleyPrioTargetDataCondition;

// Class Runtime.RuntimeTeamPreMatchData
// 0x0000 (0x0028 - 0x0028)
class URuntimeTeamPreMatchData final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeTeamPreMatchData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeTeamPreMatchData")
	}
	static class URuntimeTeamPreMatchData* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeTeamPreMatchData>();
	}
};
DUMPER7_ASSERTS_URuntimeTeamPreMatchData;

// Class Runtime.RuntimeTools
// 0x0000 (0x0028 - 0x0028)
class URuntimeTools final : public UBlueprintFunctionLibrary
{
public:
	static ESCCharacterSpeedState BPF_ComputeSpeedState(const class APawn* _pawn);
	static TArray<class APawn*> BPF_GetAllPawns(const class AActor* _inRefActor, bool _bShouldBeOnScreen, bool _bFilterByTeam, bool _bOnlyAllies);
	static class USCGameFlowSubsystem* BPF_GetCurrentMenuGameFlowSubsystem(const class UObject* _worldContext);
	static class APlayerState* BPF_GetLastPlayerScorer(const class UWorld* _world);
	static class ABall* BPF_GetNearestBall(const class AActor* _inRefActor, bool _bShouldBeOnScreen);
	static class AGoal* BPF_GetNearestGoal(const class AActor* _inRefActor, bool _bShouldBeOnScreen, bool _bFilterByTeam, bool _bOnlyOurGoal);
	static class APawn* BPF_GetNearestPawn(const class AActor* _inRefActor, bool _bShouldBeOnScreen, bool _bFilterByTeam, bool _bOnlyAllies);
	static int32 BPF_GetPlayerCountInTeam(const class UWorld* _world, const uint8 _uiTeam);
	static struct FGameplayAbilityTargetDataHandle BPF_GetRequestedTargets(class APawn* _requester, const struct FRuntimeTargetRequest& _request);
	static class FString BPF_GetSessionId(class UWorld* World);
	static bool BPF_ShouldJumpForReception(EBallReceptionArea _eReceptionArea);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeTools")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeTools")
	}
	static class URuntimeTools* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeTools>();
	}
};
DUMPER7_ASSERTS_URuntimeTools;

// Class Runtime.SpeedKeeperTrajectoryModifier
// 0x0000 (0x0030 - 0x0030)
class USpeedKeeperTrajectoryModifier final : public UTrajectoryModifier
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpeedKeeperTrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpeedKeeperTrajectoryModifier")
	}
	static class USpeedKeeperTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpeedKeeperTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_USpeedKeeperTrajectoryModifier;

// Class Runtime.RuntimeVideoSubsystem
// 0x0010 (0x0040 - 0x0030)
class URuntimeVideoSubsystem final : public UEngineSubsystem
{
public:
	class UBinkMediaPlayer*                       CurrentPlayer;                                     // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetupVideo(class UBinkMediaPlayer* Player, bool bShouldPlay, float fVideoTime);
	void BPF_StopVideo();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeVideoSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeVideoSubsystem")
	}
	static class URuntimeVideoSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeVideoSubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeVideoSubsystem;

// Class Runtime.RuntimeWelcomeFlowSubsystem
// 0x0080 (0x01D0 - 0x0150)
class URuntimeWelcomeFlowSubsystem : public USCSubsystem
{
public:
	TWeakObjectPtr<class ASCBasePlayerController> m_PlayerController;                                // 0x0150(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWelcomeFlowViewModel*                  m_ViewModel;                                       // 0x0158(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EWelcomeFlowStep, struct FGameplayTag>   m_PopupTemplateTags;                               // 0x0160(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Config, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                         m_SOSContentIdsToDisplay;                          // 0x01B0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C0[0x10];                                     // 0x01C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static ERematchWelcomeFlowContentType BPF_GetContentTypeForWelcomeFlowStep(EWelcomeFlowStep _step);

	void BPE_EndWelcomeFlow();
	void BPE_EndWelcomeFlowStep(EWelcomeFlowStep _step);
	void BPE_StartWelcomeFlowStep(EWelcomeFlowStep _step);
	void BPF_EndCurrentWelcomeFlowStep();
	void BPF_StartWelcomeFlow();

	TArray<class UWelcomeFlowContentViewModel*> BPF_GetUnreadContentViewModelsForCurrentWelcomeFlowStep() const;
	bool BPF_HasWelcomeFlowStarted() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeWelcomeFlowSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeWelcomeFlowSubsystem")
	}
	static class URuntimeWelcomeFlowSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeWelcomeFlowSubsystem>();
	}
};
DUMPER7_ASSERTS_URuntimeWelcomeFlowSubsystem;

// Class Runtime.SessionTimeManager
// 0x0000 (0x0110 - 0x0110)
class USessionTimeManager final : public USCSessionTimeManager
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SessionTimeManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SessionTimeManager")
	}
	static class USessionTimeManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<USessionTimeManager>();
	}
};
DUMPER7_ASSERTS_USessionTimeManager;

// Class Runtime.ShootAngleTargetDataCondition
// 0x0010 (0x0088 - 0x0078)
class UShootAngleTargetDataCondition final : public UTargetDataCondition
{
public:
	float                                         m_fStartAngle;                                     // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fEndAngle;                                       // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bMirrorNegativeValue;                            // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseVelocityAsRefDir;                            // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootAngleTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootAngleTargetDataCondition")
	}
	static class UShootAngleTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootAngleTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UShootAngleTargetDataCondition;

// Class Runtime.MagnusTrajectoryModifier
// 0x0030 (0x00A0 - 0x0070)
class UMagnusTrajectoryModifier : public UOverridableConstantTrajectoryModifier
{
public:
	struct FMagnusTrajectoryParams                m_FlyingMagnus;                                    // 0x0070(0x0008)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FMagnusTrajectoryParams                m_RollingMagnus;                                   // 0x0078(0x0008)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fDefaultMagnusForce;                             // 0x0080(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bApplyForcedMagnus;                              // 0x0084(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              m_v2DForcedMagnusAxis;                             // 0x0088(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDelayBeforeApplyMagnus;                         // 0x0098(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiReboundsAlreadyAchievedToApplyForcedMagnus;    // 0x009C(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MagnusTrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MagnusTrajectoryModifier")
	}
	static class UMagnusTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMagnusTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_UMagnusTrajectoryModifier;

// Class Runtime.ShootBinder
// 0x0070 (0x0168 - 0x00F8)
class UShootBinder : public UGameStateScopedEventBinder
{
public:
	struct FGameplayTagQuery                      m_ShootTypeQuery;                                  // 0x00F8(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bTriggerDependingOnResult;                       // 0x0140(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EShootResult                                  m_eShootResult;                                    // 0x0141(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseGoalExtraSize;                               // 0x0142(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bSkipCheckWithOwnGoal;                           // 0x0143(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_144[0x24];                                     // 0x0144(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnBallRegistered(class ABall* _ball);
	void BPE_OnBallUnregistered(class ABall* _ball);
	void BPE_OnGoalRegistered(class AGoal* _goal);
	void BPE_OnGoalUnregistered(class AGoal* _goal);
	void BPE_OnShoot(const class ABall* _ball, const struct FShootParams& _shootParams);
	void BPE_OnShootBinderTriggered(const class ABall* _ball, const struct FShootParams& _shootParams, class AGoal* _goalAimed);
	void OnBallRegistered(class ABall* _ball);
	void OnBallUnregistered(class ABall* _ball);
	void OnGoalRegistered(class AGoal* _goal);
	void OnGoalUnregistered(class AGoal* _goal);
	void OnShoot(const class ABall* _ball, const struct FShootParams& _shootParams);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootBinder")
	}
	static class UShootBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootBinder>();
	}
};
DUMPER7_ASSERTS_UShootBinder;

// Class Runtime.ShootAbilityData
// 0x00E8 (0x0110 - 0x0028)
class UShootAbilityData : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    m_DataTableRow;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    m_GlobalDataTableRow;                              // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FIntDataBinding                        m_iBuildUpDurationFromGlobalDataTable;             // 0x0058(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UShootModifier>>     m_ShootModifiers;                                  // 0x00A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FShootForceComputationInstance         m_ForceComputation;                                // 0x00B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FShootDirectionComputationInstance     m_DirectionComputation;                            // 0x00C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FShootRotationForceComputationInstance m_RotationForceComputation;                        // 0x00D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FMergeableTrajectoryModifiers          m_TrajectoryModifiers;                             // 0x00E0(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static struct FShootPrepTargetData BPF_MakePrepTargetDataFromClass(const TSubclassOf<class UShootAbilityData>& _shootDataClass, const class UGameplayAbility* _ability, class ABall* _ball, int32 _iPriority, const struct FGameplayAbilityTargetDataHandle& _context, EShootOrigin _eShootOrigin, const TSubclassOf<class URuntimeShootCameraShake> _cameraShake);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootAbilityData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootAbilityData")
	}
	static class UShootAbilityData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootAbilityData>();
	}
};
DUMPER7_ASSERTS_UShootAbilityData;

// Class Runtime.WorkshopViewModel
// 0x0058 (0x00C8 - 0x0070)
class UWorkshopViewModel final : public USCViewModel
{
public:
	EWorkshopState                                m_WorkshopState;                                   // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWorkshopWinReason                            m_WinReason;                                       // 0x0071(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_WorkshopTitle;                                   // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class FText                                   m_WorkshopInstruction;                             // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	int32                                         m_iScore;                                          // 0x0098(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iScoreMax;                                       // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iBronzeScore;                                    // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iSilverScore;                                    // 0x00A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iGoldScore;                                      // 0x00A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStartTime;                                      // 0x00AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsTimerCountDown;                               // 0x00B0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fCountDownValue;                                 // 0x00B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTimeSaved;                                      // 0x00B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fBronzeTime;                                     // 0x00BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fSilverTime;                                     // 0x00C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fGoldTime;                                       // 0x00C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	bool HasNotWorkshopStarted() const;
	bool IsWorkshopBasedOnScore() const;
	bool IsWorkshopBasedOnTime() const;
	bool IsWorkshopFinished() const;
	bool IsWorkshopInProgress() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WorkshopViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WorkshopViewModel")
	}
	static class UWorkshopViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWorkshopViewModel>();
	}
};
DUMPER7_ASSERTS_UWorkshopViewModel;

// Class Runtime.RTShootAbilityHelper
// 0x0000 (0x0028 - 0x0028)
class URTShootAbilityHelper final : public UBlueprintFunctionLibrary
{
public:
	static ELockDirectionOption BPF_TryToGetLockDirectionOption(const struct FShootPrepTargetData& _shootPrep);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTShootAbilityHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTShootAbilityHelper")
	}
	static class URTShootAbilityHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTShootAbilityHelper>();
	}
};
DUMPER7_ASSERTS_URTShootAbilityHelper;

// Class Runtime.JoystickOrientationHelper
// 0x0000 (0x0028 - 0x0028)
class UJoystickOrientationHelper final : public UBlueprintFunctionLibrary
{
public:
	static float BPF_ConvertJoystickOrientationInDegreeAngle(const EJoystickOrientation& _eJoystickOrient);
	static EJoystickOrientation BPF_GetJoystickOrientationFromAngle(const struct FVector2D& _v2DJoystickValues, float* _fAngle, const float _fDeadZone, const float _fEastWestTolerance, const float _fHalfPiInDegree);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("JoystickOrientationHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"JoystickOrientationHelper")
	}
	static class UJoystickOrientationHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJoystickOrientationHelper>();
	}
};
DUMPER7_ASSERTS_UJoystickOrientationHelper;

// Class Runtime.TargetActorShootDirectionComputation
// 0x0008 (0x0048 - 0x0040)
class UTargetActorShootDirectionComputation final : public UBaseImpactPointShootDirectionComputation
{
public:
	TWeakObjectPtr<class AActor>                  m_Target;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetActorShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetActorShootDirectionComputation")
	}
	static class UTargetActorShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetActorShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UTargetActorShootDirectionComputation;

// Class Runtime.HitBounceShootDirectionComputation
// 0x01B0 (0x01F0 - 0x0040)
class UHitBounceShootDirectionComputation final : public UBaseShootDirectionComputation
{
public:
	struct FFloatDataBinding                      m_fForwardAngleOffset;                             // 0x0040(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FFloatDataBinding                      m_fVerticalAngleOffset;                            // 0x0088(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FFloatDataBinding                      m_fMaxAngleFromForward;                            // 0x00D0(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FFloatDataBinding                      m_fMinBounceVelocity;                              // 0x0118(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FFloatDataBinding                      m_fVerticalRestitution;                            // 0x0160(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FFloatDataBinding                      m_fHorizontalRestitution;                          // 0x01A8(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HitBounceShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HitBounceShootDirectionComputation")
	}
	static class UHitBounceShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitBounceShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UHitBounceShootDirectionComputation;

// Class Runtime.ModifiableLockedDirShootDirectionComputation
// 0x0000 (0x0058 - 0x0058)
class UModifiableLockedDirShootDirectionComputation final : public ULockedDirShootDirectionComputation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ModifiableLockedDirShootDirectionComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ModifiableLockedDirShootDirectionComputation")
	}
	static class UModifiableLockedDirShootDirectionComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModifiableLockedDirShootDirectionComputation>();
	}
};
DUMPER7_ASSERTS_UModifiableLockedDirShootDirectionComputation;

// Class Runtime.HitBounceShootForceComputation
// 0x00A8 (0x00D0 - 0x0028)
class UHitBounceShootForceComputation final : public UModifierShootForceComputation
{
public:
	struct FFloatDataBinding                      m_Restitution;                                     // 0x0028(0x0048)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                         m_fForceOnImmobileBall;                            // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatDataBinding                      m_ForceBonus;                                      // 0x0078(0x0048)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FFloatRange                            m_ForceRange;                                      // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HitBounceShootForceComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HitBounceShootForceComputation")
	}
	static class UHitBounceShootForceComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitBounceShootForceComputation>();
	}
};
DUMPER7_ASSERTS_UHitBounceShootForceComputation;

// Class Runtime.ShootHelpers
// 0x0028 (0x0060 - 0x0038)
class UShootHelpers final : public UDeveloperSettings
{
public:
	TSoftClassPtr<class UClass>                   m_DefaultBall;                                     // 0x0038(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static struct FShootParams BPF_ComputeShootParams(const struct FGameplayAbilityTargetDataHandle& _context, const class USCGameplayAbility* _ability, const struct FShootPrepTargetData& _targetData, float _fCatchupTime, float _fCatchupAnimTime);
	static void BPF_ComputeShootParamsFromAbilityAtLocation(const class USCGameplayAbility* _ability, const struct FShootPrepTargetData& _targetData, struct FShootParams* _outResult, const struct FVector& _vLocation, float _fWantedCatchupTime);
	static void BPF_ComputeShootParamsFromActor(const class AActor* _actor, const struct FShootPrepTargetData& _targetData, struct FShootParams* _outResult);
	static bool BPF_FindShootParamsTargetData(const struct FGameplayAbilityTargetDataHandle& _data, struct FShootParamsTargetData* _outData);
	static bool BPF_FindShootPrepTargetData(const struct FGameplayAbilityTargetDataHandle& _data, struct FShootPrepTargetData* _outData);
	static float BPF_GetAngleFromMagnusInput(const class AActor* _actor, const struct FShootPrepTargetData& _data, bool _bAbsoluteAngle);
	static struct FVector BPF_GetShootDirection(const class AActor* _actor, const struct FShootPrepTargetData& _data, bool _bUseModifiers);
	static float BPF_GetShootForce(const class AActor* _actor, const struct FShootPrepTargetData& _data, bool _bUseModifiers);
	static struct FFloatRange BPF_GetShootForceMinMax(const class AActor* _actor, const struct FShootPrepTargetData& _data, bool _bUseModifiers);
	static float BPF_GetShootForceNormalized(const class AActor* _runtimeCharacter, const struct FShootPrepTargetData& _data, bool _bUseModifiers);
	static struct FFloatRange BPF_GetShootForceRange(const class AActor* _runtimeCharacter, const struct FShootPrepTargetData& _data, bool _bUseModifiers);
	static float BPF_GetShootInputTimeFromShootPrep(const class AActor* _actor, const struct FShootPrepTargetData& _data, bool _bUseModifiers);
	static struct FVector BPF_GetShootRotationForce(const class AActor* _actor, const struct FShootPrepTargetData& _data, bool _bUseModifiers);
	static struct FVector2D BPF_GetShootRotationForceInput(const class AActor* _actor, const struct FShootPrepTargetData& _data);
	static struct FVector BPF_GetShootRotationForceRatio(const class AActor* _actor, const struct FShootPrepTargetData& _data);
	static struct FShootLocationPointResult BPF_GetShootStartLocationPoint(const class AActor* _runtimeCharacter, const struct FShootPrepTargetData& _targetData, const struct FGameplayAbilityTargetDataHandle& _context, const float _fCatchupTime, const struct FGameplayAbilityTargetDataHandle& _montageContextFallback);
	static struct FFloatRange BPF_GetShootTimeRange(const class AActor* _actor, const struct FShootPrepTargetData& _data);
	static float BPF_GetShootTimeRatioToBuildUpDuration(const class AActor* _actor, const struct FShootPrepTargetData& _data);
	static struct FGameplayTag BPF_GetShootType(const class AActor* _actor, const struct FShootPrepTargetData& _data, const TMap<struct FGameplayTag, struct FFloatRange>& _gameplayTagMap);
	static bool BPF_GetSimulatedShootDataFromShootPrep(const struct FShootPrepTargetData& _data, struct FSimulatedShootData* _outSimulatedShootData);
	static void BPF_GetTrajectoryClosestPointByLocation(const class AActor* _runtimeCharacter, const struct FBallTrajectoryResult& _trajectory, struct FVector* _vResult, bool* _bFoundResult, float* _fDistance);
	static struct FBallTrajectoryResult BPF_GetTrajectoryFromSimulatedShootData(const struct FSimulatedShootData& _simulatedShootData, struct FShootParams* _outShootParams, class UShootAbilityData* _shootAbilityData, const class AActor* _actor, class ABall* _ball, float _fPredictionDuration, bool _bUseTime, bool _bApplyModifiers);
	static bool BPF_HasReleaseShootInput(const class AActor* _actor, const struct FShootPrepTargetData& _data);
	static struct FGameplayAbilityTargetDataHandle BPF_MakeShootPrepTargetDataHandle(const struct FShootPrepTargetData& _data);
	static bool BPF_ShootPrep_IsValid(const struct FShootPrepTargetData& _targetData);
	static float BPF_TimeRemainingBeforeShoot(const class AActor* _actor, const struct FShootPrepTargetData& _data);
	static struct FVector BPF_TraceBall(const class AActor* _actor, ECollisionChannel _eCollisionChannel, const TArray<ECollisionChannel>& _collisionChannelToIgnore, const struct FVector& _vStartPoint, const struct FVector& _vDirection, struct FVector* _vOutImpactNormal, const class FString& _sOverrideDebugString, bool _bUseMultiHitsInsteadOfSingle);
	static struct FVector BPF_TryToGetImpactNormal(const struct FShootPrepTargetData& _data, bool* _bSuccess);
	static struct FVector BPF_TryToGetImpactPointOnCameraDirection(const struct FShootPrepTargetData& _data, bool* _bSuccess);
	static struct FVector BPF_TryToGetTargetedPointBySight(const struct FShootPrepTargetData& _data, bool* _bSuccess);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootHelpers")
	}
	static class UShootHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootHelpers>();
	}
};
DUMPER7_ASSERTS_UShootHelpers;

// Class Runtime.ShootModifierHelpers
// 0x0000 (0x0028 - 0x0028)
class UShootModifierHelpers final : public UBlueprintFunctionLibrary
{
public:
	static float BPF_GetMultiplierBySpeedState(const class AActor* _actor, const struct FShootPrepTargetData& _ShootData, const float _fBlendTime, const struct FMultiplierSpeedStateData& m_Multipliers);
	static float BPF_GetMultiplierFromShootModifierDataTable(const class AActor* _actor, const struct FShootPrepTargetData& _ShootData, const class UDataTable* _table, const struct FVector& _vOutDirection);
	static float BPF_GetSourceRatioValue(const class AActor* _actor, const struct FShootPrepTargetData& _ShootData, ESourceModifierType _eSourceType, const struct FFloatInterval& _intervalToComputeRatio);
	static float BPF_GetSourceValue(const class AActor* _actor, const struct FShootPrepTargetData& _ShootData, ESourceModifierType _eSourceType);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShootModifierHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShootModifierHelpers")
	}
	static class UShootModifierHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShootModifierHelpers>();
	}
};
DUMPER7_ASSERTS_UShootModifierHelpers;

// Class Runtime.SimpleShootModifierComputationData
// 0x0008 (0x0030 - 0x0028)
class USimpleShootModifierComputationData final : public UShootModifierComputationData
{
public:
	float                                         m_fDefaultMultiplier;                              // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SimpleShootModifierComputationData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SimpleShootModifierComputationData")
	}
	static class USimpleShootModifierComputationData* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimpleShootModifierComputationData>();
	}
};
DUMPER7_ASSERTS_USimpleShootModifierComputationData;

// Class Runtime.CurveShootModifierComputationData
// 0x0090 (0x00C8 - 0x0038)
class UCurveShootModifierComputationData final : public UComputedShootModifierComputationData
{
public:
	struct FRuntimeFloatCurve                     m_Curve;                                           // 0x0038(0x0088)(Edit, NativeAccessSpecifierPublic)
	ESourceModifierType                           m_eSourceType;                                     // 0x00C0(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CurveShootModifierComputationData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CurveShootModifierComputationData")
	}
	static class UCurveShootModifierComputationData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurveShootModifierComputationData>();
	}
};
DUMPER7_ASSERTS_UCurveShootModifierComputationData;

// Class Runtime.BasicShootModifier
// 0x0008 (0x0038 - 0x0030)
class UBasicShootModifier : public UShootModifier
{
public:
	class UShootModifierComputationData*          m_Computation;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BasicShootModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BasicShootModifier")
	}
	static class UBasicShootModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBasicShootModifier>();
	}
};
DUMPER7_ASSERTS_UBasicShootModifier;

// Class Runtime.VerticalRotationInputShootModifier
// 0x0010 (0x0040 - 0x0030)
class UVerticalRotationInputShootModifier final : public UShootModifier
{
public:
	float                                         m_fPositiveMagnus;                                 // 0x0030(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fNeutralMagnus;                                  // 0x0034(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fNegativeMagnus;                                 // 0x0038(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VerticalRotationInputShootModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VerticalRotationInputShootModifier")
	}
	static class UVerticalRotationInputShootModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerticalRotationInputShootModifier>();
	}
};
DUMPER7_ASSERTS_UVerticalRotationInputShootModifier;

// Class Runtime.JoystickShootModifier
// 0x0010 (0x0040 - 0x0030)
class UJoystickShootModifier final : public UShootModifier
{
public:
	class UCurveFloat*                            m_ShootYawOffsetByYAxis;                           // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_ShootPitchOffsetByXAxis;                         // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("JoystickShootModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"JoystickShootModifier")
	}
	static class UJoystickShootModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJoystickShootModifier>();
	}
};
DUMPER7_ASSERTS_UJoystickShootModifier;

// Class Runtime.ForceModifierTargetDatasource
// 0x0010 (0x0090 - 0x0080)
class UForceModifierTargetDatasource final : public UTargetDatasource
{
public:
	TArray<class UShootModifier*>                 m_Modifier;                                        // 0x0080(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ForceModifierTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ForceModifierTargetDatasource")
	}
	static class UForceModifierTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UForceModifierTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UForceModifierTargetDatasource;

// Class Runtime.RawVector2DTargetDatasource
// 0x0028 (0x00D0 - 0x00A8)
class URawVector2DTargetDatasource final : public UGenericTargetDatasource
{
public:
	struct FRawVector2DDataPickerInfos            m_Vector2DInfos;                                   // 0x00A8(0x0020)(Deprecated, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bAreDataDeprecated;                              // 0x00C8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RawVector2DTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RawVector2DTargetDatasource")
	}
	static class URawVector2DTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<URawVector2DTargetDatasource>();
	}
};
DUMPER7_ASSERTS_URawVector2DTargetDatasource;

// Class Runtime.ShopItemOwnedFilter
// 0x0000 (0x0028 - 0x0028)
class UShopItemOwnedFilter final : public UShopItemFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShopItemOwnedFilter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShopItemOwnedFilter")
	}
	static class UShopItemOwnedFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemOwnedFilter>();
	}
};
DUMPER7_ASSERTS_UShopItemOwnedFilter;

// Class Runtime.ShopItemNotInBundleFilter
// 0x0000 (0x0028 - 0x0028)
class UShopItemNotInBundleFilter final : public UShopItemFilter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShopItemNotInBundleFilter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShopItemNotInBundleFilter")
	}
	static class UShopItemNotInBundleFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemNotInBundleFilter>();
	}
};
DUMPER7_ASSERTS_UShopItemNotInBundleFilter;

// Class Runtime.ShopItemByOwnershipSorter
// 0x0000 (0x0030 - 0x0030)
class UShopItemByOwnershipSorter final : public UShopItemSorter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShopItemByOwnershipSorter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShopItemByOwnershipSorter")
	}
	static class UShopItemByOwnershipSorter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemByOwnershipSorter>();
	}
};
DUMPER7_ASSERTS_UShopItemByOwnershipSorter;

// Class Runtime.ShopItemByBuyableSorter
// 0x0000 (0x0030 - 0x0030)
class UShopItemByBuyableSorter final : public UShopItemSorter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ShopItemByBuyableSorter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ShopItemByBuyableSorter")
	}
	static class UShopItemByBuyableSorter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopItemByBuyableSorter>();
	}
};
DUMPER7_ASSERTS_UShopItemByBuyableSorter;

// Class Runtime.SimulateShootBallInterceptionPointTargetDatasource
// 0x0020 (0x00A0 - 0x0080)
class USimulateShootBallInterceptionPointTargetDatasource final : public UTargetDatasource
{
public:
	bool                                          m_bStopOnWall;                                     // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FShootDirectionComputationInstance     m_OverrideTargetDirection;                         // 0x0088(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         m_fMaxSimTime;                                     // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SimulateShootBallInterceptionPointTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SimulateShootBallInterceptionPointTargetDatasource")
	}
	static class USimulateShootBallInterceptionPointTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimulateShootBallInterceptionPointTargetDatasource>();
	}
};
DUMPER7_ASSERTS_USimulateShootBallInterceptionPointTargetDatasource;

// Class Runtime.SpeedStateActorCondition
// 0x0008 (0x0030 - 0x0028)
class USpeedStateActorCondition final : public UBaseActorCondition
{
public:
	bool                                          m_bTestTransition;                                 // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOperationType                                m_eOperationType;                                  // 0x0029(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESCCharacterSpeedState                        m_eSpeedState;                                     // 0x002A(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpeedStateActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpeedStateActorCondition")
	}
	static class USpeedStateActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpeedStateActorCondition>();
	}
};
DUMPER7_ASSERTS_USpeedStateActorCondition;

// Class Runtime.StadiumWorldSettings
// 0x0048 (0x0710 - 0x06C8)
class AStadiumWorldSettings final : public ASCWorldSettings
{
public:
	float                                         m_fNetworkTimeMargin;                              // 0x06C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fNetworkToleranceMargin;                         // 0x06CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vFieldCenter;                                    // 0x06D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              m_vFieldSize;                                      // 0x06E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCeilingHeight;                                  // 0x06F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxGroundHitAngle;                              // 0x06FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bDrawDebugField;                                 // 0x0700(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_701[0x3];                                      // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAirDensity;                                     // 0x0704(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOptimizeTrajectoryCalculations;                 // 0x0708(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class AStadiumWorldSettings* BPF_GetRuntimeWorldSettings(const class UObject* _context, bool _bForceMainWorld);

	struct FBox BPF_GetFieldBox() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StadiumWorldSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StadiumWorldSettings")
	}
	static class AStadiumWorldSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStadiumWorldSettings>();
	}
};
DUMPER7_ASSERTS_AStadiumWorldSettings;

// Class Runtime.StaminaRegenCalculation
// 0x0000 (0x0040 - 0x0040)
class UStaminaRegenCalculation final : public UGameplayEffectExecutionCalculation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StaminaRegenCalculation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StaminaRegenCalculation")
	}
	static class UStaminaRegenCalculation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStaminaRegenCalculation>();
	}
};
DUMPER7_ASSERTS_UStaminaRegenCalculation;

// Class Runtime.SweeperAttributeSet
// 0x0038 (0x00C0 - 0x0088)
class USweeperAttributeSet final : public USCAttributeSet
{
public:
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttributeData                 v1;                                                // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 v2;                                                // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                 V3;                                                // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

public:
	void OnRep_V1(const struct FGameplayAttributeData& _oldV1);
	void OnRep_V2(const struct FGameplayAttributeData& _oldV2);
	void OnRep_V3(const struct FGameplayAttributeData& _oldV3);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SweeperAttributeSet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SweeperAttributeSet")
	}
	static class USweeperAttributeSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<USweeperAttributeSet>();
	}
};
DUMPER7_ASSERTS_USweeperAttributeSet;

// Class Runtime.ThumbnailCustomizationIds
// 0x0050 (0x0080 - 0x0030)
class UThumbnailCustomizationIds final : public UDataAsset
{
public:
	struct FThumbnailCustomizationIdsContainer    m_CustomizationIDs;                                // 0x0030(0x0050)(Edit, NativeAccessSpecifierPublic)

public:
	void BPF_GetThumbnailCustomizationId(const struct FSCCustomizationId& _customizationID, TSoftObjectPtr<class ULevelSequence>* _viewSequence, TSoftObjectPtr<class UAnimSequence>* _animSequence, float* _fAnimTime, TSoftObjectPtr<class UTexture2D>* _defaultTexture) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ThumbnailCustomizationIds")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ThumbnailCustomizationIds")
	}
	static class UThumbnailCustomizationIds* GetDefaultObj()
	{
		return GetDefaultObjImpl<UThumbnailCustomizationIds>();
	}
};
DUMPER7_ASSERTS_UThumbnailCustomizationIds;

// Class Runtime.ThumbnailLevelSequenceActor
// 0x0000 (0x0358 - 0x0358)
class AThumbnailLevelSequenceActor final : public ALevelSequenceActor
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ThumbnailLevelSequenceActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ThumbnailLevelSequenceActor")
	}
	static class AThumbnailLevelSequenceActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AThumbnailLevelSequenceActor>();
	}
};
DUMPER7_ASSERTS_AThumbnailLevelSequenceActor;

// Class Runtime.TouchBallSnapNotify
// 0x0000 (0x0038 - 0x0038)
class UTouchBallSnapNotify final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TouchBallSnapNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TouchBallSnapNotify")
	}
	static class UTouchBallSnapNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTouchBallSnapNotify>();
	}
};
DUMPER7_ASSERTS_UTouchBallSnapNotify;

// Class Runtime.TrajectoryHelpers
// 0x0000 (0x0038 - 0x0038)
class UTrajectoryHelpers final : public UDeveloperSettings
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrajectoryHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrajectoryHelpers")
	}
	static class UTrajectoryHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrajectoryHelpers>();
	}
};
DUMPER7_ASSERTS_UTrajectoryHelpers;

// Class Runtime.OverridableForceTrajectoryModifier
// 0x0070 (0x00A0 - 0x0030)
class UOverridableForceTrajectoryModifier : public UTrajectoryModifier
{
public:
	bool                                          m_bInFirstBounceSpace;                             // 0x0030(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOverrideForce;                                  // 0x0031(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseGameplayAttribute;                           // 0x0032(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseAttributeFromShooter;                        // 0x0033(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vForceOverride;                                  // 0x0038(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                     m_Attribute;                                       // 0x0050(0x0038)(Edit, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vForceDirection;                                 // 0x0088(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("OverridableForceTrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"OverridableForceTrajectoryModifier")
	}
	static class UOverridableForceTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOverridableForceTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_UOverridableForceTrajectoryModifier;

// Class Runtime.ForceNullifierTrajectoryModifier
// 0x0000 (0x0030 - 0x0030)
class UForceNullifierTrajectoryModifier final : public UTrajectoryModifier
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ForceNullifierTrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ForceNullifierTrajectoryModifier")
	}
	static class UForceNullifierTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UForceNullifierTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_UForceNullifierTrajectoryModifier;

// Class Runtime.GravityTrajectoryModifier
// 0x0020 (0x00C0 - 0x00A0)
class UGravityTrajectoryModifier : public UOverridableForceTrajectoryModifier
{
public:
	bool                                          m_bOverrideMass;                                   // 0x00A0(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMassValue;                                      // 0x00A4(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFreeFallMultiplier;                             // 0x00A8(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxFreeFallAccelAllowed;                        // 0x00AC(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bApplyAdditionalForce;                           // 0x00B0(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAdditionalForce;                                // 0x00B4(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCoefToReduceAdditionalForce;                    // 0x00B8(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPeriodInSeconds;                                // 0x00BC(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GravityTrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GravityTrajectoryModifier")
	}
	static class UGravityTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGravityTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_UGravityTrajectoryModifier;

// Class Runtime.FrictionTrajectoryModifier
// 0x0008 (0x0078 - 0x0070)
class UFrictionTrajectoryModifier : public UOverridableConstantTrajectoryModifier
{
public:
	float                                         m_fDefaultFriction;                                // 0x0070(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFrictionMultiplier;                             // 0x0074(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FrictionTrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FrictionTrajectoryModifier")
	}
	static class UFrictionTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFrictionTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_UFrictionTrajectoryModifier;

// Class Runtime.CurrentForceBonusTrajectoryModifier
// 0x0010 (0x0080 - 0x0070)
class UCurrentForceBonusTrajectoryModifier final : public UOverridableConstantTrajectoryModifier
{
public:
	float                                         m_fMaxMutiplier;                                   // 0x0070(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bMultiplyByDot;                                  // 0x0074(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_DotRemapCurve;                                   // 0x0078(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CurrentForceBonusTrajectoryModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CurrentForceBonusTrajectoryModifier")
	}
	static class UCurrentForceBonusTrajectoryModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurrentForceBonusTrajectoryModifier>();
	}
};
DUMPER7_ASSERTS_UCurrentForceBonusTrajectoryModifier;

// Class Runtime.TrajectoryPartHelpers
// 0x0000 (0x0028 - 0x0028)
class UTrajectoryPartHelpers final : public UBlueprintFunctionLibrary
{
public:
	static struct FPredictProjectilePathPointData BPF_GetPartPointAtRatioDistance(const struct FBallTrajectoryPart& _trajPart, float _fRatio);
	static float BPF_GetPartTime(const struct FBallTrajectoryPart& _trajPart);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrajectoryPartHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrajectoryPartHelpers")
	}
	static class UTrajectoryPartHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrajectoryPartHelpers>();
	}
};
DUMPER7_ASSERTS_UTrajectoryPartHelpers;

// Class Runtime.InsideGoalTrajectoryStatusActivateCondition
// 0x0000 (0x0028 - 0x0028)
class UInsideGoalTrajectoryStatusActivateCondition final : public UTrajectoryStatusActivateCondition
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InsideGoalTrajectoryStatusActivateCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InsideGoalTrajectoryStatusActivateCondition")
	}
	static class UInsideGoalTrajectoryStatusActivateCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInsideGoalTrajectoryStatusActivateCondition>();
	}
};
DUMPER7_ASSERTS_UInsideGoalTrajectoryStatusActivateCondition;

// Class Runtime.VolleyTrajectoryStatusActivateCondition
// 0x0000 (0x0028 - 0x0028)
class UVolleyTrajectoryStatusActivateCondition final : public UTrajectoryStatusActivateCondition
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VolleyTrajectoryStatusActivateCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VolleyTrajectoryStatusActivateCondition")
	}
	static class UVolleyTrajectoryStatusActivateCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVolleyTrajectoryStatusActivateCondition>();
	}
};
DUMPER7_ASSERTS_UVolleyTrajectoryStatusActivateCondition;

// Class Runtime.TutorialActor
// 0x0008 (0x02B8 - 0x02B0)
class ATutorialActor final : public AActor
{
public:
	struct FGameplayTag                           m_TutorialActorTag;                                // 0x02B0(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialActor")
	}
	static class ATutorialActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATutorialActor>();
	}
};
DUMPER7_ASSERTS_ATutorialActor;

// Class Runtime.TutorialManager
// 0x0168 (0x0418 - 0x02B0)
class ATutorialManager final : public AActor
{
public:
	struct FGameplayTag                           m_TutorialManagerTag;                              // 0x02B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bAutoMoveToNextLevelAtEnd;                       // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTutorialLogicStepDatasourceInstance> m_TutorialLogicBeforeStartData;              // 0x02C0(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FTutorialLogicStepDatasourceInstance> m_TutorialLogicOnEndData;                    // 0x02D0(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              m_OnTutorialCompleteDelegate;                      // 0x02E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_InTutorialMenuTag;                               // 0x02F0(0x0008)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_NextTutorialManagerToPlayTag;                    // 0x02F8(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTutorialLogicStep*>             m_TutorialLogicBeforeStart;                        // 0x0300(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UTutorialLogicStep*>             m_TutorialLogicOnEnd;                              // 0x0310(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ARuntimeCharacter>       m_TutorialPlayer;                                  // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bInitOnBeginPlay;                                // 0x0328(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_TutorialTitle;                                   // 0x0330(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   m_TutorialInstruction;                             // 0x0340(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bRequestInputToStartTutorial;                    // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USCInputContext*                        m_PracticeContext;                                 // 0x0358(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_360[0x1];                                      // 0x0360(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bHideTutorialProgressionUI;                      // 0x0361(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonActivatableWidget>   m_TutorialWidgetClass;                             // 0x0368(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_TutorialUILayer;                                 // 0x0370(0x0008)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonActivatableWidget*               m_TutorialWidget;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_380[0x8];                                      // 0x0380(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          m_TutorialCompleteSound;                           // 0x0388(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_390[0x18];                                     // 0x0390(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTutorialStepDatasourceInstance> m_TutorialStepsData;                              // 0x03A8(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UTutorialStep*>                  m_TutorialSteps;                                   // 0x03B8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UTutorialStep*                          m_CurrentStep;                                     // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D0[0x4];                                      // 0x03D0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bWantToPlayLevelSequenceAtTheBeginning;          // 0x03D4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_LevelSequenceToPlayAtTheBeginning;               // 0x03D8(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASCLevelSequenceActor*                  m_SequenceActorToPlayAtTheBeginning;               // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bWantToPlayLevelSequenceAtTheEnd;                // 0x03E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_LevelSequenceToPlayAtTheEnd;                     // 0x03EC(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCLevelSequenceActor*                  m_SequenceActorToPlayAtTheEnd;                     // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_400[0x18];                                     // 0x0400(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnStartCurrentStep();
	void BPE_OnStartTutorial();
	void BPE_OnTutorialComplete();
	void BPE_OnWaitingPlayerInputToStart();
	void InitTutorial(class UCommonActivatableWidget* _widgetToUse);
	void OnLevelSequencePlayedAtTheBeginningFinished();
	void OnLevelSequencePlayedAtTheEndFinished();
	void OnPossessedPawnChanged(class APawn* _oldPawn, class APawn* _newPawn);
	void OnSkipIntroductionInputPressed();
	void OnStepSucceeded();

	class ATutorialActor* BPF_FindTutorialActor(const struct FGameplayTag& _tag) const;
	int32 BPF_GetCurrentStepNumber() const;
	int32 BPF_GetObjectiveCountInCurrentStep() const;
	int32 BPF_GetObjectiveCountInCurrentStepWithIteration() const;
	int32 BPF_GetStepCount() const;
	void BPF_MoveToNextLevel() const;
	bool CanStartTutorialFromInput() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialManager")
	}
	static class ATutorialManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATutorialManager>();
	}
};
DUMPER7_ASSERTS_ATutorialManager;

// Class Runtime.TutorialObjectiveListenInput
// 0x0018 (0x0088 - 0x0070)
class UTutorialObjectiveListenInput final : public UTutorialObjective
{
public:
	class USCInputContext*                        m_InputContext;                                    // 0x0070(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_InputAction;                                     // 0x0078(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_80[0x8];                                       // 0x0080(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnInputActivation(const class USCInputAction* _uscInputAction, const struct FInputActionState& _inputActionState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialObjectiveListenInput")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialObjectiveListenInput")
	}
	static class UTutorialObjectiveListenInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialObjectiveListenInput>();
	}
};
DUMPER7_ASSERTS_UTutorialObjectiveListenInput;

// Class Runtime.TutorialStep
// 0x00C0 (0x00E8 - 0x0028)
class UTutorialStep final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              m_StepSucceedDelegate;                             // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_Title;                                           // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   m_Instructions;                                    // 0x0080(0x0010)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bClearObjectiveBoard;                            // 0x0090(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsLastStep;                                     // 0x0091(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTutorialLogicStepDatasourceInstance> m_TutorialLogicStepData;                     // 0x0098(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UTutorialLogicStep*>             m_TutorialLogicStep;                               // 0x00A8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTutorialObjectiveDatasourceInstance> m_TutorialObjectivesData;                    // 0x00B8(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UTutorialObjective*>             m_TutorialObjectives;                              // 0x00C8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ARuntimeCharacter>       m_TutorialPlayer;                                  // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                          m_StepSucceedSound;                                // 0x00E0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void EndStep();
	TArray<class UTutorialObjective*> GetObjectives();
	void OnEndStep();
	void OnObjectiveComplete(class UTutorialObjective* _objective);
	void OnStartStep();

	int32 BPF_GetObjectiveCount() const;
	int32 BPF_GetObjectiveCountWithIteration() const;
	class ATutorialManager* GetOwner() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TutorialStep")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TutorialStep")
	}
	static class UTutorialStep* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTutorialStep>();
	}
};
DUMPER7_ASSERTS_UTutorialStep;

// Class Runtime.UtilityAIComponent
// 0x0020 (0x00D8 - 0x00B8)
class UUtilityAIComponent final : public UActorComponent
{
public:
	class UUtilityAIPreset*                       m_UtilityAiPreset;                                 // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C0[0x10];                                      // 0x00C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UUtilityAITask*                         m_CurrentTask;                                     // 0x00D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnTaskFinished(class UUtilityAITask* _taskFinished);
	void SetUtilityAiPreset(class UUtilityAIPreset* _newPreset);
	void StartBehavior();
	void StopBehavior();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UtilityAIComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UtilityAIComponent")
	}
	static class UUtilityAIComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUtilityAIComponent>();
	}
};
DUMPER7_ASSERTS_UUtilityAIComponent;

// Class Runtime.UtilityAITask
// 0x0028 (0x0050 - 0x0028)
class UUtilityAITask final : public UObject
{
public:
	TMulticastInlineDelegate<void(class UUtilityAITask* _taskFinished)> m_OnTaskFinishedDelegate;    // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AAIController>           m_AIController;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bRequestTarget;                                  // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EUtilityAITargetType                          m_eTargetType;                                     // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AActor>                  m_TargetActor;                                     // 0x0044(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnTaskStart();
	void FinishTask();

	void BPE_ComputeAllConsiderationValue(class AAIController* _inAIController, class AActor* _inTargetActor, TMap<class UCurveFloat*, float>* _outResult) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UtilityAITask")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UtilityAITask")
	}
	static class UUtilityAITask* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUtilityAITask>();
	}
};
DUMPER7_ASSERTS_UUtilityAITask;

// Class Runtime.VoiceChatBlueprintHelperLibrary
// 0x0000 (0x0028 - 0x0028)
class UVoiceChatBlueprintHelperLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FSOSVoiceChatDeviceInfo GetActiveInputDevice(class UObject* _worldContextObject);
	static TArray<struct FSOSVoiceChatDeviceInfo> GetInputDevices(class UObject* _worldContextObject);
	static void SetInputDevice(class UObject* _worldContextObject, const class FString& _inputDeviceId);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VoiceChatBlueprintHelperLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VoiceChatBlueprintHelperLibrary")
	}
	static class UVoiceChatBlueprintHelperLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoiceChatBlueprintHelperLibrary>();
	}
};
DUMPER7_ASSERTS_UVoiceChatBlueprintHelperLibrary;

// Class Runtime.WaitForPlayersArrivedFlowState
// 0x0118 (0x06A8 - 0x0590)
class UWaitForPlayersArrivedFlowState : public URuntimeGameFlowState
{
public:
	uint8                                         Pad_590[0x10];                                     // 0x0590(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      m_UseMissingPlayerTransitionQuery;                 // 0x05A0(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	class FName                                   m_TransitionOnMissingPlayer;                       // 0x05E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_PlayerBindingTag;                                // 0x05F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ACharacter>                 m_FakeCharacterToSpawnClass;                       // 0x05F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_600[0xA8];                                     // 0x0600(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPawnSetInClient(class APlayerState* _player, class APawn* _newPawn, class APawn* _oldPawn);
	void OnPlayerStateAddedInClient(class APlayerState* _PlayerStateAdded);
	void OnPlayerStateReplicatedInController(class APlayerState* _playerState);
	void TryToPlayColorChoiceSequences(class AController* _PlayerController);
	void TryToPlayPlayerColorChoiceSequence(class APlayerState* _PlayerStateAdded);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WaitForPlayersArrivedFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WaitForPlayersArrivedFlowState")
	}
	static class UWaitForPlayersArrivedFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWaitForPlayersArrivedFlowState>();
	}
};
DUMPER7_ASSERTS_UWaitForPlayersArrivedFlowState;

// Class Runtime.WallRunThresholdTargetDatasource
// 0x0038 (0x00B8 - 0x0080)
class UWallRunThresholdTargetDatasource final : public UTargetDatasource
{
public:
	struct FFloatInterval                         m_ApexHeightInterval;                              // 0x0080(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWallRunStateData                      m_ClimbState;                                      // 0x0088(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWallRunStateData                      m_FallState;                                       // 0x00A0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WallRunThresholdTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WallRunThresholdTargetDatasource")
	}
	static class UWallRunThresholdTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWallRunThresholdTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UWallRunThresholdTargetDatasource;

// Class Runtime.WelcomeFlowContentViewModel
// 0x0060 (0x00D0 - 0x0070)
class UWelcomeFlowContentViewModel final : public USCViewModel
{
public:
	class FString                                 m_Id;                                              // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ERematchWelcomeFlowContentType                m_Type;                                            // 0x0080(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_Title;                                           // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   m_Description;                                     // 0x0098(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>              m_Texture;                                         // 0x00A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WelcomeFlowContentViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WelcomeFlowContentViewModel")
	}
	static class UWelcomeFlowContentViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWelcomeFlowContentViewModel>();
	}
};
DUMPER7_ASSERTS_UWelcomeFlowContentViewModel;

// Class Runtime.Workshop
// 0x0150 (0x0400 - 0x02B0)
class AWorkshop final : public AActor
{
public:
	struct FGameplayTag                           m_WorkshopTag;                                     // 0x02B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   m_WorkshopTitle;                                   // 0x02B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   m_WorkshopInstruction;                             // 0x02C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D8[0x78];                                     // 0x02D8(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	EWorkshopWinReason                            m_WinReason;                                       // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bStartOnBeginPlay;                               // 0x0351(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bSaveEnabled;                                    // 0x0352(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWorkshopStartType                            m_WorkshopStartType;                               // 0x0353(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iBeginningCountDownValue;                        // 0x0354(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UTagAvailabilityLayerContainer> m_LayerContainerInstanceToPushDuringCountDownClass; // 0x0358(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_360[0x8];                                      // 0x0360(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USCInputContext*                        m_PracticeContext;                                 // 0x0368(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_370[0x10];                                     // 0x0370(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bHasTimer;                                       // 0x0380(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsTimerCountDown;                               // 0x0381(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_382[0x2];                                      // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fCountDownValue;                                 // 0x0384(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fBronzeTime;                                     // 0x0388(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fSilverTime;                                     // 0x038C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fGoldTime;                                       // 0x0390(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_394[0xC];                                      // 0x0394(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 _iNewScore)> m_OnScoreChanged;                               // 0x03A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B0[0x4];                                      // 0x03B0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bHasScore;                                       // 0x03B4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iMaxScore;                                       // 0x03B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEndWhenMaxScoreIsReached;                         // 0x03BC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iBronzeScore;                                    // 0x03C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iSilverScore;                                    // 0x03C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iGoldScore;                                      // 0x03C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UTagAvailabilityLayerContainer> m_LayerContainerInstanceToPushClass;           // 0x03D0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D8[0x4];                                      // 0x03D8(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bHideWorkshopWidget;                             // 0x03DC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3DD[0x3];                                      // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonActivatableWidget>   m_WorkshopWidgetClass;                             // 0x03E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_WorkshopUILayer;                                 // 0x03E8(0x0008)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonActivatableWidget*               m_WorkshopWidget;                                  // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWorkshopViewModel*                     m_WorkshopViewModel;                               // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AddScore(int32 _iScoreToAdd);
	void BPE_FinishWorkshop();
	void BPE_PauseWorkshop();
	void BPE_RestartWorkshop();
	void BPE_StartWorkshop();
	void BPE_UnpauseWorkshop();
	void BPF_SnapBallToWorkshopUser();
	void CheckAchievements();
	void FinishWorkshop();
	void OnSkipIntroductionInputPressed();
	void PauseWorkshop();
	void RequestStartWorkshop();
	void RestartWorkshop();
	void UnpauseWorkshop();

	EWorkshopMedal BPF_ComputeMedalWithScore(int32 _iScore) const;
	EWorkshopMedal BPF_ComputeMedalWithTime(float _fTime) const;
	float BPF_GetWorkshopTimer() const;
	bool CanStartWorkshopFromInput() const;
	int32 GetWorkshopScore() const;
	EWorkshopState GetWorkshopState() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Workshop")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Workshop")
	}
	static class AWorkshop* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWorkshop>();
	}
};
DUMPER7_ASSERTS_AWorkshop;

// Class Runtime.RuntimePlayerState
// 0x0358 (0x09D0 - 0x0678)
class ARuntimePlayerState : public ASCPlayerState
{
public:
	TMulticastInlineDelegate<void(class ARuntimePlayerState* _playerState, uint8 _uiNewTeam, int32 _iNumberInTeam)> BPE_OnTeamChanged; // 0x0678(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ARuntimePlayerState* _playerState)> m_OnSanitizedNameChanged; // 0x0688(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          m_bIsCaptain;                                      // 0x0698(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         m_uiTeam;                                          // 0x0699(0x0001)(Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         m_uiNumberInTeam;                                  // 0x069A(0x0001)(Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bIsBallKicker;                                   // 0x069B(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_SanitizedName;                                   // 0x06A0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDisconnectedPlayerData                m_DisconnectedPlayerData;                          // 0x06B0(0x0060)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_710[0x10];                                     // 0x0710(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ARuntimePlayerState* _playerState)> m_OnMvpSet;              // 0x0720(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTotalExperienceData                   m_TotalExperienceData;                             // 0x0730(0x0018)(Edit, Net, Transient, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bIsMVP;                                          // 0x0748(0x0001)(Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_749[0x27];                                     // 0x0749(0x0027)(Fixing Size After Last Property [ Dumper-7 ])
	class ARuntimeLevelSequenceActor*             m_ColorChoiceLevelSequenceActor;                   // 0x0770(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_778[0x8];                                      // 0x0778(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class APlayerState* _playerState, class USCInputAction* _inputAction)> m_OnFinisherInputSet; // 0x0780(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class USCInputAction*, struct FExtraAssetEnumHandler> m_FinisherExtraAssetsDependingInput;  // 0x0790(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_FinisherInputActionPressed;                      // 0x07E0(0x0008)(Net, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_DefaultFinisherInputAction;                      // 0x07E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCCustomizationLevelSequenceDataAsset* m_DefaultFinisherToPlay;                           // 0x07F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bForceUseDefaultFinisher;                        // 0x07F8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExtraAssetEnumHandler                 m_VictoryMoodExtraAssetEnumHandler;                // 0x0800(0x0060)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelSequence*                         m_DefaultVictoryMoodToPlay;                        // 0x0860(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bForceUseDefaultVictoryMood;                     // 0x0868(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_869[0x7];                                      // 0x0869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ARuntimePlayerState* _playerState)> BPE_OnCustoChanged;      // 0x0870(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class USCCharacterCustomizationContainer> m_DefaultPlayerCustoClass;                 // 0x0880(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_888[0x20];                                     // 0x0888(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCCharacterCustomizationDescription   m_CurrentCustomizationPreset;                      // 0x08A8(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bIsCustoValid;                                   // 0x0998(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_999[0x7];                                      // 0x0999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ARuntimePlayerState* _playerState)> m_OnPlayerProfileCustoReplicated; // 0x09A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPlayerProfileDescription              m_CurrentPlayerProfileCustomization;               // 0x09B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bIsPlayerProfileCustoValid;                      // 0x09C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9C1[0xF];                                      // 0x09C1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_ClientInitialize(class AController* _controller);
	void BPF_ResetShowPrematchTeamDisplay();
	void BPF_SetCaptain(bool _bIsCaptain);
	void BPF_SetFinisherInputActionPressed(class USCInputAction* _inputAction);
	void BPF_SetPlayerName(const class FString& _name);
	void BPF_SetTeam(uint8 Team);
	void BPF_ToggleShowPrematchTeamDisplay();
	void OnCaptainSet(class ARuntimeMatchGameState* _gameState);
	void OnInitialReplication(class ASCPlayerState* _playerState);
	void OnRep_ColorChoiceSequenceActor(class ARuntimeLevelSequenceActor* _oldAnimSequence);
	void OnRep_CurrentCusto();
	void OnRep_CurrentPlayerProfileCusto();
	void OnRep_IsCaptain();
	void OnRep_IsMvp();
	void OnRep_NumberInTeam();
	void OnRep_Team();
	void OnRep_TotalExperienceData();
	void OnSetIsMVP(class ARuntimePlayerState* _playerState);
	void SetTeamColorKitUsed(ETeamColorKitType _usedColorKit);

	bool BPF_GetIsCaptain() const;
	int32 BPF_GetNumberInTeam() const;
	void BPF_GetOpponentTeamColor(struct FLinearColor* _mainColor, struct FLinearColor* _secondaryColor, struct FLinearColor* _tertiaryColor) const;
	uint8 BPF_GetOtherTeam() const;
	class AController* BPF_GetOwningController() const;
	class FString BPF_GetPlayerProfileAvatarItemId() const;
	class FString BPF_GetPlayerProfileBannerItemId() const;
	class FString BPF_GetPlayerProfileTitleItemId() const;
	class FString BPF_GetSanitizedName() const;
	class UCustomizationARDataAsset* BPF_GetStageAR() const;
	struct FGameplayTag BPF_GetStageARTag() const;
	uint8 BPF_GetTeam() const;
	void BPF_GetTeamColor(struct FLinearColor* _mainColor, struct FLinearColor* _secondaryColor, struct FLinearColor* _tertiaryColor) const;
	float BPF_GetValueOfStat(TSubclassOf<class USCStatControllerBase> _statClass) const;
	bool BPF_IsMvp() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimePlayerState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimePlayerState")
	}
	static class ARuntimePlayerState* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARuntimePlayerState>();
	}
};
DUMPER7_ASSERTS_ARuntimePlayerState;

// Class Runtime.MovieSceneTransitionTrack
// 0x0008 (0x00D0 - 0x00C8)
class UMovieSceneTransitionTrack final : public UMovieScenePropertyTrack
{
public:
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneTransitionTrack")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneTransitionTrack")
	}
	static class UMovieSceneTransitionTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneTransitionTrack>();
	}
};
DUMPER7_ASSERTS_UMovieSceneTransitionTrack;

// Class Runtime.RTBlendableReflectionComponent
// 0x0010 (0x02E0 - 0x02D0)
class URTBlendableReflectionComponent final : public UBoxReflectionCaptureComponent
{
public:
	float                                         m_fOpacity;                                        // 0x02C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLightingIntensity;                              // 0x02CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLightingFalloff;                                // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLightingExtinction;                             // 0x02D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLightingWrap;                                   // 0x02D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetOpacity(float _opacity);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RTBlendableReflectionComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RTBlendableReflectionComponent")
	}
	static class URTBlendableReflectionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URTBlendableReflectionComponent>();
	}
};
DUMPER7_ASSERTS_URTBlendableReflectionComponent;

// Class Runtime.RuntimeStadiumAR
// 0x0308 (0x0468 - 0x0160)
class URuntimeStadiumAR : public USCWorldSubsystem
{
public:
	TMulticastInlineDelegate<void(const struct FRuntimeARTransition& _params)> m_OnTransitionStarted; // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FRuntimeARTransition& _params)> m_OnTransitionFinished; // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayTag& _previousTag, const struct FGameplayTag& _newTag)> m_OnCurrentWorldTagChanged; // 0x0180(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   m_ActorClassToSpawn;                               // 0x0190(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FRTStadiumARWorldContent> m_WorldInstances;                     // 0x01B8(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_208[0x20];                                     // 0x0208(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomizationARDataAsset*              m_CapturedWorldDataAsset;                          // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_CapturedWorldTag;                                // 0x0230(0x0008)(BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ARTScenePortal*                         m_PortalActor;                                     // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCTransitionState                            m_CurrentTransitionState;                          // 0x0240(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class URTStadiumARConfig>      m_StadiumARConfig;                                 // 0x0248(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class URTFieldARConfig>        m_FieldARConfig;                                   // 0x0270(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeARTransitionEffect             m_DefaultTransitionEffectAR;                       // 0x0298(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeARTransitionEffect             m_DefaultTransitionEffectStadium;                  // 0x02A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeARTransitionEffect             m_DefaultTranslucentTransitionEffectAR;            // 0x02B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeARTransitionEffect             m_DefaultTranslucentTransitionEffectStadium;       // 0x02C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FRuntimeARTransitionEffect> m_TransitionEffectsAR;              // 0x02D8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FRuntimeARTransitionEffectStadium> m_TransitionEffectsStadium;  // 0x0328(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class ALevelSequenceActor*                    m_StadiumTransitionSequenceActor;                  // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class ARTScenePortalReflection> m_ReflectionActor;                                // 0x0380(0x0028)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*           m_TransitionMPC;                                   // 0x03A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_ScreenDisplayProperty;                           // 0x03B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_TransitionDirectionProperty;                     // 0x03B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_WorldDisplayProperty;                            // 0x03C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C8[0x18];                                     // 0x03C8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class URTStadiumARConfig*                     m_pStadiumARConfig;                                // 0x03E0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E8[0x10];                                     // 0x03E8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class URTFieldARConfig*                       m_pFieldARConfig;                                  // 0x03F8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_400[0x68];                                     // 0x0400(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static TArray<class UCustomizationARDataAsset*> BPF_EnumerateWorldConfigs();

	void BPE_OnConfigChanged();
	void BPE_OnCurrentWorldTagChanged();
	void BPE_OnEditorMapOpened();
	void BPE_OnGameStateValid();
	void BPE_OnPlayTransition(const struct FRuntimeARTransition& _params);
	void BPE_OnTransitionStateChanged(ESCTransitionState _state);
	void BPE_OnTransitionValueChanged(float _weight, float _direction);
	void BPF_AddProjectionMeshes();
	class AActor* BPF_FindActorInCurrentWorld(TSoftObjectPtr<class AActor> _reference);
	TArray<class AActor*> BPF_FindActorsInCurrentWorld(const struct FGameplayTagQuery& _query);
	ESubworldStreamingState BPF_GetWorldStreamingState(const struct FGameplayTag& _tag);
	void BPF_LoadWorld(const struct FGameplayTag& _tag);
	void BPF_PlayTransitionSequence(const struct FRuntimeARTransition& _params);
	void BPF_SetCapturedWorldFromTeamIndex(int32 _iTeamIdx);
	void BPF_SetRenderScale(float _scale);
	void BPF_SetTransitionState(class UObject* _worldContext, ESCTransitionState _transitionState);
	class AActor* BPF_SpawnActorInCurrentWorld(TSubclassOf<class AActor> Class_0);
	void BPF_StopTransitionSequence();
	void BPF_TriggerTransitionFinishedEvent(const struct FRuntimeARTransition& _params);
	void BPF_TriggerTransitionStartedEvent(const struct FRuntimeARTransition& _params);
	class URTFieldARConfig* GetFieldARConfig();
	class URTStadiumARConfig* GetStadiumARConfig();
	void OnFinishedTransitionSequence();
	void SetCapturedWorldByDataAsset(class UCustomizationARDataAsset* _pDataAsset);
	void SetCapturedWorldByTag_Deprecated(const struct FGameplayTag& _worldContentTag);
	void SetRenderScale(float _scale);
	void SetTransitionState(ESCTransitionState _transitionState);

	struct FRTStadiumARWorldConfig BPF_GetCurrentWorldConfig() const;
	class UCustomizationARDataAsset* BPF_GetTeamWorld(int32 _iTeamIdx) const;
	struct FGameplayTag BPF_GetTeamWorldTag(int32 _iTeamIdx) const;
	struct FRuntimeARTransitionEffect BPF_GetTransitionEffectAR(const struct FGameplayTag& _tag) const;
	struct FRuntimeARTransitionEffect BPF_GetTransitionEffectStadium(const struct FGameplayTag& _tag, bool GoalA) const;
	void BPF_WorldTagUseOpaqueRendering(const struct FGameplayTag& _worldTag, bool* _bResult) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RuntimeStadiumAR")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RuntimeStadiumAR")
	}
	static class URuntimeStadiumAR* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeStadiumAR>();
	}
};
DUMPER7_ASSERTS_URuntimeStadiumAR;

}

