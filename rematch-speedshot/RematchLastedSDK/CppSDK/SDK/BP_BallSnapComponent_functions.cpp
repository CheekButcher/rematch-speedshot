#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BallSnapComponent

#include "Basic.hpp"

#include "BP_BallSnapComponent_classes.hpp"
#include "BP_BallSnapComponent_parameters.hpp"


namespace SDK
{

// Function BP_BallSnapComponent.BP_BallSnapComponent_C.ExecuteUbergraph_BP_BallSnapComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSnapComponent_C::ExecuteUbergraph_BP_BallSnapComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "ExecuteUbergraph_BP_BallSnapComponent");

	Params::BP_BallSnapComponent_C_ExecuteUbergraph_BP_BallSnapComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.OnBallFree
// (BlueprintCallable, BlueprintEvent)

void UBP_BallSnapComponent_C::OnBallFree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "OnBallFree");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.OnBallOwned
// (BlueprintCallable, BlueprintEvent)

void UBP_BallSnapComponent_C::OnBallOwned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "OnBallOwned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.OnBallOwnershipChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBallPlayersInteractionComponent* _ballPlayerInteraction                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_BallSnapComponent_C::OnBallOwnershipChanged(class UBallPlayersInteractionComponent* _ballPlayerInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "OnBallOwnershipChanged");

	Params::BP_BallSnapComponent_C_OnBallOwnershipChanged Parms{};

	Parms._ballPlayerInteraction = _ballPlayerInteraction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.OnSnapToBoneFinished
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_BallSnapComponent_C::OnSnapToBoneFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "OnSnapToBoneFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.OnSnapToRelTranformFinished
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_BallSnapComponent_C::OnSnapToRelTranformFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "OnSnapToRelTranformFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_BallSnapComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSnapComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "ReceiveTick");

	Params::BP_BallSnapComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.SnapBallToJoint
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BallSnapComponent_C::SnapBallToJoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "SnapBallToJoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.StartSnapToBone
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDuration                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSnapComponent_C::StartSnapToBone(double InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "StartSnapToBone");

	Params::BP_BallSnapComponent_C_StartSnapToBone Parms{};

	Parms.InDuration = InDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.StartSnapToLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    InAnim                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  InAnimRatio                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMirror                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InDuration                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSnapComponent_C::StartSnapToLocation(class UAnimSequence* InAnim, double InAnimRatio, bool bMirror, double InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "StartSnapToLocation");

	Params::BP_BallSnapComponent_C_StartSnapToLocation Parms{};

	Parms.InAnim = InAnim;
	Parms.InAnimRatio = InAnimRatio;
	Parms.bMirror = bMirror;
	Parms.InDuration = InDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.StopSnapToLocation
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallSnapComponent_C::StopSnapToLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "StopSnapToLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.GetBlendRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FTimerHandle&              TimerHandle                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// ESCBlendType                            BlendType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_BallSnapComponent_C::GetBlendRatio(const struct FTimerHandle& TimerHandle, ESCBlendType BlendType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "GetBlendRatio");

	Params::BP_BallSnapComponent_C_GetBlendRatio Parms{};

	Parms.TimerHandle = std::move(TimerHandle);
	Parms.BlendType = BlendType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BallSnapComponent.BP_BallSnapComponent_C.GetTargetRelativeTransform
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform UBP_BallSnapComponent_C::GetTargetRelativeTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSnapComponent_C", "GetTargetRelativeTransform");

	Params::BP_BallSnapComponent_C_GetTargetRelativeTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

