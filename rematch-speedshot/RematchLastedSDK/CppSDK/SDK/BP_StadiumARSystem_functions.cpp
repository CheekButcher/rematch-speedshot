#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StadiumARSystem

#include "Basic.hpp"

#include "BP_StadiumARSystem_classes.hpp"
#include "BP_StadiumARSystem_parameters.hpp"


namespace SDK
{

// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_Initialize
// (Event, Protected, BlueprintEvent)

void UBP_StadiumARSystem_C::BPE_Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_OnArPerTeamSet_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARuntimeMatchGameState*           _gameState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::BPE_OnArPerTeamSet_Event(class ARuntimeMatchGameState* _gameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_OnArPerTeamSet_Event");

	Params::BP_StadiumARSystem_C_BPE_OnArPerTeamSet_Event Parms{};

	Parms._gameState = _gameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_OnConfigChanged
// (Event, Public, BlueprintEvent)

void UBP_StadiumARSystem_C::BPE_OnConfigChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_OnConfigChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_OnCurrentWorldTagChanged
// (Event, Protected, BlueprintEvent)

void UBP_StadiumARSystem_C::BPE_OnCurrentWorldTagChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_OnCurrentWorldTagChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_OnEditorMapOpened
// (Event, Protected, BlueprintEvent)

void UBP_StadiumARSystem_C::BPE_OnEditorMapOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_OnEditorMapOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_OnGameStateHandleBeginPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASCGameState*                     _gameState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::BPE_OnGameStateHandleBeginPlay(class ASCGameState* _gameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_OnGameStateHandleBeginPlay");

	Params::BP_StadiumARSystem_C_BPE_OnGameStateHandleBeginPlay Parms{};

	Parms._gameState = _gameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_OnGameStateValid
// (Event, Protected, BlueprintEvent)

void UBP_StadiumARSystem_C::BPE_OnGameStateValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_OnGameStateValid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_OnGoalScored_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGoalDescription&          _goal                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_StadiumARSystem_C::BPE_OnGoalScored_Event(const struct FGoalDescription& _goal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_OnGoalScored_Event");

	Params::BP_StadiumARSystem_C_BPE_OnGoalScored_Event Parms{};

	Parms._goal = std::move(_goal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_OnPlayTransition
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FRuntimeARTransition&      _params                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UBP_StadiumARSystem_C::BPE_OnPlayTransition(const struct FRuntimeARTransition& _params)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_OnPlayTransition");

	Params::BP_StadiumARSystem_C_BPE_OnPlayTransition Parms{};

	Parms._params = std::move(_params);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_OnTransitionStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESCTransitionState                      _state                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::BPE_OnTransitionStateChanged(ESCTransitionState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_OnTransitionStateChanged");

	Params::BP_StadiumARSystem_C_BPE_OnTransitionStateChanged Parms{};

	Parms._state = _state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_OnTransitionValueChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _weight                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _direction                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::BPE_OnTransitionValueChanged(float _weight, float _direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_OnTransitionValueChanged");

	Params::BP_StadiumARSystem_C_BPE_OnTransitionValueChanged Parms{};

	Parms._weight = _weight;
	Parms._direction = _direction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_Tick
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWorld*                           _world                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ETickingGroup                           _eTickGroup                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _fDt                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::BPE_Tick(class UWorld* _world, ETickingGroup _eTickGroup, float _fDt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_Tick");

	Params::BP_StadiumARSystem_C_BPE_Tick Parms{};

	Parms._world = _world;
	Parms._eTickGroup = _eTickGroup;
	Parms._fDt = _fDt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.ExecuteUbergraph_BP_StadiumARSystem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::ExecuteUbergraph_BP_StadiumARSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "ExecuteUbergraph_BP_StadiumARSystem");

	Params::BP_StadiumARSystem_C_ExecuteUbergraph_BP_StadiumARSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.HideAR
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::HideAR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "HideAR");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.Hook Debug Functions
// (BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::Hook_Debug_Functions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "Hook Debug Functions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.On Debug Play Transition Sequence
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::On_Debug_Play_Transition_Sequence(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "On Debug Play Transition Sequence");

	Params::BP_StadiumARSystem_C_On_Debug_Play_Transition_Sequence Parms{};

	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.On Debug Play Transition Sequence Reverse
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::On_Debug_Play_Transition_Sequence_Reverse(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "On Debug Play Transition Sequence Reverse");

	Params::BP_StadiumARSystem_C_On_Debug_Play_Transition_Sequence_Reverse Parms{};

	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.On Match Over
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCGameState*                     _gameState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::On_Match_Over(class ASCGameState* _gameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "On Match Over");

	Params::BP_StadiumARSystem_C_On_Match_Over Parms{};

	Parms._gameState = _gameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.On Score Changed
// (BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::On_Score_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "On Score Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.OnGameFlowStateChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              _previous                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _current                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::OnGameFlowStateChanged(const struct FGameplayTag& _previous, const struct FGameplayTag& _current)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "OnGameFlowStateChanged");

	Params::BP_StadiumARSystem_C_OnGameFlowStateChanged Parms{};

	Parms._previous = std::move(_previous);
	Parms._current = std::move(_current);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.OnMatchStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             _newMatchState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::OnMatchStateChanged(class FName _newMatchState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "OnMatchStateChanged");

	Params::BP_StadiumARSystem_C_OnMatchStateChanged Parms{};

	Parms._newMatchState = _newMatchState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.OnPostNetInit
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::OnPostNetInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "OnPostNetInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.OnRuntimeReplayFinished
// (BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::OnRuntimeReplayFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "OnRuntimeReplayFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.OnRuntimeReplayStarted
// (BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::OnRuntimeReplayStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "OnRuntimeReplayStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.Play End Match Transition
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::Play_End_Match_Transition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "Play End Match Transition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.Play Goal Scored Transition
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::Play_Goal_Scored_Transition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "Play Goal Scored Transition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.Play KickOff Transition
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::Play_KickOff_Transition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "Play KickOff Transition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.Play Match Transition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    To_Portal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   _iTeamIdx                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::Play_Match_Transition(bool To_Portal, int32 _iTeamIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "Play Match Transition");

	Params::BP_StadiumARSystem_C_Play_Match_Transition Parms{};

	Parms.To_Portal = To_Portal;
	Parms._iTeamIdx = _iTeamIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.PreloadARLevels
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARuntimeMatchGameState*           MatchState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::PreloadARLevels(class ARuntimeMatchGameState* MatchState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "PreloadARLevels");

	Params::BP_StadiumARSystem_C_PreloadARLevels Parms{};

	Parms.MatchState = MatchState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.Set Current World Globals
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::Set_Current_World_Globals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "Set Current World Globals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.Set Transition Direction Scalar For MPC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FRuntimeARTransition&      SCScenePortalTransition                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UBP_StadiumARSystem_C::Set_Transition_Direction_Scalar_For_MPC(const struct FRuntimeARTransition& SCScenePortalTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "Set Transition Direction Scalar For MPC");

	Params::BP_StadiumARSystem_C_Set_Transition_Direction_Scalar_For_MPC Parms{};

	Parms.SCScenePortalTransition = std::move(SCScenePortalTransition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.SetFieldSize
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::SetFieldSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "SetFieldSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.Show Team
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UObject>           Team_Asset                                             (BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::Show_Team(TSoftObjectPtr<class UObject> Team_Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "Show Team");

	Params::BP_StadiumARSystem_C_Show_Team Parms{};

	Parms.Team_Asset = Team_Asset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.ShowAR
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::ShowAR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "ShowAR");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.SwitchToReplayState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::SwitchToReplayState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "SwitchToReplayState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.SwitchToSourceState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::SwitchToSourceState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "SwitchToSourceState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.TRANSITION
// (BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::TRANSITION()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "TRANSITION");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.Transition Value Changed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::Transition_Value_Changed(double Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "Transition Value Changed");

	Params::BP_StadiumARSystem_C_Transition_Value_Changed Parms{};

	Parms.Weight = Weight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.UpdateRenderScale
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_StadiumARSystem_C::UpdateRenderScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "UpdateRenderScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPE_DebugLogStatus
// (Event, Protected, BlueprintCallable, BlueprintEvent, Const)

void UBP_StadiumARSystem_C::BPE_DebugLogStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPE_DebugLogStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.BPF_WorldTagUseOpaqueRendering
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FGameplayTag&              _worldTag                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool*                                   _bResult                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::BPF_WorldTagUseOpaqueRendering(const struct FGameplayTag& _worldTag, bool* _bResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "BPF_WorldTagUseOpaqueRendering");

	Params::BP_StadiumARSystem_C_BPF_WorldTagUseOpaqueRendering Parms{};

	Parms._worldTag = std::move(_worldTag);

	UObject::ProcessEvent(Func, &Parms);

	if (_bResult != nullptr)
		*_bResult = Parms._bResult;
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.Get AR Team Index
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32*                                  Team_Index                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::Get_AR_Team_Index(int32* Team_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "Get AR Team Index");

	Params::BP_StadiumARSystem_C_Get_AR_Team_Index Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Team_Index != nullptr)
		*Team_Index = Parms.Team_Index;
}


// Function BP_StadiumARSystem.BP_StadiumARSystem_C.Get Leading Team Index
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32*                                  Team_Index                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StadiumARSystem_C::Get_Leading_Team_Index(int32* Team_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StadiumARSystem_C", "Get Leading Team Index");

	Params::BP_StadiumARSystem_C_Get_Leading_Team_Index Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Team_Index != nullptr)
		*Team_Index = Parms.Team_Index;
}

}

