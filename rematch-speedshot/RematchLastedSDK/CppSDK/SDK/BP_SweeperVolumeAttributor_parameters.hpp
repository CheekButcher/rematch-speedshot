#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SweeperVolumeAttributor

#include "Basic.hpp"

#include "Runtime_structs.hpp"


namespace SDK::Params
{

// Function BP_SweeperVolumeAttributor.BP_SweeperVolumeAttributor_C.BPE_CanUseEffectAttributorVolume
// 0x00D8 (0x00D8 - 0x0000)
struct BP_SweeperVolumeAttributor_C_BPE_CanUseEffectAttributorVolume final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARuntimeMatchGameMode*                  K2Node_DynamicCast_AsRuntime_Match_Game_Mode;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeMatchParameters                CallFunc_BPF_GetMatchParameters_ReturnValue;       // 0x0020(0x00B8)(ConstParm)
};
DUMPER7_ASSERTS_BP_SweeperVolumeAttributor_C_BPE_CanUseEffectAttributorVolume;

}

