#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SCCore

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayAbilities_classes.hpp"
#include "SCCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "ModelViewViewModel_structs.hpp"
#include "ModelViewViewModel_classes.hpp"
#include "StructUtils_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "CommonUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "MovieSceneTracks_classes.hpp"
#include "RigVM_classes.hpp"
#include "InputCore_structs.hpp"
#include "GameplayTasks_classes.hpp"
#include "MotionWarping_classes.hpp"
#include "DeveloperSettings_classes.hpp"
#include "CommonGame_classes.hpp"
#include "GameplayCameras_classes.hpp"
#include "CinematicCamera_classes.hpp"
#include "CommonUser_classes.hpp"
#include "GameplayStateTreeModule_classes.hpp"
#include "MovieScene_structs.hpp"
#include "MovieScene_classes.hpp"
#include "LevelSequence_classes.hpp"
#include "MediaAssets_structs.hpp"


namespace SDK
{

// Class SCCore.AbilityMontageNotifyState
// 0x0000 (0x0030 - 0x0030)
class UAbilityMontageNotifyState final : public UAnimNotifyState
{
public:
	void BPF_NotifyBegin(const struct FGameplayAbilityTargetDataHandle& _context, class USCGameplayAbility* _ability, const struct FAnimNotifyEvent& _event, float _fDuration) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityMontageNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityMontageNotifyState")
	}
	static class UAbilityMontageNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityMontageNotifyState>();
	}
};
DUMPER7_ASSERTS_UAbilityMontageNotifyState;

// Class SCCore.SCActivatableWidgetContainer
// 0x0008 (0x04E0 - 0x04D8)
class USCActivatableWidgetContainer final : public UCommonActivatableWidget
{
public:
	bool                                          m_bActivateImmediateChildren;                      // 0x04D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bActivateChildrenRecursively;                    // 0x04D9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bOnlyPropagateToAutoActivateWidgets;             // 0x04DA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4DB[0x5];                                      // 0x04DB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCActivatableWidgetContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCActivatableWidgetContainer")
	}
	static class USCActivatableWidgetContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCActivatableWidgetContainer>();
	}
};
DUMPER7_ASSERTS_USCActivatableWidgetContainer;

// Class SCCore.AbilityTask_ApplyRootMotionSnapFromInitialSpeed
// 0x0050 (0x0138 - 0x00E8)
class UAbilityTask_ApplyRootMotionSnapFromInitialSpeed final : public UAbilityTask_ApplyRootMotion_Base
{
public:
	TMulticastInlineDelegate<void(bool DestinationReached)> OnFinished;                              // 0x00E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                 m_vTargetLocation;                                 // 0x00F8(0x0018)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize100                 m_vInitialVelocity;                                // 0x0110(0x0018)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fDistanceReachSquared;                           // 0x0128(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_SpringSpeedPerInitialDistance;                   // 0x0130(0x0008)(Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UAbilityTask_ApplyRootMotionSnapFromInitialSpeed* BPF_SnapFromInitialSpeed(class UGameplayAbility* _owningAbility, class FName _taskInstanceName, const struct FVector& _vTargetPosition, class UCurveFloat* _springSpeedPerInitialDistance, float _fDistanceReachRadius);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_ApplyRootMotionSnapFromInitialSpeed")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_ApplyRootMotionSnapFromInitialSpeed")
	}
	static class UAbilityTask_ApplyRootMotionSnapFromInitialSpeed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_ApplyRootMotionSnapFromInitialSpeed>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_ApplyRootMotionSnapFromInitialSpeed;

// Class SCCore.AbilityTask_BlueprintGenericTask
// 0x0020 (0x00B8 - 0x0098)
class UAbilityTask_BlueprintGenericTask final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void()>              OnTaskStarted;                                     // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void()>              OnAbilityEnd;                                      // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)

public:
	static class UAbilityTask_BlueprintGenericTask* BPF_BlueprintGenericTask(class UGameplayAbility* _owningAbility);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_BlueprintGenericTask")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_BlueprintGenericTask")
	}
	static class UAbilityTask_BlueprintGenericTask* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_BlueprintGenericTask>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_BlueprintGenericTask;

// Class SCCore.SCAbilitySystemBPLibrary
// 0x0000 (0x0028 - 0x0028)
class USCAbilitySystemBPLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_CancelAbilityByTag(class UAbilitySystemComponent* _asc, const struct FGameplayTagContainer& _withTags, const struct FGameplayTagContainer& _withoutTags, class UGameplayAbility* _ignore);
	static class UGameplayAbility* BPF_FindLocalAbility(class UAbilitySystemComponent* _asc, TSubclassOf<class UGameplayAbility> _abilityClass, bool _bIncludeChildren, bool _bCheckIfActive);
	static class UGameplayAbility* BPF_GetAbility(const struct FGameplayEffectContextHandle& _effectContext);
	static struct FGameplayEffectContextHandle BPF_GetGameplayEffectContextHandleFromActiveEffectHandle(const struct FActiveGameplayEffectHandle& _activeHandle);
	static float BPF_GetSetByCallerMagnitude(const struct FGameplayEffectSpec& _effectSpec, const struct FGameplayTag& _gameplayTag);
	static bool BPF_HasActiveAbilities(class UAbilitySystemComponent* _asc, const struct FGameplayTagContainer& _gameplayTagContainer, bool _bOnlyAbilitiesThatSatisfyTagRequirements);
	static bool BPF_IsEffectHandleValid(const struct FActiveGameplayEffectHandle& _activeHandle);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAbilitySystemBPLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAbilitySystemBPLibrary")
	}
	static class USCAbilitySystemBPLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAbilitySystemBPLibrary>();
	}
};
DUMPER7_ASSERTS_USCAbilitySystemBPLibrary;

// Class SCCore.AbilityTask_ChangeMovementMode
// 0x0010 (0x00A8 - 0x0098)
class UAbilityTask_ChangeMovementMode final : public UAbilityTask
{
public:
	class USCDynamicSpeedMovementComponent*       m_MovementComponent;                               // 0x0098(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_ChangeMovementMode* BPF_TaskChangeMovementMode(class UGameplayAbility* _owningAbility, class USCDynamicSpeedMovementComponent* _movementComponent, EMovementMode _eMovementModeStartingAbility);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_ChangeMovementMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_ChangeMovementMode")
	}
	static class UAbilityTask_ChangeMovementMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_ChangeMovementMode>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_ChangeMovementMode;

// Class SCCore.AbilityTask_Transition
// 0x0060 (0x00F8 - 0x0098)
class UAbilityTask_Transition : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(TSubclassOf<class USCTransitionDB> _transitionDB, const struct FSCTransition& _foundTransition, const struct FVector& _vStartVelocity, bool _bWasOrientedToMovement, const struct FVector& _vWantedDir)> m_OnTransitionFound; // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class USCTransitionDB>            m_TransitionDB;                                    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCTransitionMovementComponent*         m_mvtComponent;                                    // 0x00B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B8[0x40];                                      // 0x00B8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsTransitionAllowedByTransitionDB(const struct FSCTransition& _testingTransition, const struct FSCTransition& _currentTransition, float _fTransitionRatio, bool _bIsInDeccel) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_Transition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_Transition")
	}
	static class UAbilityTask_Transition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_Transition>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_Transition;

// Class SCCore.SCActorHelpers
// 0x0000 (0x0028 - 0x0028)
class USCActorHelpers final : public UBlueprintFunctionLibrary
{
public:
	static class AActor* BPF_GetClosestActor(class AActor* _target, const TArray<class AActor*>& _actors);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCActorHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCActorHelpers")
	}
	static class USCActorHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCActorHelpers>();
	}
};
DUMPER7_ASSERTS_USCActorHelpers;

// Class SCCore.AbilityTask_ComputeTransition
// 0x0088 (0x0180 - 0x00F8)
class UAbilityTask_ComputeTransition final : public UAbilityTask_Transition
{
public:
	uint8                                         Pad_F8[0x80];                                      // 0x00F8(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iMaxPreviousMovementDescriptionCount;            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_ComputeTransition* BPF_ComputeTransition(class UGameplayAbility* _owningAbility, const struct FSCTransitionSettings& _transitionSettings, int32 _iMaxPreviousMovementDescriptionCount);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_ComputeTransition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_ComputeTransition")
	}
	static class UAbilityTask_ComputeTransition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_ComputeTransition>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_ComputeTransition;

// Class SCCore.AbilityTask_DetectGameplayTagMontageNotify
// 0x0028 (0x00C0 - 0x0098)
class UAbilityTask_DetectGameplayTagMontageNotify final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(const struct FGameplayTag& _tag, const struct FGameplayAbilityTargetDataHandle& _targetData)> m_OnDetected; // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A8[0x18];                                      // 0x00A8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_DetectGameplayTagMontageNotify* BPF_DetectGameplayTagMontageNotify(class UGameplayAbility* _owningAbility);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_DetectGameplayTagMontageNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_DetectGameplayTagMontageNotify")
	}
	static class UAbilityTask_DetectGameplayTagMontageNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_DetectGameplayTagMontageNotify>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_DetectGameplayTagMontageNotify;

// Class SCCore.NumericConverter
// 0x0000 (0x0028 - 0x0028)
class UNumericConverter : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NumericConverter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NumericConverter")
	}
	static class UNumericConverter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNumericConverter>();
	}
};
DUMPER7_ASSERTS_UNumericConverter;

// Class SCCore.AbilityTask_EvaluateCondition
// 0x0028 (0x00C0 - 0x0098)
class UAbilityTask_EvaluateCondition : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              m_OnValidated;                                     // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              m_OnInvalidated;                                   // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_EvaluateCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_EvaluateCondition")
	}
	static class UAbilityTask_EvaluateCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_EvaluateCondition>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_EvaluateCondition;

// Class SCCore.AbilityTask_TaskWithTimeRange
// 0x0018 (0x00B0 - 0x0098)
class UAbilityTask_TaskWithTimeRange : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x18];                                      // 0x0098(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_TaskWithTimeRange")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_TaskWithTimeRange")
	}
	static class UAbilityTask_TaskWithTimeRange* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_TaskWithTimeRange>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_TaskWithTimeRange;

// Class SCCore.TargetDataCondition
// 0x0050 (0x0078 - 0x0028)
class UTargetDataCondition : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetDataTypeFilter                  m_TargetDataFilter;                                // 0x0048(0x0030)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	bool BPF_Evaluate(const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _handle) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataCondition")
	}
	static class UTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UTargetDataCondition;

// Class SCCore.NamedGameplayTagContainerTargetDataCondition
// 0x0050 (0x00C8 - 0x0078)
class UNamedGameplayTagContainerTargetDataCondition : public UTargetDataCondition
{
public:
	struct FGameplayTagContainer                  m_RequiredTags;                                    // 0x0078(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  m_ForbiddenTags;                                   // 0x0098(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bHideNameParameter;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_Name;                                            // 0x00BC(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NamedGameplayTagContainerTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NamedGameplayTagContainerTargetDataCondition")
	}
	static class UNamedGameplayTagContainerTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNamedGameplayTagContainerTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UNamedGameplayTagContainerTargetDataCondition;

// Class SCCore.AbilityTask_HandleAvailabilityTags
// 0x0080 (0x0130 - 0x00B0)
class UAbilityTask_HandleAvailabilityTags final : public UAbilityTask_TaskWithTimeRange
{
public:
	uint8                                         Pad_B0[0x80];                                      // 0x00B0(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_HandleAvailabilityTags* BPF_HandleAvailabilityTags(class UGameplayAbility* _owningAbility, const struct FTagAvailabilityLayer& _tag, const struct FFloatRange& _timeRange);
	static class UAbilityTask_HandleAvailabilityTags* BPF_HandleAvailabilityTagsFromData(class UGameplayAbility* _owningAbility, TSubclassOf<class UTagAvailabilityLayerContainer> _data, const struct FFloatRange& _timeRange);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_HandleAvailabilityTags")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_HandleAvailabilityTags")
	}
	static class UAbilityTask_HandleAvailabilityTags* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_HandleAvailabilityTags>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_HandleAvailabilityTags;

// Class SCCore.AbilityTask_HandleCharacterLocomotion
// 0x00A0 (0x0138 - 0x0098)
class UAbilityTask_HandleCharacterLocomotion final : public UAbilityTask
{
public:
	class USCInputAction*                         m_InputAction;                                     // 0x0098(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      m_ActivationQuery;                                 // 0x00A0(0x0048)(Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_E8[0x50];                                      // 0x00E8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_HandleCharacterLocomotion* BPF_HandleCharacterLocomotion(class UGameplayAbility* _owningAbility, class USCInputAction* _inputAction, const struct FInputStablizationSettings& _inputStabilizationSettings, const struct FGameplayTagQuery& _activationQuery);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_HandleCharacterLocomotion")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_HandleCharacterLocomotion")
	}
	static class UAbilityTask_HandleCharacterLocomotion* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_HandleCharacterLocomotion>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_HandleCharacterLocomotion;

// Class SCCore.SCActor
// 0x0028 (0x02D8 - 0x02B0)
class ASCActor : public AActor
{
public:
	uint8                                         Pad_2B0[0x20];                                     // 0x02B0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bIsStreamable;                                   // 0x02D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsPooled;                                       // 0x02D1(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCActor")
	}
	static class ASCActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCActor>();
	}
};
DUMPER7_ASSERTS_ASCActor;

// Class SCCore.AbilityTask_HandleGameplayCue
// 0x0028 (0x00C0 - 0x0098)
class UAbilityTask_HandleGameplayCue final : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x28];                                      // 0x0098(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_HandleGameplayCue* BPF_HandleGameplayCue(class UGameplayAbility* _owningAbility, const struct FGameplayTag& _gameplayCueTag, const struct FGameplayEffectContextHandle& _context, bool _bReplicated);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_HandleGameplayCue")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_HandleGameplayCue")
	}
	static class UAbilityTask_HandleGameplayCue* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_HandleGameplayCue>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_HandleGameplayCue;

// Class SCCore.AbilityTask_HandleGameplayEffect
// 0x0018 (0x00B0 - 0x0098)
class UAbilityTask_HandleGameplayEffect final : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x18];                                      // 0x0098(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_HandleGameplayEffect* BPF_HandleGameplayEffect(class UGameplayAbility* _owningAbility, TSubclassOf<class UGameplayEffect> _gameplayEffectClass, int32 _iGameplayEffectLevel, int32 _iStacks);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_HandleGameplayEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_HandleGameplayEffect")
	}
	static class UAbilityTask_HandleGameplayEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_HandleGameplayEffect>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_HandleGameplayEffect;

// Class SCCore.NodalObjectInterface
// 0x0000 (0x0000 - 0x0000)
class INodalObjectInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NodalObjectInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NodalObjectInterface")
	}
	static class INodalObjectInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<INodalObjectInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_INodalObjectInterface;

// Class SCCore.AbilityTask_HandleGameplayEffectSpecToSelf
// 0x0018 (0x00B0 - 0x0098)
class UAbilityTask_HandleGameplayEffectSpecToSelf final : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x18];                                      // 0x0098(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_HandleGameplayEffectSpecToSelf* BPF_HandleGameplayEffectSpecToSelf(class UGameplayAbility* _owningAbility, const struct FGameplayEffectSpecHandle& _specHandle);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_HandleGameplayEffectSpecToSelf")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_HandleGameplayEffectSpecToSelf")
	}
	static class UAbilityTask_HandleGameplayEffectSpecToSelf* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_HandleGameplayEffectSpecToSelf>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_HandleGameplayEffectSpecToSelf;

// Class SCCore.AbilityTask_HandleLooseGameplayTags
// 0x0030 (0x00E0 - 0x00B0)
class UAbilityTask_HandleLooseGameplayTags final : public UAbilityTask_TaskWithTimeRange
{
public:
	uint8                                         Pad_B0[0x30];                                      // 0x00B0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_HandleLooseGameplayTags* BPF_HandleLooseGameplayTag(class UGameplayAbility* _owningAbility, const struct FGameplayTag& _gameplayTag, const struct FFloatRange& _timeRange, bool _bReplicated);
	static class UAbilityTask_HandleLooseGameplayTags* BPF_HandleLooseGameplayTags(class UGameplayAbility* _owningAbility, const struct FGameplayTagContainer& _gameplayTags, const struct FFloatRange& _timeRange, bool _bReplicated);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_HandleLooseGameplayTags")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_HandleLooseGameplayTags")
	}
	static class UAbilityTask_HandleLooseGameplayTags* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_HandleLooseGameplayTags>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_HandleLooseGameplayTags;

// Class SCCore.TimeStretchNotifyState
// 0x0000 (0x0030 - 0x0030)
class UTimeStretchNotifyState final : public UAnimNotifyState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TimeStretchNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TimeStretchNotifyState")
	}
	static class UTimeStretchNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTimeStretchNotifyState>();
	}
};
DUMPER7_ASSERTS_UTimeStretchNotifyState;

// Class SCCore.AbilityTask_MoveToLocationWithSpeed
// 0x0018 (0x0180 - 0x0168)
class UAbilityTask_MoveToLocationWithSpeed final : public UAbilityTask_ApplyRootMotionMoveToForce
{
public:
	bool                                          m_bUseDurationInsteadOfTargetLocation;             // 0x0168(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_SpeedCurve;                                      // 0x0170(0x0008)(Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fComputeDistanceStep;                            // 0x0178(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_MoveToLocationWithSpeed* BPF_MoveToLocationWithSpeed(class UGameplayAbility* _owningAbility, class FName _taskInstanceName, const struct FVector& _vTargetLocation, class UCurveFloat* _speedCurve, bool _bRestrictSpeedToExpected, bool _bSetNewMovementMode, EMovementMode _eMovementMode, class UCurveVector* _pathOffsetCurve, const struct FVector& _vPathOffsetAmplitude, float _fComputeDistanceStep);
	static class UAbilityTask_MoveToLocationWithSpeed* BPF_MoveToLocationWithSpeedAndDuration(class UGameplayAbility* _owningAbility, class FName _taskInstanceName, const struct FVector& _vMaxTargetLocation, class UCurveFloat* _speedCurve, bool _bRestrictSpeedToExpected, bool _bSetNewMovementMode, EMovementMode _eMovementMode, float _fComputeDistanceStep, float _fDuration);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_MoveToLocationWithSpeed")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_MoveToLocationWithSpeed")
	}
	static class UAbilityTask_MoveToLocationWithSpeed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_MoveToLocationWithSpeed>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_MoveToLocationWithSpeed;

// Class SCCore.AbilityTask_MoveToSnapLocation
// 0x0020 (0x0188 - 0x0168)
class UAbilityTask_MoveToSnapLocation final : public UAbilityTask_ApplyRootMotionMoveToForce
{
public:
	struct FRotator                               m_StartRotation;                                   // 0x0168(0x0018)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bRedirectToTarget;                               // 0x0180(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fRotationBlendDuration;                          // 0x0184(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UAbilityTask_MoveToSnapLocation* BPF_MoveToSnapLocation(class UGameplayAbility* _owningAbility, class FName _taskInstanceName, const struct FAnimSequenceSnapPrediction& _snapPrediction, bool _bRedirectToTarget, float _fRotationBlendDuration);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_MoveToSnapLocation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_MoveToSnapLocation")
	}
	static class UAbilityTask_MoveToSnapLocation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_MoveToSnapLocation>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_MoveToSnapLocation;

// Class SCCore.ScaleSpeedRootMotionModifierData
// 0x0148 (0x0170 - 0x0028)
class UScaleSpeedRootMotionModifierData : public UObject
{
public:
	struct FScaleSpeedCurveData                   m_DefaultHorizontalCurveData;                      // 0x0028(0x0098)(Edit, NativeAccessSpecifierPublic)
	struct FScaleSpeedCurveData                   m_DefaultVerticalCurveData;                        // 0x00C0(0x0098)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FConditionalSpeedCurveData>     m_ConditionalSpeedCurves;                          // 0x0158(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          m_bConserveLastModifiedSpeedUpToAnimEnd;           // 0x0168(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScaleSpeedRootMotionModifierData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScaleSpeedRootMotionModifierData")
	}
	static class UScaleSpeedRootMotionModifierData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScaleSpeedRootMotionModifierData>();
	}
};
DUMPER7_ASSERTS_UScaleSpeedRootMotionModifierData;

// Class SCCore.AbilityTask_NetworkSyncWithDelay
// 0x0108 (0x01A0 - 0x0098)
class UAbilityTask_NetworkSyncWithDelay : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnSync;      // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnTimeOut;   // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnCancel;    // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> m_BuildClientPayload; // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_E0[0xC0];                                      // 0x00E0(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_NetworkSyncWithDelay* BPF_NetworkSyncWithDelay(class UGameplayAbility* _owningAbility, const struct FGameplayAbilityTargetDataHandle& _targetData, const struct FSCConditionsToSyncEarly& _conditionsToSyncEarly, const struct FGameplayAbilityTargetDataHandle& _context, const struct FSCNetworkSyncData& _syncData, float _fFireTime, float _fShootCompensationTime, const struct FGameplayTag& _gameplayTag, float _fCatchupTime);
	static class UAbilityTask_NetworkSyncWithDelay* BPF_NetworkSyncWithDelayOrInputTrigger(class UGameplayAbility* _owningAbility, const struct FGameplayAbilityTargetDataHandle& _targetData, const struct FSCConditionsToSyncEarly& _conditionsToSyncEarly, const struct FGameplayAbilityTargetDataHandle& _context, const struct FSCNetworkSyncData& _syncData, float _fFireTime, float _fShootCompensationTime, const struct FGameplayTag& _gameplayTag, float _fCatchupTime, float _fMinTimeBeforeSync);

	void BuildProvidedTargetData(struct FTargetDataTypeFilter* _outProvidedTargetData);
	bool CheckEndSyncConditions(const struct FGameplayAbilityTargetDataHandle& _targetData, bool _bFire);
	void InitInput();
	void OnCancelledCallback();
	void OnInputTrigger(const class USCInputAction* _action, const struct FInputActionState& _listenerState);
	void ReceiveTargetData(const struct FGameplayAbilityTargetDataHandle& _data, const struct FGameplayTag& _activationTag);
	void SendTargetData(bool _bFire, bool _bSyncByConditions);
	void UpdateParamsPostBuildPayload();
	void UpdateParamsTargetData(bool _bFire, bool _bSyncByConditions);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_NetworkSyncWithDelay")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_NetworkSyncWithDelay")
	}
	static class UAbilityTask_NetworkSyncWithDelay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_NetworkSyncWithDelay>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_NetworkSyncWithDelay;

// Class SCCore.AbilityTask_NetworkSyncInput
// 0x0010 (0x01B0 - 0x01A0)
class UAbilityTask_NetworkSyncInput final : public UAbilityTask_NetworkSyncWithDelay
{
public:
	uint8                                         Pad_1A0[0x10];                                     // 0x01A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_NetworkSyncInput* BPF_NetworkSyncInput(class UGameplayAbility* _owningAbility, class USCInputAction* _inputToListen, float _fTime, float _fCompensationTime, const struct FGameplayTag& _gameplayTag, float _fCatchupTime);
	static class UAbilityTask_NetworkSyncInput* BPF_NetworkSyncInputWithInputTrigger(class UGameplayAbility* _owningAbility, class USCInputAction* _inputToListen, float _fTime, float _fCompensationTime, const struct FGameplayTag& _gameplayTag, float _fCatchupTime, float _fMinTimeBeforeSync);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_NetworkSyncInput")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_NetworkSyncInput")
	}
	static class UAbilityTask_NetworkSyncInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_NetworkSyncInput>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_NetworkSyncInput;

// Class SCCore.SCAimingBillboardActor
// 0x0048 (0x0320 - 0x02D8)
class ASCAimingBillboardActor final : public ASCActor
{
public:
	TMulticastInlineDelegate<void(bool _bSelected, class ASCAimingBillboardActor* aimingBillboard)> OnSelectionChangedDyn; // 0x02D8(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E8[0x18];                                     // 0x02E8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          m_BoxComponent;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bDebug;                                          // 0x0308(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_309[0x17];                                     // 0x0309(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float BPE_ComputeScore(const struct FVector& _v3DPointToTest) const;
	struct FVector2D BPE_ComputeSize() const;
	class AActor* BPF_GetActorOwner() const;
	float BPF_GetScore() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAimingBillboardActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAimingBillboardActor")
	}
	static class ASCAimingBillboardActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCAimingBillboardActor>();
	}
};
DUMPER7_ASSERTS_ASCAimingBillboardActor;

// Class SCCore.AbilityTask_NetworkWaitCharacterHitGround
// 0x0088 (0x0120 - 0x0098)
class UAbilityTask_NetworkWaitCharacterHitGround final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnHitGround; // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnTimeOut;   // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> OnCancel;    // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> m_BuildClientPayload; // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D8[0x48];                                      // 0x00D8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_NetworkWaitCharacterHitGround* BPF_NetworkWaitCharacterHitGround(class UGameplayAbility* _owningAbility, float _fStartAtTime, float _fTimeOutDuration, const struct FGameplayTag& _gameplayTag);

	void OnCancelledCallback();
	void ReceiveTargetData(const struct FGameplayAbilityTargetDataHandle& _data, const struct FGameplayTag& _activationTag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_NetworkWaitCharacterHitGround")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_NetworkWaitCharacterHitGround")
	}
	static class UAbilityTask_NetworkWaitCharacterHitGround* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_NetworkWaitCharacterHitGround>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_NetworkWaitCharacterHitGround;

// Class SCCore.AbilityTask_SCPlayMontageAndWait
// 0x00B0 (0x0228 - 0x0178)
class UAbilityTask_SCPlayMontageAndWait : public UAbilityTask_PlayMontageAndWait
{
public:
	TMulticastInlineDelegate<void()>              m_OnCanMoveInterrupt;                              // 0x0178(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              m_OnMoveInterrupt;                                 // 0x0188(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              m_OnValidNullMontageChosen;                        // 0x0198(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         m_iMontageInstanceID;                              // 0x01A8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC[0x7C];                                     // 0x01AC(0x007C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_SCPlayMontageAndWait* BP_CreatePlayMontageAndWaitProxy_Context(class UGameplayAbility* _owningAbility, class FName _taskInstanceName, const struct FGameplayAbilityTargetDataHandle& _context, class FName _StartSection, bool _bStopWhenAbilityEnds, bool _bEndAbilityOnMoveInterrupt, float _fStartTime);
	static void BPF_PickAbilityAnimSequence(EAbilityExecOrigin _eIn, EAbilityExecOutputWithValidation* _eOut, class USCGameplayAbility* _ability, TSubclassOf<class UAnimSequencePicker> _picker, const struct FGameplayAbilityTargetDataHandle& _playerContext, struct FAnimSequencePlayInfos* _outSequenceInfos, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog);
	static void BPF_PickAbilityAnimSequenceFromInstance(EAbilityExecOrigin _eIn, EAbilityExecOutputWithValidation* _eOut, class USCGameplayAbility* _ability, const struct FAnimSequencePickerInstance& _pickerInstance, const struct FGameplayAbilityTargetDataHandle& _playerContext, struct FAnimSequencePlayInfos* _outSequenceInfos, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog);
	static class UAbilityTask_SCPlayMontageAndWait* BPF_PickAndPlayMontage(class USCGameplayAbility* _owningAbility, EAbilityExecOrigin _eIn, EAbilityExecOutputWithValidation* _eOut, class FName _taskInstanceName, TSubclassOf<class UAnimSequencePicker> _picker, class FName _slotName, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);
	static class UAbilityTask_SCPlayMontageAndWait* BPF_PickAndPlayMontageFromInstance(class USCGameplayAbility* _owningAbility, EAbilityExecOrigin _eIn, EAbilityExecOutputWithValidation* _eOut, class FName _taskInstanceName, const struct FAnimSequencePickerInstance& _pickerInstance, class FName _slotName, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);
	static class UAbilityTask_SCPlayMontageAndWait* BPF_PickAndPlayMontageFromInstanceNoPayload(class USCGameplayAbility* _owningAbility, class FName _taskInstanceName, const struct FAnimSequencePickerInstance& _pickerInstance, class FName _slotName, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);
	static class UAbilityTask_SCPlayMontageAndWait* BPF_PickAndPlayMontageNoPayload(class USCGameplayAbility* _owningAbility, class FName _taskInstanceName, TSubclassOf<class UAnimSequencePicker> _picker, class FName _slotName, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);
	static class UAbilityTask_SCPlayMontageAndWait* BPF_PickAndPlayMontageNoPayloadInlineTargetdata(class USCGameplayAbility* _owningAbility, class FName _taskInstanceName, TSubclassOf<class UAnimSequencePicker> _picker, class FName _slotName, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);
	static class UAbilityTask_SCPlayMontageAndWait* BPF_PickAndPlayMontageWithSlots(class USCGameplayAbility* _owningAbility, class FName _taskInstanceName, TSubclassOf<class UAnimSequencePickerContainer> _picker, const TMap<class FName, struct FAnimSequencePlayInfos>& _slots, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);
	static class UAbilityTask_SCPlayMontageAndWait* BPF_PickAndPlaySlaveMontage(class USCGameplayAbility* _owningAbility, class FName _taskInstanceName, TSubclassOf<class UAnimSequencePicker> _picker, class FName _slotName, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);
	static class UAbilityTask_SCPlayMontageAndWait* BPF_PickAndPlaySlaveMontageFromInstance(class USCGameplayAbility* _owningAbility, class FName _taskInstanceName, const struct FAnimSequencePickerInstance& _pickerInstance, class FName _slotName, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);
	static class UAbilityTask_SCPlayMontageAndWait* BPF_PlayMontageFromPicker(class USCGameplayAbility* _owningAbility, class FName _taskInstanceName, const struct FAnimSequencePlayInfos& _sequenceInfos, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);
	static class UAbilityTask_SCPlayMontageAndWait* BPF_PlayServerMontage(class USCGameplayAbility* _owningAbility, class FName _taskInstanceName, bool _bLog, bool _bStopWhenAbilityEnds);
	static class UAbilityTask_SCPlayMontageAndWait* BPF_PrepareAndPlayMontageFromPlayInfos(class USCGameplayAbility* _owningAbility, EAbilityExecOrigin _eIn, EAbilityExecOutputWithValidation* _eOut, class FName _taskInstanceName, const struct FAnimSequencePlayInfos& _sequenceInfos, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection, bool _bEndAbilityOnMoveInterrupt);
	static class UAbilityTask_SCPlayMontageAndWait* SCPlayMontageAndWait(class UGameplayAbility* _owningAbility, class FName _taskInstanceName, class UAnimMontage* _montageToPlay, bool _bMirror, float _fRate, class FName _StartSection, bool _bStopWhenAbilityEnds, float _fAnimRootMotionTranslationScale, float _fStartTimeSeconds, bool _bEndAbilityOnMoveInterrupt, const struct FGameplayAbilityTargetDataHandle& _playerContext);

	void BPF_SetMoveInterruptContext(const struct FGameplayAbilityTargetDataHandle& _targetData);

	void BPF_GetPlayInfos(struct FAnimSequencePlayInfos* _outInfos) const;
	void BPF_GetPlayInfosTargetData(struct FGameplayAbilityTargetDataHandle* _targetData) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_SCPlayMontageAndWait")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_SCPlayMontageAndWait")
	}
	static class UAbilityTask_SCPlayMontageAndWait* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_SCPlayMontageAndWait>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_SCPlayMontageAndWait;

// Class SCCore.SCMontageSectionMetadata
// 0x0010 (0x0038 - 0x0028)
class USCMontageSectionMetadata final : public UAnimMetaData
{
public:
	bool                                          m_bUseCustomDirectionAngleAxis;                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fCustomDirectionAngleAxis;                       // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAxis                                         m_eSnapAxis;                                       // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCMontageSectionMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCMontageSectionMetadata")
	}
	static class USCMontageSectionMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCMontageSectionMetadata>();
	}
};
DUMPER7_ASSERTS_USCMontageSectionMetadata;

// Class SCCore.AbilityTask_DetectEndMontage
// 0x0048 (0x00E0 - 0x0098)
class UAbilityTask_DetectEndMontage final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> m_OnEnded;   // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> m_BuildClientPayload; // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& Data)> m_OnCancelled; // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C8[0x18];                                      // 0x00C8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_DetectEndMontage* BPF_DetectEndMontage(class UGameplayAbility* _owningAbility, class UAbilityTask_SCPlayMontageAndWait* _scPlayMontageTask, const struct FGameplayTag& _gameplayTag, bool _bRegisterOnCanMoveInterruptEvent);

	void OnCancelled();
	void OnEnded();
	void ReceiveTargetData(const struct FGameplayAbilityTargetDataHandle& _data, const struct FGameplayTag& _activationTag);
	void SendTargetData();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_DetectEndMontage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_DetectEndMontage")
	}
	static class UAbilityTask_DetectEndMontage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_DetectEndMontage>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_DetectEndMontage;

// Class SCCore.AbilityTask_SCPlaySlotMontageAndWait
// 0x0008 (0x0230 - 0x0228)
class UAbilityTask_SCPlaySlotMontageAndWait final : public UAbilityTask_SCPlayMontageAndWait
{
public:
	uint8                                         Pad_228[0x8];                                      // 0x0228(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_SCPlaySlotMontageAndWait* BPF_PickAndPlaySlotMontage(class USCGameplayAbility* _owningAbility, EAbilityExecOrigin _eIn, EAbilityExecOutputWithValidation* _eOut, class FName _taskInstanceName, TSubclassOf<class UAnimSequencePickerSlotContainer> _picker, class FName _slot, class FName _animMontageSlotOverride, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);
	static class UAbilityTask_SCPlaySlotMontageAndWait* BPF_SwapPlayingSlotMontage(class USCGameplayAbility* _owningAbility, class UAbilityTask_SCPlayMontageAndWait* _playingMontage, EAbilityExecOrigin _eIn, EAbilityExecOutputWithValidation* _eOut, class FName _taskInstanceName, TSubclassOf<class UAnimSequencePickerSlotContainer> _picker, class FName _pickerSlot, class FName _animMontageSlotOverride, class UBasicMontagePlayerConfiguration* _overrideConfiguration, bool _bLog, bool _bStopWhenAbilityEnds, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _StartSection);

	class FName BPF_GetSlot() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_SCPlaySlotMontageAndWait")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_SCPlaySlotMontageAndWait")
	}
	static class UAbilityTask_SCPlaySlotMontageAndWait* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_SCPlaySlotMontageAndWait>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_SCPlaySlotMontageAndWait;

// Class SCCore.SCRootMotionModifier
// 0x0030 (0x0120 - 0x00F0)
class USCRootMotionModifier : public URootMotionModifier
{
public:
	struct FBooleanDataBinding                    m_Active;                                          // 0x00E8(0x0030)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCRootMotionModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCRootMotionModifier")
	}
	static class USCRootMotionModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCRootMotionModifier>();
	}
};
DUMPER7_ASSERTS_USCRootMotionModifier;

// Class SCCore.RootMotionModifier_CyclicSwapBones
// 0x0020 (0x0140 - 0x0120)
class URootMotionModifier_CyclicSwapBones final : public USCRootMotionModifier
{
public:
	uint8                                         Pad_120[0x20];                                     // 0x0120(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_CyclicSwapBones")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_CyclicSwapBones")
	}
	static class URootMotionModifier_CyclicSwapBones* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_CyclicSwapBones>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_CyclicSwapBones;

// Class SCCore.AbilityTask_SCStartAbilityState
// 0x0008 (0x00D8 - 0x00D0)
class UAbilityTask_SCStartAbilityState final : public UAbilityTask_StartAbilityState
{
public:
	uint8                                         Pad_D0[0x8];                                       // 0x00D0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_SCStartAbilityState* BPF_StartAbilityState(class UGameplayAbility* _owningAbility, class FName _stateName, bool _bBindTasks);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_SCStartAbilityState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_SCStartAbilityState")
	}
	static class UAbilityTask_SCStartAbilityState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_SCStartAbilityState>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_SCStartAbilityState;

// Class SCCore.AbilityTask_TickAction
// 0x0028 (0x00C0 - 0x0098)
class UAbilityTask_TickAction final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(float fDeltaTime)> OnTick;                                         // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x18];                                      // 0x00A8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_TickAction* BPF_TickAction(class UGameplayAbility* OwningAbility);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_TickAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_TickAction")
	}
	static class UAbilityTask_TickAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_TickAction>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_TickAction;

// Class SCCore.MontagePoseModifier
// 0x0008 (0x0030 - 0x0028)
class UMontagePoseModifier : public UObject
{
public:
	bool                                          m_bMute;                                           // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MontagePoseModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MontagePoseModifier")
	}
	static class UMontagePoseModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMontagePoseModifier>();
	}
};
DUMPER7_ASSERTS_UMontagePoseModifier;

// Class SCCore.AbilityTask_TriggerTransition
// 0x0010 (0x0108 - 0x00F8)
class UAbilityTask_TriggerTransition final : public UAbilityTask_Transition
{
public:
	uint8                                         Pad_F8[0x10];                                      // 0x00F8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_TriggerTransition* BPF_TriggerTransition(class UGameplayAbility* _owningAbility, TSubclassOf<class USCTransitionDB> _transitionDB, bool _bIgnoreTransitionAvailability, bool _bWaitTransitionEnd, bool _bWaitRootMotionEnd);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_TriggerTransition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_TriggerTransition")
	}
	static class UAbilityTask_TriggerTransition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_TriggerTransition>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_TriggerTransition;

// Class SCCore.AbilityTask_UpdateAbilityTarget
// 0x00C8 (0x0160 - 0x0098)
class UAbilityTask_UpdateAbilityTarget final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& _target)> m_OnTargetUpdated; // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& _target)> m_OnTargetLost; // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	class USCInputAction*                         m_InputAction;                                     // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C0[0xA0];                                      // 0x00C0(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_UpdateAbilityTarget* BPF_UpdateAbilityTarget(class UGameplayAbility* _owningAbility, class USCInputAction* _inputAction, bool _bLoseTargetOnInputLost, float _fInputAngleChangeTolerance);
	static class UAbilityTask_UpdateAbilityTarget* BPF_UpdateAbilityTargetOnProvider(class UGameplayAbility* _owningAbility, class USCInputAction* _inputAction, bool _bLoseTargetOnInputLost, const struct FLatentTargetProvider& _provider, float _fInputAngleChangeTolerance);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_UpdateAbilityTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_UpdateAbilityTarget")
	}
	static class UAbilityTask_UpdateAbilityTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_UpdateAbilityTarget>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_UpdateAbilityTarget;

// Class SCCore.SCSubsystem
// 0x0128 (0x0150 - 0x0028)
class USCSubsystem : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnSubSystemLoaded;                                 // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                          m_bListenToInputs;                                 // 0x0048(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x12];                                      // 0x0049(0x0012)(Fixing Size After Last Property [ Dumper-7 ])
	ESCSubsystemNetMode                           m_eNetMode;                                        // 0x005B(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5C[0x54];                                      // 0x005C(0x0054)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ETickingGroup, float>                    m_TickGroupToTickIntervalMap;                      // 0x00B0(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          m_bEnable;                                         // 0x0100(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bDisableDuringUnitTest;                          // 0x0101(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   m_BlueprintAsset;                                  // 0x0108(0x0028)(Edit, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_130[0x20];                                     // 0x0130(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_Deinitialize();
	void BPE_Initialize();
	void BPE_OnGameStateHandleBeginPlay(class ASCGameState* _gameState);
	void BPE_OnGameStateHandleInitialReplication(class ASCGameState* _gameState);
	void BPE_OnInputKey(const struct FKey& _key, EInputEvent _event, class ASCBasePlayerController* _PlayerController, bool* _bConsumed);
	void BPE_OnMatchStateChanged(class ASCGameState* _gameState, class FName _newState);
	void BPE_OnWorldDestroyed(class UWorld* _world);
	void BPE_PostEditChangeProperty(class FName _propertyName);
	void BPE_PostLoadMap(class UWorld* _world);
	void BPE_Tick(class UWorld* _world, ETickingGroup _eTickGroup, float _fDt);
	void OnPlayerStateAdded(class APlayerState* _PlayerStateAdded);
	void OnPlayerStateRemoved(class APlayerState* _PlayerStateRemoved);
	void OnWorldBeginTearDown(class UWorld* _world);

	void BPE_DebugLogStatus() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSubsystem")
	}
	static class USCSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSubsystem>();
	}
};
DUMPER7_ASSERTS_USCSubsystem;

// Class SCCore.SCAnimationCachingSubsystem
// 0x0130 (0x0280 - 0x0150)
class USCAnimationCachingSubsystem final : public USCSubsystem
{
public:
	EAxis                                         m_eAnimForward;                                    // 0x0150(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMirrorDataTable>        m_MirrorDataTable;                                 // 0x0158(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class USCRootMotionModifier*, class USCRootMotionModifier*> m_ModifierToEditableModifier;   // 0x0180(0x0050)(Edit, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<class UAnimMontage*, struct FSlotToMontageContainer> m_MontageToAestheticsMontage;          // 0x01D0(0x0050)(Edit, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<class UAnimMontage*, struct FCachedMontageArrayInfosForBoneMatching> m_MontageToCachedMontageInfosForBoneMatching; // 0x0220(0x0050)(Edit, Transient, EditConst, NativeAccessSpecifierPrivate)
	int32                                         m_iModifiersLockCounter;                           // 0x0270(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMirrorDataTable*                       m_LoadedMirrorDataTable;                           // 0x0278(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAnimationCachingSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAnimationCachingSubsystem")
	}
	static class USCAnimationCachingSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAnimationCachingSubsystem>();
	}
};
DUMPER7_ASSERTS_USCAnimationCachingSubsystem;

// Class SCCore.AbilityTask_WaitForPrediction
// 0x0038 (0x00D0 - 0x0098)
class UAbilityTask_WaitForPrediction final : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x18];                                      // 0x0098(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnCatchup;                                         // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void()>              OnRejected;                                        // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)

public:
	static class UAbilityTask_WaitForPrediction* BPF_ClientWaitForPrediction(class UGameplayAbility* _owningAbility, const class UAbilityTask_WaitForPrediction* _task);
	static class UAbilityTask_WaitForPrediction* BPF_ClientWatchPrediction(class UGameplayAbility* _owningAbility);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_WaitForPrediction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_WaitForPrediction")
	}
	static class UAbilityTask_WaitForPrediction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_WaitForPrediction>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_WaitForPrediction;

// Class SCCore.AbilityTask_WaitFSMStateAction
// 0x0020 (0x00B8 - 0x0098)
class UAbilityTask_WaitFSMStateAction final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(class USCStateMachineNode* _updatedNode)> m_OnTrigger;             // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A8[0x10];                                      // 0x00A8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_WaitFSMStateAction* WaitForFSMStateAction(class UGameplayAbility* _owningAbility, class USCStateMachine* _stateMachineToListenTo, EFSMStateWatchAction _eActionToWatch);

	void OnStateActionTriggered(class USCFlowGraphNode* _previousState, class USCFlowGraphNode* _nextState, struct FSCFlowGraphTransition* _transition);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_WaitFSMStateAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_WaitFSMStateAction")
	}
	static class UAbilityTask_WaitFSMStateAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_WaitFSMStateAction>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_WaitFSMStateAction;

// Class SCCore.SCAnimInstanceBase
// 0x0030 (0x03B0 - 0x0380)
#pragma pack(push, 0x1)
class alignas(0x10) USCAnimInstanceBase : public UAnimInstance
{
public:
	uint8                                         Pad_380[0x8];                                      // 0x0380(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMirrorDataTable*                       m_MirrorDataTable;                                 // 0x0388(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsReplayScrubSnapshotCompatible;                // 0x0390(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bAnimInstanceUpdateEnabled;                      // 0x0391(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_392[0x16];                                     // 0x0392(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_AnimInstanceUpdateEnable();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAnimInstanceBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAnimInstanceBase")
	}
	static class USCAnimInstanceBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAnimInstanceBase>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_USCAnimInstanceBase;

// Class SCCore.SCAnimInstance
// 0x0820 (0x0BD0 - 0x03B0)
class USCAnimInstance : public USCAnimInstanceBase
{
public:
	float                                         m_fCinematicOverallWeight;                         // 0x03A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCinematicLayerTypesCursor;                      // 0x03AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPreviewCinematicLayerTypesCursor;               // 0x03B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fKeepRedirectionRotationWayMinAngle;             // 0x03B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fProgressiveRedirection;                         // 0x03B8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3BC[0x1C];                                     // 0x03BC(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FDynamicBlendSettings> m_DynamicBlendSettingsMap;                       // 0x03D8(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UPoseAsset*                             m_CachedCurrentPoseAsset;                          // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsInCinematic;                                  // 0x0430(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             m_FloorHitResult;                                  // 0x0438(0x00F8)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                         m_fGroundDistance;                                 // 0x0530(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCAnimLookAtHandler                   m_LookAtHandler;                                   // 0x0538(0x0398)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_8D0[0xF0];                                     // 0x08D0(0x00F0)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vAbilityTargetIkOffset;                          // 0x09C0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9D8[0x70];                                     // 0x09D8(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FIKBodyPartEnumHandler, struct FIKPathContainer> m_IKPathPerBodyPart;                // 0x0A48(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<struct FIKBodyPartEnumHandler, struct FIKPathComputation> m_IKPathComputation;              // 0x0A98(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<struct FIKBodyPartEnumHandler, struct FIKPathSetup> m_IKPathSetupPerBodyPart;               // 0x0AE8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B38[0x98];                                     // 0x0B38(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnCinematicBlendedOut();
	void BPE_OnCinematicBlendOut();
	void BPE_OnGameFlowStateChanged(const struct FGameplayTag& _previous, const struct FGameplayTag& _next);
	void BPE_UpdateAnimationInPreview(float _fDt);
	void BPE_UpdateForVLog();
	void BPF_AddProgressiveRedirection(float _fYaw, float _fDuration, ESCRotationWay _eRotationWay, ESCBlendType _eBlendType, class UCurveFloat* _blendCurve);
	void BPF_AddProgressiveRotation(float _fYaw, float _fDuration);
	void BPF_BindProperty(struct FSCIKPropertyEvaluation& _property, uint8 _uiEnum);
	void BPF_BindRepartitionProperty(struct FSCPropertyFloorBoneRepartition& _property);
	void BPF_BlendCinematicLayer(ECinematicLayerTypes _eLayerToBlendOut, float _fTargettedValue, float _fDuration, ESCBlendType _eBlendType, class UCurveFloat* _blendCurve);
	void BPF_StartIKPath(const struct FGameplayTag& _tagIdentifier, const struct FIKBodyPartEnumHandler& _eIKBodyPart, float _fBlendIn, class UAnimMontage* _montageToUse, const struct FTransform& _ownerTransform, const struct FTransform& _targetedTransform);
	void BPF_StopIKPath(const struct FGameplayTag& _tagIdentifier, float _fBlendOut, class UAnimMontage* _montageToUse);
	void BPF_UpdateIKPathTarget(const struct FGameplayTag& _tagIdentifier, const struct FTransform& _ownerTransform, const struct FTransform& _targetedTransform);

	class UAnimMontage* BPF_GetCurrentActiveMontageBySlotName(class FName _slotName) const;
	float BPF_GetMontageSlotAlpha(const struct FAnimSlotName& _slotName) const;
	const struct FTransform BPF_GetSavedTransform(class FName _savedBone) const;
	bool BPF_IsInPreview() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAnimInstance")
	}
	static class USCAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAnimInstance>();
	}
};
DUMPER7_ASSERTS_USCAnimInstance;

// Class SCCore.AbilityTask_WaitInputRedirection
// 0x0038 (0x00D0 - 0x0098)
class UAbilityTask_WaitInputRedirection final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void(const struct FVector2D& _v2DOldDirection, const struct FVector2D& _v2DNewDirection)> OnRedirection; // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A8[0x20];                                      // 0x00A8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class USCInputAction*                         m_InputAction;                                     // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UAbilityTask_WaitInputRedirection* BPF_WaitInputRedirection(class UGameplayAbility* _owningAbility, const struct FGameplayTag& _activationTag, class USCInputAction* _inputAction, const float _fToleranceAngle);

	void ServerOnRedirection(const struct FGameplayAbilityTargetDataHandle& _data, const struct FGameplayTag& _activationTag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_WaitInputRedirection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_WaitInputRedirection")
	}
	static class UAbilityTask_WaitInputRedirection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_WaitInputRedirection>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_WaitInputRedirection;

// Class SCCore.AbilityTask_WatchInput
// 0x00F8 (0x0190 - 0x0098)
class UAbilityTask_WatchInput : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USCInputAction*                         m_InputAction;                                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FInputActionState& _state, bool _bActivated)> m_OnTrigger; // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_B8[0xD8];                                      // 0x00B8(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_WatchInput* BPF_WatchAbilityInput(class USCGameplayAbility* _owningAbility, EInputWatchTrigger _eTrigger, bool _bResetInputOnEndTask, bool _bIgnoreInitialState, bool _bEndTaskOnTrigger, float _fDurationBeforeTrigger);
	static class UAbilityTask_WatchInput* BPF_WatchAbilityInputState(class USCGameplayAbility* _owningAbility, struct FWatchInputState& _updateState, EInputWatchTrigger _eTrigger, bool _bResetInputOnEndTask, bool _bIgnoreInitialState, bool _bEndTaskOnTrigger, float _fDurationBeforeTrigger);
	static class UAbilityTask_WatchInput* BPF_WatchInput(class UGameplayAbility* _owningAbility, class USCInputAction* _inputAction, const struct FInputGameplayAbilityTargetData& _inputTargetData, EInputWatchTrigger _eTrigger, bool _bResetInputOnEndTask, bool _bIgnoreInitialState, bool _bEndTaskOnTrigger, float _fDurationBeforeTrigger);
	static class UAbilityTask_WatchInput* BPF_WatchInputState(class UGameplayAbility* _owningAbility, class USCInputAction* _inputAction, const struct FInputGameplayAbilityTargetData& _inputTargetData, struct FWatchInputState& _updateState, EInputWatchTrigger _eTrigger, bool _bResetInputOnEndTask, bool _bIgnoreInitialState, bool _bEndTaskOnTrigger, float _fDurationBeforeTrigger);

	void BPF_GetInputState(bool* _bOutActive, struct FInputActionState* _outState) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_WatchInput")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_WatchInput")
	}
	static class UAbilityTask_WatchInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_WatchInput>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_WatchInput;

// Class SCCore.SCBehaviorTreeComponent
// 0x0078 (0x0320 - 0x02A8)
class USCBehaviorTreeComponent final : public UBehaviorTreeComponent
{
public:
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class UBehaviorTree*> m_DynamicSubtrees;                               // 0x02B0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_300[0x20];                                     // 0x0300(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBehaviorTreeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBehaviorTreeComponent")
	}
	static class USCBehaviorTreeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBehaviorTreeComponent>();
	}
};
DUMPER7_ASSERTS_USCBehaviorTreeComponent;

// Class SCCore.TargetDataNodalObject
// 0x0020 (0x0048 - 0x0028)
class UTargetDataNodalObject : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataNodalObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataNodalObject")
	}
	static class UTargetDataNodalObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDataNodalObject>();
	}
};
DUMPER7_ASSERTS_UTargetDataNodalObject;

// Class SCCore.AnimSequencePicker
// 0x0058 (0x00A0 - 0x0048)
class UAnimSequencePicker : public UTargetDataNodalObject
{
public:
	uint8                                         Pad_48[0x28];                                      // 0x0048(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetDataTypeFilter                  m_TargetDataFilter;                                // 0x0070(0x0030)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSequencePicker")
	}
	static class UAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UAnimSequencePicker;

// Class SCCore.ExternalSlotAnimSequencePicker
// 0x0010 (0x00B0 - 0x00A0)
class UExternalSlotAnimSequencePicker final : public UAnimSequencePicker
{
public:
	class FName                                   m_SlotName;                                        // 0x00A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimSequencePickerContainer> m_Picker;                                        // 0x00A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ExternalSlotAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ExternalSlotAnimSequencePicker")
	}
	static class UExternalSlotAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExternalSlotAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UExternalSlotAnimSequencePicker;

// Class SCCore.AbilityTask_BindInputStateToLooseGameplayTags
// 0x0028 (0x01B8 - 0x0190)
class UAbilityTask_BindInputStateToLooseGameplayTags final : public UAbilityTask_WatchInput
{
public:
	struct FGameplayTagContainer                  m_LooseTags;                                       // 0x0190(0x0020)(NativeAccessSpecifierPrivate)
	bool                                          m_bReplicateLooseTags;                             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_BindInputStateToLooseGameplayTags* BPF_BindInputStateToLooseGameplayTags(class UGameplayAbility* _owningAbility, class USCInputAction* _inputAction, const struct FInputGameplayAbilityTargetData& _inputTargetData, const struct FGameplayTagContainer& _tags, bool _bReplicateTags);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_BindInputStateToLooseGameplayTags")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_BindInputStateToLooseGameplayTags")
	}
	static class UAbilityTask_BindInputStateToLooseGameplayTags* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_BindInputStateToLooseGameplayTags>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_BindInputStateToLooseGameplayTags;

// Class SCCore.AbilityTask_BindInputStateToGameplayEffect
// 0x0018 (0x01A8 - 0x0190)
class UAbilityTask_BindInputStateToGameplayEffect final : public UAbilityTask_WatchInput
{
public:
	class UGameplayEffect*                        m_Effect;                                          // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bReplicateLooseTags;                             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_BindInputStateToGameplayEffect* BPF_BindInputStateToGameplayEffect(class UGameplayAbility* _owningAbility, class USCInputAction* _inputAction, const struct FInputGameplayAbilityTargetData& _inputTargetData, TSubclassOf<class UGameplayEffect> _effect);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_BindInputStateToGameplayEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_BindInputStateToGameplayEffect")
	}
	static class UAbilityTask_BindInputStateToGameplayEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_BindInputStateToGameplayEffect>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_BindInputStateToGameplayEffect;

// Class SCCore.SCAttributeSet
// 0x0058 (0x0088 - 0x0030)
class USCAttributeSet : public UAttributeSet
{
public:
	float                                         m_fServerSnapshotFrequency;                        // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x54];                                      // 0x0034(0x0054)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAttributeSet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAttributeSet")
	}
	static class USCAttributeSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAttributeSet>();
	}
};
DUMPER7_ASSERTS_USCAttributeSet;

// Class SCCore.AbilityTask_WatchOverTimeAttribute
// 0x0058 (0x00F0 - 0x0098)
class UAbilityTask_WatchOverTimeAttribute final : public UAbilityTask
{
public:
	uint8                                         Pad_98[0x48];                                      // 0x0098(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              m_OnConditionMet;                                  // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)

public:
	static class UAbilityTask_WatchOverTimeAttribute* BPF_WatchOverTimeAttribute(class UGameplayAbility* _owningAbility, const struct FGameplayAttribute& _attribute, ESCMathCondition _eCondition, float _fThreshold, bool _bEndTaskOnConditionMet);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_WatchOverTimeAttribute")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_WatchOverTimeAttribute")
	}
	static class UAbilityTask_WatchOverTimeAttribute* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_WatchOverTimeAttribute>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_WatchOverTimeAttribute;

// Class SCCore.AchievementUnlockCondition
// 0x0080 (0x00A8 - 0x0028)
class UAchievementUnlockCondition final : public UObject
{
public:
	struct FGameplayTag                           m_AchievementTag;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseCustomAchievementTag;                        // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x37];                                      // 0x0031(0x0037)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorld*                                 m_World;                                           // 0x0068(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                           m_MapWhereUnlockAllowed;                           // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bCheatsAllowed;                                  // 0x0080(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_NeededCheats;                                    // 0x0088(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

public:
	void BPE_Init();
	void BPE_OnMatchEnded(bool _bHasWon);
	void BPE_UnlockAchievement_Debug();
	void BPF_ConditionFailed();
	void BPF_SetAchievementTag(const struct FGameplayTag& _newAchievementTag);
	void BPF_UnlockAchievement(bool _bShutdownCondition);

	bool BPE_CanBeUnlocked(const class UWorld* _world) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AchievementUnlockCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AchievementUnlockCondition")
	}
	static class UAchievementUnlockCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAchievementUnlockCondition>();
	}
};
DUMPER7_ASSERTS_UAchievementUnlockCondition;

// Class SCCore.SCAnimationSettings
// 0x0048 (0x0080 - 0x0038)
class USCAnimationSettings final : public UDeveloperSettings
{
public:
	class FName                                   m_LocoSyncGroup;                                   // 0x0038(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_LeftFootSyncMarker;                              // 0x0040(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_RightFootSyncMarker;                             // 0x0048(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_SnapBoneName;                                    // 0x0050(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_BallBoneName;                                    // 0x0058(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_HorizontalBallBoneName;                          // 0x0060(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fAnimToUEYawOffset;                              // 0x0068(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEnsureFrameRate;                                // 0x006C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameRate                             m_ExpectedAnimFrameRate;                           // 0x0070(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bClampMotionWarpingStretchToMoveInterrupt;       // 0x0078(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMotionWarpingStretchClampTimeOffset;            // 0x007C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAnimationSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAnimationSettings")
	}
	static class USCAnimationSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAnimationSettings>();
	}
};
DUMPER7_ASSERTS_USCAnimationSettings;

// Class SCCore.SCViewModel
// 0x0008 (0x0070 - 0x0068)
class USCViewModel : public UMVVMViewModelBase
{
public:
	bool                                          m_bIsDummyInstance;                                // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USCViewModel* BPF_GetWidgetViewModelOfType(const class USCUserWidget* _widget, TSubclassOf<class USCViewModel> _viewModelClass);
	static void BPF_SetWidgetViewModel(class USCUserWidget* _widget, class USCViewModel* _viewModel, class FName _propertyName);

	bool BPF_IsDummyInstance() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCViewModel")
	}
	static class USCViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCViewModel>();
	}
};
DUMPER7_ASSERTS_USCViewModel;

// Class SCCore.StatViewModel
// 0x0018 (0x0088 - 0x0070)
class UStatViewModel : public USCViewModel
{
public:
	class FString                                 m_Name;                                            // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fValue;                                          // 0x0080(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StatViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StatViewModel")
	}
	static class UStatViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStatViewModel>();
	}
};
DUMPER7_ASSERTS_UStatViewModel;

// Class SCCore.ActionMappingViewModel
// 0x00F8 (0x0168 - 0x0070)
class UActionMappingViewModel final : public USCViewModel
{
public:
	struct FMappingID                             m_MappingID;                                       // 0x0070(0x00D0)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bIsAxis;                                         // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EControllerIconAxisTypes                      m_eAxisType;                                       // 0x0141(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_DisplayName;                                     // 0x0148(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class UActionMappingViewModel*>        m_MappingConflicts;                                // 0x0158(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)

public:
	void SetMappingConflicts(const TArray<class UActionMappingViewModel*>& _mappingConflicts);

	bool IsConflicting() const;
	bool IsValid() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActionMappingViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActionMappingViewModel")
	}
	static class UActionMappingViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionMappingViewModel>();
	}
};
DUMPER7_ASSERTS_UActionMappingViewModel;

// Class SCCore.SCBaseGameSettings
// 0x0010 (0x0048 - 0x0038)
class USCBaseGameSettings : public UDeveloperSettings
{
public:
	bool                                          m_bHasCheats;                                      // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fNetworkTimeTolerance;                           // 0x003C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fTransitionTimeOffsetMaxNetworkValue;            // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsBetaVersion;                                     // 0x0044(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BPF_IsBetaVersion() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBaseGameSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBaseGameSettings")
	}
	static class USCBaseGameSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBaseGameSettings>();
	}
};
DUMPER7_ASSERTS_USCBaseGameSettings;

// Class SCCore.SCCoreGameSettings
// 0x0378 (0x03C0 - 0x0048)
class USCCoreGameSettings final : public USCBaseGameSettings
{
public:
	struct FSCUserEnumSetting                     m_SCCoreUserEnums[0x9];                            // 0x0048(0x0048)(Edit, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D0[0xF0];                                     // 0x02D0(0x00F0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BPF_ListAllValuesForSCEnum(ESCUserDefinedEnums _eEnumProxyValue, TArray<class FString>* _values);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCoreGameSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCoreGameSettings")
	}
	static class USCCoreGameSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCoreGameSettings>();
	}
};
DUMPER7_ASSERTS_USCCoreGameSettings;

// Class SCCore.ProfileMappingViewModel
// 0x0220 (0x0290 - 0x0070)
class UProfileMappingViewModel final : public USCViewModel
{
public:
	struct FInputMappingProfileData               m_MappingProfileData;                              // 0x0070(0x00F8)(Edit, BlueprintVisible, DisableEditOnTemplate, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bIsGamepad;                                      // 0x0168(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsUsingInputModifier;                           // 0x0169(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UActionMappingViewModel*                m_CurrentRemappingID;                              // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInputMappingProfileData               m_CachedRemappingProfileData;                      // 0x0178(0x00F8)(Edit, BlueprintVisible, DisableEditOnTemplate, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UActionMappingViewModel*>        m_MappingConflicts;                                // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class UActionMappingViewModel*>        m_MissingMappings;                                 // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)

public:
	static void BPF_ApplyCurrentRemappingData(class ASCBasePlayerController* _controller);
	static void BPF_ApplyMappingForCurrentRemappingID(class ASCBasePlayerController* _controller, const struct FInputMappingData& _mapping);
	static void BPF_GetCurrentRemappingProfileData(class ASCBasePlayerController* _controller, struct FInputMappingProfileData* _outMappingProfileData);
	static TArray<class UProfileMappingViewModel*> BPF_GetInvalidRemappingProfiles(class ASCBasePlayerController* _controller);
	static void BPF_GetRemappingCaptureData(class ASCBasePlayerController* _controller, struct FMappingID* _outMappingID, struct FInputMappingData* _outMappingData, bool* _bOutCaptureAxis, int32* _outControllerTypes);
	static void BPF_InitRemappingProfiles(class ASCBasePlayerController* _controller);
	static bool BPF_IsCurrentRemappingProfileValid(class ASCBasePlayerController* _controller);
	static bool BPF_IsInputRemappingEnabled();
	static bool BPF_IsMappingMissingFromCurrentRemappingProfile(class ASCBasePlayerController* _controller, const struct FMappingID& _mappingID);
	static void BPF_ResetCurrentRemappingData(class ASCBasePlayerController* _controller);
	static void BPF_ResetCurrentRemappingProfile(class ASCBasePlayerController* _controller);
	static void BPF_ResetRemappingProfiles(class ASCBasePlayerController* _controller, bool _bInvalidOnly);
	static void BPF_SaveCurrentRemappingProfile(class ASCBasePlayerController* _controller);
	static void BPF_SetCurrentRemappingID(class ASCBasePlayerController* _controller, const struct FMappingID& _mappingID, const class FText& _displayName, bool _bIsAxis);
	static void BPF_SetIsEditingRemapping(class ASCBasePlayerController* _controller, bool _bIsEditing);
	static void BPF_UnbindRemappingID(class ASCBasePlayerController* _controller, const struct FMappingID& _mappingID);
	static bool BPF_ValidateCurrentRemappingData(class ASCBasePlayerController* _controller);
	static bool BPF_ValidateCurrentRemappingProfile(class ASCBasePlayerController* _controller);

	void AddMappingConflicts(const TArray<class UActionMappingViewModel*>& _mappingConflicts);
	void SetMappingConflicts(const TArray<class UActionMappingViewModel*>& _mappingConflicts);
	void SetMissingMappings(const TArray<class UActionMappingViewModel*>& _missingMappings);

	bool IsConflicting() const;
	bool IsIncomplete() const;
	bool IsValid() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ProfileMappingViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ProfileMappingViewModel")
	}
	static class UProfileMappingViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProfileMappingViewModel>();
	}
};
DUMPER7_ASSERTS_UProfileMappingViewModel;

// Class SCCore.BaseActorCondition
// 0x0000 (0x0028 - 0x0028)
class UBaseActorCondition : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseActorCondition")
	}
	static class UBaseActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseActorCondition>();
	}
};
DUMPER7_ASSERTS_UBaseActorCondition;

// Class SCCore.TagAvailabilityLayerContainer
// 0x0078 (0x00A0 - 0x0028)
class UTagAvailabilityLayerContainer : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTagAvailabilityLayer                  m_Tags;                                            // 0x0030(0x0070)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TagAvailabilityLayerContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TagAvailabilityLayerContainer")
	}
	static class UTagAvailabilityLayerContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTagAvailabilityLayerContainer>();
	}
};
DUMPER7_ASSERTS_UTagAvailabilityLayerContainer;

// Class SCCore.ActorClassCondition
// 0x0028 (0x0050 - 0x0028)
class UActorClassCondition final : public UBaseActorCondition
{
public:
	TSoftClassPtr<class UClass>                   m_Class;                                           // 0x0028(0x0028)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorClassCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorClassCondition")
	}
	static class UActorClassCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorClassCondition>();
	}
};
DUMPER7_ASSERTS_UActorClassCondition;

// Class SCCore.ActorHasAttachedActorCondition
// 0x0028 (0x0050 - 0x0028)
class UActorHasAttachedActorCondition final : public UBaseActorCondition
{
public:
	TSoftClassPtr<class UClass>                   m_Class;                                           // 0x0028(0x0028)(Edit, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorHasAttachedActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorHasAttachedActorCondition")
	}
	static class UActorHasAttachedActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorHasAttachedActorCondition>();
	}
};
DUMPER7_ASSERTS_UActorHasAttachedActorCondition;

// Class SCCore.BaseActorTargetCondition
// 0x0000 (0x0028 - 0x0028)
class UBaseActorTargetCondition : public UObject
{
public:
	bool BPF_Evaluate(const class AActor* _actor, const class AActor* _target) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseActorTargetCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseActorTargetCondition")
	}
	static class UBaseActorTargetCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseActorTargetCondition>();
	}
};
DUMPER7_ASSERTS_UBaseActorTargetCondition;

// Class SCCore.ActorLocationTargetDataCondition
// 0x0010 (0x0038 - 0x0028)
class UActorLocationTargetDataCondition final : public UBaseActorTargetCondition
{
public:
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0028(0x0010)(Edit, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorLocationTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorLocationTargetDataCondition")
	}
	static class UActorLocationTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorLocationTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UActorLocationTargetDataCondition;

// Class SCCore.SCGameInstance
// 0x0250 (0x0420 - 0x01D0)
class USCGameInstance : public UCommonGameInstance
{
public:
	uint8                                         Pad_1D0[0x80];                                     // 0x01D0(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, TSubclassOf<class UCheatData>> m_CheatData;                            // 0x0250(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class USCSessionTimeManager*                  m_SessionTimeManager;                              // 0x02A0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bEnableDevMode;                                  // 0x02A8(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A9[0x14F];                                    // 0x02A9(0x014F)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        m_ObjectToLoadAtBegining;                          // 0x03F8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_408[0x18];                                     // 0x0408(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ExecAllClientsLoadEmulationProfile(const class FString& _profile);
	void LockInGameAchievement(const struct FGameplayTag& _achievementToLock);
	void ResetAllInGameAchievements();
	void TriggerPGOWriteFile();
	void UnlockAllInGameAchievements();
	void UnlockInGameAchievement(const struct FGameplayTag& _achievementToUnlock);

	class UCheatData* BPF_GetCheatData(const struct FGameplayTag& _cheatTag) const;
	void RequestDumpSaveInLog(const class FString& _saveName) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameInstance")
	}
	static class USCGameInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameInstance>();
	}
};
DUMPER7_ASSERTS_USCGameInstance;

// Class SCCore.SCBaseGameInstance
// 0x0000 (0x0420 - 0x0420)
class USCBaseGameInstance final : public USCGameInstance
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBaseGameInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBaseGameInstance")
	}
	static class USCBaseGameInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBaseGameInstance>();
	}
};
DUMPER7_ASSERTS_USCBaseGameInstance;

// Class SCCore.TagsBeforeActivationTargetDataCondition
// 0x0000 (0x00C8 - 0x00C8)
class UTagsBeforeActivationTargetDataCondition final : public UNamedGameplayTagContainerTargetDataCondition
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TagsBeforeActivationTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TagsBeforeActivationTargetDataCondition")
	}
	static class UTagsBeforeActivationTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTagsBeforeActivationTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UTagsBeforeActivationTargetDataCondition;

// Class SCCore.BaseInteractionSolver
// 0x0000 (0x0028 - 0x0028)
class UBaseInteractionSolver : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseInteractionSolver")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseInteractionSolver")
	}
	static class UBaseInteractionSolver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseInteractionSolver>();
	}
};
DUMPER7_ASSERTS_UBaseInteractionSolver;

// Class SCCore.ActorRollbackComponent
// 0x0130 (0x01E8 - 0x00B8)
class UActorRollbackComponent : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x28];                                      // 0x00B8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_RollbackableGameplayTags;                        // 0x00E0(0x0020)(Edit, NativeAccessSpecifierPublic)
	float                                         m_fHistoryDuration;                                // 0x0100(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInteractionTagMapping>         m_InteractionTagMapping;                           // 0x0108(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UBaseInteractionSolver>     m_InteractionSolver;                               // 0x0118(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_120[0x10];                                     // 0x0120(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USCAbilitySystemComponent*              m_AbilitySystemComponent;                          // 0x0130(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRevisionID                            m_RevisionID;                                      // 0x0138(0x0002)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_13A[0xAE];                                     // 0x013A(0x00AE)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_RevisionID();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorRollbackComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorRollbackComponent")
	}
	static class UActorRollbackComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorRollbackComponent>();
	}
};
DUMPER7_ASSERTS_UActorRollbackComponent;

// Class SCCore.RollbackActorInterface
// 0x0000 (0x0000 - 0x0000)
class IRollbackActorInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RollbackActorInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RollbackActorInterface")
	}
	static class IRollbackActorInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IRollbackActorInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IRollbackActorInterface;

// Class SCCore.EventBinder
// 0x00B8 (0x00E0 - 0x0028)
class UEventBinder : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedPropertyBag                  m_Properties;                                      // 0x0048(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_Type;                                            // 0x0058(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x30];                                      // 0x0060(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       m_TargetDataHandleResult;                          // 0x0090(0x0028)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAbilityTargetDataHandle       m_TargetDataHandleProvidedOnBind;                  // 0x00B8(0x0028)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)

public:
	void BPE_OnIsActiveChanged(bool _IsActive);
	void BPE_Reset();
	void BPF_AddPlayersInvolvedInTargetData(class APlayerState* _playerInstigator, const TArray<class APlayerState*>& _otherPlayers);
	void BPF_AddToggleInTargetData(bool _bToggle);
	void BPF_AddValueInTargetData(float _fValue);
	void BPF_Bind(const TDelegate<void(const struct FGameplayAbilityTargetDataHandle& _targetDataHandle)>& _onTriggeredCallback);
	void BPF_BinderTriggered();
	void BPF_ResetTargetData();
	void BPF_UnBind(const TDelegate<void(const struct FGameplayAbilityTargetDataHandle& _targetDataHandle)>& _onTriggeredCallback);

	struct FGameplayAbilityTargetDataHandle BPF_GetTargetDataProvidedOnBind() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EventBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EventBinder")
	}
	static class UEventBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventBinder>();
	}
};
DUMPER7_ASSERTS_UEventBinder;

// Class SCCore.SCCameraComponent
// 0x0F90 (0x1980 - 0x09F0)
class USCCameraComponent : public UCameraComponent
{
public:
	class USCCameraLagStruct*                     m_sActualLagParameters;                            // 0x09F0(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnOwnerTeleport;                                   // 0x09F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_A08[0x220];                                    // 0x0A08(0x0220)(Fixing Size After Last Property [ Dumper-7 ])
	class UBehaviorTreeComponent*                 m_BehaviorTreeComponent;                           // 0x0C28(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBlackboardComponent*                   m_BlackboardComponent;                             // 0x0C30(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C38[0x90];                                     // 0x0C38(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              m_v2DScreenPercentSight;                           // 0x0CC8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_CD8[0x808];                                    // 0x0CD8(0x0808)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fSpectatorLerpSpeed;                             // 0x14E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_14E4[0x24];                                    // 0x14E4(0x0024)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class USCAbstractCameraData>> m_debugCameraStack;                             // 0x1508(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSubclassOf<class USCAbstractCameraData>      m_behaviorTreeCamera;                              // 0x1518(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1520[0x198];                                   // 0x1520(0x0198)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class USCCameraMixerData>> m_MixerDataBaseClasses;                            // 0x16B8(0x0010)(Edit, ZeroConstructor, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_16C8[0xA0];                                    // 0x16C8(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           m_SoftPtrMixerCameraDataAssetsToLoadAtStart;       // 0x1768(0x0010)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1778[0x10];                                    // 0x1778(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class USCCameraTransitionInfo>> m_TransitionsBaseClasses;                     // 0x1788(0x0010)(Edit, ZeroConstructor, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_1798[0xA0];                                    // 0x1798(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           m_SoftPtrTransitionAssetsToLoadAtStart;            // 0x1838(0x0010)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1848[0x10];                                    // 0x1848(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	ECollisionChannel                             m_eCameraSoftCollision;                            // 0x1858(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1859[0x57];                                    // 0x1859(0x0057)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USCCameraService*>               m_ServicesAsArrayInternal;                         // 0x18B0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_18C0[0x58];                                    // 0x18C0(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           m_ServiceUpdateOrder;                              // 0x1918(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class USCCameraNodeBaseService>> m_CameraNodeServiceUpdateOrder;              // 0x1928(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class USCCameraDB*                            m_CameraDB;                                        // 0x1938(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUsePlayerStartToInitCameraRotation;             // 0x1940(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1941[0x7];                                     // 0x1941(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCCameraData>              m_CameraDataTemplateClass;                         // 0x1948(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiCameraDataPoolSize;                            // 0x1950(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1951[0x7];                                     // 0x1951(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCAbstractCameraData>      m_DefaultCameraDataClass;                          // 0x1958(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiCameraMixerDataPoolSize;                       // 0x1960(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1961[0x7];                                     // 0x1961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCCameraTransitionInfo>    m_DefaultTransitionInClass;                        // 0x1968(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiCameraTransitionPoolSize;                      // 0x1970(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiBlendTreeCameraNodePoolSize[0x3];              // 0x1971(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1974[0xC];                                     // 0x1974(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnCameraDataPoped(const class USCAbstractCameraData* _cameraData);
	void BPE_OnCameraDataPushed(const class USCAbstractCameraData* _cameraData);
	void BPE_OnCameraDataUpdate(const class USCCameraData* _cameraData);
	void BPE_OnCameraServiceFirstFrame(class USCCameraService* _service);
	void BPE_OnCameraServiceLastFrame(class USCCameraService* _service);
	void BPF_AddLookAt(const struct FSCCameraLookAtServiceBehavior& _newLookAt, int32* _iHandle);
	void BPF_AddPitchOnPlaceRad(float _fPitchRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	void BPF_AddPitchRad(float _fPitchRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	void BPF_AddRollOnPlaceRad(float _fRollRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	void BPF_AddRollRad(float _fRollRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	void BPF_AddRotationDeg(const struct FRotator& _rotatorDeg);
	void BPF_AddYawOnPlaceRad(float _fYawRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	void BPF_AddYawRad(float _fYawRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	bool BPF_EnsureBlackBoardKeyIsValid(const class FName& _keyName);
	struct FVector2D BPF_GetLookActionVectorValue();
	struct FVector2D BPF_GetLookInputValue();
	void BPF_LockUntilGamepadNeultralInput();
	void BPF_OverrideLocationTrackingMode(ESCCameraTrackingMode _eLocationMode);
	void BPF_OverrideRotationTrackingMode(ESCCameraTrackingMode _eRotationMode);
	void BPF_PauseLookAt(float _fDuration, class FString* _contextString);
	int32 BPF_PauseLookAtWithHandle(class FString* _contextString);
	class UCameraShakeBase* BPF_PlayCameraShake(TSubclassOf<class UCameraShakeBase> _shakeClass, float _fScale, ECameraShakePlaySpace _eShakeSpace);
	void BPF_PopRemoveDampingOnAlgorithms(int32 _iHandle);
	int32 BPF_PushRemoveDampingOnAlgorithms(const class FString& _context);
	void BPF_RedirectCameraData(const TSubclassOf<class USCAbstractCameraData>& _cameraDataToRedirect, const TSubclassOf<class USCAbstractCameraData>& _newCameraDataToUse);
	void BPF_RemoveAllLookAt();
	void BPF_RemoveLookAt(int32 _iHandle);
	void BPF_ResetCameraDataRedirectorToDefault(const TSubclassOf<class USCAbstractCameraData>& _cameraDataToReset);
	void BPF_ResetLocationTrackingMode();
	void BPF_ResetRotationTrackingMode();
	void BPF_SetIsCameraLDMode(bool _bCameraLDMode);
	void BPF_SetIsLookInputLocked(bool _bIsLocked);
	void BPF_SetLocalRotationDeg(const struct FRotator& _rotatorDeg);
	void BPF_SetMirrorCursorValue(float _fValue);
	void BPF_SetPitchOnPlaceRad(float _fPitchRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	void BPF_SetPitchRad(float _fPitchRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	void BPF_SetRollOnPlaceRad(float _fRollRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	void BPF_SetRollRad(float _fRollRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	void BPF_SetRotationDeg(const struct FRotator& _rotatorDeg);
	void BPF_SetSlowMotionFactor(float _fSlowMotionFactor);
	void BPF_SetYawOnPlaceRad(float _fYawRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	void BPF_SetYawRad(float _fYawRad, const TSubclassOf<class USCCameraService>& _CameraServiceInstigator);
	void BPF_UnPauseLookAt(int32 _iHandle);
	void BPF_UpdateLookAtParams(const struct FSCCameraLookAtServiceBehavior& _params, int32 _iHandle);

	bool BPF_ComputeIsMirrorFromCharacterPosOnScreen() const;
	class UBlackboardComponent* BPF_GetBlackBoardComponent() const;
	float BPF_GetCameraCollisionRatio() const;
	float BPF_GetCameraCollisionTargetRatio() const;
	TSubclassOf<class USCCameraData> BPF_GetCameraDataTemplateClass() const;
	TSubclassOf<class USCCameraMixerData> BPF_GetCameraMixerDataInstanciatedClass(const TSubclassOf<class USCCameraMixerData>& _instanceClass) const;
	class USCCameraService* BPF_GetCameraService(TSubclassOf<class USCCameraService> _serviceClass) const;
	float BPF_GetCameraShakeFactor() const;
	struct FTransform BPF_GetCameraTransform() const;
	TSubclassOf<class USCCameraTransitionInfo> BPF_GetCameraTransitionInstanciatedClass(const TSubclassOf<class USCCameraTransitionInfo>& _instanceClass) const;
	const class USCCameraData* BPF_GetCurrentCameraData() const;
	ESCSequenceBlendViewState BPF_GetCurrentCinematicState() const;
	TSubclassOf<class USCAbstractCameraData> BPF_GetDefaultCameraDataClass() const;
	float BPF_GetDeltaTimeSlowMotionIndependent(float _fCurrentDt) const;
	bool BPF_GetIsCameraLDMode() const;
	float BPF_GetMirrorCursorValue() const;
	int32 BPF_GetNumberOfValidTarget() const;
	class APlayerController* BPF_GetOwnerCharacterController() const;
	float BPF_GetPitchDeg() const;
	float BPF_GetPitchOnPlaceRad() const;
	float BPF_GetPitchOnPlaceRadForService(const TSubclassOf<class USCCameraService>& _CameraServiceInstigator) const;
	float BPF_GetPitchRad() const;
	float BPF_GetRollDeg() const;
	float BPF_GetRollOnPlaceRad() const;
	float BPF_GetRollRad() const;
	struct FVector2D BPF_GetScreenPercentSight() const;
	struct FVector2D BPF_GetScreenPositionSight() const;
	void BPF_GetValidTarget(TArray<class AActor*>* _arrayOfTarget) const;
	bool BPF_GetWorldPositionSight(const class APlayerController* _PlayerController, struct FVector* _vOutWorldLocation, struct FVector* _vOutWorldDirection, bool _bUseForwardAsWorldDirection) const;
	float BPF_GetYawDeg() const;
	float BPF_GetYawOnPlaceRad() const;
	float BPF_GetYawOnPlaceRadForService(const TSubclassOf<class USCCameraService>& _CameraServiceInstigator) const;
	float BPF_GetYawRad() const;
	bool BPF_IsAnyLockActiveAndRunning() const;
	bool BPF_IsDampingRemovedOnAlgorithm() const;
	bool BPF_IsInCinematic() const;
	bool BPF_IsLookAtActive(int32 _iHandle) const;
	bool BPF_IsLookInputLocked() const;
	bool BPF_IsWorldLocationInFront(const struct FVector& _vLocation) const;
	struct FVector BPF_TransformInputVector(const struct FVector2D& _vInputVector) const;
	const class USCCameraDB* GetCameraDB() const;
	TSubclassOf<class USCCameraTransitionInfo> GetDefaultTransitionInClass() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraComponent")
	}
	static class USCCameraComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraComponent>();
	}
};
DUMPER7_ASSERTS_USCCameraComponent;

// Class SCCore.ActorTargetScopedBinder
// 0x0008 (0x00E8 - 0x00E0)
class UActorTargetScopedBinder : public UEventBinder
{
public:
	uint8                                         Pad_E0[0x8];                                       // 0x00E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnActorTargetInvalidated(class AActor* _invalidatedTarget);
	void BPE_OnActorTargetValid(class AActor* _validTarget);
	void OnTargetDestroyed(class AActor* _destroyedActor);

	const class AActor* BPF_GetActorTarget() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorTargetScopedBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorTargetScopedBinder")
	}
	static class UActorTargetScopedBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorTargetScopedBinder>();
	}
};
DUMPER7_ASSERTS_UActorTargetScopedBinder;

// Class SCCore.SCCameraService
// 0x0020 (0x0048 - 0x0028)
class USCCameraService : public UObject
{
public:
	TMulticastInlineDelegate<void(EServiceStateUpdate eStateUpdate)> OnCameraServiceStateUpdated;    // 0x0028(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x9];                                       // 0x0038(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bIsServiceConsideredActiveOnFirstFrame;          // 0x0041(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_InitService(class USCCameraComponent* _cameraComponent);
	void BPE_OnFirstFrame();
	void BPE_OnLastFrame();
	void BPE_OnUpdate(float _fDt);
	void BPF_AddPitch(float _fPitchDeg);
	void BPF_AddRoll(float _fRollDeg);
	void BPF_AddRotationDeg(const struct FRotator& _rotatorDeg);
	void BPF_AddYaw(float _fYawDeg);
	void BPF_SetLocalRotationDeg(const struct FRotator& _rotatorDeg);
	void BPF_SetPitch(float _fPitchDeg);
	void BPF_SetPitchOnPlace(float _fPitchDeg);
	void BPF_SetRoll(float _fRollDeg);
	void BPF_SetRollOnPlace(float _fRollDeg);
	void BPF_SetRotationDeg(const struct FRotator& _rotatorDeg);
	void BPF_SetYaw(float _fYawDeg);
	void BPF_SetYawOnPlace(float _fYawDeg);

	bool BPE_CheckConditionWantsToRun() const;
	TArray<TSubclassOf<class USCCameraService>> BPE_GetDependencies() const;
	class USCCameraComponent* BPF_GetCameraComponent() const;
	const class USCCameraData* BPF_GetCurrentCameraData() const;
	float BPF_GetPitch() const;
	float BPF_GetPitchOnPlace() const;
	float BPF_GetRoll() const;
	float BPF_GetRollOnPlace() const;
	float BPF_GetYaw() const;
	float BPF_GetYawOnPlace() const;
	bool BPF_IsActive() const;
	bool BPF_IsInitialized() const;
	void BPF_LogStatusDebugMessage(class FName _title, const class FString& _additionalMessage) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraService")
	}
	static class USCCameraService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraService>();
	}
};
DUMPER7_ASSERTS_USCCameraService;

// Class SCCore.ActorVelocityTargetDataCondition
// 0x0010 (0x0088 - 0x0078)
class UActorVelocityTargetDataCondition final : public UTargetDataCondition
{
public:
	EOperationType                                m_eOperation;                                      // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        m_fVelocity;                                       // 0x0080(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorVelocityTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorVelocityTargetDataCondition")
	}
	static class UActorVelocityTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorVelocityTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UActorVelocityTargetDataCondition;

// Class SCCore.AdaptiveSnapMontagePlayerHelper
// 0x0000 (0x0028 - 0x0028)
class UAdaptiveSnapMontagePlayerHelper final : public UObject
{
public:
	static bool BPF_FindAdaptiveSnapMontagePlayerContext(const struct FGameplayAbilityTargetDataHandle& _inContext, struct FAdaptiveSnapMontagePlayerContext* _outContext);
	static struct FGameplayAbilityTargetDataHandle BPF_MakeAdaptiveSnapMontagePlayerContext(const struct FGameplayAbilityTargetDataHandle& _inContext, class UMotionWarpingMontagePlayerConfiguration* _configuration);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AdaptiveSnapMontagePlayerHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AdaptiveSnapMontagePlayerHelper")
	}
	static class UAdaptiveSnapMontagePlayerHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAdaptiveSnapMontagePlayerHelper>();
	}
};
DUMPER7_ASSERTS_UAdaptiveSnapMontagePlayerHelper;

// Class SCCore.SCBlueprintLog
// 0x0000 (0x0028 - 0x0028)
class USCBlueprintLog final : public UBlueprintFunctionLibrary
{
public:
	static void BPFLog(const class UObject* _targetSelf, const class FString& _log, EDisplayLevel _eDisplayLevel, bool _bViewportDisplay, const struct FLinearColor& _viewportColor);
	static void BPFLogCategory(const class FString& _text, class FName _categoryName, EDisplayLevel _eDisplayLevel);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBlueprintLog")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBlueprintLog")
	}
	static class USCBlueprintLog* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBlueprintLog>();
	}
};
DUMPER7_ASSERTS_USCBlueprintLog;

// Class SCCore.AddLooseGameplayTagNotifyState
// 0x0020 (0x0050 - 0x0030)
class UAddLooseGameplayTagNotifyState final : public UAnimNotifyState
{
public:
	struct FGameplayTagContainer                  m_Tags;                                            // 0x0030(0x0020)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AddLooseGameplayTagNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AddLooseGameplayTagNotifyState")
	}
	static class UAddLooseGameplayTagNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddLooseGameplayTagNotifyState>();
	}
};
DUMPER7_ASSERTS_UAddLooseGameplayTagNotifyState;

// Class SCCore.AIStimulusCondition
// 0x0058 (0x0080 - 0x0028)
class UAIStimulusCondition final : public UBaseActorTargetCondition
{
public:
	struct FGameplayTagQuery                      m_StimulusTagsQuery;                               // 0x0028(0x0048)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_DistanceRange;                                   // 0x0070(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AIStimulusCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AIStimulusCondition")
	}
	static class UAIStimulusCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIStimulusCondition>();
	}
};
DUMPER7_ASSERTS_UAIStimulusCondition;

// Class SCCore.SCCameraCollisionService
// 0x0010 (0x0058 - 0x0048)
class USCCameraCollisionService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraCollisionService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraCollisionService")
	}
	static class USCCameraCollisionService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraCollisionService>();
	}
};
DUMPER7_ASSERTS_USCCameraCollisionService;

// Class SCCore.InputConditionData
// 0x0050 (0x0078 - 0x0028)
class UInputConditionData : public UObject
{
public:
	bool                                          m_bIsStackable;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsToggleable;                                   // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bResetToggleOnActivation;                        // 0x002A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bResetToggleOnAnyStackedAction;                  // 0x002B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_UISeparator;                                     // 0x0030(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_uiUIKeyIndex;                                    // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USCInputAction*                         m_action;                                          // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOnlyFallbackToKeyWithBestPrio;                  // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAlwaysCollideWithOtherInputs;                   // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bResetOnAnyActionStacked;                        // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UInputConditionData>> m_Fallbacks;                                      // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UGenericInputUIData*                    m_UIData;                                          // 0x0068(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bDefaultDetectChildCollisions;                   // 0x0070(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputConditionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputConditionData")
	}
	static class UInputConditionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputConditionData>();
	}
};
DUMPER7_ASSERTS_UInputConditionData;

// Class SCCore.GenericInputConditionData
// 0x0010 (0x0088 - 0x0078)
class UGenericInputConditionData : public UInputConditionData
{
public:
	struct FInputBehaviourStruct                  m_BehaviourStruct;                                 // 0x0078(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GenericInputConditionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GenericInputConditionData")
	}
	static class UGenericInputConditionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGenericInputConditionData>();
	}
};
DUMPER7_ASSERTS_UGenericInputConditionData;

// Class SCCore.SCCameraBaseLockService
// 0x0000 (0x0048 - 0x0048)
class USCCameraBaseLockService : public USCCameraService
{
public:
	bool BPE_IsLockAlgoAvailable() const;
	bool BPE_IsLockServiceActiveAndRunning() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraBaseLockService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraBaseLockService")
	}
	static class USCCameraBaseLockService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraBaseLockService>();
	}
};
DUMPER7_ASSERTS_USCCameraBaseLockService;

// Class SCCore.SCCameraLockAlgoFollowingService
// 0x0038 (0x0080 - 0x0048)
class USCCameraLockAlgoFollowingService final : public USCCameraBaseLockService
{
public:
	uint8                                         Pad_48[0x38];                                      // 0x0048(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraLockAlgoFollowingService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraLockAlgoFollowingService")
	}
	static class USCCameraLockAlgoFollowingService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraLockAlgoFollowingService>();
	}
};
DUMPER7_ASSERTS_USCCameraLockAlgoFollowingService;

// Class SCCore.AnalogInputData
// 0x0010 (0x0098 - 0x0088)
class UAnalogInputData : public UGenericInputConditionData
{
public:
	float                                         m_fPressValidityThreshold;                         // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseThresholdToRelease;                          // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseTimeToRelease;                               // 0x008D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTime;                                           // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnalogInputData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnalogInputData")
	}
	static class UAnalogInputData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnalogInputData>();
	}
};
DUMPER7_ASSERTS_UAnalogInputData;

// Class SCCore.AnalogInputSequenceData
// 0x0038 (0x00B0 - 0x0078)
class UAnalogInputSequenceData final : public UInputConditionData
{
public:
	TSubclassOf<class UVectorInputConditionData>  m_VectorInputData;                                 // 0x0078(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseRawVectorInputs;                             // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAnalogInputSequenceStep>       m_Steps;                                           // 0x0088(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         m_iMaxParalellStates;                              // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EControllerIconAxisTypes>              m_UIAxis;                                          // 0x00A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnalogInputSequenceData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnalogInputSequenceData")
	}
	static class UAnalogInputSequenceData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnalogInputSequenceData>();
	}
};
DUMPER7_ASSERTS_UAnalogInputSequenceData;

// Class SCCore.SCCameraDB
// 0x0428 (0x0458 - 0x0030)
class USCCameraDB final : public UDataAsset
{
public:
	class UBehaviorTree*                          m_BehaviorTreeAsset;                               // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPerCameraGameOptionClasses            m_DefaultGameOptionClasses;                        // 0x0038(0x0028)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FPerCameraGameOptionClasses> m_TagToGameOptionClasses;          // 0x0060(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         m_fExtraPitchOnTeleport;                           // 0x00B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMouseYawScale;                                  // 0x00B4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMousePitchScale;                                // 0x00B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fAccelDuration;                                  // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDecelDuration;                                  // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fThresholdToSkipAntiRebound;                     // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fTimeToSkipAntiRebound;                          // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseCurveForAccel;                               // 0x00CC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAccelInputThreshold;                            // 0x00D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_AccelCurve;                                      // 0x00D8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fUnlockOnPlaceCompensationTime;                  // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_OrientationDampingFromDistanceCurve;             // 0x00E8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_NearOrientationDampingFromDistanceCurve;         // 0x00F0(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_OrientationDampingCurveRatioFromDist;            // 0x00F8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_PitchDampingFromDistanceCurve;                   // 0x0100(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_PitchNearOrientationDampingFromDistanceCurve;    // 0x0108(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_PitchOrientationDampingCurveRatioFromDist;       // 0x0110(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockManualControlCooldownDuration;              // 0x0118(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_weightFromDistCurve;                             // 0x0120(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLookAtDurationUnderneathSequence;               // 0x0128(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCCameraLookAtServiceBehaviorTime     m_lookAtBehaviorTimeRelated1V1;                    // 0x0130(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FSCCameraLookAtServiceBehaviorConfig   m_lookAtBehavior1V1;                               // 0x0158(0x0138)(Edit, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_followingYawDampingFactorByAngleDelta;           // 0x0290(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_followingYawDampingFactorFromVelocity;           // 0x0298(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFollowingDampingInCollision;                // 0x02A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFollowingCollisionAngleOffset;              // 0x02A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFollowingPitchMultiplier;                   // 0x02A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFollowingPitchOffset;                       // 0x02AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFollowingPitchDampingFactor;                // 0x02B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFollowingMaxAngleToResume;                  // 0x02B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFollowingMinDeltaCamPlayerToFreezeOrientation; // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFollowingMinDeltaCamPlayerToFreezeOrientationNoInput; // 0x02BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFollowingMinDeltaInputToUnfreezeOrientation; // 0x02C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFollowingRotationChangeThreshold;           // 0x02C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bLockFollowingResumeIfNoInput;                   // 0x02C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLockFollowingManualControlCooldownDuration;     // 0x02CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFramingAimZOffset;                          // 0x02D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDurationAfterManualControlToGetBackToRegularPos; // 0x02D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSpringSpeedFactorForCameraPosition;             // 0x02D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fOffsetAngleToGetOutOfCollisionFromDeadZone;     // 0x02DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCollisionDampingFactor;                         // 0x02E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCollisionSphereMarginFactor;                    // 0x02E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSoftCollisionDistanceAllowedInsideWall;         // 0x02E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCollisionDeadEndAngle;                          // 0x02EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iDetectionRaycastCount;                          // 0x02F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCollisionDetectionDistance;                     // 0x02F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_maxRaycastDistCoeffByMinDist;                    // 0x02F8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fRaycastStartZOffset;                            // 0x0300(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fRaycastAngle;                                   // 0x0304(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFalsePositiveSafeZoneMaxAngle;                  // 0x0308(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseSpringForReturningToFurtherCollision;        // 0x030C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fSpringSpeedForReturningToFurtherCollision;      // 0x0310(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEnableSafePoint;                                // 0x0314(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_safePointRatioFromDeadZoneMinDist;               // 0x0318(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSafePointDampingSpeed;                          // 0x0320(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSafePointBlendOutDuration;                      // 0x0324(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCCameraSafePointPlacement            m_fSafePointDefaultPlacement;                      // 0x0328(0x001C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCCameraSafePointConditionalPlacement> m_fSafePointConditionalPlacement;          // 0x0348(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FSCCameraRepulsionConfig               m_DefaultRepulsionConfig;                          // 0x0358(0x0030)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         m_fRepulsionAngleDiffToBeConsideredInsideSafeZone; // 0x0388(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fRepulsionTargetAngleDiffMax;                    // 0x038C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFulcrumOffsetDampingFactorEnabled;              // 0x0390(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFulcrumOffsetDampingFactorDisabled;             // 0x0394(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_fFulcrumOffsetRatioToMaxDistByBissectorRatio;    // 0x0398(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFulcrumOffsetDistanceRatioOutside;              // 0x03A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFulcrumOffsetOrientateCamera;                   // 0x03A4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fFulcrumOffsetCameraOrientationBlendDuration;    // 0x03A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFulcrumOffsetMaxDistance;                       // 0x03AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFollowRotationChangeThreshold;                  // 0x03B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_followingPitchMulitplierFromDeltaYaw;            // 0x03B8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinDeltaCamPlayerToFreezeOrientation;           // 0x03C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinDeltaInputToUnfreezeOrientation;             // 0x03C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCooldownReturnToRestAfterLookAtWithPitch;       // 0x03C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_SideTraceDistRatioRemap;                         // 0x03D0(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_BothSideColRatioRemap;                           // 0x03D8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSideTraceMirrorCursorAvoidRangeAroundMiddle;    // 0x03E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCollisionSideSpeedFactorGoingOpposite;          // 0x03E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCollisionSideSpeedFactorGoingOnTheSameSide;     // 0x03E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxTargetDistanceToBeConsideredByMirrorFar;     // 0x03EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMirrorDistSideMax;                              // 0x03F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMirrorFarExtraDistanceInPushedState;            // 0x03F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMirrorFarExtraDistanceInDownState;              // 0x03F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMeleeAngleToUseCamForwardDirToTargetToChangeMirror; // 0x03FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_ShakeBoneName;                                   // 0x0400(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ESCCameraShakeType, int32>               m_cameraShakePool;                                 // 0x0408(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraDB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraDB")
	}
	static class USCCameraDB* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraDB>();
	}
};
DUMPER7_ASSERTS_USCCameraDB;

// Class SCCore.SkewData
// 0x0000 (0x0030 - 0x0030)
class USkewData : public UDataAsset
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SkewData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SkewData")
	}
	static class USkewData* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkewData>();
	}
};
DUMPER7_ASSERTS_USkewData;

// Class SCCore.AngleRefSkewData
// 0x0020 (0x0050 - 0x0030)
class UAngleRefSkewData final : public USkewData
{
public:
	class UCurveFloat*                            m_Curve;                                           // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_InitialSkewCurve;                                // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAngleRefType                                 m_AngleRefType;                                    // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0xF];                                       // 0x0041(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AngleRefSkewData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AngleRefSkewData")
	}
	static class UAngleRefSkewData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAngleRefSkewData>();
	}
};
DUMPER7_ASSERTS_UAngleRefSkewData;

// Class SCCore.SCCameraBearerInterface
// 0x0000 (0x0000 - 0x0000)
class ISCCameraBearerInterface final
{
public:
	struct FTransform BPE_GetActorRefTransform(float _fDt);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraBearerInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraBearerInterface")
	}
	static class ISCCameraBearerInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISCCameraBearerInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISCCameraBearerInterface;

// Class SCCore.TargetWeightEvaluation
// 0x0008 (0x0030 - 0x0028)
class UTargetWeightEvaluation : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetWeightEvaluation")
	}
	static class UTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UTargetWeightEvaluation;

// Class SCCore.AngleTargetWeightEvaluation
// 0x0020 (0x0050 - 0x0030)
class UAngleTargetWeightEvaluation : public UTargetWeightEvaluation
{
public:
	float                                         m_fMinWeightAngle;                                 // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinWeight;                                      // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxWeightAngle;                                 // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxWeight;                                      // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAllowOutOfBoundsAngle;                          // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EActorAxis                                    m_eActorAxisForAngle;                              // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseHorizontalSpace;                             // 0x0042(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEvaluateFromComponent;                          // 0x0043(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USceneComponent>            m_EvaluateFromComponent;                           // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AngleTargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AngleTargetWeightEvaluation")
	}
	static class UAngleTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAngleTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UAngleTargetWeightEvaluation;

// Class SCCore.SCCameraHolderInterface
// 0x0000 (0x0000 - 0x0000)
class ISCCameraHolderInterface final
{
public:
	void BPE_SetupCameraComponent(class USCCameraComponent* _cameraComp);

	class USCCameraComponent* BPF_GetCameraComponent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraHolderInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraHolderInterface")
	}
	static class ISCCameraHolderInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISCCameraHolderInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISCCameraHolderInterface;

// Class SCCore.AngleWithActorCondition
// 0x0018 (0x0040 - 0x0028)
class UAngleWithActorCondition final : public UBaseActorTargetCondition
{
public:
	EAngleComputeMethod                           m_eMethod;                                         // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAbsoluteAngle;                                  // 0x0029(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_AngleRange;                                      // 0x002C(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAngleWithActorDrawDebug;                        // 0x003C(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AngleWithActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AngleWithActorCondition")
	}
	static class UAngleWithActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAngleWithActorCondition>();
	}
};
DUMPER7_ASSERTS_UAngleWithActorCondition;

// Class SCCore.AnimPickerNodalObjectBlueprint
// 0x0000 (0x00A8 - 0x00A8)
class UAnimPickerNodalObjectBlueprint final : public UBlueprint
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimPickerNodalObjectBlueprint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimPickerNodalObjectBlueprint")
	}
	static class UAnimPickerNodalObjectBlueprint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimPickerNodalObjectBlueprint>();
	}
};
DUMPER7_ASSERTS_UAnimPickerNodalObjectBlueprint;

// Class SCCore.SCAbstractCameraData
// 0x0028 (0x0050 - 0x0028)
class USCAbstractCameraData : public UObject
{
public:
	TSubclassOf<class USCCameraTransitionInfo>    m_CameraTransition;                                // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSCCameraTransitionInfoPairStruct> m_CameraTransitionDB;                           // 0x0030(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class USCCameraTransitionInfo>    m_OutCameraTransition;                             // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USCAbstractCameraData>      m_VirtualClass;                                    // 0x0048(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BPE_OnPulled(const class USCCameraComponent* _cameraRef);
	void BPE_OnReleased(const class USCCameraComponent* _cameraRef);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAbstractCameraData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAbstractCameraData")
	}
	static class USCAbstractCameraData* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAbstractCameraData>();
	}
};
DUMPER7_ASSERTS_USCAbstractCameraData;

// Class SCCore.SCCameraMixerData
// 0x0060 (0x00B0 - 0x0050)
class USCCameraMixerData : public USCAbstractCameraData
{
public:
	TSoftClassPtr<class UClass>                   m_StartCamera;                                     // 0x0050(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   m_EndCamera;                                       // 0x0078(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fBlendRatio;                                     // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_Init();
	void BPE_Shutdown();
	void BPE_UpdateBlendRatio(float _fDt, bool _bNoDamping);
	void BPF_SetBlendRatio(float _fNewRatio);

	float BPF_GetBlendRatio() const;
	class USCCameraComponent* BPF_GetCameraComponent() const;
	TSubclassOf<class USCAbstractCameraData> BPF_GetEndCamera() const;
	TSubclassOf<class USCAbstractCameraData> BPF_GetStartCamera() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraMixerData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraMixerData")
	}
	static class USCCameraMixerData* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraMixerData>();
	}
};
DUMPER7_ASSERTS_USCCameraMixerData;

// Class SCCore.SCCameraMixerDataBool
// 0x0030 (0x00E0 - 0x00B0)
class USCCameraMixerDataBool : public USCCameraMixerData
{
public:
	uint8                                         Pad_B0[0x1];                                       // 0x00B0(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bInversed;                                       // 0x00B1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDuration;                                       // 0x00B4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCBlendType                                  m_eBlendType;                                      // 0x00B8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_Curve;                                           // 0x00C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bConstantSpeed;                                  // 0x00C8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C9[0x17];                                      // 0x00C9(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BPE_GetBool(bool _bNoDamping) const;
	void BPF_Blend(float _fTarget, float _fDelay, ESCBlendType _eBlendType, class UCurveFloat* _blendCurve) const;
	bool GetOldValue() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraMixerDataBool")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraMixerDataBool")
	}
	static class USCCameraMixerDataBool* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraMixerDataBool>();
	}
};
DUMPER7_ASSERTS_USCCameraMixerDataBool;

// Class SCCore.AnimationModifierComputation
// 0x0050 (0x0078 - 0x0028)
class UAnimationModifierComputation : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetDataTypeFilter                  m_TargetDataFilter;                                // 0x0048(0x0030)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimationModifierComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimationModifierComputation")
	}
	static class UAnimationModifierComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimationModifierComputation>();
	}
};
DUMPER7_ASSERTS_UAnimationModifierComputation;

// Class SCCore.SnapAnimationComputation
// 0x0000 (0x0078 - 0x0078)
class USnapAnimationComputation : public UAnimationModifierComputation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SnapAnimationComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SnapAnimationComputation")
	}
	static class USnapAnimationComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<USnapAnimationComputation>();
	}
};
DUMPER7_ASSERTS_USnapAnimationComputation;

// Class SCCore.SCCameraLockService
// 0x0200 (0x0248 - 0x0048)
class USCCameraLockService final : public USCCameraBaseLockService
{
public:
	uint8                                         Pad_48[0x200];                                     // 0x0048(0x0200)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_OverrideLockBehavior(const struct FSCCameraLookAtServiceBehaviorTime& _timeConfig, const struct FSCCameraLookAtServiceBehaviorConfig& _behaviorConfig);
	void BPF_OverrideLockManualCooldown(float _fNewCooldown);
	void BPF_ResetLockBehaviorToDefault();
	void BPF_ResetLockManualCooldownToDefault();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraLockService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraLockService")
	}
	static class USCCameraLockService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraLockService>();
	}
};
DUMPER7_ASSERTS_USCCameraLockService;

// Class SCCore.TargetingSnapAnimationComputation
// 0x0010 (0x0088 - 0x0078)
class UTargetingSnapAnimationComputation final : public USnapAnimationComputation
{
public:
	class USnapAnimationComputation*              m_DefaultComputation;                              // 0x0078(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USnapAnimationComputation*              m_PreviewComputation;                              // 0x0080(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetingSnapAnimationComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetingSnapAnimationComputation")
	}
	static class UTargetingSnapAnimationComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetingSnapAnimationComputation>();
	}
};
DUMPER7_ASSERTS_UTargetingSnapAnimationComputation;

// Class SCCore.MovingTargetSnapAnimationComputation
// 0x0010 (0x0088 - 0x0078)
class UMovingTargetSnapAnimationComputation final : public USnapAnimationComputation
{
public:
	class USnapAnimationComputation*              m_ImmobileComputation;                             // 0x0078(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USnapAnimationComputation*              m_MovingComputation;                               // 0x0080(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovingTargetSnapAnimationComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovingTargetSnapAnimationComputation")
	}
	static class UMovingTargetSnapAnimationComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovingTargetSnapAnimationComputation>();
	}
};
DUMPER7_ASSERTS_UMovingTargetSnapAnimationComputation;

// Class SCCore.SCCameraFOVModifier
// 0x0008 (0x0050 - 0x0048)
class USCCameraFOVModifier final : public UCameraModifier
{
public:
	float                                         m_fFov;                                            // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraFOVModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraFOVModifier")
	}
	static class USCCameraFOVModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraFOVModifier>();
	}
};
DUMPER7_ASSERTS_USCCameraFOVModifier;

// Class SCCore.SCCameraMirrorCursorManagementService
// 0x0108 (0x0150 - 0x0048)
class USCCameraMirrorCursorManagementService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x108];                                     // 0x0048(0x0108)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BPF_FreezeMirrorUpdate(const class FString& _contextString);
	int32 BPF_FreezeNewMirrorConfig(const class FString& _contextString, float _fDelay);
	void BPF_LaunchUpdateMirror(const struct FSCCameraMirrorManagementConfig& _config);
	void BPF_UnFreezeMirrorUpdate(int32 _iHandle);
	void BPF_UnFreezeNewMirrorConfig(int32 _iHandle);
	void BPF_UpdateCurrentSpringSpeedValue(float _fNewValue);
	void BPF_UpdateCurrentTargettedValue(float _fNewValue);

	const struct FSCCameraMirrorManagementConfig BPF_GetCurrentConfig() const;
	float BPF_GetTargettedValue() const;
	bool BPF_IsCurrentValueMirror() const;
	bool BPF_IsNewMirrorFrozen() const;
	bool BPF_IsTargettedValueMirror() const;
	bool BPF_IsUpdateMirrorFrozen() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraMirrorCursorManagementService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraMirrorCursorManagementService")
	}
	static class USCCameraMirrorCursorManagementService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraMirrorCursorManagementService>();
	}
};
DUMPER7_ASSERTS_USCCameraMirrorCursorManagementService;

// Class SCCore.AnimSequencePickerSlotContainer
// 0x00A0 (0x0140 - 0x00A0)
class UAnimSequencePickerSlotContainer : public UAnimSequencePicker
{
public:
	struct FAnimSequencePickerContainerSlotInfos  m_SlotInfos;                                       // 0x00A0(0x0050)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<class FName, struct FAnimSequencePickerSlotInstance> m_Slots;                               // 0x00F0(0x0050)(Deprecated, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSequencePickerSlotContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSequencePickerSlotContainer")
	}
	static class UAnimSequencePickerSlotContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSequencePickerSlotContainer>();
	}
};
DUMPER7_ASSERTS_UAnimSequencePickerSlotContainer;

// Class SCCore.AnimSequencePickerContainer
// 0x00C0 (0x0200 - 0x0140)
class UAnimSequencePickerContainer : public UAnimSequencePickerSlotContainer
{
public:
	struct FInstancedPropertyBag                  m_PropertyBag;                                     // 0x0140(0x0010)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimationModifierComputation> m_SnapComputation;                              // 0x0150(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOnDemandTargetProvider                m_CustomData;                                      // 0x0158(0x0058)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bUseCustomDataInSnapComputation;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePickerInstance            m_AnimSequencePicker;                              // 0x01B8(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UScriptStruct*>                  m_ProvidedData;                                    // 0x01F0(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)

public:
	class FString GetSlotEditorDesc(const struct FAnimSequencePickerSlotInstance& _condition);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSequencePickerContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSequencePickerContainer")
	}
	static class UAnimSequencePickerContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSequencePickerContainer>();
	}
};
DUMPER7_ASSERTS_UAnimSequencePickerContainer;

// Class SCCore.SCAISystem
// 0x0000 (0x01A0 - 0x01A0)
class USCAISystem final : public UAISystem
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAISystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAISystem")
	}
	static class USCAISystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAISystem>();
	}
};
DUMPER7_ASSERTS_USCAISystem;

// Class SCCore.AnimSequencePickerContainerReference
// 0x0008 (0x0148 - 0x0140)
class UAnimSequencePickerContainerReference : public UAnimSequencePickerSlotContainer
{
public:
	TSubclassOf<class UAnimSequencePickerContainer> m_Picker;                                        // 0x0140(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class FString GetSlotEditorDesc(const struct FAnimSequencePickerSlotInstance& _condition);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSequencePickerContainerReference")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSequencePickerContainerReference")
	}
	static class UAnimSequencePickerContainerReference* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSequencePickerContainerReference>();
	}
};
DUMPER7_ASSERTS_UAnimSequencePickerContainerReference;

// Class SCCore.AnimSequencePickerHelpers
// 0x0000 (0x0028 - 0x0028)
class UAnimSequencePickerHelpers final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_MakeAnimSequencePickerInstance(TSubclassOf<class UAnimSequencePicker> _animSequencePicker, struct FAnimSequencePickerInstance* _instance);
	static void BPF_PickAnimSequence(const struct FAnimSequencePickerInstance& _instance, const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _playerContext, class UBasicMontagePlayerConfiguration* _montageConfiguration, struct FAnimSequencePlayInfos* _outSequenceInfos, bool _bPrintDebug, class UObject* _debugObject);
	static void BPF_PickSlotAnimSequence(TSubclassOf<class UAnimSequencePickerSlotContainer> _picker, const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _playerContext, class FName _slot, class UBasicMontagePlayerConfiguration* _montageConfiguration, struct FAnimSequencePlayInfos* _outSequenceInfos, bool _bPrintDebug, class UObject* _debugObject);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSequencePickerHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSequencePickerHelpers")
	}
	static class UAnimSequencePickerHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSequencePickerHelpers>();
	}
};
DUMPER7_ASSERTS_UAnimSequencePickerHelpers;

// Class SCCore.SCAIComponent
// 0x0028 (0x00E0 - 0x00B8)
class USCAIComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x28];                                      // 0x00B8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAIComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAIComponent")
	}
	static class USCAIComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAIComponent>();
	}
};
DUMPER7_ASSERTS_USCAIComponent;

// Class SCCore.AnimSequencePlayInfosHelpers
// 0x0000 (0x0028 - 0x0028)
class UAnimSequencePlayInfosHelpers final : public UBlueprintFunctionLibrary
{
public:
	static bool BPF_GetSnapInfoFromAnimSequencePlayInfos(const struct FAnimSequencePlayInfos& _playInfos, struct FAnimSequenceSnapInfos* _outSnapInfos);
	static bool BPF_GetSnapPredictionFromAnimSequencePlayInfos(const struct FAnimSequencePlayInfos& _playInfos, struct FAnimSequenceSnapPrediction* _outSnapPrediction);
	static bool BPF_GetStartDirectionFromAnimSequencePlayInfos(const struct FAnimSequencePlayInfos& _playInfos, struct FVector* _outStartDirection);
	static void BPF_SetAnimSequencePlayInfosStartDirection(const struct FVector& _vStartDirection, struct FAnimSequencePlayInfos& _playInfos);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSequencePlayInfosHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSequencePlayInfosHelpers")
	}
	static class UAnimSequencePlayInfosHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSequencePlayInfosHelpers>();
	}
};
DUMPER7_ASSERTS_UAnimSequencePlayInfosHelpers;

// Class SCCore.BaseAnimSnapWeightEvaluation
// 0x0000 (0x0030 - 0x0030)
class UBaseAnimSnapWeightEvaluation : public UTargetWeightEvaluation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseAnimSnapWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseAnimSnapWeightEvaluation")
	}
	static class UBaseAnimSnapWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseAnimSnapWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UBaseAnimSnapWeightEvaluation;

// Class SCCore.SCCameraManualService
// 0x00D8 (0x0120 - 0x0048)
class USCCameraManualService : public USCCameraService
{
public:
	struct FGameplayTagQuery                      m_OwnerGameplayTagRequirement;                     // 0x0048(0x0048)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         Pad_90[0x90];                                      // 0x0090(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float BPF_GetDurationSinceLastInput() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraManualService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraManualService")
	}
	static class USCCameraManualService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraManualService>();
	}
};
DUMPER7_ASSERTS_USCCameraManualService;

// Class SCCore.AnimSnapCropWeightEvaluation
// 0x0010 (0x0040 - 0x0030)
class UAnimSnapCropWeightEvaluation final : public UBaseAnimSnapWeightEvaluation
{
public:
	float                                         m_fMaxCropDuration;                                // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fWeightMultiplier;                               // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bClamp;                                          // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSnapCropWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSnapCropWeightEvaluation")
	}
	static class UAnimSnapCropWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSnapCropWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UAnimSnapCropWeightEvaluation;

// Class SCCore.AnimSnapStretchWeightEvaluation
// 0x0010 (0x0040 - 0x0030)
class UAnimSnapStretchWeightEvaluation final : public UBaseAnimSnapWeightEvaluation
{
public:
	struct FFloatInterval                         m_StretchRange;                                    // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bClamp;                                          // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fWeightMultiplier;                               // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSnapStretchWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSnapStretchWeightEvaluation")
	}
	static class UAnimSnapStretchWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSnapStretchWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UAnimSnapStretchWeightEvaluation;

// Class SCCore.SCAIMoveToTarget
// 0x0000 (0x02B0 - 0x02B0)
class ASCAIMoveToTarget final : public AActor
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAIMoveToTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAIMoveToTarget")
	}
	static class ASCAIMoveToTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCAIMoveToTarget>();
	}
};
DUMPER7_ASSERTS_ASCAIMoveToTarget;

// Class SCCore.AnimSnapLocoDurationWeightEvaluation
// 0x0010 (0x0040 - 0x0030)
class UAnimSnapLocoDurationWeightEvaluation final : public UBaseAnimSnapWeightEvaluation
{
public:
	float                                         m_fMaxLocoDuration;                                // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bClamp;                                          // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fWeightMultiplier;                               // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSnapLocoDurationWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSnapLocoDurationWeightEvaluation")
	}
	static class UAnimSnapLocoDurationWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSnapLocoDurationWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UAnimSnapLocoDurationWeightEvaluation;

// Class SCCore.AsyncImage
// 0x00B0 (0x0450 - 0x03A0)
class UAsyncImage final : public UImage
{
public:
	TMulticastInlineDelegate<void(class UAsyncImage* _image)> OnLoadingStarted;                      // 0x03A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UAsyncImage* _image)> OnLoadingCanceled;                     // 0x03B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UAsyncImage* _image)> OnLoaded;                              // 0x03C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              m_AsyncAsset;                                      // 0x03D0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fApparitionDuration;                             // 0x03F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      m_AsyncMaterial;                                   // 0x0400(0x0028)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bMatchSize;                                      // 0x0428(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bHideOnLoadStart;                                // 0x0429(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_42A[0x26];                                     // 0x042A(0x0026)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_Clear();
	void BPF_LoadMaterialAssetAsync(TSoftObjectPtr<class UMaterialInterface> _asset);
	void BPF_LoadTextureAssetAsync(TSoftObjectPtr<class UTexture2D> _asset, bool _bMatchSize, int32 _iQueueID, bool _bForce);
	void BPF_SetMaterial(class UMaterialInterface* _asset);
	void BPF_SetTexture(class UTexture2D* _asset, bool _bMatchSize);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncImage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncImage")
	}
	static class UAsyncImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncImage>();
	}
};
DUMPER7_ASSERTS_UAsyncImage;

// Class SCCore.SelfCondition
// 0x0010 (0x0038 - 0x0028)
class USelfCondition final : public UBaseActorTargetCondition
{
public:
	struct FBaseActorConditionInstance            m_Condition;                                       // 0x0028(0x0010)(Edit, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SelfCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SelfCondition")
	}
	static class USelfCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<USelfCondition>();
	}
};
DUMPER7_ASSERTS_USelfCondition;

// Class SCCore.AsyncTaskBlend
// 0x0040 (0x0070 - 0x0030)
class UAsyncTaskBlend final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(float _fNewValue)> OnValueUpdate;                                  // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x30];                                      // 0x0040(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAsyncTaskBlend* BPF_AsyncAngleBlend(class UObject* _owner, float& _fInOutValue, float _fDuration, float _fTarget, ESCBlendType _eBlendType, class UCurveFloat* _blendCurve, class UAsyncTaskBlend** _task, bool _bUpdateRefValue);
	static void BPF_Stop(class UAsyncTaskBlend* _blend);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncTaskBlend")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncTaskBlend")
	}
	static class UAsyncTaskBlend* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncTaskBlend>();
	}
};
DUMPER7_ASSERTS_UAsyncTaskBlend;

// Class SCCore.TargetPicker
// 0x0000 (0x0028 - 0x0028)
class UTargetPicker : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetPicker")
	}
	static class UTargetPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetPicker>();
	}
};
DUMPER7_ASSERTS_UTargetPicker;

// Class SCCore.SiblingInvalidateTargetsPicker
// 0x0020 (0x0048 - 0x0028)
class USiblingInvalidateTargetsPicker final : public UTargetPicker
{
public:
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0028(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetDataConditionInstance           m_SiblingCondition;                                // 0x0038(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SiblingInvalidateTargetsPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SiblingInvalidateTargetsPicker")
	}
	static class USiblingInvalidateTargetsPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<USiblingInvalidateTargetsPicker>();
	}
};
DUMPER7_ASSERTS_USiblingInvalidateTargetsPicker;

// Class SCCore.MenuAsyncActionBase
// 0x0050 (0x0080 - 0x0030)
class UMenuAsyncActionBase : public UBlueprintAsyncActionBase
{
public:
	uint8                                         Pad_30[0x50];                                      // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_Cancel();
	void OnCurrentMenuChanged(TSubclassOf<class USCMenuWidget> _ePrevMenu, TSubclassOf<class USCMenuWidget> _eNewMenu);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MenuAsyncActionBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MenuAsyncActionBase")
	}
	static class UMenuAsyncActionBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuAsyncActionBase>();
	}
};
DUMPER7_ASSERTS_UMenuAsyncActionBase;

// Class SCCore.AsyncTaskPlayAnimation
// 0x0010 (0x0090 - 0x0080)
class alignas(0x10) UAsyncTaskPlayAnimation final : public UMenuAsyncActionBase
{
public:
	TMulticastInlineDelegate<void()>              OnFinished;                                        // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UAsyncTaskPlayAnimation* BPF_PlayTransitionAnimationAsync(class UObject* _menu, class UWidgetAnimation* _inAnimation, EUMGSequencePlayMode _ePlayMode);

	void OnTransitionFinished(class USCMenuWidget* _menu);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncTaskPlayAnimation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncTaskPlayAnimation")
	}
	static class UAsyncTaskPlayAnimation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncTaskPlayAnimation>();
	}
};
DUMPER7_ASSERTS_UAsyncTaskPlayAnimation;

// Class SCCore.BasicAnimSequencePicker
// 0x0130 (0x01D0 - 0x00A0)
class UBasicAnimSequencePicker : public UAnimSequencePicker
{
public:
	struct FAnimSequencePlayInfos                 m_AnimSequenceInfos;                               // 0x00A0(0x0130)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BasicAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BasicAnimSequencePicker")
	}
	static class UBasicAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBasicAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UBasicAnimSequencePicker;

// Class SCCore.AsyncTaskTagChanged
// 0x0068 (0x0098 - 0x0030)
class UAsyncTaskTagChanged final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void()>              OnTagBegin;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTagUpdate;                                       // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTagEnd;                                          // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAbilitySystemComponent*                m_ASC;                                             // 0x0060(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_68[0x30];                                      // 0x0068(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAsyncTaskTagChanged* ListenForTagsChange(class UAbilitySystemComponent* _abilitySystemComponent, const struct FGameplayTagContainer& _tags);

	void EndTask();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncTaskTagChanged")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncTaskTagChanged")
	}
	static class UAsyncTaskTagChanged* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncTaskTagChanged>();
	}
};
DUMPER7_ASSERTS_UAsyncTaskTagChanged;

// Class SCCore.ScaleSnapComputation
// 0x0030 (0x00A8 - 0x0078)
class UScaleSnapComputation final : public USnapAnimationComputation
{
public:
	float                                         m_fSnapDistanceScoreCost;                          // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         m_iNumDistIterations;                              // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         m_iNumDurationIterations;                          // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatInterval                         m_SnapDistanceStretchBounds;                       // 0x0084(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fSnapDurationScoreCost;                          // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatInterval                         m_SpeedCorrectionRatioBounds;                      // 0x0090(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fSpeedCorrectionRatioScoreCost;                  // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USnapAnimationComputation*              m_NextStepIfNeeded;                                // 0x00A0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScaleSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScaleSnapComputation")
	}
	static class UScaleSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScaleSnapComputation>();
	}
};
DUMPER7_ASSERTS_UScaleSnapComputation;

// Class SCCore.AsyncTaskTick
// 0x0040 (0x00C0 - 0x0080)
class alignas(0x10) UAsyncTaskTick final : public UMenuAsyncActionBase
{
public:
	uint8                                         Pad_80[0x18];                                      // 0x0080(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UAsyncTaskTick* _task, float _fDeltaTime, float _fProgress, float _fTotalTime)> OnTick; // 0x0098(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UAsyncTaskTick* _task, float _fDeltaTime, float _fProgress, float _fTotalTime)> OnFinished; // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAsyncTaskTick* BPF_Tick(class UAsyncTaskTick* _existingTask, class UObject* _menu, float _fFrequency, float _fDuration);

	void BPF_Stop();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncTaskTick")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncTaskTick")
	}
	static class UAsyncTaskTick* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncTaskTick>();
	}
};
DUMPER7_ASSERTS_UAsyncTaskTick;

// Class SCCore.OperationTargetWeightEvaluation
// 0x0018 (0x0048 - 0x0030)
class UOperationTargetWeightEvaluation final : public UTargetWeightEvaluation
{
public:
	EWeightOperator                               m_eOperator;                                       // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FOperationTargetWeightElem>     m_SubEvaluations;                                  // 0x0038(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("OperationTargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"OperationTargetWeightEvaluation")
	}
	static class UOperationTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOperationTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UOperationTargetWeightEvaluation;

// Class SCCore.AsyncTaskWait
// 0x0010 (0x0090 - 0x0080)
class alignas(0x10) UAsyncTaskWait final : public UMenuAsyncActionBase
{
public:
	TMulticastInlineDelegate<void()>              OnFinished;                                        // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UAsyncTaskWait* BPF_Wait(class UObject* _menu, float _fDuration);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncTaskWait")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncTaskWait")
	}
	static class UAsyncTaskWait* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncTaskWait>();
	}
};
DUMPER7_ASSERTS_UAsyncTaskWait;

// Class SCCore.AsyncTask_WatchInput
// 0x0078 (0x00A8 - 0x0030)
class UAsyncTask_WatchInput final : public UBlueprintAsyncActionBase
{
public:
	class USCInputAction*                         m_InputAction;                                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FInputActionState& _state)> m_WhileActivated;         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FInputActionState& _state)> m_OnStartActivate;        // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FInputActionState& _state)> m_OnStopActivate;         // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(const struct FInputActionState& _state)> m_OnTaskEndWhileActivated; // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_78[0x30];                                      // 0x0078(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAsyncTask_WatchInput* BPF_WatchInputActivation(class ASCBasePlayerController* _PlayerController, class USCInputAction* _inputAction);

	void EndTask();
	void OnActionActivateOrDeactivate(const class USCInputAction* _inputAction, const struct FInputActionState& _inputActionState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncTask_WatchInput")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncTask_WatchInput")
	}
	static class UAsyncTask_WatchInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncTask_WatchInput>();
	}
};
DUMPER7_ASSERTS_UAsyncTask_WatchInput;

// Class SCCore.TriggerConditionTargetsPicker
// 0x0010 (0x0038 - 0x0028)
class UTriggerConditionTargetsPicker final : public UTargetPicker
{
public:
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0028(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TriggerConditionTargetsPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TriggerConditionTargetsPicker")
	}
	static class UTriggerConditionTargetsPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTriggerConditionTargetsPicker>();
	}
};
DUMPER7_ASSERTS_UTriggerConditionTargetsPicker;

// Class SCCore.AttributeSetContainer
// 0x0000 (0x0000 - 0x0000)
class IAttributeSetContainer final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AttributeSetContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AttributeSetContainer")
	}
	static class IAttributeSetContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<IAttributeSetContainer>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IAttributeSetContainer;

// Class SCCore.BestSnapLocationPredictionSnapComputation
// 0x0018 (0x0090 - 0x0078)
class UBestSnapLocationPredictionSnapComputation final : public USnapAnimationComputation
{
public:
	bool                                          m_bUseNotifyDurationAsPredictionDuration;          // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fPredictionDuration;                             // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fMinSnapDuration;                                // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         m_iSamplePerSec;                                   // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USnapAnimationComputation*              m_NextStep;                                        // 0x0088(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BestSnapLocationPredictionSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BestSnapLocationPredictionSnapComputation")
	}
	static class UBestSnapLocationPredictionSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBestSnapLocationPredictionSnapComputation>();
	}
};
DUMPER7_ASSERTS_UBestSnapLocationPredictionSnapComputation;

// Class SCCore.AvailabilityTagsGameplayEffectComponent
// 0x0010 (0x0038 - 0x0028)
class UAvailabilityTagsGameplayEffectComponent final : public UGameplayEffectComponent
{
public:
	struct FTagAvailabilityLayerContainerInstance m_AvailabilityTags;                                // 0x0028(0x0010)(Edit, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AvailabilityTagsGameplayEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AvailabilityTagsGameplayEffectComponent")
	}
	static class UAvailabilityTagsGameplayEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvailabilityTagsGameplayEffectComponent>();
	}
};
DUMPER7_ASSERTS_UAvailabilityTagsGameplayEffectComponent;

// Class SCCore.SCActivatableWidget
// 0x0008 (0x04E0 - 0x04D8)
class USCActivatableWidget : public UCommonActivatableWidget
{
public:
	EMouseCaptureMode                             GameMouseCaptureMode;                              // 0x04D8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCActivatableWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCActivatableWidget")
	}
	static class USCActivatableWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCActivatableWidget>();
	}
};
DUMPER7_ASSERTS_USCActivatableWidget;

// Class SCCore.SCUserWidget
// 0x0710 (0x0BF0 - 0x04E0)
class USCUserWidget : public USCActivatableWidget
{
public:
	bool                                          m_bUseCustomNavigation;                            // 0x04E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseFocusStateBrush;                             // 0x04E1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E2[0xE];                                      // 0x04E2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            m_DefaultStateBrush;                               // 0x04F0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            m_MouseOverStateBrush;                             // 0x05C0(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            m_FocusStateBrush;                                 // 0x0690(0x00D0)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            m_CurrentStateBrush;                               // 0x0760(0x00D0)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              m_OnVisible;                                       // 0x0830(0x0010)(Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              m_OnHidden;                                        // 0x0840(0x0010)(Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, class USCUserWidget* _previousWidget)> m_OnSelect; // 0x0850(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget)> m_OnDeselect;                       // 0x0860(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, EUINavigation _eNavigation)> m_OnNavigation; // 0x0870(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, EFocusCause _eCause)> m_OnFocusReceived; // 0x0880(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, EFocusCause _eCause)> m_OnFocusLost; // 0x0890(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, const class USCInputAction* _inputAction, const struct FInputActionState& _listenerState)> m_OnActionPressed; // 0x08A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TDelegate<void(class USCUserWidget* _widget, EUINavigation _eNavigation)> m_OnNavigation_Bindable; // 0x08B0(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class USCUserWidget* _widget, EFocusCause _eCause)> m_OnFocusReceived_Bindable;   // 0x08C0(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class USCUserWidget* _widget, EFocusCause _eCause)> m_OnFocusLost_Bindable;       // 0x08D0(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              m_ActiveVisibility;                                // 0x08E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8E1[0x7];                                      // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetData*                            m_Data;                                            // 0x08E8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UWidgetData>                m_DataClass;                                       // 0x08F0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESlateVisibility                              m_eControllerInputModeVisibility;                  // 0x08F8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESlateVisibility                              m_eMouseInputModeVisibility;                       // 0x08F9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUpdateOnControllerTypeChanged;                  // 0x08FA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bGiveFocusIfNeededWithKeyboard;                  // 0x08FB(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bSelectOnNavigationFocus;                        // 0x08FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bFocusOnMouseHover;                              // 0x08FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bLoseFocusOnMouseLeave;                          // 0x08FE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESlateVisibility                              m_eSelectedVisibility;                             // 0x08FF(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESlateVisibility                              m_eDeselectedVisibility;                           // 0x0900(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESlateVisibility                              m_eMouseOverVisibility;                            // 0x0901(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESlateVisibility                              m_eMouseOutVisibility;                             // 0x0902(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bOnGiveFocusButtonOnly;                          // 0x0903(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bNotifyPawnChanged;                              // 0x0904(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bNotifyUIInputModeChanged;                       // 0x0905(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_906[0x2];                                      // 0x0906(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_OnHoverTag;                                      // 0x0908(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_OnFocusTag;                                      // 0x0910(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsMouseHover;                                   // 0x0918(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsSelected;                                     // 0x0919(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bListenToPawnInputComponent;                     // 0x091A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_91B[0x5];                                      // 0x091B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class USCInputAction*, struct FSCMenuActionInstance> m_MenuActionList;                      // 0x0920(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class USCInputAction*, struct FSCMenuActionInstance> m_MenuActions;                         // 0x0970(0x0050)(Edit, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_9C0[0x8];                                      // 0x09C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ULocalWidgetContextViewModel*           m_LocalContextViewModel;                           // 0x09C8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9D0[0x3];                                      // 0x09D0(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bForceGamepadUI;                                 // 0x09D3(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TDelegate<void()>                             m_GetDataDelegate;                                 // 0x09D4(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TDelegate<void(class USCUserWidget* _widget)> m_InitializeDelegate;                              // 0x09E4(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9F4[0x4];                                      // 0x09F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                m_FocusTargetOverride;                             // 0x09F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCGameFlowSubsystem*                   m_OwningGameFlowSubsystem;                         // 0x0A00(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class USCInputAction*, struct FSCMenuActionWidgetContext> m_menuActionContexts;             // 0x0A08(0x0050)(BlueprintVisible, BlueprintReadOnly, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, struct FSCWidgetComponentInstance> m_ComponentClasses;                         // 0x0A58(0x0050)(Edit, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FSCWidgetComponentInstance> m_Components;                               // 0x0AA8(0x0050)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class USCWidgetComponent*>             m_OwnedComponents;                                 // 0x0AF8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	bool                                          m_bUpdateDataOnVisible;                            // 0x0B08(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B09[0x7];                                      // 0x0B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class USCInputAction*, int32>            m_InputActionToListenerArrayIndex;                 // 0x0B10(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B60[0x10];                                     // 0x0B60(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class USCInputAction*, int32>            m_InputActionToListenerId_MenuAction;              // 0x0B70(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_BC0[0x20];                                     // 0x0BC0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCActiveHoldMenuAction>        m_ActiveHoldActions;                               // 0x0BE0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

public:
	static class UMVVMViewModelBase* BPF_GetGlobalViewModelInstance(const class UObject* _worldContextObject, TSubclassOf<class UMVVMViewModelBase> _class, class FName _contextName);

	void BPE_BindToDelegates(bool _bPawnOnly);
	class UWidgetData* BPE_CreateData();
	void BPE_NotifyWidgetEvent(const struct FGameplayTag& _tag, const struct FGameplayAbilityTargetDataHandle& _dataHandle);
	void BPE_OnActionPressed(const class USCInputAction* _action, const struct FInputActionState& _listenerState);
	void BPE_OnCinematicFinished(const class ASCLevelSequenceActor* _sequenceActor);
	void BPE_OnCinematicStarted(const class ASCLevelSequenceActor* _sequenceActor);
	void BPE_OnCultureChanged();
	void BPE_OnDataUpdated();
	void BPE_OnDeselected();
	void BPE_OnGetFromPool();
	void BPE_OnHidden();
	void BPE_OnReturnToPool();
	void BPE_OnSelected();
	void BPE_OnSynchronizeProperties();
	void BPE_OnUIInputModeChanged(EUIInputModes _eMode, bool _bInit);
	void BPE_OnViewModelPropertySet(class USCViewModel* _viewModel);
	void BPE_OnVisible();
	void BPE_UnbindFromDelegates();
	void BPF_ComputeMenuActionContexts(bool _Recursive);
	class UWidgetData* BPF_GetData();
	bool BPF_GetIsSelected();
	class USCUISettings* BPF_GetUISettings();
	void BPF_ListenInputAction(class USCInputAction* _inAction, EInputWatchTrigger _eWatchTrigger, bool _bPassive, bool _bConsume, TDelegate<void(const class USCInputAction* _inputAction, const struct FInputActionState& _listenerState)> _callback, int32 _iPriority);
	void BPF_NotifyDataUpdated();
	void BPF_NotifyDataUpdatedToChildren(class UPanelWidget* _root);
	void BPF_NotifyWidgetEvent(const struct FGameplayTag& _tag, const struct FGameplayAbilityTargetDataHandle& _dataHandle);
	void BPF_PlayAnimationFromCurrentTime(class UWidgetAnimation* _inAnimation, int32 _iNumLoopsToPlay, EUMGSequencePlayMode _ePlayMode);
	void BPF_RefreshMenuActionContext();
	void BPF_RefreshParentMenuFocus();
	void BPF_RegisterMenuAction(class USCInputAction* _inputAction, class USCMenuAction* _menuAction);
	void BPF_SetData(class UWidgetData* _data);
	void BPF_SetSelected(bool _bSelected, bool _bForce);
	void BPF_StopListeningInputAction(class USCInputAction* _inAction, EInputWatchTrigger _eWatchTrigger, TDelegate<void(const class USCInputAction* _inputAction, const struct FInputActionState& _listenerState)> _callback);
	void OnDataUpdated();

	class FText BPE_GetMenuActionNameOverride(const class USCInputAction* _action) const;
	bool BPE_ShouldDisableMenuAction(const class USCInputAction* _action) const;
	bool BPE_ShouldHideMenuAction(const class USCInputAction* _action) const;
	bool BPE_ShouldRefreshMenuActionContextOnFocusChange() const;
	bool BPF_CheckControllerHasAnyFocus() const;
	class USCAbilitySystemComponent* BPF_GetAbilitySystemComponent() const;
	class ASCCharacter* BPF_GetCharacter() const;
	class USCWidgetComponent* BPF_GetComponentByClass(TSubclassOf<class USCWidgetComponent> _class) const;
	class UWorld* BPF_GetCurrentWorld() const;
	struct FInputActionState BPF_GetInputActionState(const class USCInputAction* _inAction) const;
	int32 BPF_GetLocalPlayerIndex() const;
	class UCommonActivatableWidgetContainerBase* BPF_GetParentLayerWidget() const;
	class USCMenuWidget* BPF_GetParentRootMenuWidget() const;
	class USCUserWidget* BPF_GetParentRootWidget() const;
	class ASCBasePlayerController* BPF_GetPlayerController() const;
	EUIInputModes BPF_GetUIInputMode() const;
	bool BPF_IsCursorNavigationEnabled() const;
	bool BPF_IsInVisibleLayer() const;
	bool BPF_IsLayerCurrentActiveWidget() const;
	bool BPF_IsVisibleInTree() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCUserWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCUserWidget")
	}
	static class USCUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCUserWidget>();
	}
};
DUMPER7_ASSERTS_USCUserWidget;

// Class SCCore.HUDUserWidget
// 0x0090 (0x0C80 - 0x0BF0)
#pragma pack(push, 0x1)
class alignas(0x10) UHUDUserWidget : public USCUserWidget
{
public:
	bool                                          m_bVisibleWithMenus;                               // 0x0BF0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class USCMenuWidget>>      m_HideWithMenus;                                   // 0x0BF8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          m_bSearchMenusInStack;                             // 0x0C08(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bVisibleInTraining;                              // 0x0C09(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bVisibleInTrainingOnly;                          // 0x0C0A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C0B[0x5];                                      // 0x0C0B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        m_WidgetsToOffset;                                 // 0x0C10(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_C20[0x58];                                     // 0x0C20(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_VisibilityChangedFromMenu(ESlateVisibility _eNewVibility);
	void BPF_UpdateHUDOffset();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HUDUserWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HUDUserWidget")
	}
	static class UHUDUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUDUserWidget>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UHUDUserWidget;

// Class SCCore.BlueprintActorCondition
// 0x0000 (0x0028 - 0x0028)
class UBlueprintActorCondition : public UBaseActorCondition
{
public:
	bool BPE_Evaluate(const class AActor* _actor) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlueprintActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlueprintActorCondition")
	}
	static class UBlueprintActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintActorCondition>();
	}
};
DUMPER7_ASSERTS_UBlueprintActorCondition;

// Class SCCore.BaseActorConditionHelpers
// 0x0000 (0x0028 - 0x0028)
class UBaseActorConditionHelpers final : public UBlueprintFunctionLibrary
{
public:
	static bool BPF_Evaluate(const struct FBaseActorConditionInstance& _instance, class AActor* _actor, bool _bDefaultResult);
	static class UObject* BPF_GetInstance(const struct FBaseActorConditionInstance& _instance);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseActorConditionHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseActorConditionHelpers")
	}
	static class UBaseActorConditionHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseActorConditionHelpers>();
	}
};
DUMPER7_ASSERTS_UBaseActorConditionHelpers;

// Class SCCore.ConditionalAnimSequencePicker
// 0x0050 (0x00F0 - 0x00A0)
class UConditionalAnimSequencePicker final : public UAnimSequencePicker
{
public:
	bool                                          m_bContinueAfterInvalidAnim;                       // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bDrawDebug;                                      // 0x00A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAnimSequencePickerPerCondition> m_AnimSequencePickers;                            // 0x00A8(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAnimSequencePickerInstance            m_DefaultPicker;                                   // 0x00B8(0x0038)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConditionalAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConditionalAnimSequencePicker")
	}
	static class UConditionalAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConditionalAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UConditionalAnimSequencePicker;

// Class SCCore.InverseActorCondition
// 0x0010 (0x0038 - 0x0028)
class UInverseActorCondition final : public UBaseActorCondition
{
public:
	struct FBaseActorConditionInstance            m_Condition;                                       // 0x0028(0x0010)(Edit, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InverseActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InverseActorCondition")
	}
	static class UInverseActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInverseActorCondition>();
	}
};
DUMPER7_ASSERTS_UInverseActorCondition;

// Class SCCore.RedirectToTargetDirSnapComputation
// 0x0010 (0x0088 - 0x0078)
class URedirectToTargetDirSnapComputation final : public USnapAnimationComputation
{
public:
	class USnapAnimationComputation*              m_NextStep;                                        // 0x0078(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bInverse;                                        // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RedirectToTargetDirSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RedirectToTargetDirSnapComputation")
	}
	static class URedirectToTargetDirSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<URedirectToTargetDirSnapComputation>();
	}
};
DUMPER7_ASSERTS_URedirectToTargetDirSnapComputation;

// Class SCCore.AbilityTask_ActorCondition
// 0x0010 (0x00D0 - 0x00C0)
class UAbilityTask_ActorCondition final : public UAbilityTask_EvaluateCondition
{
public:
	struct FBaseActorConditionInstance            m_Condition;                                       // 0x00C0(0x0010)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UAbilityTask_ActorCondition* BPF_EvaluateOverTime(class UGameplayAbility* _owningAbility, const struct FBaseActorConditionInstance& _condition, bool _bInitialStateValid);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_ActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_ActorCondition")
	}
	static class UAbilityTask_ActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_ActorCondition>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_ActorCondition;

// Class SCCore.AnimSequencePickerContextMetadata
// 0x0040 (0x00E0 - 0x00A0)
class UAnimSequencePickerContextMetadata final : public UAnimSequencePicker
{
public:
	class UAnimationPickerMetaData*               m_Metadata;                                        // 0x00A0(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAnimSequencePickerInstance            m_AnimSequencePicker;                              // 0x00A8(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSequencePickerContextMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSequencePickerContextMetadata")
	}
	static class UAnimSequencePickerContextMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSequencePickerContextMetadata>();
	}
};
DUMPER7_ASSERTS_UAnimSequencePickerContextMetadata;

// Class SCCore.BaseTargetActorConditionHelpers
// 0x0000 (0x0028 - 0x0028)
class UBaseTargetActorConditionHelpers final : public UBlueprintFunctionLibrary
{
public:
	static bool BPF_Evaluate(const struct FBaseActorTargetConditionInstance& _instance, class AActor* _actor, class AActor* _target, bool _bDefaultResult);
	static class UObject* BPF_GetInstance(const struct FBaseActorTargetConditionInstance& _instance);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BaseTargetActorConditionHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BaseTargetActorConditionHelpers")
	}
	static class UBaseTargetActorConditionHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseTargetActorConditionHelpers>();
	}
};
DUMPER7_ASSERTS_UBaseTargetActorConditionHelpers;

// Class SCCore.InverseActorTargetCondition
// 0x0010 (0x0038 - 0x0028)
class UInverseActorTargetCondition final : public UBaseActorTargetCondition
{
public:
	struct FBaseActorTargetConditionInstance      m_Condition;                                       // 0x0028(0x0010)(Edit, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InverseActorTargetCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InverseActorTargetCondition")
	}
	static class UInverseActorTargetCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInverseActorTargetCondition>();
	}
};
DUMPER7_ASSERTS_UInverseActorTargetCondition;

// Class SCCore.GameplayTask_WaitGameplayTagAdded
// 0x0060 (0x00E0 - 0x0080)
class UGameplayTask_WaitGameplayTagAdded final : public UGameplayTask
{
public:
	TMulticastInlineDelegate<void()>              Added;                                             // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_90[0x50];                                      // 0x0090(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UGameplayTask_WaitGameplayTagAdded* BPF_TaskWaitAnyGameplayTagAdded(TScriptInterface<class IGameplayTaskOwnerInterface> _container, class UAbilitySystemComponent* _taskOwner, const struct FGameplayTagContainer& _tags, bool _bWaitForEndOfFrame, bool _bTestInitialPresenceOfTags);
	static class UGameplayTask_WaitGameplayTagAdded* BPF_TaskWaitGameplayTagAdded(TScriptInterface<class IGameplayTaskOwnerInterface> _container, class UAbilitySystemComponent* _taskOwner, const struct FGameplayTag& _tag, bool _bWaitForEndOfFrame, bool _bTestInitialPresenceOfTags);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayTask_WaitGameplayTagAdded")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayTask_WaitGameplayTagAdded")
	}
	static class UGameplayTask_WaitGameplayTagAdded* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTask_WaitGameplayTagAdded>();
	}
};
DUMPER7_ASSERTS_UGameplayTask_WaitGameplayTagAdded;

// Class SCCore.BlueprintTargetActorCondition
// 0x0000 (0x0028 - 0x0028)
class UBlueprintTargetActorCondition final : public UBaseActorTargetCondition
{
public:
	bool BPE_Evaluate(const class AActor* _actor, const class AActor* _target) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlueprintTargetActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlueprintTargetActorCondition")
	}
	static class UBlueprintTargetActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintTargetActorCondition>();
	}
};
DUMPER7_ASSERTS_UBlueprintTargetActorCondition;

// Class SCCore.MovieSceneBinkMediaTrack
// 0x0018 (0x00B0 - 0x0098)
class UMovieSceneBinkMediaTrack final : public UMovieSceneNameableTrack
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieSceneSection*>             MediaSections;                                     // 0x00A0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneBinkMediaTrack")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneBinkMediaTrack")
	}
	static class UMovieSceneBinkMediaTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneBinkMediaTrack>();
	}
};
DUMPER7_ASSERTS_UMovieSceneBinkMediaTrack;

// Class SCCore.EventBinderHelper
// 0x0000 (0x0028 - 0x0028)
class UEventBinderHelper final : public UBlueprintFunctionLibrary
{
public:
	static class UEventBinder* BPF_CreateAndBind(class UObject* _outer, const struct FEventBinderInstance& _template, const TDelegate<void(const struct FGameplayAbilityTargetDataHandle& _targetDataHandle)>& _onTriggeredCallback, const struct FGameplayAbilityTargetDataHandle& _targetDataHandle);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EventBinderHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EventBinderHelper")
	}
	static class UEventBinderHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventBinderHelper>();
	}
};
DUMPER7_ASSERTS_UEventBinderHelper;

// Class SCCore.IsCurrentMontageMirroredAnimSequencePicker
// 0x0070 (0x0110 - 0x00A0)
class UIsCurrentMontageMirroredAnimSequencePicker final : public UAnimSequencePicker
{
public:
	struct FAnimSequencePickerInstance            m_MirrorPicker;                                    // 0x00A0(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAnimSequencePickerInstance            m_DefaultPicker;                                   // 0x00D8(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IsCurrentMontageMirroredAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IsCurrentMontageMirroredAnimSequencePicker")
	}
	static class UIsCurrentMontageMirroredAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIsCurrentMontageMirroredAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UIsCurrentMontageMirroredAnimSequencePicker;

// Class SCCore.TargetDataConditionWithWeightEvaluation
// 0x0000 (0x0078 - 0x0078)
class UTargetDataConditionWithWeightEvaluation : public UTargetDataCondition
{
public:
	bool BPF_EvaluateWeight(const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _handle, float* _fOutWeight) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataConditionWithWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataConditionWithWeightEvaluation")
	}
	static class UTargetDataConditionWithWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDataConditionWithWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UTargetDataConditionWithWeightEvaluation;

// Class SCCore.TargetDataConditionHelpers
// 0x0000 (0x0028 - 0x0028)
class UTargetDataConditionHelpers final : public UBlueprintFunctionLibrary
{
public:
	static bool BPF_Evaluate(const struct FTargetDataConditionInstance& _instance, class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _handle, bool _bDefaultResult);
	static class UObject* BPF_GetInstance(const struct FTargetDataConditionInstance& _instance);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataConditionHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataConditionHelpers")
	}
	static class UTargetDataConditionHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDataConditionHelpers>();
	}
};
DUMPER7_ASSERTS_UTargetDataConditionHelpers;

// Class SCCore.AngleAnimationPicker
// 0x0018 (0x00B8 - 0x00A0)
class UAngleAnimationPicker final : public UAnimSequencePicker
{
public:
	EAngleAnimationPickerType                     m_eComputation;                                    // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAngleAnimationPicker_PickerPerAngleRange> m_PerAngleRangeAnimationPicker;         // 0x00A8(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AngleAnimationPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AngleAnimationPicker")
	}
	static class UAngleAnimationPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAngleAnimationPicker>();
	}
};
DUMPER7_ASSERTS_UAngleAnimationPicker;

// Class SCCore.InverseTargetDataCondition
// 0x0010 (0x0088 - 0x0078)
class UInverseTargetDataCondition final : public UTargetDataCondition
{
public:
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0078(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InverseTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InverseTargetDataCondition")
	}
	static class UInverseTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInverseTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UInverseTargetDataCondition;

// Class SCCore.SCHUDLayout
// 0x0030 (0x0C20 - 0x0BF0)
class USCHUDLayout final : public USCUserWidget
{
public:
	TSoftClassPtr<class UClass>                   EscapeMenuClass;                                   // 0x0BF0(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C18[0x8];                                      // 0x0C18(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCHUDLayout")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCHUDLayout")
	}
	static class USCHUDLayout* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCHUDLayout>();
	}
};
DUMPER7_ASSERTS_USCHUDLayout;

// Class SCCore.NamedFloatTargetDataCondition
// 0x0028 (0x00A0 - 0x0078)
class UNamedFloatTargetDataCondition final : public UTargetDataCondition
{
public:
	struct FGameplayTag                           m_Name;                                            // 0x0078(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCMathExpressionFloat                 m_MathExpression;                                  // 0x0080(0x0020)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NamedFloatTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NamedFloatTargetDataCondition")
	}
	static class UNamedFloatTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNamedFloatTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UNamedFloatTargetDataCondition;

// Class SCCore.TargetRelativeLocationAnimSequencePicker
// 0x00B0 (0x0150 - 0x00A0)
class UTargetRelativeLocationAnimSequencePicker final : public UAnimSequencePicker
{
public:
	struct FOnDemandTargetProvider                m_UseCustomDatasource;                             // 0x00A0(0x0058)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<ESCAdvancedCardinalPoints, struct FAnimSequencePickerInstance> m_PickerPerCardinal;         // 0x00F8(0x0050)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	ESCAdvancedCardinalPoints                     m_eDefaultCardinal;                                // 0x0148(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FManifestItem                          m_ConditionOnManifestItem;                         // 0x014C(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetRelativeLocationAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetRelativeLocationAnimSequencePicker")
	}
	static class UTargetRelativeLocationAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetRelativeLocationAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UTargetRelativeLocationAnimSequencePicker;

// Class SCCore.NamedBoolTargetDataCondition
// 0x0010 (0x0088 - 0x0078)
class UNamedBoolTargetDataCondition final : public UTargetDataCondition
{
public:
	struct FGameplayTag                           m_Name;                                            // 0x0078(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bValueToTestAgainst;                             // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bDefaultValue;                                   // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NamedBoolTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NamedBoolTargetDataCondition")
	}
	static class UNamedBoolTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNamedBoolTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UNamedBoolTargetDataCondition;

// Class SCCore.FilterTargetDataCondition
// 0x0010 (0x0088 - 0x0078)
class UFilterTargetDataCondition final : public UTargetDataCondition
{
public:
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0078(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FilterTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FilterTargetDataCondition")
	}
	static class UFilterTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFilterTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UFilterTargetDataCondition;

// Class SCCore.AnimSequencePickerFromContext
// 0x0000 (0x00A0 - 0x00A0)
class UAnimSequencePickerFromContext final : public UAnimSequencePicker
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSequencePickerFromContext")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSequencePickerFromContext")
	}
	static class UAnimSequencePickerFromContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSequencePickerFromContext>();
	}
};
DUMPER7_ASSERTS_UAnimSequencePickerFromContext;

// Class SCCore.TargetDataGroupCondition
// 0x0018 (0x0090 - 0x0078)
class UTargetDataGroupCondition : public UTargetDataConditionWithWeightEvaluation
{
public:
	EConditionGroupOperators                      m_eOperator;                                       // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTargetDataConditionInstance>   m_Conditions;                                      // 0x0080(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataGroupCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataGroupCondition")
	}
	static class UTargetDataGroupCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDataGroupCondition>();
	}
};
DUMPER7_ASSERTS_UTargetDataGroupCondition;

// Class SCCore.MovieSceneLightingChannelSection
// 0x0330 (0x0420 - 0x00F0)
class UMovieSceneLightingChannelSection final : public UMovieSceneSection
{
public:
	uint8                                         Pad_F0[0x8];                                       // 0x00F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneLightingChannelMask         ChannelMask;                                       // 0x00F8(0x0004)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneBoolChannel                 Channels[0x3];                                     // 0x0100(0x0108)(NativeAccessSpecifierPrivate)
	class UMovieSceneSectionChannelOverrideRegistry* OverrideRegistry;                               // 0x0418(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneLightingChannelSection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneLightingChannelSection")
	}
	static class UMovieSceneLightingChannelSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneLightingChannelSection>();
	}
};
DUMPER7_ASSERTS_UMovieSceneLightingChannelSection;

// Class SCCore.TargetDataTagCondition
// 0x0048 (0x00C0 - 0x0078)
class UTargetDataTagCondition final : public UTargetDataCondition
{
public:
	struct FGameplayTagQuery                      m_Query;                                           // 0x0078(0x0048)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataTagCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataTagCondition")
	}
	static class UTargetDataTagCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDataTagCondition>();
	}
};
DUMPER7_ASSERTS_UTargetDataTagCondition;

// Class SCCore.InputCardinalAnimSequencePicker
// 0x00B8 (0x0158 - 0x00A0)
class UInputCardinalAnimSequencePicker final : public UAnimSequencePicker
{
public:
	bool                                          m_bUseWorldLocation;                               // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseCharacterVelocity;                           // 0x00A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESCAdvancedCardinalPoints                     m_eCardinalFallback;                               // 0x00A2(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESCAdvancedCardinalPoints, struct FAnimSequencePickerInstance> m_PickerPerCardinal;         // 0x00A8(0x0050)(Deprecated, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FCardinalAnimSequenceData              m_Data;                                            // 0x00F8(0x0058)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                          m_bAreDataDeprecated;                              // 0x0150(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputCardinalAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputCardinalAnimSequencePicker")
	}
	static class UInputCardinalAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputCardinalAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UInputCardinalAnimSequencePicker;

// Class SCCore.TargetDataContainerCondition
// 0x0020 (0x0098 - 0x0078)
class UTargetDataContainerCondition : public UTargetDataCondition
{
public:
	TArray<class UScriptStruct*>                  m_ProvidedStructs;                                 // 0x0078(0x0010)(Edit, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0088(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataContainerCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataContainerCondition")
	}
	static class UTargetDataContainerCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDataContainerCondition>();
	}
};
DUMPER7_ASSERTS_UTargetDataContainerCondition;

// Class SCCore.MontagePlayerRedirection
// 0x0000 (0x0028 - 0x0028)
class UMontagePlayerRedirection : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MontagePlayerRedirection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MontagePlayerRedirection")
	}
	static class UMontagePlayerRedirection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMontagePlayerRedirection>();
	}
};
DUMPER7_ASSERTS_UMontagePlayerRedirection;

// Class SCCore.InputConditionProxy
// 0x0008 (0x0030 - 0x0028)
class UInputConditionProxy : public UObject
{
public:
	TSubclassOf<class UInputConditionData>        m_Class;                                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputConditionProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputConditionProxy")
	}
	static class UInputConditionProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputConditionProxy>();
	}
};
DUMPER7_ASSERTS_UInputConditionProxy;

// Class SCCore.GenericInputConditionProxy
// 0x0010 (0x0040 - 0x0030)
class UGenericInputConditionProxy final : public UInputConditionProxy
{
public:
	TArray<struct FInputMappingKeySlotContainer>  m_Slots;                                           // 0x0030(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GenericInputConditionProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GenericInputConditionProxy")
	}
	static class UGenericInputConditionProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGenericInputConditionProxy>();
	}
};
DUMPER7_ASSERTS_UGenericInputConditionProxy;

// Class SCCore.RedirectToTarget
// 0x0060 (0x0088 - 0x0028)
class URedirectToTarget final : public UMontagePlayerRedirection
{
public:
	struct FOnDemandTargetProvider                m_OptTargetProvider;                               // 0x0028(0x0058)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSubclassOf<class UMontagePlayerRedirection>  m_Fallback;                                        // 0x0080(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RedirectToTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RedirectToTarget")
	}
	static class URedirectToTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<URedirectToTarget>();
	}
};
DUMPER7_ASSERTS_URedirectToTarget;

// Class SCCore.BasicMontagePlayerConfiguration
// 0x0050 (0x0080 - 0x0030)
class UBasicMontagePlayerConfiguration : public UDataAsset
{
public:
	bool                                          m_bHasLoaded;                                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bStartFromCurrentAbilityMontageTime;             // 0x0031(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStartTimeOption                              m_eStartTimeOption;                                // 0x0032(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_StartTimeNamedFloat;                             // 0x0034(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAllowToStartAt0AsFallback;                      // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOverrideBlendInDuration;                        // 0x003D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fBlendInOverrideDuration;                        // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMontagePlayerRedirectionInstance      m_Redirection;                                     // 0x0048(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	ESCBlendType                                  m_eRedirectionBlendType;                           // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fRedirectionDuration;                            // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_TargetBoneForProgressiveRedirectionWay;          // 0x0060(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAxis                                         m_eTargetBoneRotationAxis;                         // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_RedirectionBlendCurve;                           // 0x0070(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseInputDirection;                              // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bGetFromContext;                                 // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMontagePlayerRedirection                     m_eRedirectionFallback;                            // 0x007A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMinRequiredSpeed;                               // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BasicMontagePlayerConfiguration")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BasicMontagePlayerConfiguration")
	}
	static class UBasicMontagePlayerConfiguration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBasicMontagePlayerConfiguration>();
	}
};
DUMPER7_ASSERTS_UBasicMontagePlayerConfiguration;

// Class SCCore.ApplyAnimationMirrorFromTargetData
// 0x0050 (0x00F0 - 0x00A0)
class UApplyAnimationMirrorFromTargetData final : public UAnimSequencePicker
{
public:
	bool                                          m_bInvert;                                         // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePickerInstance            m_AnimPicker;                                      // 0x00A8(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FManifestItem                          m_ConditionOnManifestItem;                         // 0x00E0(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_TargetDataTag;                                   // 0x00E4(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsUsingManifest() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ApplyAnimationMirrorFromTargetData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ApplyAnimationMirrorFromTargetData")
	}
	static class UApplyAnimationMirrorFromTargetData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UApplyAnimationMirrorFromTargetData>();
	}
};
DUMPER7_ASSERTS_UApplyAnimationMirrorFromTargetData;

// Class SCCore.SCBaseAnimationMetadata
// 0x0038 (0x0060 - 0x0028)
class USCBaseAnimationMetadata : public UAnimMetaData
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMandatoryNotifyHandler                m_NotifyHandler;                                   // 0x0048(0x0010)(NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool ShouldShowEndNotify(const struct FMandatoryNotifyInfos& _infos);
	static bool ShouldShowEndRelativeToNotifyEnd(const struct FMandatoryNotifyInfos& _infos);
	static bool ShouldShowNotifyEndTime(const struct FMandatoryNotifyInfos& _infos);
	static bool ShouldShowStartNotify(const struct FMandatoryNotifyInfos& _infos);
	static bool ShouldShowStartRelativeToNotifyEnd(const struct FMandatoryNotifyInfos& _infos);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBaseAnimationMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBaseAnimationMetadata")
	}
	static class USCBaseAnimationMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBaseAnimationMetadata>();
	}
};
DUMPER7_ASSERTS_USCBaseAnimationMetadata;

// Class SCCore.SCAnimationMetadata
// 0x0350 (0x03B0 - 0x0060)
class USCAnimationMetadata : public USCBaseAnimationMetadata
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedPropertyBag                  m_ExposedParameters;                               // 0x0068(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UScriptStruct*                          m_DataTableRowType;                                // 0x0078(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    m_DataTableRow;                                    // 0x0080(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    m_GlobalDataTableRow;                              // 0x0090(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bEnableIK;                                       // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       m_IKComputation;                                   // 0x00A8(0x0010)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bEnableIkBlending;                               // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatDataBinding                      m_fIkFullWeightDuration;                           // 0x00C0(0x0048)(Edit, NativeAccessSpecifierPublic)
	ESCBlendType                                  m_eIkBlendInType;                                  // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatDataBinding                      m_fIkBlendInDuration;                              // 0x0110(0x0048)(Edit, NativeAccessSpecifierPublic)
	ESCBlendType                                  m_eIkBlendOutType;                                 // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatDataBinding                      m_fIkBlendOutDuration;                             // 0x0160(0x0048)(Edit, NativeAccessSpecifierPublic)
	class UAnimationModifierComputation*          m_CustomSnapComputation;                           // 0x01A8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSimulatedAfterSnapCatchupDuration;              // 0x01B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseCustomDirectionAngleAxis;                    // 0x01B4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fCustomDirectionAngleAxis;                       // 0x01B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseCustomAnimDuration;                          // 0x01BC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntDataBinding                        m_CustomAnimDurationToMoveInterrupt;               // 0x01C0(0x0048)(Edit, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UAnimNotifyState>, struct FIntDataBinding> m_NotifyStateStretchFrameBinding; // 0x0208(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UTimeStretchNotify>, struct FIntDataBinding> m_NotifyStretchFrameBinding; // 0x0258(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UFreezeFrameMontageNotify>, struct FIntDataBinding> m_NotifyFreezeFrameBinding; // 0x02A8(0x0050)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FTimeStretchAnimationModifier>  m_TimeStretchAnimationModifierBinding;             // 0x02F8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UTimeStretchComputation*>        m_TimeStretchCustomComputation;                    // 0x0308(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FInt32Interval>                 m_UnstretchableFrameRange;                         // 0x0318(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMontagePoseModifier*>           m_PoseModifiers;                                   // 0x0328(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class USCRootMotionModifier*>          m_RootMotionModifiers;                             // 0x0338(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FMandatoryNotifyInfos>          m_MandatoryNotifies;                               // 0x0348(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	EAnimInstanceType                             m_ePlayOnAnimInstanceType;                         // 0x0358(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bExtractCameraShake;                             // 0x0359(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAxis                                         m_eSnapAxis;                                       // 0x035A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_35B[0x55];                                     // 0x035B(0x0055)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class FString GetEditorDesc(const struct FMandatoryNotifyInfos& _reaction);

	class UScriptStruct* GetCustomDataTableStruct() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAnimationMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAnimationMetadata")
	}
	static class USCAnimationMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAnimationMetadata>();
	}
};
DUMPER7_ASSERTS_USCAnimationMetadata;

// Class SCCore.TargetSideAnimSequencePicker
// 0x0108 (0x01A8 - 0x00A0)
class UTargetSideAnimSequencePicker final : public UAnimSequencePicker
{
public:
	bool                                          m_bProjectSnapResult;                              // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseMirroredLeftSideForRight;                    // 0x00A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePickerInstance            m_LeftSide;                                        // 0x00A8(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAnimSequencePickerInstance            m_RightSide;                                       // 0x00E0(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                          m_bUseCenterPicker;                                // 0x0118(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECenterComputationType                        m_eCenterComputation;                              // 0x0119(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fHalfAngleToComputeCenter;                       // 0x011C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fHalfWidthToComputeCenter;                       // 0x0120(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePickerInstance            m_NorthCenterPicker;                               // 0x0128(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                          m_bUseSouthCenterPicker;                           // 0x0160(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePickerInstance            m_SouthCenterPicker;                               // 0x0168(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FManifestItem                          m_ConditionOnManifestItem;                         // 0x01A0(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetSideAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetSideAnimSequencePicker")
	}
	static class UTargetSideAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetSideAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UTargetSideAnimSequencePicker;

// Class SCCore.PlayMontageAnimationMetadata
// 0x0008 (0x03B8 - 0x03B0)
class UPlayMontageAnimationMetadata : public USCAnimationMetadata
{
public:
	class UBasicMontagePlayerConfiguration*       m_PlayMontageConfiguration;                        // 0x03B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayMontageAnimationMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayMontageAnimationMetadata")
	}
	static class UPlayMontageAnimationMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayMontageAnimationMetadata>();
	}
};
DUMPER7_ASSERTS_UPlayMontageAnimationMetadata;

// Class SCCore.TargetDataOutputReceiver
// 0x0000 (0x0000 - 0x0000)
class ITargetDataOutputReceiver final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataOutputReceiver")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataOutputReceiver")
	}
	static class ITargetDataOutputReceiver* GetDefaultObj()
	{
		return GetDefaultObjImpl<ITargetDataOutputReceiver>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ITargetDataOutputReceiver;

// Class SCCore.CombinationInputConditionData
// 0x0028 (0x00A0 - 0x0078)
class UCombinationInputConditionData : public UInputConditionData
{
public:
	bool                                          m_bResetChildHoldToggleOnActivation;               // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCombinationInput>              m_IncludedInputs;                                  // 0x0080(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCombinationInput>              m_ExcludedInputs;                                  // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CombinationInputConditionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CombinationInputConditionData")
	}
	static class UCombinationInputConditionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCombinationInputConditionData>();
	}
};
DUMPER7_ASSERTS_UCombinationInputConditionData;

// Class SCCore.BehaviourCombinationInputData
// 0x0010 (0x00B0 - 0x00A0)
class UBehaviourCombinationInputData final : public UCombinationInputConditionData
{
public:
	struct FInputBehaviourStruct                  m_BehaviourStruct;                                 // 0x00A0(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BehaviourCombinationInputData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BehaviourCombinationInputData")
	}
	static class UBehaviourCombinationInputData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBehaviourCombinationInputData>();
	}
};
DUMPER7_ASSERTS_UBehaviourCombinationInputData;

// Class SCCore.VectorInputConditionData
// 0x00B0 (0x0128 - 0x0078)
class UVectorInputConditionData : public UInputConditionData
{
public:
	struct FRuntimeFloatCurve                     m_ResetInputScaleOverTime;                         // 0x0078(0x0088)(Edit, NativeAccessSpecifierPublic)
	float                                         m_fInnerBound;                                     // 0x0100(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fOuterBound;                                     // 0x0104(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bBoundPerAxis;                                   // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_Curve;                                           // 0x0110(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkewData*                              m_SkewData;                                        // 0x0118(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bInvertXAxis;                                    // 0x0120(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bInvertYAxis;                                    // 0x0121(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bInvertAxises;                                   // 0x0122(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bDebugIsXAxisVertical;                           // 0x0123(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bNoInputTreatment;                               // 0x0124(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VectorInputConditionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VectorInputConditionData")
	}
	static class UVectorInputConditionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVectorInputConditionData>();
	}
};
DUMPER7_ASSERTS_UVectorInputConditionData;

// Class SCCore.TargetDatasource
// 0x0038 (0x0080 - 0x0048)
class UTargetDatasource : public UTargetDataNodalObject
{
public:
	uint8                                         Pad_48[0x38];                                      // 0x0048(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDatasource")
	}
	static class UTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UTargetDatasource;

// Class SCCore.ParentTargetDatasource
// 0x0048 (0x00C8 - 0x0080)
class UParentTargetDatasource : public UTargetDatasource
{
public:
	struct FTargetDatasourceInstance              m_ParentDatasource;                                // 0x0080(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ParentTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ParentTargetDatasource")
	}
	static class UParentTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UParentTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UParentTargetDatasource;

// Class SCCore.IntermediateDatasource
// 0x0020 (0x00E8 - 0x00C8)
class UIntermediateDatasource : public UParentTargetDatasource
{
public:
	struct FTargetDataManifestInstance            m_TargetDataManifest;                              // 0x00C8(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FInstancedPropertyBag                  m_Parameters;                                      // 0x00D8(0x0010)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IntermediateDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IntermediateDatasource")
	}
	static class UIntermediateDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIntermediateDatasource>();
	}
};
DUMPER7_ASSERTS_UIntermediateDatasource;

// Class SCCore.DebugBreakDatasource
// 0x0000 (0x00E8 - 0x00E8)
class UDebugBreakDatasource final : public UIntermediateDatasource
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DebugBreakDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DebugBreakDatasource")
	}
	static class UDebugBreakDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDebugBreakDatasource>();
	}
};
DUMPER7_ASSERTS_UDebugBreakDatasource;

// Class SCCore.BehaviourVectorInputConditionData
// 0x0010 (0x0138 - 0x0128)
class UBehaviourVectorInputConditionData final : public UVectorInputConditionData
{
public:
	struct FInputBehaviourStruct                  m_BehaviourStruct;                                 // 0x0128(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bConsiderChangingValueAsNewPress;                // 0x0134(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BehaviourVectorInputConditionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BehaviourVectorInputConditionData")
	}
	static class UBehaviourVectorInputConditionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBehaviourVectorInputConditionData>();
	}
};
DUMPER7_ASSERTS_UBehaviourVectorInputConditionData;

// Class SCCore.TargetDataManifest
// 0x0028 (0x0050 - 0x0028)
class UTargetDataManifest : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTargetDataManifestDeclaration> m_RequiredTargetDataTypes;                         // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static void BPF_InitTargetDataFromManifest(class UClass* _manifestClass, int32 _iID, const struct FGameplayAbilityTargetDataHandle& _in, struct FGameplayAbilityTargetDataHandle* _out);
	static void GetManifestTargetData(TSubclassOf<class UObject> _manifest, const struct FGameplayAbilityTargetDataHandle& _in, struct FGameplayAbilityTargetDataHandle* _out);
	static void GetOutputTargetData(TSubclassOf<class UObject> _object, const struct FGameplayAbilityTargetDataHandle& _in, struct FGameplayAbilityTargetDataHandle* _out);
	static void MakeManifestTargetData(TSubclassOf<class UObject> _manifest, const struct FGameplayAbilityTargetDataHandle& _in, struct FGameplayAbilityTargetDataHandle* _out, const struct FGameplayAbilityTargetDataHandle& _context);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataManifest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataManifest")
	}
	static class UTargetDataManifest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDataManifest>();
	}
};
DUMPER7_ASSERTS_UTargetDataManifest;

// Class SCCore.ActorLocationTargetDataManifest
// 0x0000 (0x0050 - 0x0050)
class UActorLocationTargetDataManifest final : public UTargetDataManifest
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorLocationTargetDataManifest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorLocationTargetDataManifest")
	}
	static class UActorLocationTargetDataManifest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorLocationTargetDataManifest>();
	}
};
DUMPER7_ASSERTS_UActorLocationTargetDataManifest;

// Class SCCore.AsyncTextureBinding
// 0x0000 (0x0070 - 0x0070)
class UAsyncTextureBinding final : public UPropertyBinding
{
public:
	struct FAsyncTextureStruct GetValue() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AsyncTextureBinding")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AsyncTextureBinding")
	}
	static class UAsyncTextureBinding* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncTextureBinding>();
	}
};
DUMPER7_ASSERTS_UAsyncTextureBinding;

// Class SCCore.BindableAsyncImage
// 0x0080 (0x0408 - 0x0388)
class UBindableAsyncImage final : public UUserWidget
{
public:
	class UAsyncImage*                            m_AsyncImage;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAsyncTextureStruct                    AsyncTexture;                                      // 0x0390(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TDelegate<void()>                             AsyncTextureDelegate;                              // 0x03B8(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C8[0x40];                                     // 0x03C8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BindableAsyncImage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BindableAsyncImage")
	}
	static class UBindableAsyncImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindableAsyncImage>();
	}
};
DUMPER7_ASSERTS_UBindableAsyncImage;

// Class SCCore.TargetingHelper
// 0x0000 (0x0028 - 0x0028)
class UTargetingHelper final : public UBlueprintFunctionLibrary
{
public:
	static class FString GetEditorDesc(const struct FTargetDatasourceInstance& _instance);
	static class FString GetGenericTargetProviderEditorDesc(const struct FLatentTargetProvider& _instance, int64 _iPropertyPtr);

	class FString GetOnDemandTargetProviderEditorDesc(const struct FOnDemandTargetProvider& _instance, int64 _iPropertyPtr);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetingHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetingHelper")
	}
	static class UTargetingHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetingHelper>();
	}
};
DUMPER7_ASSERTS_UTargetingHelper;

// Class SCCore.BindableMaterialWidget
// 0x0050 (0x0C40 - 0x0BF0)
class UBindableMaterialWidget final : public USCUserWidget
{
public:
	class UMaterialInstanceDynamic*               m_MaterialInstance;                                // 0x0BF0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_FloatParameterName;                              // 0x0BF8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FloatValue;                                        // 0x0C00(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TDelegate<void()>                             FloatValueDelegate;                                // 0x0C04(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C14[0x2C];                                     // 0x0C14(0x002C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetMaterialInstance(class UMaterialInstanceDynamic* _materialInstance);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BindableMaterialWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BindableMaterialWidget")
	}
	static class UBindableMaterialWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindableMaterialWidget>();
	}
};
DUMPER7_ASSERTS_UBindableMaterialWidget;

// Class SCCore.ActorsByClassDatasource
// 0x0030 (0x00B0 - 0x0080)
class UActorsByClassDatasource final : public UTargetDatasource
{
public:
	bool                                          m_bIgnoreSelf;                                     // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   m_ActorClass;                                      // 0x0088(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorsByClassDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorsByClassDatasource")
	}
	static class UActorsByClassDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorsByClassDatasource>();
	}
};
DUMPER7_ASSERTS_UActorsByClassDatasource;

// Class SCCore.BindablePropertyBase
// 0x0038 (0x0060 - 0x0028)
class UBindablePropertyBase : public UObject
{
public:
	TMulticastInlineDelegate<void(class UBindablePropertyBase* _property)> m_OnUpdateFromModel;      // 0x0028(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UBindablePropertyBase* _property)> m_OnPropertyUpdate;       // 0x0038(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UBindablePropertyBase* _property)> m_OnPropertyPreUpdate;    // 0x0048(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetOwner(class UObject* _owner);

	bool BPF_IsValid() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BindablePropertyBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BindablePropertyBase")
	}
	static class UBindablePropertyBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindablePropertyBase>();
	}
};
DUMPER7_ASSERTS_UBindablePropertyBase;

// Class SCCore.BindableFloatProperty
// 0x0008 (0x0068 - 0x0060)
class UBindableFloatProperty final : public UBindablePropertyBase
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetRef(float& _fValue);
	void BPF_SetValue(float _fValue);

	float BPF_GetValue() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BindableFloatProperty")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BindableFloatProperty")
	}
	static class UBindableFloatProperty* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindableFloatProperty>();
	}
};
DUMPER7_ASSERTS_UBindableFloatProperty;

// Class SCCore.MergeTargetDatasource
// 0x0018 (0x0098 - 0x0080)
class UMergeTargetDatasource final : public UTargetDatasource
{
public:
	TArray<struct FTargetDatasourceInstance>      m_Datasources;                                     // 0x0080(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bIgnoreTargetDataNotFind;                        // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MergeTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MergeTargetDatasource")
	}
	static class UMergeTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMergeTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UMergeTargetDatasource;

// Class SCCore.BindableEnumProperty
// 0x0008 (0x0068 - 0x0060)
class UBindableEnumProperty final : public UBindablePropertyBase
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetRef(uint8& _uiValue);
	void BPF_SetValue(uint8 _uiValue);

	uint8 BPF_GetValue() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BindableEnumProperty")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BindableEnumProperty")
	}
	static class UBindableEnumProperty* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindableEnumProperty>();
	}
};
DUMPER7_ASSERTS_UBindableEnumProperty;

// Class SCCore.TargetLocationCondition
// 0x0028 (0x00A0 - 0x0078)
class UTargetLocationCondition final : public UTargetDataCondition
{
public:
	bool                                          m_bUseFeetLocation;                                // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_DistanceRange;                                   // 0x007C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatRange                            m_HeightRange;                                     // 0x008C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetLocationCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetLocationCondition")
	}
	static class UTargetLocationCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetLocationCondition>();
	}
};
DUMPER7_ASSERTS_UTargetLocationCondition;

// Class SCCore.BindableBoolProperty
// 0x0008 (0x0068 - 0x0060)
class UBindableBoolProperty final : public UBindablePropertyBase
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetRef(bool& _bValue);
	void BPF_SetValue(bool _bValue);

	bool BPF_GetValue() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BindableBoolProperty")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BindableBoolProperty")
	}
	static class UBindableBoolProperty* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindableBoolProperty>();
	}
};
DUMPER7_ASSERTS_UBindableBoolProperty;

// Class SCCore.PickerTargetDatasource
// 0x0010 (0x00D8 - 0x00C8)
class UPickerTargetDatasource final : public UParentTargetDatasource
{
public:
	struct FTargetPickerInstance                  m_TargetPicker;                                    // 0x00C8(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PickerTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PickerTargetDatasource")
	}
	static class UPickerTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPickerTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UPickerTargetDatasource;

// Class SCCore.BindableStringProperty
// 0x0008 (0x0068 - 0x0060)
class UBindableStringProperty final : public UBindablePropertyBase
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetRef(class FString& _Value);
	void BPF_SetValue(const class FString& _Value);

	class FString BPF_GetValue() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BindableStringProperty")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BindableStringProperty")
	}
	static class UBindableStringProperty* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindableStringProperty>();
	}
};
DUMPER7_ASSERTS_UBindableStringProperty;

// Class SCCore.BindableIntProperty
// 0x0008 (0x0068 - 0x0060)
class UBindableIntProperty : public UBindablePropertyBase
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetRef(int32& _iValue);
	void BPF_SetValue(int32 _iValue);

	int32 BPF_GetValue() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BindableIntProperty")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BindableIntProperty")
	}
	static class UBindableIntProperty* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindableIntProperty>();
	}
};
DUMPER7_ASSERTS_UBindableIntProperty;

// Class SCCore.BindableFlagProperty
// 0x0000 (0x0068 - 0x0068)
class UBindableFlagProperty final : public UBindableIntProperty
{
public:
	void BPF_AddFlags(int32 _iFlags);
	void BPF_RemoveFlags(int32 _iFlags);

	bool BPF_HasAllFlags(int32 _iFlags) const;
	bool BPF_HasAnyFlags(int32 _iFlags) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BindableFlagProperty")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BindableFlagProperty")
	}
	static class UBindableFlagProperty* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindableFlagProperty>();
	}
};
DUMPER7_ASSERTS_UBindableFlagProperty;

// Class SCCore.SCWindDirectionalSource
// 0x0030 (0x02E8 - 0x02B8)
class ASCWindDirectionalSource final : public AWindDirectionalSource
{
public:
	class UMaterialParameterCollection*           m_MPC;                                             // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_windDirectionName;                               // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_windSpeedName;                                   // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_windMinGustName;                                 // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_windMaxGustName;                                 // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWindDirectionalSource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWindDirectionalSource")
	}
	static class ASCWindDirectionalSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCWindDirectionalSource>();
	}
};
DUMPER7_ASSERTS_ASCWindDirectionalSource;

// Class SCCore.BindablePropertyUserWidget
// 0x0040 (0x0C30 - 0x0BF0)
class UBindablePropertyUserWidget final : public USCUserWidget
{
public:
	TDelegate<void()>                             m_OnInputUpdate;                                   // 0x0BF0(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              m_OnPropertyUpdated;                               // 0x0C00(0x0010)(Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bSelfBindingProperty;                            // 0x0C10(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bConstructProperty;                              // 0x0C11(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C12[0x6];                                      // 0x0C12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UBindablePropertyBase>      m_PropertyClass;                                   // 0x0C18(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_PropertyName;                                    // 0x0C20(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBindablePropertyBase*                  m_Property;                                        // 0x0C28(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BPE_OnSelfBinding();
	void BPF_CreateProperty();
	void BPF_OnInputUpdate();
	void BPF_RefreshDisplay();
	void OnPropertyUpdated(class UBindablePropertyBase* _property);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BindablePropertyUserWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BindablePropertyUserWidget")
	}
	static class UBindablePropertyUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindablePropertyUserWidget>();
	}
};
DUMPER7_ASSERTS_UBindablePropertyUserWidget;

// Class SCCore.IgnoreTargetWhenAvailableNextFrameDatasource
// 0x0038 (0x0100 - 0x00C8)
class UIgnoreTargetWhenAvailableNextFrameDatasource final : public UParentTargetDatasource
{
public:
	struct FTargetDataConditionInstance           m_CurrentFrameExtraCondition;                      // 0x00C8(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetDataConditionInstance           m_NextFrameExtraCondition;                         // 0x00D8(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bNextFrameShouldBeValid;                         // 0x00E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFilterTargetDatasource_FailureBehavior       m_eBehavior;                                       // 0x00E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_ApplyTagOnSuccess;                               // 0x00EC(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_ApplyTagOnFailure;                               // 0x00F4(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IgnoreTargetWhenAvailableNextFrameDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IgnoreTargetWhenAvailableNextFrameDatasource")
	}
	static class UIgnoreTargetWhenAvailableNextFrameDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIgnoreTargetWhenAvailableNextFrameDatasource>();
	}
};
DUMPER7_ASSERTS_UIgnoreTargetWhenAvailableNextFrameDatasource;

// Class SCCore.BindableTargetTagsGameplayEffectComponent
// 0x0048 (0x0070 - 0x0028)
class UBindableTargetTagsGameplayEffectComponent final : public UGameplayEffectComponent
{
public:
	struct FGameplayTagContainerDataBinding       m_GrantedTagContainer;                             // 0x0028(0x0048)(Edit, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BindableTargetTagsGameplayEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BindableTargetTagsGameplayEffectComponent")
	}
	static class UBindableTargetTagsGameplayEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBindableTargetTagsGameplayEffectComponent>();
	}
};
DUMPER7_ASSERTS_UBindableTargetTagsGameplayEffectComponent;

// Class SCCore.BinderDynamicBinding
// 0x0050 (0x0078 - 0x0028)
class UBinderDynamicBinding final : public UDynamicBlueprintBinding
{
public:
	TMap<int32, class FName>                      m_Mappings;                                        // 0x0028(0x0050)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BinderDynamicBinding")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BinderDynamicBinding")
	}
	static class UBinderDynamicBinding* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBinderDynamicBinding>();
	}
};
DUMPER7_ASSERTS_UBinderDynamicBinding;

// Class SCCore.BinderConditionComponent
// 0x0040 (0x00F8 - 0x00B8)
class UBinderConditionComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& _gameplayAbilityTargetDataHandle, const struct FGameplayTag& _binderConditionID)> OnBinderTriggeredEvent; // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              m_PreActiveConditions;                             // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FBinderInstanceWithTarget>      m_BinderConditions;                                // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_F0[0x8];                                       // 0x00F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnBinderTriggered(const struct FGameplayAbilityTargetDataHandle& _gameplayAbilityTargetDataHandle, const struct FGameplayTag& _binderConditionID);
	void BPF_SetDeferredTarget(const struct FGameplayTag& _deferredTargetID, class AActor* _binderTarget);
	void OnBinderConditionTriggered(const struct FGameplayAbilityTargetDataHandle& _gameplayAbilityTargetDataHandle, int32 _iBinderConditionID);

	class UBinderWithCondition* BPF_GetBinderWithConditionInstance(const struct FGameplayTag& _binderConditionID) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BinderConditionComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BinderConditionComponent")
	}
	static class UBinderConditionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBinderConditionComponent>();
	}
};
DUMPER7_ASSERTS_UBinderConditionComponent;

// Class SCCore.SCWorldNavSectorActor
// 0x0008 (0x02B8 - 0x02B0)
class ASCWorldNavSectorActor final : public AActor
{
public:
	class USCWorldNavSectorControllerComponent*   m_Controller;                                      // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldNavSectorActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldNavSectorActor")
	}
	static class ASCWorldNavSectorActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCWorldNavSectorActor>();
	}
};
DUMPER7_ASSERTS_ASCWorldNavSectorActor;

// Class SCCore.BinderWithCondition
// 0x00F8 (0x0120 - 0x0028)
class UBinderWithCondition final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       m_OverrideBinderTargetDataHandle;                  // 0x0048(0x0028)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAbilityTargetDataHandle       m_OverrideConditionTargetDataHandle;               // 0x0070(0x0028)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FEventBinderInstance                   m_Binder;                                          // 0x0098(0x0038)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTargetDataTypeFilter                  m_TargetDataFilter;                                // 0x00D0(0x0030)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTargetDataConditionInstance           m_ConditionInstance;                               // 0x0100(0x0010)(Edit, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_110[0x8];                                      // 0x0110(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventBinder*                           m_BinderInstanceHandle;                            // 0x0118(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static void BPF_SetBinderSimpleTarget(class UBinderWithCondition* _binderCondition, class AActor* _target);
	static void BPF_SetConditionSimpleTarget(class UBinderWithCondition* _binderCondition, class AActor* _target);

	void OnBinderTriggered(struct FGameplayAbilityTargetDataHandle* _eventData);
	void OnTargetDestroyed(class AActor* DestroyedActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BinderWithCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BinderWithCondition")
	}
	static class UBinderWithCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBinderWithCondition>();
	}
};
DUMPER7_ASSERTS_UBinderWithCondition;

// Class SCCore.GenericTargetDatasource
// 0x0028 (0x00A8 - 0x0080)
class UGenericTargetDatasource : public UTargetDatasource
{
public:
	struct FInstancedStruct                       m_TargetDataClass;                                 // 0x0080(0x0010)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bSetTargetAsContextActor;                        // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInstancedStruct>               m_TargetDatas;                                     // 0x0098(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GenericTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GenericTargetDatasource")
	}
	static class UGenericTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGenericTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UGenericTargetDatasource;

// Class SCCore.BlendableWidget
// 0x0060 (0x0C50 - 0x0BF0)
class UBlendableWidget final : public USCUserWidget
{
public:
	float                                         m_fBlendDuration;                                  // 0x0BF0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESCType                                       m_eBlendValueType;                                 // 0x0BF4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_BF5[0x3];                                      // 0x0BF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           m_ColorStart;                                      // 0x0BF8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                           m_ColorEnd;                                        // 0x0C08(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C18[0x38];                                     // 0x0C18(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BPF_BindMaterialParameterToBlendAlpha(class UMaterialParameterCollection* _collection, class FName _parameterName);
	void BPF_StartTimerBlend(bool _bReverse);

	struct FLinearColor BPF_GetBlendedColor() const;
	float BPF_GetBlendedFloat() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlendableWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlendableWidget")
	}
	static class UBlendableWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlendableWidget>();
	}
};
DUMPER7_ASSERTS_UBlendableWidget;

// Class SCCore.ButtonInputRegionWidget
// 0x0000 (0x0240 - 0x0240)
class UButtonInputRegionWidget final : public USpacer
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ButtonInputRegionWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ButtonInputRegionWidget")
	}
	static class UButtonInputRegionWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UButtonInputRegionWidget>();
	}
};
DUMPER7_ASSERTS_UButtonInputRegionWidget;

// Class SCCore.FilterTargetDatasource
// 0x0038 (0x0100 - 0x00C8)
class UFilterTargetDatasource final : public UParentTargetDatasource
{
public:
	EFilterTargetDatasource_FailureBehavior       m_eFailureBehavior;                                // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_ApplyTagOnSuccess;                               // 0x00CC(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_ApplyTagOnFailure;                               // 0x00D4(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIncludeContextToCondition;                      // 0x00DC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_Desc;                                            // 0x00E0(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x00F0(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FilterTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FilterTargetDatasource")
	}
	static class UFilterTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFilterTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UFilterTargetDatasource;

// Class SCCore.CaptureInputAction
// 0x01B0 (0x01E0 - 0x0030)
class UCaptureInputAction final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(const struct FInputMappingData& _result, ECaptureInputStep _newStep)> OnSuccess; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FInputMappingData& _result, ECaptureInputStep _newStep)> OnUpdate; // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FInputMappingData& _result, ECaptureInputStep _newStep)> OnStepStarted; // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancel;                                          // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x98];                                      // 0x0070(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputMappingWidgetData*                m_Data;                                            // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_110[0xD0];                                     // 0x0110(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCaptureInputAction* BPF_CaptureInput(const class UInputMappingWidgetData* _data, const struct FMappingID& _item, const struct FInputMappingData& _baseInputData, int32 _iSlodID, bool _bCaptureAxis, float _fMouseAxisThreshold, int32 _iControllerTypes, bool _bCancelOnInvalidControllerType, bool _bBreakDependency, bool _bInverseMouseVerticalAxis);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CaptureInputAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CaptureInputAction")
	}
	static class UCaptureInputAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCaptureInputAction>();
	}
};
DUMPER7_ASSERTS_UCaptureInputAction;

// Class SCCore.SCWorldNavTransitionActor
// 0x0010 (0x02C0 - 0x02B0)
class ASCWorldNavTransitionActor final : public AActor
{
public:
	class USCWorldNavTransitionControllerComponent* m_Controller;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCVolumePlayerPortalComponent*         m_PortalVolume;                                    // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldNavTransitionActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldNavTransitionActor")
	}
	static class ASCWorldNavTransitionActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCWorldNavTransitionActor>();
	}
};
DUMPER7_ASSERTS_ASCWorldNavTransitionActor;

// Class SCCore.CDOLink
// 0x0008 (0x0108 - 0x0100)
class UCDOLink final : public UNameSpacedUserData
{
public:
	class UClass*                                 Class_0;                                           // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void SetDataClass(class UClass* _dataAsset);

	class UClass* GetDataClass() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CDOLink")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CDOLink")
	}
	static class UCDOLink* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCDOLink>();
	}
};
DUMPER7_ASSERTS_UCDOLink;

// Class SCCore.UseDatasourceResultOnOtherDatasource
// 0x0090 (0x0110 - 0x0080)
class UUseDatasourceResultOnOtherDatasource final : public UTargetDatasource
{
public:
	struct FTargetDatasourceInstance              m_UsedResult;                                      // 0x0080(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetDatasourceInstance              m_OnDatasource;                                    // 0x00C8(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("UseDatasourceResultOnOtherDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"UseDatasourceResultOnOtherDatasource")
	}
	static class UUseDatasourceResultOnOtherDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUseDatasourceResultOnOtherDatasource>();
	}
};
DUMPER7_ASSERTS_UUseDatasourceResultOnOtherDatasource;

// Class SCCore.GameStateScopedEventBinder
// 0x0018 (0x00F8 - 0x00E0)
class UGameStateScopedEventBinder : public UEventBinder
{
public:
	uint8                                         Pad_E0[0x8];                                       // 0x00E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class APlayerState>            m_PlayerInvolved;                                  // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AGameStateBase>          m_GameState;                                       // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BPE_DisableFromGameState(class AGameStateBase* _gameState);
	void BPE_OnGameStateValid(class AGameStateBase* _gameState);
	void OnGameStateValid(class AGameStateBase* _gameState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameStateScopedEventBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameStateScopedEventBinder")
	}
	static class UGameStateScopedEventBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameStateScopedEventBinder>();
	}
};
DUMPER7_ASSERTS_UGameStateScopedEventBinder;

// Class SCCore.PlayerStateScopedEventBinder
// 0x0000 (0x00F8 - 0x00F8)
class UPlayerStateScopedEventBinder : public UGameStateScopedEventBinder
{
public:
	void OnPlayerStateRemoved(class APlayerState* _playerState);
	void OnPlayerStateValid(class APlayerState* _playerState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerStateScopedEventBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerStateScopedEventBinder")
	}
	static class UPlayerStateScopedEventBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerStateScopedEventBinder>();
	}
};
DUMPER7_ASSERTS_UPlayerStateScopedEventBinder;

// Class SCCore.BranchTargetWeightEvaluation
// 0x0030 (0x0060 - 0x0030)
class UBranchTargetWeightEvaluation final : public UTargetWeightEvaluation
{
public:
	struct FTargetWeightEvaluationInstance        m_TrueWeightEvaluation;                            // 0x0030(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetWeightEvaluationInstance        m_FalseWeightEvaluation;                           // 0x0040(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0050(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BranchTargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BranchTargetWeightEvaluation")
	}
	static class UBranchTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBranchTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UBranchTargetWeightEvaluation;

// Class SCCore.CharacterScopedEventBinder
// 0x0000 (0x00F8 - 0x00F8)
class UCharacterScopedEventBinder : public UPlayerStateScopedEventBinder
{
public:
	void OnCharacterValid(class APlayerState* _player, class APawn* _newPawn, class APawn* _oldPawn);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterScopedEventBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterScopedEventBinder")
	}
	static class UCharacterScopedEventBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterScopedEventBinder>();
	}
};
DUMPER7_ASSERTS_UCharacterScopedEventBinder;

// Class SCCore.SCWorldSettings
// 0x01F0 (0x06C8 - 0x04D8)
class ASCWorldSettings : public AWorldSettings
{
public:
	TArray<TSoftObjectPtr<class AActor>>          m_SpectatorViewTargets;                            // 0x04D8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          m_bUseLegacyCollisionSystem;                       // 0x04E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E9[0x3];                                      // 0x04E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_SlopeTargetDataTag;                              // 0x04EC(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_SpineTargetDataTag;                              // 0x04F4(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, TSubclassOf<class USCWorldSubsystem>> m_SubsystemsClasses;             // 0x0500(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FSCWorldSubsystemsCollection           m_Subsystems;                                      // 0x0550(0x00B8)(Protected, NativeAccessSpecifierProtected)
	struct FSCWorldSubsystemsCollection           m_DefaultSubsystems;                               // 0x0608(0x00B8)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_6C0[0x2];                                      // 0x06C0(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bOverrideAutoStartVisualLogger;                    // 0x06C2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAutoStartVisualLoggerAtLaunch;                    // 0x06C3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6C4[0x4];                                      // 0x06C4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldSettings")
	}
	static class ASCWorldSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCWorldSettings>();
	}
};
DUMPER7_ASSERTS_ASCWorldSettings;

// Class SCCore.CharacterGameplayAttributeBinder
// 0x0040 (0x0138 - 0x00F8)
class UCharacterGameplayAttributeBinder final : public UCharacterScopedEventBinder
{
public:
	struct FGameplayAttribute                     m_GameplayAttibute;                                // 0x00F8(0x0038)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAttributeTriggerType                         m_eTriggerType;                                    // 0x0130(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnGameplayAttributeChanged(const struct FGameplayAttribute& _attribute, float _fOldValue, float _fNewValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterGameplayAttributeBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterGameplayAttributeBinder")
	}
	static class UCharacterGameplayAttributeBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterGameplayAttributeBinder>();
	}
};
DUMPER7_ASSERTS_UCharacterGameplayAttributeBinder;

// Class SCCore.FirstTargetsPicker
// 0x0008 (0x0030 - 0x0028)
class UFirstTargetsPicker final : public UTargetPicker
{
public:
	int32                                         m_iCount;                                          // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FirstTargetsPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FirstTargetsPicker")
	}
	static class UFirstTargetsPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirstTargetsPicker>();
	}
};
DUMPER7_ASSERTS_UFirstTargetsPicker;

// Class SCCore.CharacterGameplayTagBinder
// 0x00B8 (0x01B0 - 0x00F8)
class UCharacterGameplayTagBinder : public UCharacterScopedEventBinder
{
public:
	struct FGameplayTag                           m_GameplayTagToListen;                             // 0x00F8(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGameplayTagEventType                         m_eEventType;                                      // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bTriggerOnNewAndRemoved;                         // 0x0101(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bOnlyTriggerOnNew;                               // 0x0102(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      m_GameplayTagsToCheckWhenTriggered;                // 0x0108(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bTriggerOnTagsToCheckChanged;                    // 0x0150(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_151[0x5F];                                     // 0x0151(0x005F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterGameplayTagBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterGameplayTagBinder")
	}
	static class UCharacterGameplayTagBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterGameplayTagBinder>();
	}
};
DUMPER7_ASSERTS_UCharacterGameplayTagBinder;

// Class SCCore.CharacterRollbackComponent
// 0x0008 (0x01F0 - 0x01E8)
class UCharacterRollbackComponent : public UActorRollbackComponent
{
public:
	float                                         m_fMaxClientDeltaTime;                             // 0x01E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMontageStarted(class UAnimMontage* _montage);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CharacterRollbackComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CharacterRollbackComponent")
	}
	static class UCharacterRollbackComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterRollbackComponent>();
	}
};
DUMPER7_ASSERTS_UCharacterRollbackComponent;

// Class SCCore.SelfTransformTargetDatasource
// 0x0000 (0x0080 - 0x0080)
class USelfTransformTargetDatasource final : public UTargetDatasource
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SelfTransformTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SelfTransformTargetDatasource")
	}
	static class USelfTransformTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<USelfTransformTargetDatasource>();
	}
};
DUMPER7_ASSERTS_USelfTransformTargetDatasource;

// Class SCCore.CheatData
// 0x0000 (0x0028 - 0x0028)
class UCheatData final : public UObject
{
public:
	bool BPE_CanApplyCheat(class UGameInstance* _gameInstance, class APlayerController* _PlayerController) const;
	void BPE_OnCheatActivated(class APlayerController* _PlayerController) const;
	void BPE_OnCheatDeactivated(class APlayerController* _PlayerController) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CheatData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CheatData")
	}
	static class UCheatData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCheatData>();
	}
};
DUMPER7_ASSERTS_UCheatData;

// Class SCCore.TriangleStatsWidget
// 0x0130 (0x0350 - 0x0220)
class UTriangleStatsWidget final : public UWidget
{
public:
	struct FSlateBrush                            m_Brush;                                           // 0x0220(0x00D0)(Edit, NativeAccessSpecifierPublic)
	float                                         DownLeftStat;                                      // 0x02F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             DownLeftStatDelegate;                              // 0x02F4(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpStat;                                            // 0x0304(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             UpStatDelegate;                                    // 0x0308(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DownRightStat;                                     // 0x0318(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             DownRightStatDelegate;                             // 0x031C(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 m_Color;                                           // 0x032C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 m_TriangleColor;                                   // 0x0330(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 m_CrossColor;                                      // 0x0334(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fTriangleLineWidth;                              // 0x0338(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCrossLineWidth;                                 // 0x033C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_340[0x10];                                     // 0x0340(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetDownLeftValue(float _fValue);
	void BPF_SetDownRightValue(float _fValue);
	void BPF_SetUpValue(float _fValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TriangleStatsWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TriangleStatsWidget")
	}
	static class UTriangleStatsWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTriangleStatsWidget>();
	}
};
DUMPER7_ASSERTS_UTriangleStatsWidget;

// Class SCCore.ColorComparisonProfile
// 0x0028 (0x0058 - 0x0030)
class UColorComparisonProfile final : public UDataAsset
{
public:
	struct FSlateColor                            m_BonusTint;                                       // 0x0030(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            m_MalusTint;                                       // 0x0044(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ColorComparisonProfile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ColorComparisonProfile")
	}
	static class UColorComparisonProfile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UColorComparisonProfile>();
	}
};
DUMPER7_ASSERTS_UColorComparisonProfile;

// Class SCCore.MotionWarpingMontagePlayerConfiguration
// 0x0020 (0x00A0 - 0x0080)
class UMotionWarpingMontagePlayerConfiguration final : public UBasicMontagePlayerConfiguration
{
public:
	bool                                          m_bAdaptiveSnap;                                   // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_WarpTargetName;                                  // 0x0084(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAdaptPlayrate;                                  // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fForcedPlayrate;                                 // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAnimationModifierComputation> m_SnapComputation;                              // 0x0098(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MotionWarpingMontagePlayerConfiguration")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MotionWarpingMontagePlayerConfiguration")
	}
	static class UMotionWarpingMontagePlayerConfiguration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMotionWarpingMontagePlayerConfiguration>();
	}
};
DUMPER7_ASSERTS_UMotionWarpingMontagePlayerConfiguration;

// Class SCCore.CombinationInputConditionProxy
// 0x0010 (0x0040 - 0x0030)
class UCombinationInputConditionProxy final : public UInputConditionProxy
{
public:
	TArray<struct FInputDataProxyPair>            m_Items;                                           // 0x0030(0x0010)(Edit, EditFixedSize, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CombinationInputConditionProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CombinationInputConditionProxy")
	}
	static class UCombinationInputConditionProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCombinationInputConditionProxy>();
	}
};
DUMPER7_ASSERTS_UCombinationInputConditionProxy;

// Class SCCore.SpeedDifferenceTargetWeightEvaluation
// 0x0008 (0x0038 - 0x0030)
class USpeedDifferenceTargetWeightEvaluation final : public UTargetWeightEvaluation
{
public:
	bool                                          m_bFartherIsBest;                                  // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpeedDifferenceTargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpeedDifferenceTargetWeightEvaluation")
	}
	static class USpeedDifferenceTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpeedDifferenceTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_USpeedDifferenceTargetWeightEvaluation;

// Class SCCore.ObjectDataBindingContext
// 0x0000 (0x0000 - 0x0000)
class IObjectDataBindingContext final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ObjectDataBindingContext")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ObjectDataBindingContext")
	}
	static class IObjectDataBindingContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<IObjectDataBindingContext>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IObjectDataBindingContext;

// Class SCCore.ViewModelsPool
// 0x0060 (0x0088 - 0x0028)
class UViewModelsPool final : public UObject
{
public:
	TMap<TWeakObjectPtr<class UObject>, class USCViewModel*> m_BoundObjectToViewModelMap;            // 0x0028(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TSubclassOf<class USCViewModel>               m_ViewModelClass;                                  // 0x0078(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USCViewModel*                           m_DefaultViewModelInstance;                        // 0x0080(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ActorBoundUnspawn(class AActor* _actor, EEndPlayReason _eEndPlayReason);
	class USCViewModel* BPF_GetOrCreateActorInstancedViewModelChecked(class AActor* _actorDataAndBoundOfViewModel);
	class USCViewModel* BPF_GetOrCreateViewModelChecked(class UObject* _boundObject, class AActor* _actorDataOfViewModel);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ViewModelsPool")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ViewModelsPool")
	}
	static class UViewModelsPool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UViewModelsPool>();
	}
};
DUMPER7_ASSERTS_UViewModelsPool;

// Class SCCore.SCButtonUserWidget
// 0x0190 (0x0D80 - 0x0BF0)
#pragma pack(push, 0x1)
class alignas(0x10) USCButtonUserWidget : public USCUserWidget
{
public:
	TDelegate<void(class USCButtonUserWidget* _button, bool _bWithMouse)> m_OnClick_Bindable;        // 0x0BF0(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class USCButtonUserWidget* _button)> m_OnHoldStarted_Bindable;                    // 0x0C00(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class USCButtonUserWidget* _button)> m_OnHoldCanceled_Bindable;                   // 0x0C10(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class USCButtonUserWidget* _button)> m_OnHoldSuccess_Bindable;                    // 0x0C20(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCButtonUserWidget* _button, bool _bWithMouse)> m_OnClick;  // 0x0C30(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCButtonUserWidget* _button, bool _bWithMouse)> m_OnRightClick; // 0x0C40(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCButtonUserWidget* _button)> m_OnHoldStarted;              // 0x0C50(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCButtonUserWidget* _button)> m_OnHoldCanceled;             // 0x0C60(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCButtonUserWidget* _button)> m_OnHoldSuccess;              // 0x0C70(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FSlateBrush                            m_MouseDownStateBrush;                             // 0x0C80(0x00D0)(Edit, NativeAccessSpecifierPublic)
	EButtonClickMethod                            m_eClickMethod;                                    // 0x0D50(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D51[0x3];                                      // 0x0D51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fHoldDuration;                                   // 0x0D54(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsClickable;                                    // 0x0D58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bSelectOnClick;                                  // 0x0D59(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D5A[0x2];                                      // 0x0D5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_OnClickTag;                                      // 0x0D5C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsMouseDown;                                    // 0x0D64(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D65[0x13];                                     // 0x0D65(0x0013)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnClicked();
	void BPE_OnRightClicked();

	class FName BPF_GetFlowOutputTransitionName() const;
	float BPF_GetHoldProgress() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCButtonUserWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCButtonUserWidget")
	}
	static class USCButtonUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCButtonUserWidget>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_USCButtonUserWidget;

// Class SCCore.MovementModeCondition
// 0x0008 (0x0030 - 0x0028)
class UMovementModeCondition final : public UBaseActorCondition
{
public:
	EMovementMode                                 m_eMovementMode;                                   // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovementModeCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovementModeCondition")
	}
	static class UMovementModeCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovementModeCondition>();
	}
};
DUMPER7_ASSERTS_UMovementModeCondition;

// Class SCCore.ControllerButtonWidget
// 0x0150 (0x0ED0 - 0x0D80)
class UControllerButtonWidget : public USCButtonUserWidget
{
public:
	int32                                         m_iInputSlotIndex;                                 // 0x0D78(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatRange                            m_AxisScaleRange;                                  // 0x0D7C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EControllerIconAxisTypes                      m_eAxisType;                                       // 0x0D8C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D8D[0x3];                                      // 0x0D8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControllerIconStyle                   m_IconStyle;                                       // 0x0D90(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bOverrideWithKeys;                               // 0x0DE0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_DE1[0x7];                                      // 0x0DE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKey>                           m_OverridingKeys;                                  // 0x0DE8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FMappingID                             m_MappingID;                                       // 0x0DF8(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_EC8[0x8];                                      // 0x0EC8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_GetInputNode(struct FInputMappingNode* Node);
	class FText BPF_GetKeyDisplayName(const struct FKey& _key, bool _bLongDisplayName);
	void BPF_GetUIKeyInfos(bool* _bOutFoundIcon, struct FInputMappingNode* _outNode, TSoftObjectPtr<class UTexture2D>* _icon, struct FKey* _key, class FText* _replacementText, bool* _bShowText, class FString* _outSeparator);
	bool BPF_IsKeyboardInput();
	void BPF_OverrideWithKeys(bool _bOverride, const TArray<struct FKey>& _inKeys, bool _bRefresh);
	void BPF_SetAxisType(EControllerIconAxisTypes _eAxisType, bool _bRefresh);
	void BPF_SetIconStyle(const struct FControllerIconStyle& _eIconStyle, bool _bRefresh);
	void BPF_SetInputSlotIndex(int32 _iSlotIndex);
	void BPF_SetMappingID(const struct FMappingID& _mappingID, bool _bRefresh);
	void BPF_SetMappingIDAndRefresh(const struct FMappingID& _mappingID);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ControllerButtonWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ControllerButtonWidget")
	}
	static class UControllerButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControllerButtonWidget>();
	}
};
DUMPER7_ASSERTS_UControllerButtonWidget;

// Class SCCore.ControllerIconsDB
// 0x00A0 (0x00D0 - 0x0030)
class UControllerIconsDB final : public UDataAsset
{
public:
	TArray<struct FControllerIcons>               m_ControllerIcons;                                 // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FControllerIcons                       m_DefaultControllerIcons;                          // 0x0040(0x0080)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_C0[0x10];                                      // 0x00C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class FString BPF_GetControllerAxisIconDesc(const struct FControllerAxisIcons& _slot);
	static class FString BPF_GetControllerIconsDesc(const struct FControllerIcons& _icons);
	static class FString BPF_GetControllerKeyIconDesc(const struct FControllerKeyIcons& _slot);

	const struct FControllerIcons GetControllerIcons(class FName _controllerType) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ControllerIconsDB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ControllerIconsDB")
	}
	static class UControllerIconsDB* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControllerIconsDB>();
	}
};
DUMPER7_ASSERTS_UControllerIconsDB;

// Class SCCore.MirrorNodeLibrary
// 0x0000 (0x0028 - 0x0028)
class UMirrorNodeLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FMirrorReference ConvertToMirror(const struct FAnimNodeReference& Node, EAnimNodeReferenceConversionResult* Result);
	static void ConvertToMirrorPure(const struct FAnimNodeReference& Node, struct FMirrorReference* MirrorReference, bool* Result);
	static struct FMirrorReference SetMirror(const struct FMirrorReference& MirrorReference, bool bInMirror);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MirrorNodeLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MirrorNodeLibrary")
	}
	static class UMirrorNodeLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMirrorNodeLibrary>();
	}
};
DUMPER7_ASSERTS_UMirrorNodeLibrary;

// Class SCCore.ControlRigAnimSequenceReference
// 0x0058 (0x0080 - 0x0028)
class UControlRigAnimSequenceReference final : public UAssetUserData
{
public:
	class UMirrorDataTable*                       m_MirrorDataTable;                                 // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FControlRigAnimSequenceReferenceSample> m_Sequences;                    // 0x0030(0x0050)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ControlRigAnimSequenceReference")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ControlRigAnimSequenceReference")
	}
	static class UControlRigAnimSequenceReference* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigAnimSequenceReference>();
	}
};
DUMPER7_ASSERTS_UControlRigAnimSequenceReference;

// Class SCCore.WeightedAnimSequencePicker
// 0x0000 (0x00A0 - 0x00A0)
class UWeightedAnimSequencePicker final : public UAnimSequencePicker
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeightedAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeightedAnimSequencePicker")
	}
	static class UWeightedAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeightedAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UWeightedAnimSequencePicker;

// Class SCCore.CursorInputConditionData
// 0x0008 (0x0130 - 0x0128)
class UCursorInputConditionData final : public UVectorInputConditionData
{
public:
	bool                                          m_bNormalize;                                      // 0x0128(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fNormalizeRegionRadius;                          // 0x012C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CursorInputConditionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CursorInputConditionData")
	}
	static class UCursorInputConditionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCursorInputConditionData>();
	}
};
DUMPER7_ASSERTS_UCursorInputConditionData;

// Class SCCore.ContextTargetWeightEvaluation
// 0x0000 (0x0030 - 0x0030)
class UContextTargetWeightEvaluation final : public UTargetWeightEvaluation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ContextTargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ContextTargetWeightEvaluation")
	}
	static class UContextTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UContextTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UContextTargetWeightEvaluation;

// Class SCCore.CustomWidgetNavigation
// 0x0018 (0x0040 - 0x0028)
class UCustomWidgetNavigation final : public UObject
{
public:
	struct FCustomWidgetNavigationData            m_CustomNavigationConfig;                          // 0x0028(0x0001)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x17];                                      // 0x0029(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool BPF_IsAnalogNavigationEnabled();

	void BPF_ApplyNavigationConfig();
	void BPF_RestoreNavigationConfig();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CustomWidgetNavigation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CustomWidgetNavigation")
	}
	static class UCustomWidgetNavigation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomWidgetNavigation>();
	}
};
DUMPER7_ASSERTS_UCustomWidgetNavigation;

// Class SCCore.DistanceWithActorCondition
// 0x0010 (0x0038 - 0x0028)
class UDistanceWithActorCondition final : public UBaseActorTargetCondition
{
public:
	struct FFloatRange                            m_DistanceRange;                                   // 0x0028(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DistanceWithActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DistanceWithActorCondition")
	}
	static class UDistanceWithActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDistanceWithActorCondition>();
	}
};
DUMPER7_ASSERTS_UDistanceWithActorCondition;

// Class SCCore.GroupTargetCondition
// 0x0018 (0x0040 - 0x0028)
class UGroupTargetCondition final : public UBaseActorTargetCondition
{
public:
	EConditionGroupOperators                      m_eOperator;                                       // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBaseActorTargetConditionInstance> m_Conditions;                                   // 0x0030(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GroupTargetCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GroupTargetCondition")
	}
	static class UGroupTargetCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroupTargetCondition>();
	}
};
DUMPER7_ASSERTS_UGroupTargetCondition;

// Class SCCore.EnvQueryGenerator_PerceivedStimulus
// 0x0050 (0x00A0 - 0x0050)
class UEnvQueryGenerator_PerceivedStimulus final : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderFloatValue              m_fSearchRadius;                                   // 0x0050(0x0038)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UEnvQueryContext>           m_ListenerContext;                                 // 0x0088(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAISense>                   m_SenseToUse;                                      // 0x0090(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIncludeKnownStimulus;                           // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnvQueryGenerator_PerceivedStimulus")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnvQueryGenerator_PerceivedStimulus")
	}
	static class UEnvQueryGenerator_PerceivedStimulus* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnvQueryGenerator_PerceivedStimulus>();
	}
};
DUMPER7_ASSERTS_UEnvQueryGenerator_PerceivedStimulus;

// Class SCCore.WidgetPoolComponent
// 0x0070 (0x0128 - 0x00B8)
class UWidgetPoolComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWidgetPoolEntryTemplate>       m_WidgetPoolTemplate;                              // 0x00C0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FWidgetPoolElementArray> m_WidgetPool;                                  // 0x00D0(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class USCUserWidget* BPF_GetWidget(const struct FSCUserDefinedEnumHandler& _userEnum);
	void BPF_ReleaseWidget(const struct FSCUserDefinedEnumHandler& _userEnum, class USCUserWidget* _userWidget);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WidgetPoolComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WidgetPoolComponent")
	}
	static class UWidgetPoolComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidgetPoolComponent>();
	}
};
DUMPER7_ASSERTS_UWidgetPoolComponent;

// Class SCCore.EnvQueryItemType_Location
// 0x0000 (0x0030 - 0x0030)
class UEnvQueryItemType_Location final : public UEnvQueryItemType_VectorBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnvQueryItemType_Location")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnvQueryItemType_Location")
	}
	static class UEnvQueryItemType_Location* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnvQueryItemType_Location>();
	}
};
DUMPER7_ASSERTS_UEnvQueryItemType_Location;

// Class SCCore.GroupInputConditionSubConditionType
// 0x0000 (0x0028 - 0x0028)
class UGroupInputConditionSubConditionType : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GroupInputConditionSubConditionType")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GroupInputConditionSubConditionType")
	}
	static class UGroupInputConditionSubConditionType* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroupInputConditionSubConditionType>();
	}
};
DUMPER7_ASSERTS_UGroupInputConditionSubConditionType;

// Class SCCore.FloatStatTextBlock
// 0x00A0 (0x04C0 - 0x0420)
class UFloatStatTextBlock final : public UTextBlock
{
public:
	float                                         Stat;                                              // 0x0418(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             StatDelegate;                                      // 0x041C(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CompareStat;                                       // 0x042C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             CompareStatDelegate;                               // 0x0430(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UColorComparisonProfile*                m_ColorComparisonProfile;                          // 0x0440(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bHightIsBetter;                                  // 0x0448(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_EmptyText;                                       // 0x0450(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FText                                   m_Format;                                          // 0x0460(0x0010)(Edit, NativeAccessSpecifierPublic)
	float                                         m_fMultiply;                                       // 0x0470(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_474[0x1];                                      // 0x0474(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bUseGrouping;                                    // 0x0475(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_476[0x2];                                      // 0x0476(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iMinimumIntegralDigits;                          // 0x0478(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iMaximumIntegralDigits;                          // 0x047C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iMinimumFractionalDigits;                        // 0x0480(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iMaximumFractionalDigits;                        // 0x0484(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCanBeNegative;                                  // 0x0488(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_489[0x37];                                     // 0x0489(0x0037)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FloatStatTextBlock")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FloatStatTextBlock")
	}
	static class UFloatStatTextBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFloatStatTextBlock>();
	}
};
DUMPER7_ASSERTS_UFloatStatTextBlock;

// Class SCCore.FlyModeNotifyState
// 0x0000 (0x0030 - 0x0030)
class UFlyModeNotifyState final : public UAnimNotifyState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FlyModeNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FlyModeNotifyState")
	}
	static class UFlyModeNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFlyModeNotifyState>();
	}
};
DUMPER7_ASSERTS_UFlyModeNotifyState;

// Class SCCore.TargetDelayWeightEvaluation
// 0x0020 (0x0050 - 0x0030)
class UTargetDelayWeightEvaluation final : public UTargetWeightEvaluation
{
public:
	class UCurveFloat*                            m_WeightCurve;                                     // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinWeightDelay;                                 // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinWeight;                                      // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxWeightDelay;                                 // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxWeight;                                      // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAllowOutOfBoundsDelay;                          // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAllowTargetWithoutDelay;                        // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_fTargetWithoutDelayWeight;                       // 0x004A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDelayWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDelayWeightEvaluation")
	}
	static class UTargetDelayWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDelayWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UTargetDelayWeightEvaluation;

// Class SCCore.SCAbilityMontageNotify
// 0x0000 (0x0038 - 0x0038)
class USCAbilityMontageNotify : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAbilityMontageNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAbilityMontageNotify")
	}
	static class USCAbilityMontageNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAbilityMontageNotify>();
	}
};
DUMPER7_ASSERTS_USCAbilityMontageNotify;

// Class SCCore.FreezeFrameMontageNotify
// 0x0008 (0x0040 - 0x0038)
class UFreezeFrameMontageNotify : public USCAbilityMontageNotify
{
public:
	int32                                         m_iFrameCount;                                     // 0x0038(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FreezeFrameMontageNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FreezeFrameMontageNotify")
	}
	static class UFreezeFrameMontageNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFreezeFrameMontageNotify>();
	}
};
DUMPER7_ASSERTS_UFreezeFrameMontageNotify;

// Class SCCore.GroupInputConditionProxy
// 0x0000 (0x0030 - 0x0030)
class UGroupInputConditionProxy final : public UInputConditionProxy
{
public:
	class FString BPF_GetDesc(const struct FGroupInputConditionProxyPair& _slot) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GroupInputConditionProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GroupInputConditionProxy")
	}
	static class UGroupInputConditionProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroupInputConditionProxy>();
	}
};
DUMPER7_ASSERTS_UGroupInputConditionProxy;

// Class SCCore.GameFlowEventBinder
// 0x0010 (0x00F0 - 0x00E0)
class UGameFlowEventBinder final : public UEventBinder
{
public:
	struct FGameplayTag                           m_GameFlowTag;                                     // 0x00E0(0x0008)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameFlowEventBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameFlowEventBinder")
	}
	static class UGameFlowEventBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFlowEventBinder>();
	}
};
DUMPER7_ASSERTS_UGameFlowEventBinder;

// Class SCCore.GameOption
// 0x0000 (0x0030 - 0x0030)
class UGameOption : public UPrimaryDataAsset
{
public:
	void BPE_SetGameOption(class ASCBasePlayerController* _controller, float _fValue) const;
	float BPF_GetDefaultValueAsFloat(const class UObject* _worldContextObject) const;
	bool BPF_GetSavedValueAsBool(const class UObject* _worldContextObject) const;
	float BPF_GetSavedValueAsFloat(const class UObject* _worldContextObject) const;
	bool BPF_IsAppliedSaveOption() const;
	bool BPF_IsVideoRelatedOption() const;
	void BPF_SetGameOption(class ASCBasePlayerController* _controller, float _fValue) const;
	void BPF_SetGameOptionInPending(const class UObject* _worldContextObject, float _fValue) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption")
	}
	static class UGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption>();
	}
};
DUMPER7_ASSERTS_UGameOption;

// Class SCCore.InputDirectionModifierComputation
// 0x0008 (0x0080 - 0x0078)
class UInputDirectionModifierComputation final : public UAnimationModifierComputation
{
public:
	EMontagePlayerRedirection                     m_eNeutralInputFallBack;                           // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputDirectionModifierComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputDirectionModifierComputation")
	}
	static class UInputDirectionModifierComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputDirectionModifierComputation>();
	}
};
DUMPER7_ASSERTS_UInputDirectionModifierComputation;

// Class SCCore.SCcoreInitAsset
// 0x0000 (0x0028 - 0x0028)
class USCcoreInitAsset final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCcoreInitAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCcoreInitAsset")
	}
	static class USCcoreInitAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCcoreInitAsset>();
	}
};
DUMPER7_ASSERTS_USCcoreInitAsset;

// Class SCCore.InputActionGameOption
// 0x0060 (0x0090 - 0x0030)
class UInputActionGameOption : public UGameOption
{
public:
	EInputMappingForceController                  m_eDevice;                                         // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputMappingProfileEnumHandler        m_Profile;                                         // 0x0038(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCInputAction*                         m_action;                                          // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputActionGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputActionGameOption")
	}
	static class UInputActionGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputActionGameOption>();
	}
};
DUMPER7_ASSERTS_UInputActionGameOption;

// Class SCCore.ToggleHoldInputGameOption
// 0x0000 (0x0090 - 0x0090)
class UToggleHoldInputGameOption final : public UInputActionGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ToggleHoldInputGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ToggleHoldInputGameOption")
	}
	static class UToggleHoldInputGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UToggleHoldInputGameOption>();
	}
};
DUMPER7_ASSERTS_UToggleHoldInputGameOption;

// Class SCCore.HeightDifferenceWithActorCondition
// 0x0008 (0x0030 - 0x0028)
class UHeightDifferenceWithActorCondition final : public UBaseActorTargetCondition
{
public:
	class UCurveFloat*                            m_HeightDiffCurve;                                 // 0x0028(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HeightDifferenceWithActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HeightDifferenceWithActorCondition")
	}
	static class UHeightDifferenceWithActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeightDifferenceWithActorCondition>();
	}
};
DUMPER7_ASSERTS_UHeightDifferenceWithActorCondition;

// Class SCCore.HideUILayerGameOption
// 0x0020 (0x0050 - 0x0030)
class UHideUILayerGameOption : public UGameOption
{
public:
	struct FGameplayTagContainer                  m_LayersToHide;                                    // 0x0030(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HideUILayerGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HideUILayerGameOption")
	}
	static class UHideUILayerGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHideUILayerGameOption>();
	}
};
DUMPER7_ASSERTS_UHideUILayerGameOption;

// Class SCCore.LookInvertAxisGameOption
// 0x0008 (0x0038 - 0x0030)
class ULookInvertAxisGameOption : public UGameOption
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LookInvertAxisGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LookInvertAxisGameOption")
	}
	static class ULookInvertAxisGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULookInvertAxisGameOption>();
	}
};
DUMPER7_ASSERTS_ULookInvertAxisGameOption;

// Class SCCore.GroupInputConditionSubConditionType_Lifespan
// 0x0008 (0x0030 - 0x0028)
class UGroupInputConditionSubConditionType_Lifespan : public UGroupInputConditionSubConditionType
{
public:
	float                                         m_fLifeSpan;                                       // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GroupInputConditionSubConditionType_Lifespan")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GroupInputConditionSubConditionType_Lifespan")
	}
	static class UGroupInputConditionSubConditionType_Lifespan* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroupInputConditionSubConditionType_Lifespan>();
	}
};
DUMPER7_ASSERTS_UGroupInputConditionSubConditionType_Lifespan;

// Class SCCore.GroupInputConditionSubCondition_Operator
// 0x0018 (0x0048 - 0x0030)
class UGroupInputConditionSubCondition_Operator final : public UGroupInputConditionSubConditionType_Lifespan
{
public:
	EConditionGroupOperators                      m_eOperator;                                       // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGroupInputConditionSubConditionType*> m_SubGroups;                                 // 0x0038(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GroupInputConditionSubCondition_Operator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GroupInputConditionSubCondition_Operator")
	}
	static class UGroupInputConditionSubCondition_Operator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroupInputConditionSubCondition_Operator>();
	}
};
DUMPER7_ASSERTS_UGroupInputConditionSubCondition_Operator;

// Class SCCore.LookXInvertAxisGameOption
// 0x0000 (0x0038 - 0x0038)
class ULookXInvertAxisGameOption final : public ULookInvertAxisGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LookXInvertAxisGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LookXInvertAxisGameOption")
	}
	static class ULookXInvertAxisGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULookXInvertAxisGameOption>();
	}
};
DUMPER7_ASSERTS_ULookXInvertAxisGameOption;

// Class SCCore.SCComboScrollList
// 0x0010 (0x0C00 - 0x0BF0)
class USCComboScrollList final : public USCUserWidget
{
public:
	TMulticastInlineDelegate<void(int32 SelectedIndex)> OnItemSelected;                              // 0x0BF0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void BPE_InitFromStrings(const TArray<class FString>& _list, int32 _iSelectedItem);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCComboScrollList")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCComboScrollList")
	}
	static class USCComboScrollList* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCComboScrollList>();
	}
};
DUMPER7_ASSERTS_USCComboScrollList;

// Class SCCore.LookYInvertAxisGameOption
// 0x0000 (0x0038 - 0x0038)
class ULookYInvertAxisGameOption final : public ULookInvertAxisGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LookYInvertAxisGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LookYInvertAxisGameOption")
	}
	static class ULookYInvertAxisGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULookYInvertAxisGameOption>();
	}
};
DUMPER7_ASSERTS_ULookYInvertAxisGameOption;

// Class SCCore.InputContextData
// 0x0008 (0x0030 - 0x0028)
class UInputContextData final : public UObject
{
public:
	bool                                          m_disableOther;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bPauseOther;                                     // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputContextData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputContextData")
	}
	static class UInputContextData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputContextData>();
	}
};
DUMPER7_ASSERTS_UInputContextData;

// Class SCCore.InputModifierModeGameOption
// 0x0008 (0x0038 - 0x0030)
class UInputModifierModeGameOption : public UGameOption
{
public:
	bool                                          m_bIsGamepad;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputModifierModeGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputModifierModeGameOption")
	}
	static class UInputModifierModeGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputModifierModeGameOption>();
	}
};
DUMPER7_ASSERTS_UInputModifierModeGameOption;

// Class SCCore.GamepadInputModifierModeGameOption
// 0x0000 (0x0038 - 0x0038)
class UGamepadInputModifierModeGameOption final : public UInputModifierModeGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GamepadInputModifierModeGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GamepadInputModifierModeGameOption")
	}
	static class UGamepadInputModifierModeGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadInputModifierModeGameOption>();
	}
};
DUMPER7_ASSERTS_UGamepadInputModifierModeGameOption;

// Class SCCore.MappingEditorHelpers
// 0x0000 (0x0200 - 0x0200)
class UMappingEditorHelpers final : public UClass
{
public:
	static bool BPF_GetInputMappingDataShowSlot(const struct FInputMappingData& _slot);
	static class FString BPF_GetInputMappingDataSlotDesc(const struct FInputMappingData& _data);
	static struct FLinearColor BPF_GetInputMappingGroupColor(const struct FInputMappingGroup& _mapping);
	static class FString BPF_GetInputMappingGroupDesc(const struct FInputMappingGroup& _mapping);
	static class FString BPF_GetInputMappingGroupTitle(const struct FInputMappingGroup& _mapping);
	static class FString BPF_GetInputMappingKeySlotContainerDesc(const struct FInputMappingKeySlotContainer& _slot);
	static class FString BPF_GetInputMappingKeySlotContainerTitle(const struct FInputMappingKeySlotContainer& _slot);
	static class FString BPF_GetInputMappingKeySlotDesc(const struct FInputMappingKeySlot& _slot);
	static bool BPF_GetInputMappingShowData(const struct FInputMappingKeySlotContainer& _slot);
	static bool BPF_GetInputMappingShowPresetSlot(const struct FInputMappingKeySlotContainer& _slot);
	static bool BPF_GetInputMappingShowSlot(const struct FInputMappingKeySlotContainer& _slot);
	static class FString BPF_GetInputPriorityGroupDesc(const struct FInputPriorityGroup& _group);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MappingEditorHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MappingEditorHelpers")
	}
	static class UMappingEditorHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMappingEditorHelpers>();
	}
};
DUMPER7_ASSERTS_UMappingEditorHelpers;

// Class SCCore.SCLogVisualizerFiltersContainer
// 0x0048 (0x0070 - 0x0028)
class USCLogVisualizerFiltersContainer final : public UObject
{
public:
	struct FSCActorDebugCategoriesFilter          m_Filter;                                          // 0x0028(0x0048)(Edit, EditConst, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLogVisualizerFiltersContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLogVisualizerFiltersContainer")
	}
	static class USCLogVisualizerFiltersContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCLogVisualizerFiltersContainer>();
	}
};
DUMPER7_ASSERTS_USCLogVisualizerFiltersContainer;

// Class SCCore.KeyboardInputModifierModeGameOption
// 0x0000 (0x0038 - 0x0038)
class UKeyboardInputModifierModeGameOption final : public UInputModifierModeGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("KeyboardInputModifierModeGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"KeyboardInputModifierModeGameOption")
	}
	static class UKeyboardInputModifierModeGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKeyboardInputModifierModeGameOption>();
	}
};
DUMPER7_ASSERTS_UKeyboardInputModifierModeGameOption;

// Class SCCore.SCCoreSettings
// 0x04C8 (0x0500 - 0x0038)
class USCCoreSettings final : public UDeveloperSettings
{
public:
	TSoftClassPtr<class UClass>                   m_GameSettingsClass;                               // 0x0038(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEnableLoadingScreen;                            // 0x0060(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   m_achievementsSettings;                            // 0x0068(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fClothSimDurationOnTeleport;                     // 0x0090(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActorsPoolConfig>              m_DefaultActorPools;                               // 0x0098(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           m_StreamingDebugTrackedActors;                     // 0x00A8(0x0010)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                         m_iMaxActorsAllowedPerLevelWithTransform;          // 0x00B8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   m_DefaultCharacterImpostorClass;                   // 0x00C0(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsLowEndPlatform;                               // 0x00E8(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FText>              m_IsoCultureToDisplayName;                         // 0x00F0(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	struct FSCErrorPopup                          m_GenericErrorPopupTexts[0xA];                     // 0x0140(0x0030)(Edit, Config, NativeAccessSpecifierPublic)
	struct FSCErrorPopup                          m_GenericErrorTexts[0x6];                          // 0x0320(0x0030)(Edit, Config, NativeAccessSpecifierPublic)
	float                                         m_VolumePortalThickness;                           // 0x0440(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_PlayerVolumeCollisionProfile;                    // 0x0444(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, TSoftClassPtr<class UClass>> m_DefaultWorldSubsystemsClasses;          // 0x0450(0x0050)(Edit, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          m_JumpToNodeWhenDebugging;                         // 0x04A0(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FTransform>          m_VFXOffsetTransformPerParentBone;                 // 0x04A8(0x0050)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bActorPoolsEnabled;                              // 0x04F8(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCoreSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCoreSettings")
	}
	static class USCCoreSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCoreSettings>();
	}
};
DUMPER7_ASSERTS_USCCoreSettings;

// Class SCCore.CameraAccelerationGameOption
// 0x0000 (0x0030 - 0x0030)
class UCameraAccelerationGameOption final : public UGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraAccelerationGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraAccelerationGameOption")
	}
	static class UCameraAccelerationGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraAccelerationGameOption>();
	}
};
DUMPER7_ASSERTS_UCameraAccelerationGameOption;

// Class SCCore.InputMappingPresetDB
// 0x00A0 (0x00C8 - 0x0028)
class UInputMappingPresetDB : public UObject
{
public:
	struct FInputMappingPresets                   m_Presets;                                         // 0x0028(0x00A0)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputMappingPresetDB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputMappingPresetDB")
	}
	static class UInputMappingPresetDB* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputMappingPresetDB>();
	}
};
DUMPER7_ASSERTS_UInputMappingPresetDB;

// Class SCCore.CameraShakeGameOption
// 0x0000 (0x0030 - 0x0030)
class UCameraShakeGameOption final : public UGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraShakeGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraShakeGameOption")
	}
	static class UCameraShakeGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraShakeGameOption>();
	}
};
DUMPER7_ASSERTS_UCameraShakeGameOption;

// Class SCCore.ScalabilyGameOption
// 0x0000 (0x0030 - 0x0030)
class UScalabilyGameOption : public UGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScalabilyGameOption")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScalabilyGameOption")
	}
	static class UScalabilyGameOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScalabilyGameOption>();
	}
};
DUMPER7_ASSERTS_UScalabilyGameOption;

// Class SCCore.ImpostorReplication
// 0x0018 (0x0130 - 0x0118)
class alignas(0x10) UImpostorReplication final : public UReplayReplicationComponentBase
{
public:
	TArray<struct FSCImpostorReplicationInfos>    m_Impostors;                                       // 0x0118(0x0010)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ImpostorReplication")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ImpostorReplication")
	}
	static class UImpostorReplication* GetDefaultObj()
	{
		return GetDefaultObjImpl<UImpostorReplication>();
	}
};
DUMPER7_ASSERTS_UImpostorReplication;

// Class SCCore.SCComboBoxButton
// 0x0020 (0x0DA0 - 0x0D80)
class USCComboBoxButton final : public USCButtonUserWidget
{
public:
	int32                                         m_iSelectedItem;                                   // 0x0D78(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D7C[0x4];                                      // 0x0D7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         m_Items;                                           // 0x0D80(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TSubclassOf<class USCComboScrollList>         m_ScrolllistClass;                                 // 0x0D90(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D98[0x8];                                      // 0x0D98(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_SelectionChanged();
	void BPF_InitList(const TArray<class FString>& _items);
	void Onclick(class USCButtonUserWidget* _button, bool _bWithMouse);
	void OnItemSelected(int32 _iIndex);
	void OnListClosed();
	void OnRightClick(class USCButtonUserWidget* _button, bool _bWithMouse);

	bool BPF_IsOpened() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCComboBoxButton")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCComboBoxButton")
	}
	static class USCComboBoxButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCComboBoxButton>();
	}
};
DUMPER7_ASSERTS_USCComboBoxButton;

// Class SCCore.GameOption_ShadowQuality
// 0x0000 (0x0030 - 0x0030)
class UGameOption_ShadowQuality final : public UScalabilyGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_ShadowQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_ShadowQuality")
	}
	static class UGameOption_ShadowQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_ShadowQuality>();
	}
};
DUMPER7_ASSERTS_UGameOption_ShadowQuality;

// Class SCCore.GameOption_TextureQuality
// 0x0000 (0x0030 - 0x0030)
class UGameOption_TextureQuality final : public UScalabilyGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_TextureQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_TextureQuality")
	}
	static class UGameOption_TextureQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_TextureQuality>();
	}
};
DUMPER7_ASSERTS_UGameOption_TextureQuality;

// Class SCCore.GameplayAbilityTargeting
// 0x0000 (0x0028 - 0x0028)
class UGameplayAbilityTargeting : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayAbilityTargeting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayAbilityTargeting")
	}
	static class UGameplayAbilityTargeting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayAbilityTargeting>();
	}
};
DUMPER7_ASSERTS_UGameplayAbilityTargeting;

// Class SCCore.SingleTargetGameplayAbilityTargeting
// 0x0000 (0x0028 - 0x0028)
class USingleTargetGameplayAbilityTargeting : public UGameplayAbilityTargeting
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SingleTargetGameplayAbilityTargeting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SingleTargetGameplayAbilityTargeting")
	}
	static class USingleTargetGameplayAbilityTargeting* GetDefaultObj()
	{
		return GetDefaultObjImpl<USingleTargetGameplayAbilityTargeting>();
	}
};
DUMPER7_ASSERTS_USingleTargetGameplayAbilityTargeting;

// Class SCCore.BlueprintSingleTargetGameplayAbilityTargeting
// 0x0008 (0x0030 - 0x0028)
class UBlueprintSingleTargetGameplayAbilityTargeting final : public USingleTargetGameplayAbilityTargeting
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class AActor* BPF_FindSingleTarget(const class USCAbilitySystemComponent* _component) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlueprintSingleTargetGameplayAbilityTargeting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlueprintSingleTargetGameplayAbilityTargeting")
	}
	static class UBlueprintSingleTargetGameplayAbilityTargeting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintSingleTargetGameplayAbilityTargeting>();
	}
};
DUMPER7_ASSERTS_UBlueprintSingleTargetGameplayAbilityTargeting;

// Class SCCore.GameOption_ViewDistanceQuality
// 0x0000 (0x0030 - 0x0030)
class UGameOption_ViewDistanceQuality final : public UScalabilyGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_ViewDistanceQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_ViewDistanceQuality")
	}
	static class UGameOption_ViewDistanceQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_ViewDistanceQuality>();
	}
};
DUMPER7_ASSERTS_UGameOption_ViewDistanceQuality;

// Class SCCore.GameOption_EffectsQuality
// 0x0000 (0x0030 - 0x0030)
class UGameOption_EffectsQuality final : public UScalabilyGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_EffectsQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_EffectsQuality")
	}
	static class UGameOption_EffectsQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_EffectsQuality>();
	}
};
DUMPER7_ASSERTS_UGameOption_EffectsQuality;

// Class SCCore.SCInputAction
// 0x0080 (0x00B0 - 0x0030)
class USCInputAction : public UPrimaryDataAsset
{
public:
	TArray<TSoftObjectPtr<class USCInputContext>> m_InputContexts;                                   // 0x0030(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	EInputActionWorldDirFallback                  m_eWorldInputDirectionFallback;                    // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionData                       m_Data;                                            // 0x0048(0x0058)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static const TArray<class USCInputAction*> GetAllInputActions();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCInputAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCInputAction")
	}
	static class USCInputAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCInputAction>();
	}
};
DUMPER7_ASSERTS_USCInputAction;

// Class SCCore.InstantInputAction
// 0x0000 (0x00B0 - 0x00B0)
class UInstantInputAction final : public USCInputAction
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InstantInputAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InstantInputAction")
	}
	static class UInstantInputAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInstantInputAction>();
	}
};
DUMPER7_ASSERTS_UInstantInputAction;

// Class SCCore.GameOption_PostProcessQuality
// 0x0000 (0x0030 - 0x0030)
class UGameOption_PostProcessQuality final : public UScalabilyGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_PostProcessQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_PostProcessQuality")
	}
	static class UGameOption_PostProcessQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_PostProcessQuality>();
	}
};
DUMPER7_ASSERTS_UGameOption_PostProcessQuality;

// Class SCCore.GameOption_FoliageQuality
// 0x0000 (0x0030 - 0x0030)
class UGameOption_FoliageQuality final : public UScalabilyGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_FoliageQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_FoliageQuality")
	}
	static class UGameOption_FoliageQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_FoliageQuality>();
	}
};
DUMPER7_ASSERTS_UGameOption_FoliageQuality;

// Class SCCore.GameOption_AntiAliasingQuality
// 0x0000 (0x0030 - 0x0030)
class UGameOption_AntiAliasingQuality final : public UScalabilyGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_AntiAliasingQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_AntiAliasingQuality")
	}
	static class UGameOption_AntiAliasingQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_AntiAliasingQuality>();
	}
};
DUMPER7_ASSERTS_UGameOption_AntiAliasingQuality;

// Class SCCore.GameOption_ResolutionQuality
// 0x0000 (0x0030 - 0x0030)
class UGameOption_ResolutionQuality final : public UScalabilyGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_ResolutionQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_ResolutionQuality")
	}
	static class UGameOption_ResolutionQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_ResolutionQuality>();
	}
};
DUMPER7_ASSERTS_UGameOption_ResolutionQuality;

// Class SCCore.GameOption_Resolution
// 0x0000 (0x0030 - 0x0030)
class UGameOption_Resolution final : public UGameOption
{
public:
	static const TArray<struct FIntPoint> BPF_GetResolutionsAvailable(int32* _currentResIndex);

	void SetResolution(const struct FIntPoint& _fValue) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_Resolution")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_Resolution")
	}
	static class UGameOption_Resolution* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_Resolution>();
	}
};
DUMPER7_ASSERTS_UGameOption_Resolution;

// Class SCCore.GameOption_GraphicsQuality
// 0x0000 (0x0030 - 0x0030)
class UGameOption_GraphicsQuality final : public UGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_GraphicsQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_GraphicsQuality")
	}
	static class UGameOption_GraphicsQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_GraphicsQuality>();
	}
};
DUMPER7_ASSERTS_UGameOption_GraphicsQuality;

// Class SCCore.GameOption_GrassQuality
// 0x0000 (0x0030 - 0x0030)
class UGameOption_GrassQuality final : public UScalabilyGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_GrassQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_GrassQuality")
	}
	static class UGameOption_GrassQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_GrassQuality>();
	}
};
DUMPER7_ASSERTS_UGameOption_GrassQuality;

// Class SCCore.GameOption_CrowdQuality
// 0x0010 (0x0040 - 0x0030)
class UGameOption_CrowdQuality final : public UScalabilyGameOption
{
public:
	TMulticastInlineDelegate<void(float _Value)>  OnChangeCrowdOption;                               // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_CrowdQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_CrowdQuality")
	}
	static class UGameOption_CrowdQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_CrowdQuality>();
	}
};
DUMPER7_ASSERTS_UGameOption_CrowdQuality;

// Class SCCore.LocationSamplerInterface
// 0x0000 (0x0000 - 0x0000)
class ILocationSamplerInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LocationSamplerInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LocationSamplerInterface")
	}
	static class ILocationSamplerInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ILocationSamplerInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ILocationSamplerInterface;

// Class SCCore.GameOption_WindowMode
// 0x0000 (0x0030 - 0x0030)
class UGameOption_WindowMode final : public UGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_WindowMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_WindowMode")
	}
	static class UGameOption_WindowMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_WindowMode>();
	}
};
DUMPER7_ASSERTS_UGameOption_WindowMode;

// Class SCCore.GameOption_VSync
// 0x0000 (0x0030 - 0x0030)
class UGameOption_VSync final : public UGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_VSync")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_VSync")
	}
	static class UGameOption_VSync* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_VSync>();
	}
};
DUMPER7_ASSERTS_UGameOption_VSync;

// Class SCCore.InterchangeableInputConditionProxy
// 0x0010 (0x0040 - 0x0030)
class UInterchangeableInputConditionProxy final : public UInputConditionProxy
{
public:
	TArray<struct FInputDataProxyPair>            m_Items;                                           // 0x0030(0x0010)(Edit, EditFixedSize, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InterchangeableInputConditionProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InterchangeableInputConditionProxy")
	}
	static class UInterchangeableInputConditionProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInterchangeableInputConditionProxy>();
	}
};
DUMPER7_ASSERTS_UInterchangeableInputConditionProxy;

// Class SCCore.GameOption_MaxFPS
// 0x0000 (0x0030 - 0x0030)
class UGameOption_MaxFPS final : public UGameOption
{
public:
	bool GetIsCappedFPS() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_MaxFPS")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_MaxFPS")
	}
	static class UGameOption_MaxFPS* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_MaxFPS>();
	}
};
DUMPER7_ASSERTS_UGameOption_MaxFPS;

// Class SCCore.GameOption_MotionBlurAmount
// 0x0000 (0x0030 - 0x0030)
class UGameOption_MotionBlurAmount final : public UGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_MotionBlurAmount")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_MotionBlurAmount")
	}
	static class UGameOption_MotionBlurAmount* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_MotionBlurAmount>();
	}
};
DUMPER7_ASSERTS_UGameOption_MotionBlurAmount;

// Class SCCore.InputActionTypeCondition
// 0x0008 (0x0080 - 0x0078)
class UInputActionTypeCondition final : public UTargetDataCondition
{
public:
	class USCInputAction*                         m_action;                                          // 0x0078(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputActionTypeCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputActionTypeCondition")
	}
	static class UInputActionTypeCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputActionTypeCondition>();
	}
};
DUMPER7_ASSERTS_UInputActionTypeCondition;

// Class SCCore.GameOption_Gamma
// 0x0000 (0x0030 - 0x0030)
class UGameOption_Gamma final : public UGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_Gamma")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_Gamma")
	}
	static class UGameOption_Gamma* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_Gamma>();
	}
};
DUMPER7_ASSERTS_UGameOption_Gamma;

// Class SCCore.ActorConditionOnTarget
// 0x0010 (0x0088 - 0x0078)
class UActorConditionOnTarget final : public UTargetDataCondition
{
public:
	struct FBaseActorConditionInstance            m_TargetCondition;                                 // 0x0078(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorConditionOnTarget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorConditionOnTarget")
	}
	static class UActorConditionOnTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorConditionOnTarget>();
	}
};
DUMPER7_ASSERTS_UActorConditionOnTarget;

// Class SCCore.GameOption_ConsoleVar
// 0x0010 (0x0040 - 0x0030)
class UGameOption_ConsoleVar final : public UGameOption
{
public:
	class FString                                 m_ConsoleVar;                                      // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_ConsoleVar")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_ConsoleVar")
	}
	static class UGameOption_ConsoleVar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_ConsoleVar>();
	}
};
DUMPER7_ASSERTS_UGameOption_ConsoleVar;

// Class SCCore.IsOnScreenCondition
// 0x0008 (0x0030 - 0x0028)
class UIsOnScreenCondition final : public UBaseActorCondition
{
public:
	float                                         m_fAcceptableTimeSinceLastSeen;                    // 0x0028(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bTreatNoMeshComponentAsOnScreen;                 // 0x002C(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IsOnScreenCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IsOnScreenCondition")
	}
	static class UIsOnScreenCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIsOnScreenCondition>();
	}
};
DUMPER7_ASSERTS_UIsOnScreenCondition;

// Class SCCore.GameOption_ColorblindMode
// 0x0000 (0x0030 - 0x0030)
class UGameOption_ColorblindMode final : public UGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_ColorblindMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_ColorblindMode")
	}
	static class UGameOption_ColorblindMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_ColorblindMode>();
	}
};
DUMPER7_ASSERTS_UGameOption_ColorblindMode;

// Class SCCore.GameOption_ColorblindSeverity
// 0x0000 (0x0030 - 0x0030)
class UGameOption_ColorblindSeverity : public UGameOption
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOption_ColorblindSeverity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOption_ColorblindSeverity")
	}
	static class UGameOption_ColorblindSeverity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOption_ColorblindSeverity>();
	}
};
DUMPER7_ASSERTS_UGameOption_ColorblindSeverity;

// Class SCCore.WidgetContextViewModel
// 0x0010 (0x0080 - 0x0070)
class UWidgetContextViewModel : public USCViewModel
{
public:
	TArray<class UMenuActionViewModel*>           m_ActionViewModels;                                // 0x0070(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WidgetContextViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WidgetContextViewModel")
	}
	static class UWidgetContextViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidgetContextViewModel>();
	}
};
DUMPER7_ASSERTS_UWidgetContextViewModel;

// Class SCCore.GlobalMenuContextViewModel
// 0x0118 (0x0198 - 0x0080)
class UGlobalMenuContextViewModel final : public UWidgetContextViewModel
{
public:
	ESCTargetPlatform                             m_TargetPlatform;                                  // 0x0080(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCControllerType                             m_ControllerType;                                  // 0x0081(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProfileMappingViewModel*               m_GamepadRemappingViewModel;                       // 0x0088(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProfileMappingViewModel*               m_KeyboardRemappingViewModel;                      // 0x0090(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsEditingRemapping;                             // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputMappingProfileData               m_MappingProfileData;                              // 0x00A0(0x00F8)(Edit, BlueprintVisible, DisableEditOnTemplate, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	class UProfileMappingViewModel* GetCurrentRemappingViewModel() const;
	bool IsConsole() const;
	bool IsPC() const;
	bool IsPS() const;
	bool IsUsingGamepad() const;
	bool IsUsingKeyboard() const;
	bool IsUsingPSController() const;
	bool IsUsingXboxController() const;
	bool IsXbox() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GlobalMenuContextViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GlobalMenuContextViewModel")
	}
	static class UGlobalMenuContextViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGlobalMenuContextViewModel>();
	}
};
DUMPER7_ASSERTS_UGlobalMenuContextViewModel;

// Class SCCore.GameOptionWidget
// 0x0010 (0x0D90 - 0x0D80)
class UGameOptionWidget final : public USCButtonUserWidget
{
public:
	class UGameOption*                            m_gameOption;                                      // 0x0D78(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasCollateralOption;                              // 0x0D80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D81[0x7];                                      // 0x0D81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameOptionWidget*                      m_CollateralGameOptionWidget;                      // 0x0D88(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameOptionWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameOptionWidget")
	}
	static class UGameOptionWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOptionWidget>();
	}
};
DUMPER7_ASSERTS_UGameOptionWidget;

// Class SCCore.SpeedToReachTargetCondition
// 0x0020 (0x0098 - 0x0078)
class USpeedToReachTargetCondition final : public UTargetDataCondition
{
public:
	bool                                          m_bAcceptImmobileTarget;                           // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bProjectOnActorForward;                          // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_SpeedRange;                                      // 0x007C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bClientOnly;                                     // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fServerValidationSpeedTolerance;                 // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpeedToReachTargetCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpeedToReachTargetCondition")
	}
	static class USpeedToReachTargetCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpeedToReachTargetCondition>();
	}
};
DUMPER7_ASSERTS_USpeedToReachTargetCondition;

// Class SCCore.GameplayAttributeCondition
// 0x0048 (0x0070 - 0x0028)
class UGameplayAttributeCondition final : public UBaseActorCondition
{
public:
	EOperationType                                m_eOperation;                                      // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     m_Attribute;                                       // 0x0030(0x0038)(Edit, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fComparedValue;                                  // 0x0068(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayAttributeCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayAttributeCondition")
	}
	static class UGameplayAttributeCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayAttributeCondition>();
	}
};
DUMPER7_ASSERTS_UGameplayAttributeCondition;

// Class SCCore.ManifestItemTargetDataCondition
// 0x0018 (0x0090 - 0x0078)
class UManifestItemTargetDataCondition final : public UTargetDataCondition
{
public:
	struct FManifestItem                          m_ManifestItem;                                    // 0x0078(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0080(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ManifestItemTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ManifestItemTargetDataCondition")
	}
	static class UManifestItemTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UManifestItemTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UManifestItemTargetDataCondition;

// Class SCCore.GameplayAttributeRatioCondition
// 0x0080 (0x00A8 - 0x0028)
class UGameplayAttributeRatioCondition final : public UBaseActorCondition
{
public:
	EOperationType                                m_eOperation;                                      // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     m_NumeratorAttribute;                              // 0x0030(0x0038)(Edit, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                     m_DenominatorAttribute;                            // 0x0068(0x0038)(Edit, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fComparedRatio;                                  // 0x00A0(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayAttributeRatioCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayAttributeRatioCondition")
	}
	static class UGameplayAttributeRatioCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayAttributeRatioCondition>();
	}
};
DUMPER7_ASSERTS_UGameplayAttributeRatioCondition;

// Class SCCore.GameplayEffectBinder
// 0x01A0 (0x0288 - 0x00E8)
class UGameplayEffectBinder final : public UActorTargetScopedBinder
{
public:
	struct FGameplayEffectQuery                   m_EffectQuery;                                     // 0x00E8(0x0198)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_280[0x8];                                      // 0x0280(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayEffectBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayEffectBinder")
	}
	static class UGameplayEffectBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayEffectBinder>();
	}
};
DUMPER7_ASSERTS_UGameplayEffectBinder;

// Class SCCore.IntStatTextBlock
// 0x0070 (0x0490 - 0x0420)
class UIntStatTextBlock final : public UTextBlock
{
public:
	int32                                         Stat;                                              // 0x0418(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StatIncrement;                                     // 0x041C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             StatDelegate;                                      // 0x0420(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CompareStat;                                       // 0x0430(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             CompareStatDelegate;                               // 0x0434(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UColorComparisonProfile*                m_ColorComparisonProfile;                          // 0x0448(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bHightIsBetter;                                  // 0x0450(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCanBeNegative;                                  // 0x0451(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_452[0x3E];                                     // 0x0452(0x003E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IntStatTextBlock")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IntStatTextBlock")
	}
	static class UIntStatTextBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIntStatTextBlock>();
	}
};
DUMPER7_ASSERTS_UIntStatTextBlock;

// Class SCCore.GameplayTagConverter
// 0x0000 (0x0028 - 0x0028)
class UGameplayTagConverter : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayTagConverter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayTagConverter")
	}
	static class UGameplayTagConverter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTagConverter>();
	}
};
DUMPER7_ASSERTS_UGameplayTagConverter;

// Class SCCore.TargetReachableCondition
// 0x00C0 (0x00E8 - 0x0028)
class UTargetReachableCondition final : public UBaseActorTargetCondition
{
public:
	float                                         m_fNavigationCostHeuristicScale;                   // 0x0028(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxPathCost;                                    // 0x002C(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>     m_QueryFilter;                                     // 0x0030(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxPathDistance;                                // 0x0038(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOutOfNavmeshResult;                             // 0x003C(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCheckAngles;                                    // 0x003D(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     m_AutorizedAngleWithTargetPerDistance;             // 0x0040(0x0088)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         m_fMaxVerticalDistanceFromProjection;              // 0x00C8(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vNavQueryExtent;                                 // 0x00D0(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetReachableCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetReachableCondition")
	}
	static class UTargetReachableCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetReachableCondition>();
	}
};
DUMPER7_ASSERTS_UTargetReachableCondition;

// Class SCCore.GameplayTagMapping
// 0x0058 (0x0080 - 0x0028)
class UGameplayTagMapping final : public UGameplayTagConverter
{
public:
	bool                                          m_bExactMapping;                                   // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, struct FGameplayTag> m_FromToMap;                                      // 0x0030(0x0050)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayTagMapping")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayTagMapping")
	}
	static class UGameplayTagMapping* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTagMapping>();
	}
};
DUMPER7_ASSERTS_UGameplayTagMapping;

// Class SCCore.MenuAsyncActionBaseHelper
// 0x0000 (0x0028 - 0x0028)
class UMenuAsyncActionBaseHelper final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_CancelAsyncAction(class UMenuAsyncActionBase* _action);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MenuAsyncActionBaseHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MenuAsyncActionBaseHelper")
	}
	static class UMenuAsyncActionBaseHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuAsyncActionBaseHelper>();
	}
};
DUMPER7_ASSERTS_UMenuAsyncActionBaseHelper;

// Class SCCore.GameplayTagAppend
// 0x0010 (0x0038 - 0x0028)
class UGameplayTagAppend final : public UGameplayTagConverter
{
public:
	class FString                                 m_Append;                                          // 0x0028(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayTagAppend")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayTagAppend")
	}
	static class UGameplayTagAppend* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTagAppend>();
	}
};
DUMPER7_ASSERTS_UGameplayTagAppend;

// Class SCCore.GameplayTagsCondition
// 0x0040 (0x0068 - 0x0028)
class UGameplayTagsCondition final : public UBaseActorCondition
{
public:
	struct FGameplayTagContainer                  m_RequiredTags;                                    // 0x0028(0x0020)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_BlockingTags;                                    // 0x0048(0x0020)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayTagsCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayTagsCondition")
	}
	static class UGameplayTagsCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTagsCondition>();
	}
};
DUMPER7_ASSERTS_UGameplayTagsCondition;

// Class SCCore.TimeStretchComputation
// 0x0008 (0x0030 - 0x0028)
class UTimeStretchComputation : public UObject
{
public:
	bool                                          m_bApplyAfterAnimLengthStretch;                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TimeStretchComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TimeStretchComputation")
	}
	static class UTimeStretchComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTimeStretchComputation>();
	}
};
DUMPER7_ASSERTS_UTimeStretchComputation;

// Class SCCore.GameplayTagQueryActorCondition
// 0x0048 (0x0070 - 0x0028)
class UGameplayTagQueryActorCondition final : public UBaseActorCondition
{
public:
	struct FGameplayTagQuery                      m_Query;                                           // 0x0028(0x0048)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayTagQueryActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayTagQueryActorCondition")
	}
	static class UGameplayTagQueryActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTagQueryActorCondition>();
	}
};
DUMPER7_ASSERTS_UGameplayTagQueryActorCondition;

// Class SCCore.ToggleInputConditionData
// 0x0000 (0x0088 - 0x0088)
class UToggleInputConditionData final : public UGenericInputConditionData
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ToggleInputConditionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ToggleInputConditionData")
	}
	static class UToggleInputConditionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UToggleInputConditionData>();
	}
};
DUMPER7_ASSERTS_UToggleInputConditionData;

// Class SCCore.GameplayTagCountCondition
// 0x0010 (0x0038 - 0x0028)
class UGameplayTagCountCondition final : public UBaseActorCondition
{
public:
	struct FGameplayTag                           m_gameplayTag;                                     // 0x0028(0x0008)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOperationType                                m_eOperation;                                      // 0x0030(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iComparedCount;                                  // 0x0034(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayTagCountCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayTagCountCondition")
	}
	static class UGameplayTagCountCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTagCountCondition>();
	}
};
DUMPER7_ASSERTS_UGameplayTagCountCondition;

// Class SCCore.MenuItem
// 0x0020 (0x0C10 - 0x0BF0)
class UMenuItem final : public USCUserWidget
{
public:
	class UWidget*                                m_PreviousWidget;                                  // 0x0BF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                m_WidgetToFocusOnCancel;                           // 0x0BF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMenuItem*                              m_NextPanel;                                       // 0x0C00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAllowSoundPlaying;                              // 0x0C08(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C09[0x7];                                      // 0x0C09(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnCancelChangeWidget();
	void BPE_OnCancelPressed();
	void BPE_OnChangeNextWidget(class UWidget* _widgetToHide, class UWidget* _previousWidget, class UWidget* _widgetToFocusOnCancel);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MenuItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MenuItem")
	}
	static class UMenuItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuItem>();
	}
};
DUMPER7_ASSERTS_UMenuItem;

// Class SCCore.GameplayTask_HandleAbility
// 0x0078 (0x00F8 - 0x0080)
class UGameplayTask_HandleAbility final : public UGameplayTask
{
public:
	uint8                                         Pad_80[0x38];                                      // 0x0080(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class FName EventName)> m_abilityEventDelegate;                    // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(class UGameplayAbility* _ability)> m_OnAbilityStarted;             // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void()>              m_OnAbilityEnded;                                  // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E8[0x10];                                      // 0x00E8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UGameplayTask_HandleAbility* BPF_HandleAbility(TScriptInterface<class IGameplayTaskOwnerInterface> _container, class UAbilitySystemComponent* _taskOwner, TSubclassOf<class USCGameplayAbility> _abilityToActivate, const struct FGameplayAbilityTargetDataHandle& _payload);

	void OnAbilityEnded(class UGameplayAbility* _endedAbility);
	void OnAbilityEventReceived(class FName _eventName);
	void OnAbilityPreActivate(class UGameplayAbility* _startedAbility);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayTask_HandleAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayTask_HandleAbility")
	}
	static class UGameplayTask_HandleAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTask_HandleAbility>();
	}
};
DUMPER7_ASSERTS_UGameplayTask_HandleAbility;

// Class SCCore.GameplayTask_Tick
// 0x0010 (0x0090 - 0x0080)
class UGameplayTask_Tick final : public UGameplayTask
{
public:
	TMulticastInlineDelegate<void(float fDeltaTime)> m_OnTick;                                       // 0x0080(0x0010)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)

public:
	static class UGameplayTask_Tick* BPF_TaskTick(TScriptInterface<class IGameplayTaskOwnerInterface> _taskOwner);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayTask_Tick")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayTask_Tick")
	}
	static class UGameplayTask_Tick* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTask_Tick>();
	}
};
DUMPER7_ASSERTS_UGameplayTask_Tick;

// Class SCCore.MatchingBoneAnimWeightEvaluation
// 0x0150 (0x0180 - 0x0030)
class UMatchingBoneAnimWeightEvaluation : public UTargetWeightEvaluation
{
public:
	class FName                                   m_BoneName;                                        // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMatchingBoneAnimPosition>      m_AnimPositions;                                   // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          m_bAllowBestScorePrediction;                       // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMinNeededInitialScoreForPrediction;             // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxPredictionDuration;                          // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPredictionInterval;                             // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_InstigatorRefTransformOffset;                    // 0x0060(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchingBoneEvaluationParams          m_MainEvaluationParams;                            // 0x00C0(0x005C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatchingBoneEvaluationParams          m_SecondaryEvaluationParams;                       // 0x011C(0x005C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bVeryVerboseVlog;                                // 0x0178(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDebugDisplayDuration;                           // 0x017C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MatchingBoneAnimWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MatchingBoneAnimWeightEvaluation")
	}
	static class UMatchingBoneAnimWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchingBoneAnimWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UMatchingBoneAnimWeightEvaluation;

// Class SCCore.GameplayTask_WaitForCondition
// 0x0020 (0x00A0 - 0x0080)
class UGameplayTask_WaitForCondition final : public UGameplayTask
{
public:
	TMulticastInlineDelegate<void()>              OnConditionTrue;                                   // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_90[0x10];                                      // 0x0090(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UGameplayTask_WaitForCondition* BPF_TaskWaitForCondition(TScriptInterface<class IGameplayTaskOwnerInterface> TaskOwner, TDelegate<void()> _conditionToCheck, const uint8 Priority);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayTask_WaitForCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayTask_WaitForCondition")
	}
	static class UGameplayTask_WaitForCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTask_WaitForCondition>();
	}
};
DUMPER7_ASSERTS_UGameplayTask_WaitForCondition;

// Class SCCore.SCSaveObject
// 0x0018 (0x0040 - 0x0028)
class USCSaveObject : public UObject
{
public:
	class FString                                 m_SaveFilename;                                    // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiEngineVersion;                                 // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiGameVersion;                                   // 0x003C(0x0004)(Edit, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BPE_FillSaveWithDefaultValues();

	class FString BPE_GetDetailsInfoForSaveFile() const;
	class UTexture2D* BPE_GetIconForSaveFile() const;
	class FString BPE_GetSubtitlesInfoForSaveFile() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSaveObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSaveObject")
	}
	static class USCSaveObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSaveObject>();
	}
};
DUMPER7_ASSERTS_USCSaveObject;

// Class SCCore.SCSaveObjectGameData
// 0x01A0 (0x01E0 - 0x0040)
class USCSaveObjectGameData : public USCSaveObject
{
public:
	struct FSCGameData                            m_SCSavedData;                                     // 0x0040(0x01A0)(Edit, BlueprintVisible, EditConst, SaveGame, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSaveObjectGameData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSaveObjectGameData")
	}
	static class USCSaveObjectGameData* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSaveObjectGameData>();
	}
};
DUMPER7_ASSERTS_USCSaveObjectGameData;

// Class SCCore.GameplayTask_WaitGameplayTagRemoved
// 0x0058 (0x00D8 - 0x0080)
class UGameplayTask_WaitGameplayTagRemoved final : public UGameplayTask
{
public:
	TMulticastInlineDelegate<void()>              Removed;                                           // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_90[0x48];                                      // 0x0090(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UGameplayTask_WaitGameplayTagRemoved* BPF_TaskWaitAnyGameplayTagRemoved(TScriptInterface<class IGameplayTaskOwnerInterface> _container, class UAbilitySystemComponent* _taskOwner, const struct FGameplayTagContainer& _tags, bool _bWaitForEndOfFrame, bool _bTestInitialPresenceOfTags);
	static class UGameplayTask_WaitGameplayTagRemoved* BPF_TaskWaitGameplayTagRemoved(TScriptInterface<class IGameplayTaskOwnerInterface> _container, class UAbilitySystemComponent* _taskOwner, const struct FGameplayTag& _tag, bool _bWaitForEndOfFrame, bool _bTestInitialPresenceOfTags);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayTask_WaitGameplayTagRemoved")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayTask_WaitGameplayTagRemoved")
	}
	static class UGameplayTask_WaitGameplayTagRemoved* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTask_WaitGameplayTagRemoved>();
	}
};
DUMPER7_ASSERTS_UGameplayTask_WaitGameplayTagRemoved;

// Class SCCore.Gauge
// 0x0020 (0x0CA0 - 0x0C80)
class UGauge final : public UHUDUserWidget
{
public:
	float                                         m_fPercentage;                                     // 0x0C78(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C7C[0x14];                                     // 0x0C7C(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             m_fPercentageDelegate;                             // 0x0C90(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Gauge")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Gauge")
	}
	static class UGauge* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGauge>();
	}
};
DUMPER7_ASSERTS_UGauge;

// Class SCCore.SCScalarCrossFadeVisualizerComponent
// 0x0000 (0x00B8 - 0x00B8)
class USCScalarCrossFadeVisualizerComponent : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCScalarCrossFadeVisualizerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCScalarCrossFadeVisualizerComponent")
	}
	static class USCScalarCrossFadeVisualizerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCScalarCrossFadeVisualizerComponent>();
	}
};
DUMPER7_ASSERTS_USCScalarCrossFadeVisualizerComponent;

// Class SCCore.AnimationPickerMetaData
// 0x0000 (0x0028 - 0x0028)
class UAnimationPickerMetaData final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimationPickerMetaData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimationPickerMetaData")
	}
	static class UAnimationPickerMetaData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimationPickerMetaData>();
	}
};
DUMPER7_ASSERTS_UAnimationPickerMetaData;

// Class SCCore.FilterContextTargetDataAnimSequencePicker
// 0x0048 (0x00E8 - 0x00A0)
class UFilterContextTargetDataAnimSequencePicker final : public UAnimSequencePicker
{
public:
	TArray<class UScriptStruct*>                  m_AllowedTargetData;                               // 0x00A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FAnimSequencePickerInstance            m_ParentSequencePicker;                            // 0x00B0(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FilterContextTargetDataAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FilterContextTargetDataAnimSequencePicker")
	}
	static class UFilterContextTargetDataAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFilterContextTargetDataAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UFilterContextTargetDataAnimSequencePicker;

// Class SCCore.SkelMeshLogger
// 0x0000 (0x0000 - 0x0000)
class ISkelMeshLogger final
{
public:
	void BPF_GetSkeletalMeshToLogs(TArray<class USkeletalMeshComponent*>* _outMeshComps, TArray<class USkeletalMesh*>* _outMeshes) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SkelMeshLogger")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SkelMeshLogger")
	}
	static class ISkelMeshLogger* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISkelMeshLogger>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISkelMeshLogger;

// Class SCCore.SyncMarkerAnimSequencePicker
// 0x0068 (0x0108 - 0x00A0)
class USyncMarkerAnimSequencePicker final : public UAnimSequencePicker
{
public:
	class FName                                   m_SyncGroupName;                                   // 0x00A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   m_DefaultMarkerName;                               // 0x00A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fNextFootCursor;                                 // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FAnimSequencePickerInstance> m_AnimationPerSyncMarker;                  // 0x00B8(0x0050)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SyncMarkerAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SyncMarkerAnimSequencePicker")
	}
	static class USyncMarkerAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<USyncMarkerAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_USyncMarkerAnimSequencePicker;

// Class SCCore.FootSyncMarkerAnimSequencePicker
// 0x0078 (0x0118 - 0x00A0)
class UFootSyncMarkerAnimSequencePicker final : public UAnimSequencePicker
{
public:
	float                                         m_fNextFootCursor;                                 // 0x00A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePickerInstance            m_LeftFootPicker;                                  // 0x00A8(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAnimSequencePickerInstance            m_RightFootPicker;                                 // 0x00E0(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FootSyncMarkerAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FootSyncMarkerAnimSequencePicker")
	}
	static class UFootSyncMarkerAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFootSyncMarkerAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UFootSyncMarkerAnimSequencePicker;

// Class SCCore.SCSoundAreaControllerVisualizerComponent
// 0x0000 (0x00B8 - 0x00B8)
class USCSoundAreaControllerVisualizerComponent final : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSoundAreaControllerVisualizerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSoundAreaControllerVisualizerComponent")
	}
	static class USCSoundAreaControllerVisualizerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSoundAreaControllerVisualizerComponent>();
	}
};
DUMPER7_ASSERTS_USCSoundAreaControllerVisualizerComponent;

// Class SCCore.TargetRelativeDirAnimSequencePicker
// 0x0110 (0x01B0 - 0x00A0)
class UTargetRelativeDirAnimSequencePicker final : public UAnimSequencePicker
{
public:
	struct FOnDemandTargetProvider                m_UseCustomDatasource;                             // 0x00A0(0x0058)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                          m_bUseTargetLocationWhenNoTargetVelocity;          // 0x00F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseTargetVelocity;                              // 0x00F9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESCAdvancedCardinalPoints, struct FAnimSequencePickerInstance> m_PickerPerAdvancedCardinal; // 0x0100(0x0050)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	ESCAdvancedCardinalPoints                     m_eDefaultAdvancedCardinal;                        // 0x0150(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESCCardinalPoints, struct FAnimSequencePickerInstance> m_PickerPerCardinal;                 // 0x0158(0x0050)(Deprecated, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	ESCCardinalPoints                             m_eDefaultCardinal;                                // 0x01A8(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bAreDataDeprecated;                              // 0x01A9(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetRelativeDirAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetRelativeDirAnimSequencePicker")
	}
	static class UTargetRelativeDirAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetRelativeDirAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UTargetRelativeDirAnimSequencePicker;

// Class SCCore.TargetHeightAnimSequencePicker
// 0x0010 (0x00B0 - 0x00A0)
class UTargetHeightAnimSequencePicker final : public UAnimSequencePicker
{
public:
	TArray<struct FTargetHeightAnimSequencePicker_PickerPerHeight> m_PerHeightAnimSequencePicker;    // 0x00A0(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetHeightAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetHeightAnimSequencePicker")
	}
	static class UTargetHeightAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetHeightAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UTargetHeightAnimSequencePicker;

// Class SCCore.SCWorldSubsystem
// 0x0010 (0x0160 - 0x0150)
class USCWorldSubsystem : public USCSubsystem
{
public:
	struct FGameplayTag                           m_AssociatedTag;                                   // 0x0150(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEnableInEditor;                                 // 0x0158(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bEnableOnlyInPrimaryPIEInstance;                 // 0x0159(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bEnableInPIEMultiInstances;                      // 0x015A(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_15B[0x5];                                      // 0x015B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnEditorTick(float _fDt);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldSubsystem")
	}
	static class USCWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWorldSubsystem>();
	}
};
DUMPER7_ASSERTS_USCWorldSubsystem;

// Class SCCore.SCMaterialCollectionSubsystem
// 0x0020 (0x0180 - 0x0160)
class USCMaterialCollectionSubsystem final : public USCWorldSubsystem
{
public:
	TArray<struct FSCMaterialCollectionParamBinding> m_MaterialParameterBindings;                    // 0x0160(0x0010)(Edit, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_170[0x10];                                     // 0x0170(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static int32 BPF_BindMPCParamToCharacterSocketLocation(class ACharacter* _character, class FName _socketName, class UMaterialParameterCollection* Collection, class FName ParameterName);
	static void BPF_Blend_MPC_ParameterCurve(class UObject* _owner, class UMaterialParameterCollection* Collection, class FName ParameterName, const class UCurveBase* _curve);
	static void BPF_Blend_MPC_ParameterCurveFinishable(class UObject* _owner, class UMaterialParameterCollection* Collection, class FName ParameterName, const class UCurveBase* _curve, TDelegate<void()> _onFinished);
	static void BPF_Blend_MPC_ParameterLinearColor(class UObject* _owner, class UMaterialParameterCollection* Collection, class FName ParameterName, const struct FLinearColor& _fromValue, const struct FLinearColor& _toValue, float _fDuration);
	static void BPF_Blend_MPC_ParameterLinearColorFinishable(class UObject* _owner, class UMaterialParameterCollection* Collection, class FName ParameterName, const struct FLinearColor& _fromValue, const struct FLinearColor& _toValue, float _fDuration, TDelegate<void()> _onFinished);
	static void BPF_Blend_MPC_ParameterLinearFloat(class UObject* _owner, class UMaterialParameterCollection* Collection, class FName ParameterName, float _fFromValue, float _fToValue, float _fDuration);
	static void BPF_Blend_MPC_ParameterLinearFloatFinishable(class UObject* _owner, class UMaterialParameterCollection* Collection, class FName ParameterName, float _fFromValue, float _fToValue, float _fDuration, TDelegate<void()> _onFinished);
	static void BPF_Blend_MPC_ParameterLinearVector(class UObject* _owner, class UMaterialParameterCollection* Collection, class FName ParameterName, const struct FVector& _fromValue, const struct FVector& _toValue, float _fDuration);
	static void BPF_Blend_MPC_ParameterLinearVectorFinishable(class UObject* _owner, class UMaterialParameterCollection* Collection, class FName ParameterName, const struct FVector& _fromValue, const struct FVector& _toValue, float _fDuration, TDelegate<void()> _onFinished);
	static void BPF_BlendMaterialParameterCurve(class UMeshComponent* _owner, class FName _name, const class UCurveBase* _curve, int32 _iMaterialIndex);
	static void BPF_BlendMaterialParameterCurveFinishable(class UMeshComponent* _owner, class FName _name, const class UCurveBase* _curve, TDelegate<void()> _onFinished, int32 _iMaterialIndex);
	static void BPF_BlendMaterialParameterLinearColor(class UMeshComponent* _owner, class FName _name, const struct FLinearColor& _fromValue, const struct FLinearColor& _toValue, float _fDuration, int32 _iMaterialIndex);
	static void BPF_BlendMaterialParameterLinearColorFinishable(class UMeshComponent* _owner, class FName _name, const struct FLinearColor& _fromValue, const struct FLinearColor& _toValue, float _fDuration, TDelegate<void()> _onFinished, int32 _iMaterialIndex);
	static void BPF_BlendMaterialParameterLinearFloat(class UMeshComponent* _owner, class FName _name, float _fFromValue, float _fToValue, float _fDuration, int32 _iMaterialIndex);
	static void BPF_BlendMaterialParameterLinearFloatFinishable(class UMeshComponent* _owner, class FName _name, float _fFromValue, float _fToValue, float _fDuration, TDelegate<void()> _onFinished, int32 _iMaterialIndex);
	static void BPF_BlendMaterialParameterLinearVector(class UMeshComponent* _owner, class FName _name, const struct FVector& _fromValue, const struct FVector& _toValue, float _fDuration, int32 _iMaterialIndex);
	static void BPF_BlendMaterialParameterLinearVectorFinishable(class UMeshComponent* _owner, class FName _name, const struct FVector& _fromValue, const struct FVector& _toValue, float _fDuration, TDelegate<void()> _onFinished, int32 _iMaterialIndex);
	static void BPF_DeleteParameterBinding(const class UObject* _worldContext, int32 _iHandle);
	static void BPF_SetMPCScalarParameterValue(const class UObject* _worldContext, class UMaterialParameterCollection* Collection, class FName ParameterName, float _fValue, bool _bPropagateToSubworlds);
	static void BPF_SetMPCVectorParameterValue(const class UObject* _worldContext, class UMaterialParameterCollection* Collection, class FName ParameterName, const struct FVector& _vValue, bool _bPropagateToSubworlds);
	static void BPF_SetRawIntegerParameterValue(class UMaterialInstanceDynamic* _material, class FName _parameterName, int32 _iValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCMaterialCollectionSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCMaterialCollectionSubsystem")
	}
	static class USCMaterialCollectionSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCMaterialCollectionSubsystem>();
	}
};
DUMPER7_ASSERTS_USCMaterialCollectionSubsystem;

// Class SCCore.VelocityCardinalAnimSequencePicker
// 0x0058 (0x00F8 - 0x00A0)
class UVelocityCardinalAnimSequencePicker final : public UAnimSequencePicker
{
public:
	struct FCardinalAnimSequenceData              m_Data;                                            // 0x00A0(0x0058)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VelocityCardinalAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VelocityCardinalAnimSequencePicker")
	}
	static class UVelocityCardinalAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVelocityCardinalAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UVelocityCardinalAnimSequencePicker;

// Class SCCore.SpeedStateAnimSequencePicker
// 0x0058 (0x00F8 - 0x00A0)
class USpeedStateAnimSequencePicker final : public UAnimSequencePicker
{
public:
	bool                                          m_bFallbackToMaxSpeedState;                        // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESCCharacterSpeedState, struct FAnimSequencePickerInstance> m_MontagePickerPerSpeedState;   // 0x00A8(0x0050)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpeedStateAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpeedStateAnimSequencePicker")
	}
	static class USpeedStateAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpeedStateAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_USpeedStateAnimSequencePicker;

// Class SCCore.SCBaseBlendMaterialSubsystemParam
// 0x0000 (0x0028 - 0x0028)
class USCBaseBlendMaterialSubsystemParam : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBaseBlendMaterialSubsystemParam")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBaseBlendMaterialSubsystemParam")
	}
	static class USCBaseBlendMaterialSubsystemParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBaseBlendMaterialSubsystemParam>();
	}
};
DUMPER7_ASSERTS_USCBaseBlendMaterialSubsystemParam;

// Class SCCore.SCBlendMaterialSubsystemParam
// 0x0008 (0x0030 - 0x0028)
class USCBlendMaterialSubsystemParam : public USCBaseBlendMaterialSubsystemParam
{
public:
	class FName                                   m_ParameterName;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBlendMaterialSubsystemParam")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBlendMaterialSubsystemParam")
	}
	static class USCBlendMaterialSubsystemParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBlendMaterialSubsystemParam>();
	}
};
DUMPER7_ASSERTS_USCBlendMaterialSubsystemParam;

// Class SCCore.SCBlendVectorCurveMaterialSubsystemParam
// 0x0188 (0x01B8 - 0x0030)
class USCBlendVectorCurveMaterialSubsystemParam final : public USCBlendMaterialSubsystemParam
{
public:
	struct FRuntimeVectorCurve                    m_Curve;                                           // 0x0030(0x0188)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBlendVectorCurveMaterialSubsystemParam")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBlendVectorCurveMaterialSubsystemParam")
	}
	static class USCBlendVectorCurveMaterialSubsystemParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBlendVectorCurveMaterialSubsystemParam>();
	}
};
DUMPER7_ASSERTS_USCBlendVectorCurveMaterialSubsystemParam;

// Class SCCore.InputAngleAnimationPicker
// 0x0050 (0x00F0 - 0x00A0)
class UInputAngleAnimationPicker final : public UAnimSequencePicker
{
public:
	bool                                          m_bRelativeToCharacterForward;                     // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bMirror;                                         // 0x00A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bApplyMirroringFromInputOnMontage;               // 0x00A2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAngleAnimationPickerData> m_Pickers;                                         // 0x00A8(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAnimSequencePickerInstance            M_Default;                                         // 0x00B8(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputAngleAnimationPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputAngleAnimationPicker")
	}
	static class UInputAngleAnimationPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputAngleAnimationPicker>();
	}
};
DUMPER7_ASSERTS_UInputAngleAnimationPicker;

// Class SCCore.SCAngleTargetDataHelpers
// 0x0000 (0x0028 - 0x0028)
class USCAngleTargetDataHelpers final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAngleTargetDataHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAngleTargetDataHelpers")
	}
	static class USCAngleTargetDataHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAngleTargetDataHelpers>();
	}
};
DUMPER7_ASSERTS_USCAngleTargetDataHelpers;

// Class SCCore.SCWidgetComponent
// 0x0000 (0x0028 - 0x0028)
class USCWidgetComponent : public UObject
{
public:
	void BPE_NotifyWidgetEvent(const struct FGameplayTag& _tag, const struct FGameplayAbilityTargetDataHandle& _dataHandle);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWidgetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWidgetComponent")
	}
	static class USCWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWidgetComponent>();
	}
};
DUMPER7_ASSERTS_USCWidgetComponent;

// Class SCCore.SCMaterialWidgetComponent
// 0x0010 (0x0038 - 0x0028)
class USCMaterialWidgetComponent final : public USCWidgetComponent
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCMaterialWidgetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCMaterialWidgetComponent")
	}
	static class USCMaterialWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCMaterialWidgetComponent>();
	}
};
DUMPER7_ASSERTS_USCMaterialWidgetComponent;

// Class SCCore.GameplayAbilityTargetingHelpers
// 0x0000 (0x0028 - 0x0028)
class UGameplayAbilityTargetingHelpers final : public UObject
{
public:
	static void BPF_ApplyBinaryOperation(struct FGameplayAbilityTargetDataHandle& _targetDataHandle, bool _bValue, const struct FGameplayTag& _name, ESCMathConditionExpression _eOperator);
	static class AActor* BPF_FindSingleTarget(const struct FGameplayAbilityTargetDataHandle& _handle);
	static uint8 BPF_GetNamedEnumValue(const struct FNamedEnumTargetData& _enum, const class UEnum* _enumObject);
	static void BPF_MakeActorLocationTargetDataFromActor(class AActor* _actor, class AActor* _target, struct FActorLocationTargetData* _result);
	static struct FNamedEnumTargetData BPF_MakeNamedEnum(uint8 _enum, class UEnum* _enumObject);
	static struct FNamedVectorQuantTargetData BPF_MakeNamedVectorNetQuantTargetData(const struct FGameplayTag& _tag, const struct FVector& _vector);
	static bool BPF_SetNamedBoolTargetData(EAbilityExecOrigin _eIn, EAbilityExecOrigin* _eOut, class USCGameplayAbility* _ability, const struct FGameplayAbilityTargetDataHandle& _playerContext, const struct FGameplayTag& _name, bool _bValue, bool _bEnsureIfMissing);
	static float BPF_SetNamedFloatTargetData(EAbilityExecOrigin _eIn, EAbilityExecOrigin* _eOut, class USCGameplayAbility* _ability, const struct FGameplayAbilityTargetDataHandle& _playerContext, const struct FGameplayTag& _name, float _fValue, bool _bEnsureIfMissing);
	static int32 BPF_SetNamedIntegerTargetData(EAbilityExecOrigin _eIn, EAbilityExecOrigin* _eOut, class USCGameplayAbility* _ability, const struct FGameplayAbilityTargetDataHandle& _playerContext, const struct FGameplayTag& _name, int32 _iValue, bool _bEnsureIfMissing);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayAbilityTargetingHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayAbilityTargetingHelpers")
	}
	static class UGameplayAbilityTargetingHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayAbilityTargetingHelpers>();
	}
};
DUMPER7_ASSERTS_UGameplayAbilityTargetingHelpers;

// Class SCCore.SCMenuWidget
// 0x0070 (0x0C60 - 0x0BF0)
class USCMenuWidget : public USCUserWidget
{
public:
	TMulticastInlineDelegate<void(class USCMenuWidget* _menu)> m_OnTransitionFinished;               // 0x0BF0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          m_bIgnoreKeyFlushOnFocus;                          // 0x0C00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C01[0x3];                                      // 0x0C01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_OnTransitionInTag;                               // 0x0C04(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_OnTransitionOutTag;                              // 0x0C0C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bWaitOutAnimEndToShowNextMenu;                   // 0x0C14(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bDisableInputWhileTransitioningIn;               // 0x0C15(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bDisableInputWhileTransitioningOut;              // 0x0C16(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bDisableInputAfterTransitionOut;                 // 0x0C17(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       m_TransitionInAnimation;                           // 0x0C18(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       m_TransitionOutAnimation;                          // 0x0C20(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWidgetLifeCycle                              m_eLifeCycle;                                      // 0x0C28(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bBlockParentMenuInputs;                          // 0x0C29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bBlockInputsWhenUIInputDisabled;                 // 0x0C2A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bHideOnPushedOut;                                // 0x0C2B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bHideOnPopOut;                                   // 0x0C2C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESlateVisibility                              m_CurrentMenuVisibility;                           // 0x0C2D(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C2E[0x2];                                      // 0x0C2E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iZOrder;                                         // 0x0C30(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bRestoreLastFocusedChild;                        // 0x0C34(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C35[0x3];                                      // 0x0C35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class USCUserWidget>           m_LastFocusedChild;                                // 0x0C38(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C40[0x20];                                     // 0x0C40(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnMenuTransitionIn(EMenuTransitions _eTransition, TSubclassOf<class USCMenuWidget> _ePrevMenu);
	void BPE_OnMenuTransitionOut(EMenuTransitions _eTransition, TSubclassOf<class USCMenuWidget> _eNewMenu);
	void BPF_DisableInputs();
	void BPF_EnableInputs();
	void BPF_ResetLastFocusedChild();

	bool BPF_AreInputsEnabled() const;
	int32 BPF_GetZOrder() const;
	bool BPF_IsCurrentMenu() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCMenuWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCMenuWidget")
	}
	static class USCMenuWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCMenuWidget>();
	}
};
DUMPER7_ASSERTS_USCMenuWidget;

// Class SCCore.SingleGenericInputConditionProxy
// 0x0170 (0x01A0 - 0x0030)
class USingleGenericInputConditionProxy final : public UInputConditionProxy
{
public:
	struct FInputMappingKeySlotContainer          m_Slot;                                            // 0x0030(0x0170)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SingleGenericInputConditionProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SingleGenericInputConditionProxy")
	}
	static class USingleGenericInputConditionProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USingleGenericInputConditionProxy>();
	}
};
DUMPER7_ASSERTS_USingleGenericInputConditionProxy;

// Class SCCore.SelfTargetDatasource
// 0x0000 (0x0080 - 0x0080)
class USelfTargetDatasource final : public UTargetDatasource
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SelfTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SelfTargetDatasource")
	}
	static class USelfTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<USelfTargetDatasource>();
	}
};
DUMPER7_ASSERTS_USelfTargetDatasource;

// Class SCCore.SCFlowGraphNode
// 0x0148 (0x0170 - 0x0028)
class USCFlowGraphNode : public UObject
{
public:
	uint8                                         Pad_28[0x30];                                      // 0x0028(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class USCFlowGraph*                           m_SubFlowGraphClass;                               // 0x0058(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCFlowGraph*                           m_SubFlowGraphInstance;                            // 0x0060(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bStartSubFlowGraphOnEnter;                       // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_Id;                                              // 0x006C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class USCFlowGraphNode*>    m_OutputTransitions;                               // 0x0078(0x0050)(Deprecated, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, struct FSCFlowGraphNodeLink> m_LinksToNodes;                                   // 0x00C8(0x0050)(Edit, ExportObject, EditConst, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, struct FBinderWithConditionInstance> m_ActiveExitConditions;                   // 0x0118(0x0050)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bClearFlowHistory;                               // 0x0168(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bCollapseHistoryLoop;                            // 0x0169(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iFlags;                                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BPE_EnteringState(class UObject* _stateMachineOwner, const class FName& _previousStateId);
	void BPE_ExitingState(class UObject* _stateMachineOwner);
	void BPF_ExitState(const struct FGameplayTag& _exitName, const struct FGameplayAbilityTargetDataHandle& _payload);
	void BPF_StartSubFlowGraph();
	void OnActiveExitConditionTriggered(const struct FGameplayAbilityTargetDataHandle& _eventData, class FName _transitionName);
	void OnExitSubGraph(const struct FGameplayTag& _exitName);

	class FString BPE_GetDebutLog() const;
	class USCFlowGraph* BPF_GetGraph() const;
	class UObject* BPF_GetGraphOwner() const;
	void BPF_GetProvidedTargetData(struct FGameplayAbilityTargetDataHandle* _outTargetData) const;
	class USCFlowGraph* BPF_GetSubGraph() const;
	TArray<class FName> GetOutputTransitionNames() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFlowGraphNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFlowGraphNode")
	}
	static class USCFlowGraphNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFlowGraphNode>();
	}
};
DUMPER7_ASSERTS_USCFlowGraphNode;

// Class SCCore.SCFlowGraphStartNode
// 0x0000 (0x0170 - 0x0170)
class USCFlowGraphStartNode : public USCFlowGraphNode
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFlowGraphStartNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFlowGraphStartNode")
	}
	static class USCFlowGraphStartNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFlowGraphStartNode>();
	}
};
DUMPER7_ASSERTS_USCFlowGraphStartNode;

// Class SCCore.SequentialDatasource
// 0x0010 (0x00D8 - 0x00C8)
class USequentialDatasource final : public UParentTargetDatasource
{
public:
	TArray<struct FTargetDatasourceInstance>      m_Sequence;                                        // 0x00C8(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SequentialDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SequentialDatasource")
	}
	static class USequentialDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<USequentialDatasource>();
	}
};
DUMPER7_ASSERTS_USequentialDatasource;

// Class SCCore.SCFootIkService
// 0x0000 (0x0028 - 0x0028)
class USCFootIkService : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFootIkService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFootIkService")
	}
	static class USCFootIkService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFootIkService>();
	}
};
DUMPER7_ASSERTS_USCFootIkService;

// Class SCCore.SCFootIkRaycast
// 0x0010 (0x0038 - 0x0028)
class USCFootIkRaycast : public USCFootIkService
{
public:
	float                                         m_fTraceUpLength;                                  // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTraceDownLength;                                // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECollisionChannel                             m_eCollisionChannel;                               // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool DoRaycast(struct FHitResult* _outHitResult, class USCFootIkAnimInstance* _footAnimInstance, const struct FVector& _vStart, const struct FVector& _vEnd) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFootIkRaycast")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFootIkRaycast")
	}
	static class USCFootIkRaycast* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFootIkRaycast>();
	}
};
DUMPER7_ASSERTS_USCFootIkRaycast;

// Class SCCore.CacheTargetDatasource
// 0x0018 (0x00E0 - 0x00C8)
class UCacheTargetDatasource : public UParentTargetDatasource
{
public:
	float                                         m_fLifeSpan;                                       // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetDataConditionInstance           m_InvalidationCondition;                           // 0x00D0(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CacheTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CacheTargetDatasource")
	}
	static class UCacheTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCacheTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UCacheTargetDatasource;

// Class SCCore.ConditionalTargetDatasource
// 0x0070 (0x0138 - 0x00C8)
class UConditionalTargetDatasource : public UParentTargetDatasource
{
public:
	uint8                                         Pad_C8[0x10];                                      // 0x00C8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	EConditionalTargetDatasource_ConditionTarget  m_eConditionTarget;                                // 0x00D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConditionalTargetDatasourceData> m_Datasources;                                   // 0x00E0(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetDatasourceInstance              m_Fallback;                                        // 0x00F0(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class FString GetConditionalTargetDatasourceDataEditorDesc(const struct FConditionalTargetDatasourceData& _instance);
	static class FString GetConditionalTargetDatasourceDataNodalEditorDesc(const struct FConditionalTargetDatasourceData& _instance);

	class FString GetFallbackName();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConditionalTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConditionalTargetDatasource")
	}
	static class UConditionalTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConditionalTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UConditionalTargetDatasource;

// Class SCCore.SCFootIkPredictionByVelocity
// 0x0018 (0x0040 - 0x0028)
class USCFootIkPredictionByVelocity final : public USCFootIkService
{
public:
	struct FFloatRange                            m_activationRange;                                 // 0x0028(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fMinRequiredVelocity;                            // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseLastGroundNormal;                            // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFootIkPredictionByVelocity")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFootIkPredictionByVelocity")
	}
	static class USCFootIkPredictionByVelocity* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFootIkPredictionByVelocity>();
	}
};
DUMPER7_ASSERTS_USCFootIkPredictionByVelocity;

// Class SCCore.AnimSequencePickerTargetDatasource
// 0x0048 (0x0110 - 0x00C8)
class UAnimSequencePickerTargetDatasource final : public UParentTargetDatasource
{
public:
	bool                                          m_bDismissTargetWhenNoAnim;                        // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePickerInstance            m_AnimPicker;                                      // 0x00D0(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bIgnoreParentDatasource;                         // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimSequencePickerTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimSequencePickerTargetDatasource")
	}
	static class UAnimSequencePickerTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimSequencePickerTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UAnimSequencePickerTargetDatasource;

// Class SCCore.ProjectTargetOnInputDatasource
// 0x0020 (0x00E8 - 0x00C8)
class UProjectTargetOnInputDatasource final : public UParentTargetDatasource
{
public:
	bool                                          m_bFallbackToActorForward;                         // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxHorizontalNoSnapRange;                       // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxHorizontalSnapRange;                         // 0x00D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bHalfCapsuleShape;                               // 0x00D4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_DistanceRange;                                   // 0x00D8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ProjectTargetOnInputDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ProjectTargetOnInputDatasource")
	}
	static class UProjectTargetOnInputDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProjectTargetOnInputDatasource>();
	}
};
DUMPER7_ASSERTS_UProjectTargetOnInputDatasource;

// Class SCCore.SCGameFlowQuitGameState
// 0x0000 (0x0170 - 0x0170)
class USCGameFlowQuitGameState final : public USCFlowGraphNode
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameFlowQuitGameState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameFlowQuitGameState")
	}
	static class USCGameFlowQuitGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameFlowQuitGameState>();
	}
};
DUMPER7_ASSERTS_USCGameFlowQuitGameState;

// Class SCCore.SpeedStateTargetDatasource
// 0x0168 (0x01E8 - 0x0080)
class USpeedStateTargetDatasource : public UTargetDatasource
{
public:
	struct FTargetDatasourceInstance              m_Datasources[0x4];                                // 0x0080(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetDatasourceInstance              m_Fallback;                                        // 0x01A0(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpeedStateTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpeedStateTargetDatasource")
	}
	static class USpeedStateTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpeedStateTargetDatasource>();
	}
};
DUMPER7_ASSERTS_USpeedStateTargetDatasource;

// Class SCCore.ReachableOnTimeTargetDatasource
// 0x00A0 (0x0168 - 0x00C8)
class UReachableOnTimeTargetDatasource : public UParentTargetDatasource
{
public:
	TMap<ETargetReachableOnTimeWithLocoCondition_Result, struct FReachableOnTimeTargetDatasourceBehavior> m_BehaviorPerResult; // 0x00C8(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FReachableOnTimeTargetDatasourceBehavior m_DefaultBehavior;                               // 0x0118(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTargetReachableOnTimeWithLocoConditionData m_Data;                                       // 0x0124(0x0044)(Edit, NoDestructor, NativeAccessSpecifierPublic)

public:
	ETargetReachableOnTimeWithLocoCondition_Result BPF_EvaluateTargetSpeed(const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _handle, bool _bLog) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ReachableOnTimeTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ReachableOnTimeTargetDatasource")
	}
	static class UReachableOnTimeTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReachableOnTimeTargetDatasource>();
	}
};
DUMPER7_ASSERTS_UReachableOnTimeTargetDatasource;

// Class SCCore.SCPoolableActorsContainer
// 0x0028 (0x02D8 - 0x02B0)
class ASCPoolableActorsContainer final : public AActor
{
public:
	TArray<struct FSCPoolableActorsContainerPoolEntry> m_Pools;                                      // 0x02B0(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C0[0x18];                                     // 0x02C0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class AActor* BPF_AddActor(TSubclassOf<class AActor> _class, class FName _poolName, bool _bRenameWithPoolName);
	void BPF_AddActors(TSubclassOf<class AActor> _class, int32 _iCount, TArray<class AActor*>* _outCreatedActors, class FName _poolName);
	class ASCCharacterImpostor* BPF_AddCharacterImpostor(class FName _poolName, bool _bRenameWithPoolName);
	int32 BPF_GetActorsCount(TSubclassOf<class AActor> _class);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPoolableActorsContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPoolableActorsContainer")
	}
	static class ASCPoolableActorsContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCPoolableActorsContainer>();
	}
};
DUMPER7_ASSERTS_ASCPoolableActorsContainer;

// Class SCCore.SelfTransformWithInputDirTargetDatasource
// 0x0048 (0x00C8 - 0x0080)
class USelfTransformWithInputDirTargetDatasource final : public UTargetDatasource
{
public:
	struct FTargetDatasourceInstance              m_DatasourceWhenNoInputDir;                        // 0x0080(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SelfTransformWithInputDirTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SelfTransformWithInputDirTargetDatasource")
	}
	static class USelfTransformWithInputDirTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<USelfTransformWithInputDirTargetDatasource>();
	}
};
DUMPER7_ASSERTS_USelfTransformWithInputDirTargetDatasource;

// Class SCCore.PredictActorLocationAtTargetTimeDatasource
// 0x0000 (0x00C8 - 0x00C8)
class UPredictActorLocationAtTargetTimeDatasource final : public UParentTargetDatasource
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PredictActorLocationAtTargetTimeDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PredictActorLocationAtTargetTimeDatasource")
	}
	static class UPredictActorLocationAtTargetTimeDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPredictActorLocationAtTargetTimeDatasource>();
	}
};
DUMPER7_ASSERTS_UPredictActorLocationAtTargetTimeDatasource;

// Class SCCore.SCPopupActionViewModel
// 0x00F8 (0x0168 - 0x0070)
class USCPopupActionViewModel final : public USCViewModel
{
public:
	struct FGameplayTag                           m_EventTag;                                        // 0x0070(0x0008)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_DisplayName;                                     // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMappingID                             m_MappingID;                                       // 0x0088(0x00D0)(Edit, BlueprintVisible, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_FocusColorOverride;                              // 0x0158(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPopupActionViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPopupActionViewModel")
	}
	static class USCPopupActionViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPopupActionViewModel>();
	}
};
DUMPER7_ASSERTS_USCPopupActionViewModel;

// Class SCCore.GroupTargetsPicker
// 0x0010 (0x0038 - 0x0028)
class UGroupTargetsPicker final : public UTargetPicker
{
public:
	TArray<struct FTargetPickerInstance>          m_Pickers;                                         // 0x0028(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GroupTargetsPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GroupTargetsPicker")
	}
	static class UGroupTargetsPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroupTargetsPicker>();
	}
};
DUMPER7_ASSERTS_UGroupTargetsPicker;

// Class SCCore.PriorityTargetsPicker
// 0x0010 (0x0038 - 0x0028)
class UPriorityTargetsPicker final : public UTargetPicker
{
public:
	TArray<struct FPriorityTargetsPickerInfos>    m_TargetPickers;                                   // 0x0028(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PriorityTargetsPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PriorityTargetsPicker")
	}
	static class UPriorityTargetsPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPriorityTargetsPicker>();
	}
};
DUMPER7_ASSERTS_UPriorityTargetsPicker;

// Class SCCore.SCPositionBakeSceneCapture
// 0x0068 (0x0318 - 0x02B0)
class ASCPositionBakeSceneCapture final : public AActor
{
public:
	class USCCaptureComponent2D*                  m_SceneCaptureComponent;                           // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iDebugSwitch;                                    // 0x02B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iBakedPositionTextureSize;                       // 0x02BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_BakedLocalPositionDrawer;                        // 0x02C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_BakedPreSkinnedPositionDrawer;                   // 0x02C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinusZDistance;                                 // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_MinusZDistanceParameterName;                     // 0x02D4(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_TextureSizeParameterName;                        // 0x02DC(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_BoundsMinParameterName;                          // 0x02E4(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_BoundsMaxParameterName;                          // 0x02EC(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_ChannelUVParameterName;                          // 0x02F4(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 m_BakedPositionTextureTarget;                      // 0x0300(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               m_BakedLocalPositionDrawerInstanceDynamic;         // 0x0308(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               m_BakedPreSkinnedPositionDrawerInstanceDynamic;    // 0x0310(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPositionBakeSceneCapture")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPositionBakeSceneCapture")
	}
	static class ASCPositionBakeSceneCapture* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCPositionBakeSceneCapture>();
	}
};
DUMPER7_ASSERTS_ASCPositionBakeSceneCapture;

// Class SCCore.ConditionalTargetsPicker
// 0x0020 (0x0048 - 0x0028)
class UConditionalTargetsPicker final : public UTargetPicker
{
public:
	TArray<struct FConditionTargetsPickerInfos>   m_TargetPickerPerCondition;                        // 0x0028(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetPickerInstance                  m_Fallback;                                        // 0x0038(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConditionalTargetsPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConditionalTargetsPicker")
	}
	static class UConditionalTargetsPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConditionalTargetsPicker>();
	}
};
DUMPER7_ASSERTS_UConditionalTargetsPicker;

// Class SCCore.ConditionalTargetWeightEvaluation
// 0x0018 (0x0048 - 0x0030)
class UConditionalTargetWeightEvaluation final : public UTargetWeightEvaluation
{
public:
	float                                         m_fTrueWeight;                                     // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFalseWeight;                                    // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0038(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ConditionalTargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ConditionalTargetWeightEvaluation")
	}
	static class UConditionalTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConditionalTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UConditionalTargetWeightEvaluation;

// Class SCCore.RootMotionModifier_Freeze
// 0x0010 (0x0130 - 0x0120)
class URootMotionModifier_Freeze final : public USCRootMotionModifier
{
public:
	bool                                          m_bOnlyAtSmallPlayRate;                            // 0x0120(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxPlayRateToFreeze;                            // 0x0124(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_Freeze")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_Freeze")
	}
	static class URootMotionModifier_Freeze* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_Freeze>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_Freeze;

// Class SCCore.WeightedConditionalTargetWeightEvaluation
// 0x0008 (0x0038 - 0x0030)
class UWeightedConditionalTargetWeightEvaluation final : public UTargetWeightEvaluation
{
public:
	TSubclassOf<class UTargetDataConditionWithWeightEvaluation> m_Condition;                         // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeightedConditionalTargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeightedConditionalTargetWeightEvaluation")
	}
	static class UWeightedConditionalTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeightedConditionalTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UWeightedConditionalTargetWeightEvaluation;

// Class SCCore.DistanceTargetWeightEvaluation
// 0x0020 (0x0050 - 0x0030)
class UDistanceTargetWeightEvaluation final : public UTargetWeightEvaluation
{
public:
	class UCurveFloat*                            m_WeightCurve;                                     // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinWeightDistance;                              // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinWeight;                                      // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxWeightDistance;                              // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxWeight;                                      // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAllowOutOfBoundsDistance;                       // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseHorizontalSpace;                             // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DistanceTargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DistanceTargetWeightEvaluation")
	}
	static class UDistanceTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDistanceTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UDistanceTargetWeightEvaluation;

// Class SCCore.SCUserDefinedEnumHandlerHelper
// 0x0000 (0x0028 - 0x0028)
class USCUserDefinedEnumHandlerHelper final : public UBlueprintFunctionLibrary
{
public:
	static bool BPF_Equal(const struct FSCUserDefinedEnumHandler& _enum1, const struct FSCUserDefinedEnumHandler& _enum2);
	static class FText BPF_GetEnumDisplayName(const struct FSCUserDefinedEnumHandler& _enum);
	static class FName BPF_GetEnumNameValue(const struct FSCUserDefinedEnumHandler& _enum);
	static uint8 BPF_GetEnumValue(const struct FSCUserDefinedEnumHandler& _enum, const class UEnum* _enumObject);
	static bool BPF_IsEnumValid(const struct FSCUserDefinedEnumHandler& _enum);
	static void BPF_SetEnumValue(struct FSCUserDefinedEnumHandler& _enum, uint8 _uiEnumValue);
	static void ConvertEnumToCustomSCUserEnum(class UEnum* _enum, uint8 _Value, struct FSCUserDefinedEnumHandler* _outNetOrderStruct);

	bool BPF_FindUserDefinedAvailableKey(int64 _structPtr, int32 _iIndex);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCUserDefinedEnumHandlerHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCUserDefinedEnumHandlerHelper")
	}
	static class USCUserDefinedEnumHandlerHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCUserDefinedEnumHandlerHelper>();
	}
};
DUMPER7_ASSERTS_USCUserDefinedEnumHandlerHelper;

// Class SCCore.ProjectedDistTargetWeightEvaluation
// 0x0010 (0x0040 - 0x0030)
class UProjectedDistTargetWeightEvaluation final : public UTargetWeightEvaluation
{
public:
	EAxis                                         m_eAxis;                                           // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMinWeightDist;                                  // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxWeightDist;                                  // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxWeight;                                      // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ProjectedDistTargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ProjectedDistTargetWeightEvaluation")
	}
	static class UProjectedDistTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProjectedDistTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UProjectedDistTargetWeightEvaluation;

// Class SCCore.GameplayAttributeTargetWeightEvaluation
// 0x00B8 (0x00E8 - 0x0030)
class UGameplayAttributeTargetWeightEvaluation final : public UTargetWeightEvaluation
{
public:
	EGameplayAttributePercentagePolicy            m_attributePercentagePolicy;                       // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     m_FirstAttribute;                                  // 0x0038(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxAttributeValue;                              // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     m_SecondAttribute;                                 // 0x0078(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCBlendType                                  m_eScoringCurveType;                               // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_CustomScoringCurve;                              // 0x00B8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bInvertResult;                                   // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_fInputRange;                                     // 0x00C4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_fOutputWeightRange;                              // 0x00D4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GameplayAttributeTargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GameplayAttributeTargetWeightEvaluation")
	}
	static class UGameplayAttributeTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayAttributeTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UGameplayAttributeTargetWeightEvaluation;

// Class SCCore.SCVideoPointLightComponent
// 0x0030 (0x03F0 - 0x03C0)
class USCVideoPointLightComponent final : public UPointLightComponent
{
public:
	struct FLinearColor                           m_FilterAdjustment;                                // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMediaTexture*                          m_MediaTex;                                        // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLengthInSecond;                                 // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      m_ColourCurve;                                     // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMediaOpen(const class FString& _openedUrl);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVideoPointLightComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVideoPointLightComponent")
	}
	static class USCVideoPointLightComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCVideoPointLightComponent>();
	}
};
DUMPER7_ASSERTS_USCVideoPointLightComponent;

// Class SCCore.GroupCondition
// 0x0018 (0x0040 - 0x0028)
class UGroupCondition final : public UBaseActorCondition
{
public:
	EConditionGroupOperators                      m_eOperator;                                       // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBaseActorConditionInstance>    m_Conditions;                                      // 0x0030(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GroupCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GroupCondition")
	}
	static class UGroupCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroupCondition>();
	}
};
DUMPER7_ASSERTS_UGroupCondition;

// Class SCCore.SCVideoRectLight
// 0x0000 (0x02C8 - 0x02C8)
class ASCVideoRectLight final : public ARectLight
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVideoRectLight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVideoRectLight")
	}
	static class ASCVideoRectLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCVideoRectLight>();
	}
};
DUMPER7_ASSERTS_ASCVideoRectLight;

// Class SCCore.GroupInputConditionSubCondition_Input
// 0x0018 (0x0048 - 0x0030)
class UGroupInputConditionSubCondition_Input final : public UGroupInputConditionSubConditionType_Lifespan
{
public:
	int32                                         m_iSlotIndex;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCanBeReset;                                     // 0x0034(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bResetOnActivation;                              // 0x0035(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UInputConditionData>        m_Input;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bRegisterPressTimeOnStack;                       // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bRemovePressedTimeFromTimeLeft;                  // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GroupInputConditionSubCondition_Input")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GroupInputConditionSubCondition_Input")
	}
	static class UGroupInputConditionSubCondition_Input* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroupInputConditionSubCondition_Input>();
	}
};
DUMPER7_ASSERTS_UGroupInputConditionSubCondition_Input;

// Class SCCore.GroupInputConditionData
// 0x0008 (0x0080 - 0x0078)
class UGroupInputConditionData : public UInputConditionData
{
public:
	class UGroupInputConditionSubConditionType*   m_Group;                                           // 0x0078(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GroupInputConditionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GroupInputConditionData")
	}
	static class UGroupInputConditionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroupInputConditionData>();
	}
};
DUMPER7_ASSERTS_UGroupInputConditionData;

// Class SCCore.SCVolumeActor
// 0x0008 (0x02B8 - 0x02B0)
class ASCVolumeActor : public AActor
{
public:
	class USCVolumeComponent*                     m_VolumeComponent;                                 // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class USCVolumeComponent* BPF_GetVolumeComponent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVolumeActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVolumeActor")
	}
	static class ASCVolumeActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCVolumeActor>();
	}
};
DUMPER7_ASSERTS_ASCVolumeActor;

// Class SCCore.SCVolumePortalActor
// 0x0000 (0x02B8 - 0x02B8)
class ASCVolumePortalActor : public ASCVolumeActor
{
public:
	class USCVolumePortalComponent* BPF_GetPortalVolumeComponent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVolumePortalActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVolumePortalActor")
	}
	static class ASCVolumePortalActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCVolumePortalActor>();
	}
};
DUMPER7_ASSERTS_ASCVolumePortalActor;

// Class SCCore.SCVolumePlayerPortalActor
// 0x0000 (0x02B8 - 0x02B8)
class ASCVolumePlayerPortalActor final : public ASCVolumePortalActor
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVolumePlayerPortalActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVolumePlayerPortalActor")
	}
	static class ASCVolumePlayerPortalActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCVolumePlayerPortalActor>();
	}
};
DUMPER7_ASSERTS_ASCVolumePlayerPortalActor;

// Class SCCore.HandleInput
// 0x0000 (0x0000 - 0x0000)
class IHandleInput final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HandleInput")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HandleInput")
	}
	static class IHandleInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<IHandleInput>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IHandleInput;

// Class SCCore.HitResultSideAnimSequencePicker
// 0x0070 (0x0110 - 0x00A0)
class UHitResultSideAnimSequencePicker final : public UAnimSequencePicker
{
public:
	struct FAnimSequencePickerInstance            m_LeftSide;                                        // 0x00A0(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAnimSequencePickerInstance            m_RightSide;                                       // 0x00D8(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HitResultSideAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HitResultSideAnimSequencePicker")
	}
	static class UHitResultSideAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitResultSideAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_UHitResultSideAnimSequencePicker;

// Class SCCore.SCSoundSubsystem
// 0x0030 (0x0180 - 0x0150)
class USCSoundSubsystem : public USCSubsystem
{
public:
	TArray<TWeakObjectPtr<class ASCSoundCrossFade>> m_OverlappedCrossFadeList;                       // 0x0150(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class ASCSoundAreaController>> m_OverlappedSoundAreaControllerList;        // 0x0160(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class ASCPlayerVolumeActor>> m_OverlappedSoundAreaList;                    // 0x0170(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSoundSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSoundSubsystem")
	}
	static class USCSoundSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSoundSubsystem>();
	}
};
DUMPER7_ASSERTS_USCSoundSubsystem;

// Class SCCore.GenericInputUIData
// 0x0000 (0x0028 - 0x0028)
class UGenericInputUIData : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GenericInputUIData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GenericInputUIData")
	}
	static class UGenericInputUIData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGenericInputUIData>();
	}
};
DUMPER7_ASSERTS_UGenericInputUIData;

// Class SCCore.InputDirAngleTargetWeightEvaluation
// 0x0000 (0x0050 - 0x0050)
class UInputDirAngleTargetWeightEvaluation final : public UAngleTargetWeightEvaluation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputDirAngleTargetWeightEvaluation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputDirAngleTargetWeightEvaluation")
	}
	static class UInputDirAngleTargetWeightEvaluation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputDirAngleTargetWeightEvaluation>();
	}
};
DUMPER7_ASSERTS_UInputDirAngleTargetWeightEvaluation;

// Class SCCore.SCStatBehaviour
// 0x0018 (0x0040 - 0x0028)
class USCStatBehaviour : public UObject
{
public:
	TWeakObjectPtr<class USCStatController>       m_StatController;                                  // 0x0028(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EComputationType                              m_eComputation;                                    // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStatBehaviour")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStatBehaviour")
	}
	static class USCStatBehaviour* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStatBehaviour>();
	}
};
DUMPER7_ASSERTS_USCStatBehaviour;

// Class SCCore.SCStatBehaviourTimer
// 0x0018 (0x0058 - 0x0040)
class USCStatBehaviourTimer : public USCStatBehaviour
{
public:
	ETimerBehaviour                               m_eBehaviour;                                      // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTimerUpdateRate;                                // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStatBehaviourTimer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStatBehaviourTimer")
	}
	static class USCStatBehaviourTimer* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStatBehaviourTimer>();
	}
};
DUMPER7_ASSERTS_USCStatBehaviourTimer;

// Class SCCore.InputHelpers
// 0x0000 (0x0028 - 0x0028)
class UInputHelpers final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_ComputeDurationUsingInput(const struct FReplicatedInputActionInfos& _inputInfos, const class UCurveFloat* _fillFactorByAnalogPressValueCurve, float& _fInOutDuration, float& _fInOutInputHoldDuration);
	static void BPF_ComputeDurationUsingInputState(const struct FInputActionState& _inputState, const class UCurveFloat* _fillFactorByAnalogPressValueCurve, float& _fInOutDuration, float& _fInOutInputHoldDuration);
	static float BPF_GetInputActionPressedDurationNormalized(class ASCBasePlayerController* _PlayerController, class USCInputAction* _eInputAction);
	static struct FVector BPF_TransformInputVectorUsingOrientation(const struct FVector2D& _vInputVector, const struct FQuat& _qOrientation);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputHelpers")
	}
	static class UInputHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputHelpers>();
	}
};
DUMPER7_ASSERTS_UInputHelpers;

// Class SCCore.InputConditionMappingDB
// 0x0050 (0x0078 - 0x0028)
class UInputConditionMappingDB : public UObject
{
public:
	TMap<class USCInputAction*, struct FInputMapping> m_ActionMapping;                               // 0x0028(0x0050)(Edit, SaveGame, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputConditionMappingDB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputConditionMappingDB")
	}
	static class UInputConditionMappingDB* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputConditionMappingDB>();
	}
};
DUMPER7_ASSERTS_UInputConditionMappingDB;

// Class SCCore.InputMappingProfileUIData
// 0x0000 (0x0028 - 0x0028)
class UInputMappingProfileUIData final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputMappingProfileUIData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputMappingProfileUIData")
	}
	static class UInputMappingProfileUIData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputMappingProfileUIData>();
	}
};
DUMPER7_ASSERTS_UInputMappingProfileUIData;

// Class SCCore.SCCurveHelpers
// 0x0000 (0x0028 - 0x0028)
class USCCurveHelpers final : public UBlueprintFunctionLibrary
{
public:
	static struct FVector BPF_ComputeVectorCurveTotalLength(const class UCurveVector* _curve, const float _fPercentagePerStep);
	static float BPF_EvaluateFloatCurveAtPercentage(const class UCurveFloat* _curve, const float _fPercentage);
	static struct FVector BPF_EvaluateVectorCurveAtPercentage(const class UCurveVector* _curve, const float _fPercentage);
	static float SearchReciprocalValueInCurve(const class UCurveFloat* _curve, const float _fY);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCurveHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCurveHelpers")
	}
	static class USCCurveHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCurveHelpers>();
	}
};
DUMPER7_ASSERTS_USCCurveHelpers;

// Class SCCore.SCStatControllerBase
// 0x0068 (0x0090 - 0x0028)
class USCStatControllerBase : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_DisplayName;                                     // 0x0040(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   m_DisplayShortName;                                // 0x0050(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FString                                 m_ServiceNameId;                                   // 0x0060(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_70[0x20];                                      // 0x0070(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Deactivate();
	void Reset(bool _bResetHistoric, bool _bResetValue);
	void SetIsActive(bool _bIsActive);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStatControllerBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStatControllerBase")
	}
	static class USCStatControllerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStatControllerBase>();
	}
};
DUMPER7_ASSERTS_USCStatControllerBase;

// Class SCCore.SCStatControllerComposite
// 0x0010 (0x00A0 - 0x0090)
class USCStatControllerComposite : public USCStatControllerBase
{
public:
	uint8                                         Pad_90[0x10];                                      // 0x0090(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChildValueChanged(const struct FSCStatId& _childStatId, float _childValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStatControllerComposite")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStatControllerComposite")
	}
	static class USCStatControllerComposite* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStatControllerComposite>();
	}
};
DUMPER7_ASSERTS_USCStatControllerComposite;

// Class SCCore.SCStatControllerRatio
// 0x0060 (0x0100 - 0x00A0)
class USCStatControllerRatio final : public USCStatControllerComposite
{
public:
	TSoftClassPtr<class UClass>                   m_NominatorStatPtr;                                // 0x00A0(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   m_DenominatorStatPtr;                              // 0x00C8(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x10];                                      // 0x00F0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStatControllerRatio")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStatControllerRatio")
	}
	static class USCStatControllerRatio* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStatControllerRatio>();
	}
};
DUMPER7_ASSERTS_USCStatControllerRatio;

// Class SCCore.InputMappingProfileDB
// 0x01C8 (0x01F0 - 0x0028)
class UInputMappingProfileDB : public UObject
{
public:
	class UInputMappingProfileUIData*             m_UIData;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bGamepadMapping;                                 // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UInputConditionMappingDB>> m_Mappings;                                  // 0x0038(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UInputMappingPresetDB>> m_SubPresetDBs;                                 // 0x0048(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FInputMappingPresets                   m_MappingPresets;                                  // 0x0058(0x00A0)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_F8[0xF8];                                      // 0x00F8(0x00F8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputMappingProfileDB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputMappingProfileDB")
	}
	static class UInputMappingProfileDB* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputMappingProfileDB>();
	}
};
DUMPER7_ASSERTS_UInputMappingProfileDB;

// Class SCCore.WidgetData
// 0x0020 (0x0048 - 0x0028)
class UWidgetData : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_NotifyDataUpdated();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WidgetData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WidgetData")
	}
	static class UWidgetData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidgetData>();
	}
};
DUMPER7_ASSERTS_UWidgetData;

// Class SCCore.InputMappingWidgetData
// 0x0100 (0x0148 - 0x0048)
class UInputMappingWidgetData final : public UWidgetData
{
public:
	struct FInputMappingProfileData               m_InputContext;                                    // 0x0048(0x00F8)(BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	EInputMappingForceController                  m_eControllerType;                                 // 0x0140(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputMappingWidgetData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputMappingWidgetData")
	}
	static class UInputMappingWidgetData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputMappingWidgetData>();
	}
};
DUMPER7_ASSERTS_UInputMappingWidgetData;

// Class SCCore.SCStateMachineComponent
// 0x0038 (0x00F0 - 0x00B8)
class USCStateMachineComponent final : public UActorComponent
{
public:
	bool                                          m_bStartMachineOnBeginPlay;                        // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USCStateMachine>         m_StateMachineClass;                               // 0x00C0(0x0028)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCStateMachine*                        m_StateMachine;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStateMachineComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStateMachineComponent")
	}
	static class USCStateMachineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStateMachineComponent>();
	}
};
DUMPER7_ASSERTS_USCStateMachineComponent;

// Class SCCore.InputMappingHelpers
// 0x0000 (0x0028 - 0x0028)
class UInputMappingHelpers final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_ApplyCurrentInputMapping(class ASCBasePlayerController* _controller);
	static void BPF_ApplyInputRemapping(class ASCBasePlayerController* _controller, const struct FInputMappingProfileData& _mappingContext);
	static struct FInputMappingData BPF_BreakDependencyWithPreset(const struct FInputMappingProfileData& _inOutMappingContext, const struct FInputMappingData& _mapping);
	static void BPF_BreakMappingID(const struct FMappingID& _mappingID, bool* _bOutUsePreset, class USCInputAction** _eOutAction, struct FInputPresetsEnumHandler* _eOutPreset);
	static void BPF_BuildContextFromProfile(const class UObject* _worldCtxt, struct FInputMappingProfileData* _outMappingContext, const struct FInputMappingProfileEnumHandler& _profile);
	static bool BPF_CreateMappingFromSlots(const struct FInputMappingProfileData& _inMappingContext, const struct FMappingID& _item, const TArray<struct FInputMappingKeySlotContainer>& _slots, struct FInputMappingData* _outMapping, bool _bBreakDependencies, bool _bGamePad);
	static class USCInputContext* BPF_GetActionFirstContext(class USCInputAction* _eAction);
	static struct FInt32Range BPF_GetAuthorizedCombinationCount(const struct FMappingID& _mappingID, bool _bGamePad);
	static void BPF_GetAvailableInputDatas(const struct FInputMappingProfileData& _mappingContext, bool _bGamePad, const struct FMappingID& _mappingID, const struct FInputMappingData& _mappingData, TArray<TSubclassOf<class UInputConditionData>>* _outAvailableInputData);
	static void BPF_GetCurrentMapping(const class UObject* _worldCtxt, struct FInputMappingProfileData* _outMappingContext, bool _bGamePad);
	static struct FInputMappingProfileEnumHandler BPF_GetCurrentMappingProfile(const class UObject* _worldCtxt, bool _bGamePad);
	static void BPF_GetDefaultCustomMapping(struct FInputMappingProfileData* _mappingContext, bool _bGamePad, bool _bWithModifier);
	static void BPF_GetDefaultInputMapping(class ASCBasePlayerController* _controller, const struct FMappingID& _ID, struct FInputMappingData* _outMapping, bool _bGamePad, bool _bWithModifier);
	static void BPF_GetDefaultMapping(const class ASCBasePlayerController* _controller, struct FInputMappingProfileData* _mappingContext, bool _bGamePad);
	static bool BPF_GetHoldToggleEnabled(const class UObject* _worldCtxt);
	static EInputDeviceLayout BPF_GetKeyboardLayout();
	static void BPF_GetMapping(const struct FInputMappingProfileData& _mappingContext, const struct FMappingID& _ID, struct FInputMappingData* _outMapping);
	static class UInputMappingProfileDB* BPF_GetMappingProfileDB(const struct FInputMappingProfileEnumHandler& _profileID);
	static void BPF_GetMappingProfiles(TMap<struct FInputMappingProfileEnumHandler, class UInputMappingProfileDB*>* _outResult, bool _bGamePad);
	static void BPF_GetMappingResult(const struct FInputMappingProfileData& _mappingContext, const struct FMappingID& _ID, struct FInputMappingNode* _outResultNode);
	static bool BPF_IsDependencyBrokenWithPreset(const struct FInputMappingProfileData& _inOutRemapping, const struct FMappingID& _ID);
	static bool BPF_IsEmpty(const struct FInputMappingData& _data, const struct FInputMappingProfileData& _mappingContext);
	static bool BPF_IsUsingCustomMappingProfile(const class UObject* _worldCtxt, bool _bGamePad);
	static bool BPF_IsValid(const struct FInputMappingData& _data, const struct FInputMappingProfileData& _mappingContext);
	static struct FMappingID BPF_MakeMappingID(const struct FInputPresetsEnumHandler& _PresetID, class USCInputAction* _eAction, class USCInputContext* _eContext);
	static void BPF_ResolveConflicts(class ASCBasePlayerController* _controller, struct FInputMappingProfileData& _inOutMappingContext, const struct FMappingID& _item, TArray<struct FMappingID>* _outResettedItems);
	static void BPF_SaveCustomInputMapping(class ASCBasePlayerController* _controller, struct FInputMappingProfileData& _mappingContext, bool _bGamePad, bool _bApply);
	static void BPF_SetCurrentMappingProfile(class ASCBasePlayerController* _controller, const struct FInputMappingProfileEnumHandler& _profile, bool _bGamePad);
	static void BPF_SetCustomMappingProfile(class ASCBasePlayerController* _controller, bool _bGamePad);
	static void BPF_SetHoldToggleEnabled(const class UObject* _worldCtxt, bool _bActivated);
	static bool BPF_SetMapping(struct FInputMappingProfileData& _inOutMappingContext, const struct FMappingID& _item, const struct FInputMappingData& _mapping);
	static bool BPF_ValidateCompleteMapping(class ASCBasePlayerController* _controller, const struct FInputMappingProfileData& _mapping, bool _bGamePad, TArray<struct FMappingValidationError>* _outErrors);
	static bool BPF_ValidateMapping(class ASCBasePlayerController* _controller, const struct FInputMappingProfileData& _mappingContext, const struct FMappingID& _item, const struct FInputMappingData& _mapping, TArray<struct FMappingValidationError>* _outErrors, bool _bDetectCollisions);
	static struct FInputMappingProfileEnumHandler Conv_EnumToProfileID(const struct FSCUserDefinedEnumHandler& _ID);
	static struct FMappingID Conv_InputActionToMappingID(class USCInputAction* _action, class USCInputContext* _eContext);
	static struct FMappingID Conv_InputPresetsEnumHandlerToMappingID(const struct FInputPresetsEnumHandler& _handler, class USCInputContext* _eContext);
	static class FText Conv_MappingIDToText(const struct FMappingID& _ID);
	static bool EqualEqual_MappingData(const struct FInputMappingData& _data1, const struct FInputMappingData& _data2);
	static bool EqualEqual_MappingID(const struct FMappingID& _ID1, const struct FMappingID& _ID2);
	static bool ValidateMappingForPreset(class ASCBasePlayerController* _controller, const struct FInputMappingProfileData& _mappingContext, const struct FInputMappingGroup& _context, const struct FInputPresetsEnumHandler& _preset, class USCInputContext* _eContext, const struct FInputMappingData& _mapping, TArray<struct FMappingValidationError>* _outErrors, bool _bDetectCollisions);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputMappingHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputMappingHelpers")
	}
	static class UInputMappingHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputMappingHelpers>();
	}
};
DUMPER7_ASSERTS_UInputMappingHelpers;

// Class SCCore.InputSequenceConditionProxy
// 0x0000 (0x0030 - 0x0030)
class UInputSequenceConditionProxy final : public UInputConditionProxy
{
public:
	class FString BPF_GetDesc(const struct FInputSequenceConditionProxyContainer& _slot) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputSequenceConditionProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputSequenceConditionProxy")
	}
	static class UInputSequenceConditionProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputSequenceConditionProxy>();
	}
};
DUMPER7_ASSERTS_UInputSequenceConditionProxy;

// Class SCCore.InputSequenceConditionData
// 0x0010 (0x0088 - 0x0078)
class UInputSequenceConditionData : public UInputConditionData
{
public:
	TArray<struct FInputSequenceStep>             m_Sequence;                                        // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputSequenceConditionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputSequenceConditionData")
	}
	static class UInputSequenceConditionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputSequenceConditionData>();
	}
};
DUMPER7_ASSERTS_UInputSequenceConditionData;

// Class SCCore.SCNotificationSubsystem
// 0x00D8 (0x0228 - 0x0150)
class USCNotificationSubsystem : public USCSubsystem
{
public:
	TMulticastInlineDelegate<void(class UNotificationViewModel* viewModel)> OnNotificationAdded;     // 0x0150(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FSCNotification>                m_Notifications;                                   // 0x0160(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<ENotificationCategory, struct FNotificationParams> m_NotificationsParams;                   // 0x0170(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<ENotificationType, struct FNotificationContent> m_NotificationsContent;                     // 0x01C0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         m_fWidgetRefreshRate;                              // 0x0210(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_214[0x14];                                     // 0x0214(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_AddNotification(ENotificationCategory _category, const class FText& _title, const class FText& _message);
	void BPF_FlushNotifications();
	void BPF_HandleNotification(class UNotificationViewModel* _viewModel);
	void BPF_RemoveNotification(class UNotificationViewModel* _viewModel);

	TArray<struct FSCNotification> BPF_GetNotificationsForCategory(ENotificationCategory _category) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCNotificationSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCNotificationSubsystem")
	}
	static class USCNotificationSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCNotificationSubsystem>();
	}
};
DUMPER7_ASSERTS_USCNotificationSubsystem;

// Class SCCore.SCInputContext
// 0x0008 (0x0038 - 0x0030)
class USCInputContext final : public UPrimaryDataAsset
{
public:
	bool                                          m_disableOther;                                    // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bPauseOther;                                     // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static const TArray<class USCInputContext*> GetAllInputContexts();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCInputContext")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCInputContext")
	}
	static class USCInputContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCInputContext>();
	}
};
DUMPER7_ASSERTS_USCInputContext;

// Class SCCore.PersistentInputAction
// 0x0000 (0x00B0 - 0x00B0)
class UPersistentInputAction final : public USCInputAction
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PersistentInputAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PersistentInputAction")
	}
	static class UPersistentInputAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPersistentInputAction>();
	}
};
DUMPER7_ASSERTS_UPersistentInputAction;

// Class SCCore.SCPlayerScoreEventHistory
// 0x00D0 (0x00F8 - 0x0028)
class USCPlayerScoreEventHistory : public UObject
{
public:
	uint8                                         Pad_28[0xD0];                                      // 0x0028(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPlayerScoreEventHistory")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPlayerScoreEventHistory")
	}
	static class USCPlayerScoreEventHistory* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPlayerScoreEventHistory>();
	}
};
DUMPER7_ASSERTS_USCPlayerScoreEventHistory;

// Class SCCore.SCInputWindowHelpers
// 0x0000 (0x0028 - 0x0028)
class USCInputWindowHelpers final : public UBlueprintFunctionLibrary
{
public:
	static EInputWindowResult BPF_GetResult(const struct FInputWindowTargetData& _data);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCInputWindowHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCInputWindowHelpers")
	}
	static class USCInputWindowHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCInputWindowHelpers>();
	}
};
DUMPER7_ASSERTS_USCInputWindowHelpers;

// Class SCCore.InterchangeableInputConditionData
// 0x0018 (0x0090 - 0x0078)
class UInterchangeableInputConditionData final : public UInputConditionData
{
public:
	TArray<struct FInterchangeableData>           m_Inputs;                                          // 0x0078(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bUseActiveSubInputLifeSpan;                      // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InterchangeableInputConditionData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InterchangeableInputConditionData")
	}
	static class UInterchangeableInputConditionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInterchangeableInputConditionData>();
	}
};
DUMPER7_ASSERTS_UInterchangeableInputConditionData;

// Class SCCore.SCVolume
// 0x0068 (0x0350 - 0x02E8)
class ASCVolume : public AVolume
{
public:
	TArray<class ASCVolume*>                      m_ChildrenVolumes;                                 // 0x02E8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class ASCVolume*                              m_ParentVolume;                                    // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_300[0x50];                                     // 0x0300(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InternalOnComponentEndOverlap(class UPrimitiveComponent* _overlappedComponent, class AActor* _otherActor, class UPrimitiveComponent* _otherComp, int32 _iOtherBodyIndex);
	void InternalOnComponentStartOverlap(class UPrimitiveComponent* _overlappedComponent, class AActor* _otherActor, class UPrimitiveComponent* _otherComp, int32 _iOtherBodyIndex, bool _bFromSweep, const struct FHitResult& _sweepResult);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVolume")
	}
	static class ASCVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCVolume>();
	}
};
DUMPER7_ASSERTS_ASCVolume;

// Class SCCore.IsOnNavmeshCondition
// 0x0008 (0x0030 - 0x0028)
class UIsOnNavmeshCondition final : public UBaseActorCondition
{
public:
	float                                         m_fDistTolerance;                                  // 0x0028(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("IsOnNavmeshCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"IsOnNavmeshCondition")
	}
	static class UIsOnNavmeshCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIsOnNavmeshCondition>();
	}
};
DUMPER7_ASSERTS_UIsOnNavmeshCondition;

// Class SCCore.SprinterInterface
// 0x0000 (0x0000 - 0x0000)
class ISprinterInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SprinterInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SprinterInterface")
	}
	static class ISprinterInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISprinterInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISprinterInterface;

// Class SCCore.SCVolumeComponent
// 0x0080 (0x0630 - 0x05B0)
#pragma pack(push, 0x1)
class alignas(0x10) USCVolumeComponent : public UBoxComponent
{
public:
	TArray<class ASCVolumeActor*>                 m_ChildrenVolumeActors;                            // 0x05B0(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class USCVolumeComponent*>             m_ChildrenVolumeComponents;                        // 0x05C0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class USCVolumeComponent*                     m_ParentVolume;                                    // 0x05D0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5D8[0x50];                                     // 0x05D8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSingleVolumeEndOverlap(class UPrimitiveComponent* _overlappedComponent, class AActor* _otherActor, class UPrimitiveComponent* _otherComp, int32 _iOtherBodyIndex);
	void OnSingleVolumeStartOverlap(class UPrimitiveComponent* _overlappedComponent, class AActor* _otherActor, class UPrimitiveComponent* _otherComp, int32 _iOtherBodyIndex, bool _bFromSweep, const struct FHitResult& _sweepResult);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVolumeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVolumeComponent")
	}
	static class USCVolumeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCVolumeComponent>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_USCVolumeComponent;

// Class SCCore.LocomotionTransitionLibrary
// 0x0000 (0x0028 - 0x0028)
class ULocomotionTransitionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FSCCharacterMovementDescription BPF_ComputeCurrentMovementDescription(const class UCharacterMovementComponent* _mvtComp, bool _b2DOnly, EMovementDescriptionComputationType _eComputationType, bool _bAllowPendingInputUse);
	static struct FTransitionComputationResult BPF_ComputeTransition(const class UCharacterMovementComponent* _mvtComp, TSubclassOf<class USCTransitionDB> _transitionDB, bool _b2DOnly);
	static struct FTransitionComputationResult BPF_ComputeTransitionWithParams(const class UCharacterMovementComponent* _mvtComp, const struct FVector& _vWantedVelocityDir, bool _bOrientToMovement, ESCCharacterSpeedState _eWantedSpeedState, TSubclassOf<class USCTransitionDB> _transitionDB, bool _b2DOnly);
	static float BPF_EstimateDurationOfFall(const class UCharacterMovementComponent* _mvtComp, float _fHeight, float _fGravityScale);
	static struct FVector BPF_PredictTransitionEndLocationFromParams(const struct FSCCodeDrivenTransitionSettings& _transitionSettings, float _fTimeElapsed, float _fTargetSpeed, const struct FVector& _vDirNormalized, float _fTargetSpeedMultiplier, float _fDt);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LocomotionTransitionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LocomotionTransitionLibrary")
	}
	static class ULocomotionTransitionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULocomotionTransitionLibrary>();
	}
};
DUMPER7_ASSERTS_ULocomotionTransitionLibrary;

// Class SCCore.MappableInputsDB
// 0x00A0 (0x00D0 - 0x0030)
class UMappableInputsDB final : public UDataAsset
{
public:
	class FText                                   m_RemappingNotificationMessages[0x3];              // 0x0030(0x0010)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bKeysInSelectionAreForbidden;                    // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              m_NoMappingIcon;                                   // 0x0068(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKey>                           m_KeysSelectionForRemapping;                       // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FKey>                           m_KeysIgnoredForRemapping;                         // 0x00A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FKey>                           m_CancelRemappingKeys;                             // 0x00B0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRemappingSectionStruct>        m_MappableInputsSection;                           // 0x00C0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MappableInputsDB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MappableInputsDB")
	}
	static class UMappableInputsDB* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMappableInputsDB>();
	}
};
DUMPER7_ASSERTS_UMappableInputsDB;

// Class SCCore.SCTools
// 0x0000 (0x0028 - 0x0028)
class USCTools final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCTools")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCTools")
	}
	static class USCTools* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCTools>();
	}
};
DUMPER7_ASSERTS_USCTools;

// Class SCCore.MenuActionViewModel
// 0x0030 (0x00A0 - 0x0070)
class UMenuActionViewModel final : public USCViewModel
{
public:
	bool                                          m_bShowName;                                       // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bDisplayShorcut;                                 // 0x0071(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsEnabled;                                      // 0x0072(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_DisplayName;                                     // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_Input;                                           // 0x0088(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USCUserWidget>           m_OwnerWidget;                                     // 0x0090(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsHoldAction;                                   // 0x0098(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsCurrentlyPressed;                             // 0x0099(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_HoldProgressPercent;                             // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BPF_SimulateActionPressed();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MenuActionViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MenuActionViewModel")
	}
	static class UMenuActionViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuActionViewModel>();
	}
};
DUMPER7_ASSERTS_UMenuActionViewModel;

// Class SCCore.SCTransitionAnimInstance
// 0x0370 (0x0F40 - 0x0BD0)
class USCTransitionAnimInstance : public USCAnimInstance
{
public:
	class FName                                   m_LocomotionDistanceCurveName;                     // 0x0BD0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBoneReference>                 m_FootArray;                                       // 0x0BD8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FSCSkeletonSlot                        m_MontageSlotToInterrupt;                          // 0x0BE8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	EAxis                                         m_eAnimForwardAxis;                                // 0x0BF0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BF1[0x3];                                      // 0x0BF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTransitionRatioAtMontageCleared;                // 0x0BF4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatRange                            m_PlayRateClampStartPivots;                        // 0x0BF8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bStopDistanceScaleEnabled;                       // 0x0C08(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C09[0x3];                                      // 0x0C09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTransitionYawRotationRate;                      // 0x0C0C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fMaxForwardAngleDiff;                            // 0x0C10(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStrideWarpingBlendInStartOffset;                // 0x0C14(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStrideWarpingBlendInDurationScaled;             // 0x0C18(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTransitionFullWeightAtRatio;                    // 0x0C1C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTransitionMinBlendDuration;                     // 0x0C20(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C24[0x4];                                      // 0x0C24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicBlendSettings                  m_TransitionBlendSettingsPerType[0x4];             // 0x0C28(0x0010)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                   m_TransitionDynamicBlendNamePerType[0x4];          // 0x0C68(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fDisplacementSinceLastUpdate;                    // 0x0C88(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fDisplacementSpeed;                              // 0x0C8C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C90[0x1C];                                     // 0x0C90(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fStrideWarpingStartAAlpha;                       // 0x0CAC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStrideWarpingStartBAlpha;                       // 0x0CB0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStrideWarpingTurnAAlpha;                        // 0x0CB4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStrideWarpingTurnBAlpha;                        // 0x0CB8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bHasPendingStartTransition;                      // 0x0CBC(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETransitionStopReason                         m_eLastTransitionStopReason;                       // 0x0CBD(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_CBE[0x64];                                     // 0x0CBE(0x0064)(Fixing Size After Last Property [ Dumper-7 ])
	ESCTransitionType                             m_ePendingTransitionType;                          // 0x0D22(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D23[0x1];                                      // 0x0D23(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class USCTransitionMovementComponent> m_TransitionMvtComp;                        // 0x0D24(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStartAYawRootOffset;                            // 0x0D2C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStartBYawRootOffset;                            // 0x0D30(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStopAYawRootOffset;                             // 0x0D34(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStopBYawRootOffset;                             // 0x0D38(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTurnAYawRootOffset;                             // 0x0D3C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTurnBYawRootOffset;                             // 0x0D40(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D44[0x18C];                                    // 0x0D44(0x018C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransitionAnimSequencePlayInfos       m_TransitionPlayInfos;                             // 0x0ED0(0x0060)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_F30[0x10];                                     // 0x0F30(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnStartTransition();
	void BPF_SetUpStartATransitionAnim(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_SetUpStartBTransitionAnim(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_SetUpStopATransitionAnim(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_SetUpStopBTransitionAnim(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_SetUpTransitionMirror(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_SetUpTurnATransitionAnim(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_SetUpTurnBTransitionAnim(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_UpdateStartATransition(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_UpdateStartBTransition(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_UpdateStopATransition(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_UpdateStopBTransition(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_UpdateTurnATransition(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void BPF_UpdateTurnBTransition(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node);
	void NativeOnOrientToMovementChanged(bool _bIsOrientedToMovement);

	bool BPF_CanKeepLastTransition() const;
	int32 BPF_ComputeBestNextAnimIndex(const TArray<struct FTransitionAnimSequencePlayInfos>& _nextAnimArray) const;
	int32 BPF_ComputeBestNextAnimIndexFromRefAnim(const TArray<struct FTransitionAnimSequencePlayInfos>& _nextAnimArray, class UAnimSequenceBase* _syncMarkerRefAnim, float _fPosition, bool _bMirrored) const;
	ESCTransitionType BPF_GetCurrentTransitionType() const;
	bool BPF_HasTransitionAnyRotation() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCTransitionAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCTransitionAnimInstance")
	}
	static class USCTransitionAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCTransitionAnimInstance>();
	}
};
DUMPER7_ASSERTS_USCTransitionAnimInstance;

// Class SCCore.LocalWidgetContextViewModel
// 0x0000 (0x0080 - 0x0080)
class ULocalWidgetContextViewModel final : public UWidgetContextViewModel
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LocalWidgetContextViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LocalWidgetContextViewModel")
	}
	static class ULocalWidgetContextViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULocalWidgetContextViewModel>();
	}
};
DUMPER7_ASSERTS_ULocalWidgetContextViewModel;

// Class SCCore.MenuSlot
// 0x0010 (0x0C00 - 0x0BF0)
class UMenuSlot final : public USCUserWidget
{
public:
	bool                                          m_bAllowSoundPlaying;                              // 0x0BF0(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BF1[0xF];                                      // 0x0BF1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MenuSlot")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MenuSlot")
	}
	static class UMenuSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuSlot>();
	}
};
DUMPER7_ASSERTS_UMenuSlot;

// Class SCCore.SCDynamicSpeedMovementComponent
// 0x0A20 (0x19E0 - 0x0FC0)
#pragma pack(push, 0x1)
class alignas(0x10) USCDynamicSpeedMovementComponent : public UCharacterMovementComponent
{
public:
	uint8                                         Pad_FC0[0x194];                                    // 0x0FC0(0x0194)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxPredictionDuration;                          // 0x1154(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fServerTimeUpdateFrequency;                      // 0x1158(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinClientMoveLifeSpan;                          // 0x115C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fClientMovePingBasedLifeSpanOffset;              // 0x1160(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1164[0x6C];                                    // 0x1164(0x006C)(Fixing Size After Last Property [ Dumper-7 ])
	ESCCharacterSpeedState                        m_eForcedState;                                    // 0x11D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOrientRotationToVelocity;                       // 0x11D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11D2[0x6];                                     // 0x11D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool _bOrientRotationToMovement)> m_OnOrientToMovementChanged;     // 0x11D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          m_bUseCoyoteTime;                                  // 0x11E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11E9[0x3];                                     // 0x11E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fCoyoteTriggerThreshold;                         // 0x11EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCoyoteDistanceMax;                              // 0x11F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11F4[0x2C];                                    // 0x11F4(0x002C)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTagQuery>              m_LockingRotationQueries;                          // 0x1220(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bConstraintVelocityAngularSpeed;                 // 0x1230(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1231[0x3];                                     // 0x1231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxAngularSpeed;                                // 0x1234(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                               m_MaxAngleDiffBetweenVelocityAndRotation;          // 0x1238(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                               m_MaxRotationIncreaseRate;                         // 0x1250(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_SprintingTag;                                    // 0x1268(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USpeedDescriptionDB>        m_DefaultSpeedDescriptionDB;                       // 0x1270(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSpeedDescriptionDBOverride>    m_SpeedDescriptionDBOverrides;                     // 0x1278(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class USpeedDescriptionDB>        m_CurrentSpeedDescriptionDB;                       // 0x1288(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bRotationLockedByQueries;                        // 0x1290(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1291[0x7];                                     // 0x1291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_WantedTags;                                      // 0x1298(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_12B8[0x2D8];                                   // 0x12B8(0x02D8)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bHasReplicatedAcceleration;                      // 0x1590(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1591[0x3];                                     // 0x1591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAbsoluteMaxWalkSpeed;                           // 0x1594(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1598[0x30];                                    // 0x1598(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCDebugGraphPropertiesDB>  m_DebugGraphPropertiesDB;                          // 0x15C8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EMovementMode, struct FGameplayTag>      m_GameplayTagsPerMovementMode;                     // 0x15D0(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bActivateStepSmoother;                           // 0x1620(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1621[0x7];                                     // 0x1621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_CurveSpeedSmoothByOffset;                        // 0x1628(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fDebugCurveRange;                                // 0x1630(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1634[0x3A4];                                   // 0x1634(0x03A4)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_ForceCoyoteTime(class UObject* _instigator, bool _bForce);
	const struct FSCCharacterGroundInfo BPF_GetGroundInfo();
	void BPF_PopMovementMode(int32 _iMovementModeKey);
	void BPF_PopRootMotionRotationRate(class UObject* _instigator);
	int32 BPF_PushMovementMode(EMovementMode _eMovementMode);
	void BPF_PushRootMotionRotationRate(class UObject* _instigator, const struct FRotator& _rotationRate);

	float BPF_GetAbsoluteMaxWalkSpeed() const;
	ESCCharacterSpeedState BPF_GetCurrentSpeedState(bool _bRaw) const;
	class USCDebugGraphPropertiesDB* BPF_GetDebugGraphPropertiesDB() const;
	float BPF_GetSpeedFromDescriptionDB(ESCCharacterSpeedState _eSpeedState) const;
	float BPF_GetSpeedStateMaxSpeed(ESCCharacterSpeedState _eSpeedState, ESCCardinalPoints _eCardinalPoint) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCDynamicSpeedMovementComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCDynamicSpeedMovementComponent")
	}
	static class USCDynamicSpeedMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCDynamicSpeedMovementComponent>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_USCDynamicSpeedMovementComponent;

// Class SCCore.SCTransitionMovementComponent
// 0x0060 (0x1A40 - 0x19E0)
class USCTransitionMovementComponent : public USCDynamicSpeedMovementComponent
{
public:
	TMulticastInlineDelegate<void(ESCTransitionType _eTransitionType)> m_DynamicOnTransitionStart;   // 0x19D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ETransitionStopReason _eReason)> m_DynamicOnTransitionStop;        // 0x19E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_19F8[0x30];                                    // 0x19F8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bCancelTransitionOnOrientToMovementChanged;      // 0x1A28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A29[0x17];                                    // 0x1A29(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAnimInitialized();
	void OnMontageBlendingOut(class UAnimMontage* _inMontage, bool _bInterrupted);
	void OnMontageStarted(class UAnimMontage* _inMontage);
	void OnOrientToMovementChanged(bool _bIsOrientedToMovement);

	bool BPF_CanPlayTransition() const;
	struct FSCTransition BPF_GetTransition() const;
	bool BPF_IsPlayingTransition() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCTransitionMovementComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCTransitionMovementComponent")
	}
	static class USCTransitionMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCTransitionMovementComponent>();
	}
};
DUMPER7_ASSERTS_USCTransitionMovementComponent;

// Class SCCore.MontageProjectileIntersectionDatasource
// 0x0098 (0x0160 - 0x00C8)
class UMontageProjectileIntersectionDatasource final : public UParentTargetDatasource
{
public:
	struct FAnimSequencePickerInstance            m_OptAnimPicker;                                   // 0x00C8(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                          m_bUseMaxAngleWithDir;                             // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxAngleWithDir;                                // 0x0104(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FOnDemandTargetProvider                m_DirTargetProvider;                               // 0x0108(0x0058)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MontageProjectileIntersectionDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MontageProjectileIntersectionDatasource")
	}
	static class UMontageProjectileIntersectionDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMontageProjectileIntersectionDatasource>();
	}
};
DUMPER7_ASSERTS_UMontageProjectileIntersectionDatasource;

// Class SCCore.MotionWarpingMontagePlayerHelper
// 0x0000 (0x0028 - 0x0028)
class UMotionWarpingMontagePlayerHelper final : public UObject
{
public:
	static bool BPF_FindMotionWarpingMontagePlayerContext(const struct FGameplayAbilityTargetDataHandle& _inContext, struct FMotionWarpingMontagePlayerContext* _outContext);
	static struct FGameplayAbilityTargetDataHandle BPF_MakeMotionWarpingMontagePlayerContext(const struct FGameplayAbilityTargetDataHandle& _inContext, class UMotionWarpingMontagePlayerConfiguration* _configuration);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MotionWarpingMontagePlayerHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MotionWarpingMontagePlayerHelper")
	}
	static class UMotionWarpingMontagePlayerHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMotionWarpingMontagePlayerHelper>();
	}
};
DUMPER7_ASSERTS_UMotionWarpingMontagePlayerHelper;

// Class SCCore.SCUIWidgetDebugInfos
// 0x00D0 (0x00F8 - 0x0028)
class USCUIWidgetDebugInfos final : public UObject
{
public:
	class FString                                 m_WidgetName;                                      // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class USCViewModel*>        m_ViewModels;                                      // 0x0058(0x0050)(Edit, ExportObject, DisableEditOnTemplate, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<class FName, class USCUIWidgetDebugInfos*> m_Widgets;                                       // 0x00A8(0x0050)(Edit, ExportObject, DisableEditOnTemplate, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCUIWidgetDebugInfos")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCUIWidgetDebugInfos")
	}
	static class USCUIWidgetDebugInfos* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCUIWidgetDebugInfos>();
	}
};
DUMPER7_ASSERTS_USCUIWidgetDebugInfos;

// Class SCCore.MotionWarpingTimeStretch
// 0x0000 (0x0030 - 0x0030)
class UMotionWarpingTimeStretch final : public UTimeStretchComputation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MotionWarpingTimeStretch")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MotionWarpingTimeStretch")
	}
	static class UMotionWarpingTimeStretch* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMotionWarpingTimeStretch>();
	}
};
DUMPER7_ASSERTS_UMotionWarpingTimeStretch;

// Class SCCore.MovieWidget
// 0x0028 (0x03B0 - 0x0388)
class UMovieWidget final : public UUserWidget
{
public:
	class UMediaTexture*                          m_MediaTexture;                                    // 0x0388(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 m_WidgetTorender;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnEndReached;                                      // 0x0398(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMediaPlayer*                           m_MediaPlayer;                                     // 0x03A8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BPF_CloseMovie();
	bool BPF_OpenMovie(const class FString& _url, bool _bLooping);
	void MediaEndCallback();
	void MediaOpenedCallback(const class FString& _url);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieWidget")
	}
	static class UMovieWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieWidget>();
	}
};
DUMPER7_ASSERTS_UMovieWidget;

// Class SCCore.MultipleToggleBinder
// 0x0068 (0x0148 - 0x00E0)
class UMultipleToggleBinder final : public UEventBinder
{
public:
	TArray<struct FEventBinderInstance>           m_ToggleOnBinders;                                 // 0x00E0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FEventBinderInstance>           m_ToggleOffBinders;                                // 0x00F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UEventBinder*>                   m_ToggleOnInstances;                               // 0x0100(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UEventBinder*>                   m_ToggleOffInstances;                              // 0x0110(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_120[0x28];                                     // 0x0120(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MultipleToggleBinder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MultipleToggleBinder")
	}
	static class UMultipleToggleBinder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMultipleToggleBinder>();
	}
};
DUMPER7_ASSERTS_UMultipleToggleBinder;

// Class SCCore.SCCameraZoneBlueprintHelper
// 0x0000 (0x0028 - 0x0028)
class USCCameraZoneBlueprintHelper final : public UBlueprintFunctionLibrary
{
public:
	static bool BPF_GetClosestDeadZoneToAngle(struct FSCDeadZone* _outDeadZone, const TArray<struct FSCDeadZone>& _inDeadZones, float _fAngleInDeg, float _fAngleDiffMaxInDeg);
	static bool BPF_GetDeadZoneContainingAngle(struct FSCDeadZone* _outDeadZone, const TArray<struct FSCDeadZone>& _inDeadZones, float _fAngleInDeg);
	static float BPF_GetMidAngle(const struct FSCDeadZone& _inDeadZone);
	static void BPF_GetSafeZoneListFromDeadZones(TArray<struct FSCDeadZone>* _outListOfSafeZones, const TArray<struct FSCDeadZone>& _inDeadZones);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraZoneBlueprintHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraZoneBlueprintHelper")
	}
	static class USCCameraZoneBlueprintHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraZoneBlueprintHelper>();
	}
};
DUMPER7_ASSERTS_USCCameraZoneBlueprintHelper;

// Class SCCore.SCCameraRepulsionService
// 0x0170 (0x01B8 - 0x0048)
class USCCameraRepulsionService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x170];                                     // 0x0048(0x0170)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraRepulsionService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraRepulsionService")
	}
	static class USCCameraRepulsionService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraRepulsionService>();
	}
};
DUMPER7_ASSERTS_USCCameraRepulsionService;

// Class SCCore.NamedGameplayTagTargetDataCondition
// 0x0010 (0x0088 - 0x0078)
class UNamedGameplayTagTargetDataCondition final : public UTargetDataCondition
{
public:
	struct FGameplayTag                           m_GameplayTagToTest;                               // 0x0078(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_Name;                                            // 0x0080(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NamedGameplayTagTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NamedGameplayTagTargetDataCondition")
	}
	static class UNamedGameplayTagTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNamedGameplayTagTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UNamedGameplayTagTargetDataCondition;

// Class SCCore.NamedVectorAngleTargetDataCondition
// 0x0010 (0x0088 - 0x0078)
class UNamedVectorAngleTargetDataCondition final : public UTargetDataCondition
{
public:
	struct FSCAngleRange                          m_AngleRange;                                      // 0x0078(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_Name;                                            // 0x0080(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NamedVectorAngleTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NamedVectorAngleTargetDataCondition")
	}
	static class UNamedVectorAngleTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNamedVectorAngleTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UNamedVectorAngleTargetDataCondition;

// Class SCCore.NodalEdGraph
// 0x0000 (0x0060 - 0x0060)
class UNodalEdGraph final : public UEdGraph
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NodalEdGraph")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NodalEdGraph")
	}
	static class UNodalEdGraph* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNodalEdGraph>();
	}
};
DUMPER7_ASSERTS_UNodalEdGraph;

// Class SCCore.SCAbilitySystemComponent
// 0x0670 (0x19F0 - 0x1380)
class USCAbilitySystemComponent : public UAbilitySystemComponent
{
public:
	uint8                                         Pad_1380[0x28];                                    // 0x1380(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayAttribute, struct FFloatDataBinding> m_MaxAttributeBinding;                 // 0x13A8(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<struct FGameplayAttribute, struct FFloatDataBinding> m_AttributeBinding;                    // 0x13F8(0x0050)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_1448[0x18];                                    // 0x1448(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGameplayAbilitySpecHandle& _abilityHanddle, class UGameplayAbility* _abilityActivated)> BPE_OnAbilityActivated; // 0x1460(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayAbilitySpecHandle& _abilityHanddle, class UGameplayAbility* _abilityActivated)> BPE_OnAbilityEnded; // 0x1470(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayAbilitySpecHandle& _abilityHanddle, class UGameplayAbility* _abilityActivated)> BPE_OnAbilityRemoved; // 0x1480(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayAbilitySpecHandle& _abilityHanddle, class UGameplayAbility* _abilityActivated)> BPE_OnAbilityFailed; // 0x1490(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_14A0[0x30];                                    // 0x14A0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UAnimMontage* Montage)> OnMontageStartedWithinAbility;       // 0x14D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAnimatingAbilityCleared;                         // 0x14E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          m_bVlogEnabled;                                    // 0x14F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14F1[0x57];                                    // 0x14F1(0x0057)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMinClientRollbackLifeSpan;                      // 0x1548(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fClientRollbackPingBasedLifeSpanOffset;          // 0x154C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCAbilitySystemComponentDuringPhysicsTickFunction m_DuringPhysicsTickFunction;           // 0x1550(0x0030)(NativeAccessSpecifierPublic)
	struct FSCAbilitySystemComponentLastDemotableTickFunction m_LastDemotableTickFunction;           // 0x1580(0x0030)(NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(TSubclassOf<class UGameplayEffect> _effectThatGrantedAbilities)> m_OnAbilitiesGrantedFromEffect; // 0x15B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class USCAttributeSet>> m_TickableAttributeSet;                            // 0x15C0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  m_InitialGameplayLooseTags;                        // 0x15D0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>    m_InitialGameplayEffects;                          // 0x15F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  m_AvailabilityLayerStacks;                         // 0x1600(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTagAvailabilityLayerContainerInstance> m_DefaultAvailabilityLayerOnStart;         // 0x1620(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1630[0x268];                                   // 0x1630(0x0268)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayCueContainer            m_ActiveNonReplicatedGameplayCues;                 // 0x1898(0x0130)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_19C8[0x28];                                    // 0x19C8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BPF_DrawDebug(const struct FSCGameplayAbilityTargetData& _data, const struct FColor& _color, const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _targetDataContext);
	static void BPF_DrawHandleDebug(const struct FGameplayAbilityTargetDataHandle& _data, const struct FColor& _color, const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _targetDataContext);
	static bool BPF_FindAnimSequencePlayInfos(const struct FGameplayAbilityTargetDataHandle& _target, struct FAnimSequencePlayInfos* _outContext);
	static bool BPF_GetMontageFromAnimSequencePlayInfos(const struct FAnimSequencePlayInfos& _target, class UAnimMontage** _outMontage);
	static bool BPF_GetSnapFromAnimSequencePlayInfos(const struct FAnimSequencePlayInfos& _target, struct FAnimSequenceSnapInfos* _outSnapInfos);
	static bool BPF_GetSnapPrediction(const struct FAnimSequenceSnapInfos& _snapInfos, struct FAnimSequenceSnapPrediction* _outSnapPrediction);
	static bool BPF_IsActivable(const struct FAnimSequenceSnapInfos& _snapInfos);
	static struct FInputGameplayAbilityTargetData BPF_MakeInputTargetDataFromInputState(const struct FInputActionState& _inputActionState);
	static class FString BPF_ToString(const struct FSCGameplayAbilityTargetData& _data, bool _bShort);
	static class USCAbilitySystemComponent* Get(const class AActor* _actor);

	void BPF_AddGameplayEventTagContainerDelegate(const struct FGameplayTagContainer& _tagFilter, TDelegate<void(const struct FGameplayTag& _tag, const struct FGameplayEventData& _data)> _delegate);
	void BPF_CancelAbilitiesFromClass(const TArray<TSubclassOf<class UGameplayAbility>>& _abilitiesToCancel);
	void BPF_CancelAllAbilitiesAndEffects();
	struct FGameplayEffectContextHandle BPF_GetActiveGameplayEffectContext(const struct FActiveGameplayEffectHandle& _effect);
	void BPF_InitDefaultGameplayCueParameters(struct FGameplayCueParameters& _parameters);
	bool BPF_IsAbilityActive(const struct FGameplayAbilitySpecHandle& _inAbilityHandle);
	bool BPF_MatchesTagQueryWithRollback(class AActor* Owner, const struct FGameplayTagQuery& _tagsToCheck, float _fClientTime, float _fClientPredictedTime, float _fClientDT);
	void BPF_PopAvailabilityTags(TSubclassOf<class UTagAvailabilityLayerContainer> _data, int32 _iID, const class FString& _callerContext);
	int32 BPF_PushAvailabilityTags(TSubclassOf<class UTagAvailabilityLayerContainer> _data, const class FString& _callerContext);
	void BPF_RefreshAbilityActorInfo();
	void BPF_RegisterAttributeChangedEvent(const struct FGameplayAttribute& _attribute, TDelegate<void(const struct FGameplayAttribute& _attribute, float _fOldValue, float _fNewValue)> _delegate);
	void BPF_RegisterGameplayTagContainerEvent(const struct FGameplayTagContainer& _tagContainer, EGameplayTagEventType _eEventType, TDelegate<void(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)> _delegate);
	void BPF_RegisterGameplayTagEvent(const struct FGameplayTag& _tag, EGameplayTagEventType _eEventType, TDelegate<void(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)> _delegate);
	void BPF_RegisterOnAnyGameplayTagChangeEvent(TDelegate<void(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)> _delegate);
	void BPF_RemoveAllGameplayEventTagContainerDelegate(TDelegate<void(const struct FGameplayTag& _tag, const struct FGameplayEventData& _data)> _delegate);
	void BPF_RemoveGameplayEventTagContainerDelegate(const struct FGameplayTagContainer& _tagFilter, TDelegate<void(const struct FGameplayTag& _tag, const struct FGameplayEventData& _data)> _delegate);
	bool BPF_TriggerAbilityFromTargetDataHandle(TSubclassOf<class UGameplayAbility> _inAbilityToActivate, const struct FGameplayAbilityTargetDataHandle& _handle, struct FGameplayAbilitySpecHandle* _outAbilityHandle, class UGameplayAbility** _abilityInstanceCreated);
	void BPF_UnregisterAttributeChangedEvent(const struct FGameplayAttribute& _attribute, TDelegate<void(const struct FGameplayAttribute& _attribute, float _fOldValue, float _fNewValue)> _delegate);
	void BPF_UnregisterGameplayTagContainerEvent(const struct FGameplayTagContainer& _tagContainer, EGameplayTagEventType _eEventType, TDelegate<void(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)> _delegate);
	void BPF_UnregisterGameplayTagEvent(const struct FGameplayTag& _tag, EGameplayTagEventType _eEventType, TDelegate<void(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)> _delegate);
	void BPF_UnregisterOnAnyGameplayTagChangeEvent(TDelegate<void(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)> _delegate);
	void MotionWarpingPreUpdate(class UMotionWarpingComponent* _motionWarpingComp);
	void OnGameplayTagEventChanged(const struct FGameplayTag& _gameplayTag, int32 _iCount, TDelegate<void(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)> _delegate);
	bool TryActivateAbilityWithManifest(TSubclassOf<class USCGameplayAbility> _ability, const struct FGameplayAbilityTargetDataHandle& _payload, bool _bGiveAbilityIfNeeded);
	bool TryActivateChildAbilityWithManifest(TSubclassOf<class USCGameplayAbility> _parent, TSubclassOf<class USCGameplayAbility> _child, const struct FGameplayAbilityTargetDataHandle& _payload);

	bool BPF_GetActiveGameplayEffectInfos(const struct FActiveGameplayEffectHandle& _handle, struct FGameplayTagContainer* _outAssetTags, struct FGameplayTagContainer* _outGrantedTags, float* _outLevel, struct FGameplayEffectContextHandle* _outContext) const;
	class UGameplayAbility* BPF_GetAnimatingAbility() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAbilitySystemComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAbilitySystemComponent")
	}
	static class USCAbilitySystemComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAbilitySystemComponent>();
	}
};
DUMPER7_ASSERTS_USCAbilitySystemComponent;

// Class SCCore.SCCharacterAbilitySystemComponent
// 0x0330 (0x1D20 - 0x19F0)
class USCCharacterAbilitySystemComponent : public USCAbilitySystemComponent
{
public:
	TMap<struct FGameplayAbilitySpecHandle, struct FGameplayAbilitySpecTriggers> m_AbilityTriggers;  // 0x19F0(0x0050)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1A40[0x10];                                    // 0x1A40(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class USCInputAction*, struct FReplicatedInputActionInfos> m_ReplicatedInputStates;         // 0x1A50(0x0050)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1AA0[0xF0];                                    // 0x1AA0(0x00F0)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCPendingMoveDirectionContainer       m_PendingMoveDirections;                           // 0x1B90(0x0120)(Net, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1CB0[0x4];                                     // 0x1CB0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fPendingMoveDirectionValidityLifeSpan;           // 0x1CB4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fPendingMoveDirectionDirtyAngleThresold;         // 0x1CB8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1CBC[0x14];                                    // 0x1CBC(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class USCInputAction*>                   m_ReplicatedInputStatesOnClients;                  // 0x1CD0(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	static uint8 BPF_GeneratePendingMoveDirectionUID();

	void MulticastSetInputStates(const TArray<struct FReplicatedInputActionInfos>& _states, uint64 _uiRevision);
	void ServerAddPendingMoveDirection(const struct FSCPendingMoveDirection& _pendingDir);
	void ServerSendInputWatchEvent(const struct FGameplayAbilitySpecHandleAndPredictionKey& _predictionKey, class USCInputAction* _input, EInputWatchTrigger _eTriggerType, const struct FAbilityInputWatchTrigger& _infos);
	void ServerSetInputStates(const TArray<struct FReplicatedInputActionInfos>& _states, uint64 _uiRevision, bool _bValidServerTime, float _fServerTime);
	void ServerStopAnimationFromMoveInterrupt(const struct FGameplayAbilitySpecHandleAndPredictionKey& _infos, const struct FPredictionKey& _key);

	struct FGameplayAbilityTargetDataHandle BPF_FindTargetForAbility(const TSubclassOf<class USCGameplayAbility> _ability, class USCInputAction* _action, bool* _bOutValid, bool _bUseCurrentIfAbilityActive) const;
	struct FInputGameplayAbilityTargetData BPF_GetInputStateFromAbility(TSubclassOf<class USCGameplayAbility> _ability, class USCInputAction* _action) const;
	struct FVector BPF_GetLastPendingMoveDirection() const;
	bool BPF_GetReplicatedInputState(class USCInputAction* _handler, struct FReplicatedInputActionInfos* _infos) const;
	bool BPF_HasPendingMoveDirection() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCharacterAbilitySystemComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCharacterAbilitySystemComponent")
	}
	static class USCCharacterAbilitySystemComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCharacterAbilitySystemComponent>();
	}
};
DUMPER7_ASSERTS_USCCharacterAbilitySystemComponent;

// Class SCCore.NotificationViewModel
// 0x00B0 (0x0120 - 0x0070)
class UNotificationViewModel : public USCViewModel
{
public:
	TMulticastInlineDelegate<void()>              OnNotificationRemoved;                             // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	ENotificationCategory                         m_Category;                                        // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_Title;                                           // 0x0088(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	class FText                                   m_Message;                                         // 0x0098(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	struct FDateTime                              m_DateTime;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fDuration;                                       // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fRemainingTimePercent;                           // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iIndexInCategory;                                // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_PlayerEosID;                                     // 0x00C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                  m_InviteID;                                        // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCMessageLogSeverity                         m_Severity;                                        // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_DebugInfo;                                       // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  m_AdditionalTags;                                  // 0x00F8(0x0020)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	bool                                          m_bIsHandled;                                      // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NotificationViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NotificationViewModel")
	}
	static class UNotificationViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNotificationViewModel>();
	}
};
DUMPER7_ASSERTS_UNotificationViewModel;

// Class SCCore.TimeTo60Fps
// 0x0000 (0x0028 - 0x0028)
class UTimeTo60Fps final : public UNumericConverter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TimeTo60Fps")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TimeTo60Fps")
	}
	static class UTimeTo60Fps* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTimeTo60Fps>();
	}
};
DUMPER7_ASSERTS_UTimeTo60Fps;

// Class SCCore.SCCharacterViewModel
// 0x0010 (0x0080 - 0x0070)
class USCCharacterViewModel final : public USCViewModel
{
public:
	TWeakObjectPtr<class ASCCharacter>            m_Character;                                       // 0x0070(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class APlayerState>            m_PlayerState;                                     // 0x0078(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnPawnSet(class APlayerState* _player, class APawn* _newPawn, class APawn* _oldPawn);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCharacterViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCharacterViewModel")
	}
	static class USCCharacterViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCharacterViewModel>();
	}
};
DUMPER7_ASSERTS_USCCharacterViewModel;

// Class SCCore.60FpsToTime
// 0x0000 (0x0028 - 0x0028)
class USix0FpsToTime final : public UNumericConverter
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("60FpsToTime")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"60FpsToTime")
	}
	static class USix0FpsToTime* GetDefaultObj()
	{
		return GetDefaultObjImpl<USix0FpsToTime>();
	}
};
DUMPER7_ASSERTS_USix0FpsToTime;

// Class SCCore.SCCameraTransformInputMoveService
// 0x0048 (0x0090 - 0x0048)
class USCCameraTransformInputMoveService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x48];                                      // 0x0048(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_InitLookAtInputOrientation();
	void BPF_StartLookAtInputBlending(const float _fDuration, ESCBlendType _defaultBlend, class UCurveFloat* _blendCurve);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraTransformInputMoveService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraTransformInputMoveService")
	}
	static class USCCameraTransformInputMoveService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraTransformInputMoveService>();
	}
};
DUMPER7_ASSERTS_USCCameraTransformInputMoveService;

// Class SCCore.DataTableValueGetter
// 0x0048 (0x0070 - 0x0028)
class UDataTableValueGetter final : public UScalableFloatValueGetter
{
public:
	struct FFloatDataBinding                      m_DataTableValue;                                  // 0x0028(0x0048)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DataTableValueGetter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DataTableValueGetter")
	}
	static class UDataTableValueGetter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDataTableValueGetter>();
	}
};
DUMPER7_ASSERTS_UDataTableValueGetter;

// Class SCCore.PerSecToFrequency
// 0x0058 (0x0080 - 0x0028)
class UPerSecToFrequency final : public UNumericConverter
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    m_Parent;                                          // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatDataBinding                      m_Frequency;                                       // 0x0038(0x0048)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PerSecToFrequency")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PerSecToFrequency")
	}
	static class UPerSecToFrequency* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPerSecToFrequency>();
	}
};
DUMPER7_ASSERTS_UPerSecToFrequency;

// Class SCCore.PagingScrollBox
// 0x0160 (0x0F00 - 0x0DA0)
class UPagingScrollBox final : public UScrollBox
{
public:
	TMulticastInlineDelegate<void(class USCButtonUserWidget* _button, bool _bWithMouse)> m_OnItemClicked; // 0x0D98(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCButtonUserWidget* _button, bool _bWithMouse)> m_OnItemRightClicked; // 0x0DA8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, EFocusCause _eCause)> m_OnItemFocused; // 0x0DB8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, EFocusCause _eCause)> m_OnItemLostFocus; // 0x0DC8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, class USCUserWidget* _prevWidget)> m_OnItemSelected; // 0x0DD8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 _iDataIndex, class UUserWidget* _cell)> m_OnItemVisible;     // 0x0DE8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              m_ItemPreviewButtonPressed;                        // 0x0DF8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         m_iLoadedRowCount;                                 // 0x0E08(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E0C[0x4];                                      // 0x0E0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCUserWidget>              m_CellClass;                                       // 0x0E10(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UWidget*>                        m_Headers;                                         // 0x0E18(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_E28[0xD8];                                     // 0x0E28(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BPF_GetDataIndexFromWidget(class UUserWidget* _widget);
	class UUserWidget* BPF_GetLastVisibleCell();
	class UUserWidget* BPF_GetLastVisibleWidgetFromSection(int32 _iSection);
	class UUserWidget* BPF_GetWidgetFromDataIndex(int32 _iIndex);
	class UUserWidget* BPF_GetWidgetFromSectionDataIndex(int32 _iSection, int32 _iDataIndex);
	void OnItemClicked(class USCButtonUserWidget* _button, bool _bWithMouse);
	void OnItemFocused(class USCUserWidget* _widget, EFocusCause _eCause);
	void OnItemLostFocus(class USCUserWidget* _widget, EFocusCause _eCause);
	void OnItemPreviewButtonPressedCallback();
	void OnItemRightClicked(class USCButtonUserWidget* _button, bool _bWithMouse);
	void OnItemSelected(class USCUserWidget* _widget, class USCUserWidget* _prevWidget);

	int32 BPF_GetItemCount() const;
	int32 BPF_GetRowDataIndex(const int32 iRow) const;
	int32 BPF_GetWidgetDataIndex(const int32 iRow, const int32 iCol) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PagingScrollBox")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PagingScrollBox")
	}
	static class UPagingScrollBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPagingScrollBox>();
	}
};
DUMPER7_ASSERTS_UPagingScrollBox;

// Class SCCore.SCClassDescriptorSystem
// 0x0070 (0x01C0 - 0x0150)
class USCClassDescriptorSystem final : public USCSubsystem
{
public:
	TMap<TSoftClassPtr<class UClass>, struct FSCClassDescriptor> m_LoadedClassDescriptors;           // 0x0150(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TArray<class FString>                         m_ModuleNames;                                     // 0x01A0(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class FName>                           m_MetadataNames;                                   // 0x01B0(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCClassDescriptorSystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCClassDescriptorSystem")
	}
	static class USCClassDescriptorSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCClassDescriptorSystem>();
	}
};
DUMPER7_ASSERTS_USCClassDescriptorSystem;

// Class SCCore.PerceivedActorCondition
// 0x0020 (0x0048 - 0x0028)
class UPerceivedActorCondition final : public UBaseActorCondition
{
public:
	bool                                          m_bIncludeKnownActors;                             // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAISense>                   m_SenseToUse;                                      // 0x0030(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBaseActorTargetConditionInstance      m_PerceivedTargetActorCondition;                   // 0x0038(0x0010)(Edit, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PerceivedActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PerceivedActorCondition")
	}
	static class UPerceivedActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPerceivedActorCondition>();
	}
};
DUMPER7_ASSERTS_UPerceivedActorCondition;

// Class SCCore.SCCameraNodeBaseService
// 0x0010 (0x0038 - 0x0028)
class USCCameraNodeBaseService : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FVector BPE_GetWorldIdealPosition();
	bool BPE_IsOverridingWorldIdealPosition();
	bool BPE_IsServiceActive();
	void BPE_OnUpdateNode(float _fDt, bool _bBlendOut);
	void BPE_PostInit();
	class USCCameraData* BPF_GetCameraDataResultNonConst();

	class USCCameraComponent* BPF_GetCameraComponent() const;
	const class USCCameraData* BPF_GetCameraDataInitial() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraNodeBaseService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraNodeBaseService")
	}
	static class USCCameraNodeBaseService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraNodeBaseService>();
	}
};
DUMPER7_ASSERTS_USCCameraNodeBaseService;

// Class SCCore.PerceivedActorsDatasource
// 0x0010 (0x0090 - 0x0080)
class UPerceivedActorsDatasource final : public UTargetDatasource
{
public:
	TSubclassOf<class UAISense>                   m_SenseFilter;                                     // 0x0080(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         m_uiTargetPerceptionFilter;                        // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PerceivedActorsDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PerceivedActorsDatasource")
	}
	static class UPerceivedActorsDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPerceivedActorsDatasource>();
	}
};
DUMPER7_ASSERTS_UPerceivedActorsDatasource;

// Class SCCore.PerforceHelperLibrary
// 0x0000 (0x0028 - 0x0028)
class UPerforceHelperLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void GetCurrentChangeList(const TDelegate<void(bool bSuccess, int32 iChangeListNumber)>& _callback);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PerforceHelperLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PerforceHelperLibrary")
	}
	static class UPerforceHelperLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPerforceHelperLibrary>();
	}
};
DUMPER7_ASSERTS_UPerforceHelperLibrary;

// Class SCCore.SCGameplayAbilitySettings
// 0x0068 (0x00A0 - 0x0038)
class USCGameplayAbilitySettings final : public UDeveloperSettings
{
public:
	struct FSCGameplayCueTranslatorInfos          m_GameplayCueMapping;                              // 0x0038(0x0058)(Edit, Config, NativeAccessSpecifierPublic)
	float                                         m_fMaxNetworkCatchupTime;                          // 0x0090(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMoveInterruptMaxAngleDiff;                      // 0x0094(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMoveInterruptNotMovingMaxSpeed;                 // 0x0098(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameplayAbilitySettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameplayAbilitySettings")
	}
	static class USCGameplayAbilitySettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameplayAbilitySettings>();
	}
};
DUMPER7_ASSERTS_USCGameplayAbilitySettings;

// Class SCCore.ScoreEventCounterViewModel
// 0x0040 (0x00B0 - 0x0070)
class UScoreEventCounterViewModel final : public USCViewModel
{
public:
	class FText                                   m_Name;                                            // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         m_iCount;                                          // 0x0080(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsHighest;                                      // 0x0084(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_85[0x2B];                                      // 0x0085(0x002B)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScoreEventCounterViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScoreEventCounterViewModel")
	}
	static class UScoreEventCounterViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreEventCounterViewModel>();
	}
};
DUMPER7_ASSERTS_UScoreEventCounterViewModel;

// Class SCCore.PlayerScoreViewModel
// 0x0030 (0x00A0 - 0x0070)
class UPlayerScoreViewModel : public USCViewModel
{
public:
	float                                         m_fScore;                                          // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ASCPlayerState>          m_PlayerState;                                     // 0x0074(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x14];                                      // 0x007C(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UScoreEventCounterViewModel*>    m_CounterViewModels;                               // 0x0090(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerScoreViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerScoreViewModel")
	}
	static class UPlayerScoreViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerScoreViewModel>();
	}
};
DUMPER7_ASSERTS_UPlayerScoreViewModel;

// Class SCCore.SCActorImpostor
// 0x0020 (0x02F8 - 0x02D8)
class ASCActorImpostor : public ASCActor
{
public:
	class USkeletalMeshComponent*                 m_SkeletalMeshComp;                                // 0x02D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   m_StaticMeshComp;                                  // 0x02E0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     m_UniqueMaterialToApplyToImpostor;                 // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F0[0x8];                                      // 0x02F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_CreateMaterialInstances(class UPrimitiveComponent* _component, class UMaterialInterface* _materialInterface);
	void BPF_MimicSkeletalMeshComponent(class USkeletalMeshComponent* _otherMeshComponent);
	void BPF_MimicStaticMeshComponent(class UStaticMeshComponent* _otherMeshComponent);
	void OnOwnerDestroyed(class AActor* _destroyedActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCActorImpostor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCActorImpostor")
	}
	static class ASCActorImpostor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCActorImpostor>();
	}
};
DUMPER7_ASSERTS_ASCActorImpostor;

// Class SCCore.SCCharacterImpostor
// 0x0098 (0x0390 - 0x02F8)
class ASCCharacterImpostor final : public ASCActorImpostor
{
public:
	EImposterSpawnTransformType                   m_SpawnTransformType;                              // 0x02F8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F9[0x1F];                                     // 0x02F9(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	class USCRagdollConfigDB*                     m_RagdollConfig;                                   // 0x0318(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimInstance*                          m_AnimInstance;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_328[0x68];                                     // 0x0328(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_MimicCharacter(class ASCCharacter* _characterToMimic);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCharacterImpostor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCharacterImpostor")
	}
	static class ASCCharacterImpostor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCCharacterImpostor>();
	}
};
DUMPER7_ASSERTS_ASCCharacterImpostor;

// Class SCCore.PlayerScoreGlobalContainerViewModel
// 0x0018 (0x0088 - 0x0070)
class UPlayerScoreGlobalContainerViewModel : public USCViewModel
{
public:
	TArray<class UPlayerScoreViewModel*>          m_PlayerScoreViewModels;                           // 0x0070(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_80[0x8];                                       // 0x0080(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerScoreGlobalContainerViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerScoreGlobalContainerViewModel")
	}
	static class UPlayerScoreGlobalContainerViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerScoreGlobalContainerViewModel>();
	}
};
DUMPER7_ASSERTS_UPlayerScoreGlobalContainerViewModel;

// Class SCCore.PlayersSynchroHandler
// 0x0000 (0x0028 - 0x0028)
class UPlayersSynchroHandler : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayersSynchroHandler")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayersSynchroHandler")
	}
	static class UPlayersSynchroHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayersSynchroHandler>();
	}
};
DUMPER7_ASSERTS_UPlayersSynchroHandler;

// Class SCCore.SCGameplayEffect
// 0x0040 (0x0B40 - 0x0B00)
class USCGameplayEffect : public UGameplayEffect
{
public:
	uint8                                         Pad_B00[0x18];                                     // 0x0B00(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptStruct*                          m_RowType;                                         // 0x0B18(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    m_DataTableRow;                                    // 0x0B20(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FInstancedPropertyBag                  m_InstanceProperties;                              // 0x0B30(0x0010)(Edit, NativeAccessSpecifierPublic)

public:
	class UScriptStruct* GetCustomDataTableStruct() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameplayEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameplayEffect")
	}
	static class USCGameplayEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameplayEffect>();
	}
};
DUMPER7_ASSERTS_USCGameplayEffect;

// Class SCCore.PlayersSynchroHandlerClient
// 0x0020 (0x0048 - 0x0028)
class UPlayersSynchroHandlerClient final : public UPlayersSynchroHandler
{
public:
	TArray<class FName>                           m_AcknowledgeRequested;                            // 0x0028(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           m_AcknowledgeAvailable;                            // 0x0038(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayersSynchroHandlerClient")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayersSynchroHandlerClient")
	}
	static class UPlayersSynchroHandlerClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayersSynchroHandlerClient>();
	}
};
DUMPER7_ASSERTS_UPlayersSynchroHandlerClient;

// Class SCCore.PlayersSynchroHandlerServer
// 0x0050 (0x0078 - 0x0028)
class UPlayersSynchroHandlerServer : public UPlayersSynchroHandler
{
public:
	TMap<class FName, class UPlayersSynchro*>     m_PlayersSynchro;                                  // 0x0028(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayersSynchroHandlerServer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayersSynchroHandlerServer")
	}
	static class UPlayersSynchroHandlerServer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayersSynchroHandlerServer>();
	}
};
DUMPER7_ASSERTS_UPlayersSynchroHandlerServer;

// Class SCCore.SCCameraShakeService
// 0x0188 (0x01D0 - 0x0048)
class USCCameraShakeService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x188];                                     // 0x0048(0x0188)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMontageEnded(class UAnimMontage* _inMontage, bool _bInterrupted);
	void OnMontageStarted(class UAnimMontage* _inMontage, const struct FAnimMontageInstance& _inMontageInstance, class UAnimInstance* _animInstance);

	struct FTransform BPF_GetCurrentAddedShakeThisFrame() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraShakeService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraShakeService")
	}
	static class USCCameraShakeService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraShakeService>();
	}
};
DUMPER7_ASSERTS_USCCameraShakeService;

// Class SCCore.PlayersSynchroHandlerStandalone
// 0x0020 (0x0098 - 0x0078)
class UPlayersSynchroHandlerStandalone final : public UPlayersSynchroHandlerServer
{
public:
	TArray<class FName>                           m_AcknowledgeRequested;                            // 0x0078(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           m_AcknowledgeAvailable;                            // 0x0088(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayersSynchroHandlerStandalone")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayersSynchroHandlerStandalone")
	}
	static class UPlayersSynchroHandlerStandalone* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayersSynchroHandlerStandalone>();
	}
};
DUMPER7_ASSERTS_UPlayersSynchroHandlerStandalone;

// Class SCCore.PlayersSynchroHandlerDummy
// 0x0000 (0x0028 - 0x0028)
class UPlayersSynchroHandlerDummy final : public UPlayersSynchroHandler
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayersSynchroHandlerDummy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayersSynchroHandlerDummy")
	}
	static class UPlayersSynchroHandlerDummy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayersSynchroHandlerDummy>();
	}
};
DUMPER7_ASSERTS_UPlayersSynchroHandlerDummy;

// Class SCCore.SCGameViewportClient
// 0x0040 (0x0490 - 0x0450)
class USCGameViewportClient final : public UCommonGameViewportClient
{
public:
	uint8                                         Pad_450[0x40];                                     // 0x0450(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameViewportClient")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameViewportClient")
	}
	static class USCGameViewportClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameViewportClient>();
	}
};
DUMPER7_ASSERTS_USCGameViewportClient;

// Class SCCore.PlayersSynchro
// 0x0098 (0x00C0 - 0x0028)
class UPlayersSynchro final : public UObject
{
public:
	uint8                                         Pad_28[0x98];                                      // 0x0028(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayersSynchro")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayersSynchro")
	}
	static class UPlayersSynchro* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayersSynchro>();
	}
};
DUMPER7_ASSERTS_UPlayersSynchro;

// Class SCCore.PlayerStatsViewModel
// 0x0088 (0x00F8 - 0x0070)
class UPlayerStatsViewModel : public USCViewModel
{
public:
	TWeakObjectPtr<class APlayerState>            m_PlayerState;                                     // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_PlayerName;                                      // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iIndexInList;                                    // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UClass*, class UStatViewModel*>    m_StatSourcesPerClass;                             // 0x0090(0x0050)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UStatViewModel*>                 m_StatSources;                                     // 0x00E0(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x8];                                       // 0x00F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UStatViewModel* GetStatSource(const TSoftClassPtr<class UClass>& _statClass) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayerStatsViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayerStatsViewModel")
	}
	static class UPlayerStatsViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerStatsViewModel>();
	}
};
DUMPER7_ASSERTS_UPlayerStatsViewModel;

// Class SCCore.SCCollisionSettings
// 0x00A0 (0x00D8 - 0x0038)
class USCCollisionSettings final : public UDeveloperSettings
{
public:
	struct FCollisionResponseContainer            m_CharacterNoCollisionContainer;                   // 0x0038(0x0020)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_CharacterNoCollisionProfile;                     // 0x0058(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_CharacterPhysicsProfile;                         // 0x0060(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_CharacterRagdollProfile;                         // 0x0068(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_CharacterHitCapsuleProfile;                      // 0x0070(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_TriggerDefaultProfile;                           // 0x0078(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_TriggerPawnProfile;                              // 0x0080(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_TriggerLocalPawnProfile;                         // 0x0088(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_LDOnlyPawnProfile;                               // 0x0090(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_LDOnlyModelProfile;                              // 0x0098(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_ReplayPawnCapsuleProfile;                        // 0x00A0(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_ReplayPawnMeshProfile;                           // 0x00A8(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_ReplayPropsDestroyed;                            // 0x00B0(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_ReplayPropsProfile;                              // 0x00B8(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                  m_NoCollisionTraceMeshProfile;                     // 0x00C0(0x0008)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_EnvCollisionRetrieveSphereRadius;                // 0x00C8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_EnvCollisionRetrieveSweepDist;                   // 0x00CC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             m_eAIColChannel;                                   // 0x00D0(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECollisionChannel                             m_eCapsuleLocalPawnChannel;                        // 0x00D1(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECollisionChannel                             m_eHitTraceChannel;                                // 0x00D2(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECollisionChannel                             m_eLDCollChannel;                                  // 0x00D3(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCollisionSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCollisionSettings")
	}
	static class USCCollisionSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCollisionSettings>();
	}
};
DUMPER7_ASSERTS_USCCollisionSettings;

// Class SCCore.SCGameFlowState
// 0x0350 (0x04C0 - 0x0170)
class USCGameFlowState : public USCFlowGraphNode
{
public:
	struct FGameplayTag                           m_StateTag;                                        // 0x0170(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSCGameFlowInterrupt                   m_Interrupt;                                       // 0x0178(0x0018)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  m_TagsToApply;                                     // 0x0190(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FTagAvailabilityLayerContainerInstance m_AvailabilityTags;                                // 0x01B0(0x0010)(Edit, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C0[0x50];                                     // 0x01C0(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iSerializeVersion;                               // 0x0210(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UWorld>>          m_Levels;                                          // 0x0218(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   m_MenuWidget;                                      // 0x0228(0x0028)(Deprecated, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FSCGameFlowWidgetsList> m_WidgetsToSpawn;                       // 0x0250(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	TSet<struct FGameplayTag>                     m_VisibleWidgetLayers;                             // 0x02A0(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	TSet<struct FGameplayTag>                     m_HiddenWidgetSubLayers;                           // 0x02F0(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bShowSkipWidget;                                 // 0x0340(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_ActiveLayer;                                     // 0x0344(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<struct FGameplayTag>                     m_ClearedWidgetLayers;                             // 0x0350(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	TSet<struct FGameplayTag>                     m_ClearedWidgetLayersAtNodeEnd;                    // 0x03A0(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bCanGoBack;                                      // 0x03F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bCanRestart;                                     // 0x03F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bCanStartFromHere;                               // 0x03F2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F3[0x1];                                      // 0x03F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class USCUserWidget>           m_LastFocusedWidget;                               // 0x03F4(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCGameFlowCloseMenuBehavior                  m_eCloseMenuBehavior;                              // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCGameFlowCloseMenuBehavior                  m_eClosePreviousMenuBehavior;                      // 0x03FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bServerDrivenTravel;                             // 0x03FE(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bServerDrivenTransition;                         // 0x03FF(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsVolatile;                                     // 0x0400(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bSetMatchStateOnEnter;                           // 0x0401(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_402[0x2];                                      // 0x0402(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_MatchStateOnEnter;                               // 0x0404(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bSetMatchStateOnExit;                            // 0x040C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_MatchStateOnExit;                                // 0x0410(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAllowJoin;                                      // 0x0418(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAllowRestart;                                   // 0x0419(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bHidePlayers;                                    // 0x041A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bForceTransitionByNetMode;                       // 0x041B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FName>                m_MatchStateToTransition;                          // 0x0420(0x0050)(Edit, NativeAccessSpecifierPublic)
	class FName                                   m_ServerForcedTransitionName;                      // 0x0470(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_ClientForcedTransitionName;                      // 0x0478(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCGameFlowAutoTransitionType                 m_eAutoTransitionType;                             // 0x0480(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_481[0x3];                                      // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxDuration;                                    // 0x0484(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_OnMaxDurationReachedTransitionName;              // 0x0488(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSynchroNeededPlayerCountRatio;                  // 0x0490(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bSynchroSkippableByRuler;                        // 0x0494(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bNeedsAllPlayerValidation;                       // 0x0495(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_496[0x2];                                      // 0x0496(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fSynchroTimeOut;                                 // 0x0498(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_OnPlayersSynchronizedTransitionName;             // 0x049C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_OnSynchroTimeOutTransitionName;                  // 0x04A4(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_SFXStateTag;                                     // 0x04AC(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bLogInCSVEvent;                                  // 0x04B4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bSetPerformanceHitchDetectorState;               // 0x04B5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCGameFlowPerformanceHitchDetectorState      m_ePerformanceHitchDetector;                       // 0x04B6(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCGameFlowStateGCPurgeBehavior               m_eGCPurgeBehavior;                                // 0x04B7(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCGameFlowStateGCPurgeNetMode                m_eGCPurgeNetMode;                                 // 0x04B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCGameFlowStateLogFlushBehavior              m_eLogFlushBehavior;                               // 0x04B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4BA[0x6];                                      // 0x04BA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_EnteringFlowState(class USCGameFlowSubsystem* _gameFlowSubsystem, const class USCGameFlowState* PreviousState);
	void BPE_ExitingFlowState(class USCGameFlowSubsystem* _gameFlowSubsystem, const class USCGameFlowState* _nextState, bool _bIsBackTracking);
	void BPE_PostEnteringFlowState(class USCGameFlowSubsystem* _gameFlowSubsystem, const class USCGameFlowState* PreviousState, bool _bHasPendingTransitions);
	void BPF_SetMatchState(class FName _inMatchState);
	void OnPawnChanged(class APlayerState* _playerState, class APawn* _newPawn, class APawn* _oldPawn);

	int32 BPF_GetLevelIndex(class FName _levelPathName) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameFlowState")
	}
	static class USCGameFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameFlowState>();
	}
};
DUMPER7_ASSERTS_USCGameFlowState;

// Class SCCore.SCHurtInfoHolder
// 0x0000 (0x0000 - 0x0000)
class ISCHurtInfoHolder final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCHurtInfoHolder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCHurtInfoHolder")
	}
	static class ISCHurtInfoHolder* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISCHurtInfoHolder>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISCHurtInfoHolder;

// Class SCCore.PostClientTravelGameFlowState
// 0x0000 (0x04C0 - 0x04C0)
class UPostClientTravelGameFlowState final : public USCGameFlowState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PostClientTravelGameFlowState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PostClientTravelGameFlowState")
	}
	static class UPostClientTravelGameFlowState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPostClientTravelGameFlowState>();
	}
};
DUMPER7_ASSERTS_UPostClientTravelGameFlowState;

// Class SCCore.ProjectOnInputSnapComputation
// 0x0100 (0x0178 - 0x0078)
class UProjectOnInputSnapComputation final : public USnapAnimationComputation
{
public:
	bool                                          m_bCanFail;                                        // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCanRedirectToTarget;                            // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bDiscardSnapDuringMovementTransitions;           // 0x007A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxHorizontalNoSnapRange;                       // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bHalfCapsuleShape;                               // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseMaxHorizontalRangeFromSnapDist;              // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     m_MaxHorizontalRangeFromSnapDist;                  // 0x0088(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_DistanceBounds;                                  // 0x0110(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_SnapDistanceBounds;                              // 0x0120(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_SnapDurationStretchClamp;                        // 0x0130(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_SnapDurationStretchRange;                        // 0x0140(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_SpeedCorrectionRatioLimits;                      // 0x0150(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_LocomotionAdaptationRatio;                       // 0x0160(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLocomotionDecelerationDistanceRatio;            // 0x0170(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ProjectOnInputSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ProjectOnInputSnapComputation")
	}
	static class UProjectOnInputSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProjectOnInputSnapComputation>();
	}
};
DUMPER7_ASSERTS_UProjectOnInputSnapComputation;

// Class SCCore.CardinalPointsHelper
// 0x0000 (0x0028 - 0x0028)
class UCardinalPointsHelper final : public UBlueprintFunctionLibrary
{
public:
	static ESCAdvancedCardinalPoints BPF_ConvertCardinalToAdvanced(ESCCardinalPoints _eCardinalPoint);
	static ESCAdvancedCardinalPoints BPF_GetAdvancedCardinalPointFromAngle(float _fAngleInDegrees, float* _fOutPrecision);
	static ESCCardinalPoints BPF_GetCardinalPointFromAngle(float _fAngleInDegrees, float _fEastWestTolerance);
	static bool BPF_IsNone(ESCCardinalPoints _eCardinalPoint);
	static ESCCardinalPoints BPF_Mirror(ESCCardinalPoints _eCardinalPoint, bool _bMirror, bool _bIgnoreVertical);
	static ESCAdvancedCardinalPoints BPF_MirrorAdvanced(ESCAdvancedCardinalPoints _eCardinalPoint, bool _bMirror, bool _bIgnoreVertical);
	static ESCAdvancedCardinalPoints BPF_RotateAdvancedCardinalPointFromAngle(ESCAdvancedCardinalPoints _eCardinal, int32 _iDirection);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CardinalPointsHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CardinalPointsHelper")
	}
	static class UCardinalPointsHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCardinalPointsHelper>();
	}
};
DUMPER7_ASSERTS_UCardinalPointsHelper;

// Class SCCore.PropertyBagContainer
// 0x0000 (0x0000 - 0x0000)
class IPropertyBagContainer final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PropertyBagContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PropertyBagContainer")
	}
	static class IPropertyBagContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<IPropertyBagContainer>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IPropertyBagContainer;

// Class SCCore.RaycastDistTargetCondition
// 0x0008 (0x0080 - 0x0078)
class URaycastDistTargetCondition final : public UTargetDataCondition
{
public:
	float                                         m_fDistMax;                                        // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RaycastDistTargetCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RaycastDistTargetCondition")
	}
	static class URaycastDistTargetCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<URaycastDistTargetCondition>();
	}
};
DUMPER7_ASSERTS_URaycastDistTargetCondition;

// Class SCCore.SCDebugToStringLogger
// 0x0000 (0x0000 - 0x0000)
class ISCDebugToStringLogger final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCDebugToStringLogger")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCDebugToStringLogger")
	}
	static class ISCDebugToStringLogger* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISCDebugToStringLogger>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISCDebugToStringLogger;

// Class SCCore.RaycastProjectedOnNormalDistTargetCondition
// 0x0008 (0x0080 - 0x0078)
class URaycastProjectedOnNormalDistTargetCondition final : public UTargetDataCondition
{
public:
	float                                         m_fProjectedOnNormalDist;                          // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RaycastProjectedOnNormalDistTargetCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RaycastProjectedOnNormalDistTargetCondition")
	}
	static class URaycastProjectedOnNormalDistTargetCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<URaycastProjectedOnNormalDistTargetCondition>();
	}
};
DUMPER7_ASSERTS_URaycastProjectedOnNormalDistTargetCondition;

// Class SCCore.SCStateTreeComponentSchema
// 0x0000 (0x0058 - 0x0058)
class USCStateTreeComponentSchema final : public UStateTreeComponentSchema
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStateTreeComponentSchema")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStateTreeComponentSchema")
	}
	static class USCStateTreeComponentSchema* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStateTreeComponentSchema>();
	}
};
DUMPER7_ASSERTS_USCStateTreeComponentSchema;

// Class SCCore.RaycastAngleTargetCondition
// 0x0010 (0x0088 - 0x0078)
class URaycastAngleTargetCondition final : public UTargetDataCondition
{
public:
	struct FFloatRange                            m_AngleRange;                                      // 0x0078(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RaycastAngleTargetCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RaycastAngleTargetCondition")
	}
	static class URaycastAngleTargetCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<URaycastAngleTargetCondition>();
	}
};
DUMPER7_ASSERTS_URaycastAngleTargetCondition;

// Class SCCore.SCCoreTools
// 0x0000 (0x0028 - 0x0028)
class USCCoreTools final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_ForceCrash();
	static class UObject* BPF_GetDefaultObject(TSubclassOf<class UObject> _ObjectClass);
	static int32 BPF_GetPIEInstanceID(const class UObject* _worldContext);
	static void BPF_MarkPackageDirty(const class UObject* _asset);
	static void BPF_RefreshPrimaryAssetDirectory(bool _bForceRefresh);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCoreTools")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCoreTools")
	}
	static class USCCoreTools* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCoreTools>();
	}
};
DUMPER7_ASSERTS_USCCoreTools;

// Class SCCore.SCRaycastTargetDataHelpers
// 0x0000 (0x0028 - 0x0028)
class USCRaycastTargetDataHelpers final : public UBlueprintFunctionLibrary
{
public:
	static struct FVector BPF_ComputeOrientedTangentDirection(const struct FRaycastTargetData& _raycastTargetData);
	static struct FVector BPF_ComputeRaycastDirection(const struct FRaycastTargetData& _raycastTargetData);
	static float BPF_ComputeRaycastDirToOrientedTangentAngle(const struct FRaycastTargetData& _raycastTargetData);
	static struct FVector BPF_ComputeTangentDirection(const struct FRaycastTargetData& _raycastTargetData);
	static float BPF_ComputeTangentRaycastDirSign(const struct FRaycastTargetData& _raycastTargetData);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCRaycastTargetDataHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCRaycastTargetDataHelpers")
	}
	static class USCRaycastTargetDataHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCRaycastTargetDataHelpers>();
	}
};
DUMPER7_ASSERTS_USCRaycastTargetDataHelpers;

// Class SCCore.RaycastCustomContainer
// 0x0038 (0x0060 - 0x0028)
class URaycastCustomContainer : public UObject
{
public:
	ESCTraceType                                  m_eTraceType;                                      // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             m_eTraceChannel;                                   // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_TraceName;                                       // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bTraceComplex;                                   // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCollisionResponseContainer            m_ResponseParams;                                  // 0x0035(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	ECollisionResponse                            m_eCollisionResponse;                              // 0x0055(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fRaycastLength;                                  // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RaycastCustomContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RaycastCustomContainer")
	}
	static class URaycastCustomContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<URaycastCustomContainer>();
	}
};
DUMPER7_ASSERTS_URaycastCustomContainer;

// Class SCCore.SCLogTestClassParent
// 0x0008 (0x0030 - 0x0028)
class USCLogTestClassParent : public UObject
{
public:
	int32                                         m_Parent;                                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLogTestClassParent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLogTestClassParent")
	}
	static class USCLogTestClassParent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCLogTestClassParent>();
	}
};
DUMPER7_ASSERTS_USCLogTestClassParent;

// Class SCCore.FollowActorRaycastCustomMethod
// 0x0020 (0x0080 - 0x0060)
class UFollowActorRaycastCustomMethod final : public URaycastCustomContainer
{
public:
	bool                                          m_bUseActorDirection;                              // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vRaycastDirection;                               // 0x0068(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FollowActorRaycastCustomMethod")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FollowActorRaycastCustomMethod")
	}
	static class UFollowActorRaycastCustomMethod* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFollowActorRaycastCustomMethod>();
	}
};
DUMPER7_ASSERTS_UFollowActorRaycastCustomMethod;

// Class SCCore.PlayersInvolvedHelper
// 0x0000 (0x0028 - 0x0028)
class UPlayersInvolvedHelper final : public UBlueprintFunctionLibrary
{
public:
	static void BreakPlayersInvolved(const struct FPlayersInvolved& _playersInvolved, class APlayerState** _outInstigator, TArray<class APlayerState*>* _outOtherPlayersInvolved);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PlayersInvolvedHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PlayersInvolvedHelper")
	}
	static class UPlayersInvolvedHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayersInvolvedHelper>();
	}
};
DUMPER7_ASSERTS_UPlayersInvolvedHelper;

// Class SCCore.RaycastTargetDatasource
// 0x0010 (0x0090 - 0x0080)
class URaycastTargetDatasource final : public UTargetDatasource
{
public:
	struct FRaycastCustomContainerInstance        m_CustomMethodInstance;                            // 0x0080(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RaycastTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RaycastTargetDatasource")
	}
	static class URaycastTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<URaycastTargetDatasource>();
	}
};
DUMPER7_ASSERTS_URaycastTargetDatasource;

// Class SCCore.ControllerButtonInterface
// 0x0000 (0x0000 - 0x0000)
class IControllerButtonInterface final
{
public:
	void BPE_SetInputAction(class USCInputAction* _eAction, class UWidget* _owner, const struct FControllerIconStyle& _eIconStyle, EControllerIconAxisTypes _eAxisType, const struct FSCUserDefinedEnumHandler& _drawingStyle);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ControllerButtonInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ControllerButtonInterface")
	}
	static class IControllerButtonInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IControllerButtonInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IControllerButtonInterface;

// Class SCCore.RichTextBlockControllerDecorator
// 0x00C8 (0x00F0 - 0x0028)
class URichTextBlockControllerDecorator : public URichTextBlockDecorator
{
public:
	struct FControllerIconStyle                   m_eDefaultIconStyle;                               // 0x0028(0x0050)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EControllerIconAxisTypes                      m_eDefaultAxisType;                                // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionWidgetStyleEnumHandler     m_DefaultDrawingStyle;                             // 0x0080(0x0050)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                m_WidgetClass;                                     // 0x00D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iBaselineOffset;                                 // 0x00D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_Metadata;                                        // 0x00E0(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RichTextBlockControllerDecorator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RichTextBlockControllerDecorator")
	}
	static class URichTextBlockControllerDecorator* GetDefaultObj()
	{
		return GetDefaultObjImpl<URichTextBlockControllerDecorator>();
	}
};
DUMPER7_ASSERTS_URichTextBlockControllerDecorator;

// Class SCCore.SCDecalActor
// 0x0010 (0x02C8 - 0x02B8)
class ASCDecalActor final : public ADecalActor
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bIsPooled;                                       // 0x02C0(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCDecalActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCDecalActor")
	}
	static class ASCDecalActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCDecalActor>();
	}
};
DUMPER7_ASSERTS_ASCDecalActor;

// Class SCCore.RichTextBlockControllerDecoratorHelper
// 0x0000 (0x0028 - 0x0028)
class URichTextBlockControllerDecoratorHelper final : public UBlueprintFunctionLibrary
{
public:
	static class FString BPF_GetControllerIconAxisTypesValueName(EControllerIconAxisTypes _eAxis);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RichTextBlockControllerDecoratorHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RichTextBlockControllerDecoratorHelper")
	}
	static class URichTextBlockControllerDecoratorHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<URichTextBlockControllerDecoratorHelper>();
	}
};
DUMPER7_ASSERTS_URichTextBlockControllerDecoratorHelper;

// Class SCCore.SCStateMachineNode
// 0x0010 (0x0180 - 0x0170)
class USCStateMachineNode : public USCFlowGraphNode
{
public:
	bool                                          m_bCanSetInputMode;                                // 0x0170(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_StateTag;                                        // 0x0174(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_PreBindActiveConditions();

	const struct FGameplayTag BPF_GetStateTag() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStateMachineNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStateMachineNode")
	}
	static class USCStateMachineNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStateMachineNode>();
	}
};
DUMPER7_ASSERTS_USCStateMachineNode;

// Class SCCore.SCStreamingNode
// 0x0008 (0x0188 - 0x0180)
class USCStreamingNode : public USCStateMachineNode
{
public:
	uint8                                         Pad_180[0x8];                                      // 0x0180(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnStreamingStateChanged(ESCStreamingState _eNewStreamingState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStreamingNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStreamingNode")
	}
	static class USCStreamingNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStreamingNode>();
	}
};
DUMPER7_ASSERTS_USCStreamingNode;

// Class SCCore.SCStreamingOutNode
// 0x0000 (0x0188 - 0x0188)
class USCStreamingOutNode final : public USCStreamingNode
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStreamingOutNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStreamingOutNode")
	}
	static class USCStreamingOutNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStreamingOutNode>();
	}
};
DUMPER7_ASSERTS_USCStreamingOutNode;

// Class SCCore.SCDebugGraphPropertiesDB
// 0x0010 (0x0038 - 0x0028)
class USCDebugGraphPropertiesDB final : public UObject
{
public:
	bool                                          m_bShowStatesVelocity;                             // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseClampedGraph;                                // 0x0029(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxDisplayHorizontalVelocity;                   // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinDisplayHorizontalVelocity;                   // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCDebugGraphPropertiesDB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCDebugGraphPropertiesDB")
	}
	static class USCDebugGraphPropertiesDB* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCDebugGraphPropertiesDB>();
	}
};
DUMPER7_ASSERTS_USCDebugGraphPropertiesDB;

// Class SCCore.RootMotionModifier_DistanceCurve
// 0x0080 (0x01A0 - 0x0120)
class URootMotionModifier_DistanceCurve final : public USCRootMotionModifier
{
public:
	struct FFloatDataBinding                      m_fDistance;                                       // 0x0120(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FAssetDataBinding                      m_Curve;                                           // 0x0168(0x0038)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_DistanceCurve")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_DistanceCurve")
	}
	static class URootMotionModifier_DistanceCurve* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_DistanceCurve>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_DistanceCurve;

// Class SCCore.RootMotionModifier_DynamicCurve
// 0x00E0 (0x0200 - 0x0120)
class URootMotionModifier_DynamicCurve final : public USCRootMotionModifier
{
public:
	bool                                          m_bUseRawCurveVelocity;                            // 0x0120(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatDataBinding                      m_fDistance;                                       // 0x0128(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FFloatDataBinding                      m_fRawCurveVelocityCoef;                           // 0x0170(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FAssetDataBinding                      m_Curve;                                           // 0x01B8(0x0038)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F0[0x10];                                     // 0x01F0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_DynamicCurve")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_DynamicCurve")
	}
	static class URootMotionModifier_DynamicCurve* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_DynamicCurve>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_DynamicCurve;

// Class SCCore.SCDynamicTextureMask
// 0x0140 (0x01F8 - 0x00B8)
class USCDynamicTextureMask final : public UActorComponent
{
public:
	bool                                          m_bEnablePositionBaking;                           // 0x00B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDynamicTextureMask_PositionBakingType        m_ePositionBakingTypeEnum;                         // 0x00B9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDynamicTextureMask_DrawType                  m_eDrawType;                                       // 0x00BA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDynamicTextureMask_DrawShape                 m_eDrawShape;                                      // 0x00BB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCPositionBakeSceneCapture*            m_PositionBakerActor;                              // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDynamicTextureMaskDB*                  m_DynamicTextureMaskDB;                            // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextureRenderTargetFormat                    m_eTextureType;                                    // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iBakedTextureResolution;                         // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iMaskTextureResolution;                          // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 m_BakedPositionTextureTarget;                      // 0x00E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               m_StaticBakedPositionTexture;                      // 0x00E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 m_MaskRenderTarget;                                // 0x00F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsBaked;                                        // 0x00F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsPlane;                                        // 0x00F9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 m_MaterialIDsToBake;                               // 0x0100(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMeshComponent*                         m_MeshToBake;                                      // 0x0110(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iUVChannel;                                      // 0x0118(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iDilationSteps;                                  // 0x011C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vBoundsMin;                                      // 0x0120(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vBoundsMax;                                      // 0x0138(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_BakedPositionTextureParameterName;               // 0x0150(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_HitPositionParameterName;                        // 0x0158(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_HitSizeParameterName;                            // 0x0160(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_HitFadeParameterName;                            // 0x0168(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_AxisVParameterName;                              // 0x0170(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_AxisUParameterName;                              // 0x0178(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_HitMeshBoundsMinParameterName;                   // 0x0180(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_HitMeshBoundsMaxParameterName;                   // 0x0188(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_ChannelUVParameterName;                          // 0x0190(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_MaskParameterName;                               // 0x0198(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_MarkColorParameterName;                          // 0x01A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_TextureToProjectParameterName;                   // 0x01A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_TextureToCopyParameterName;                      // 0x01B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_TextureToDilateParameterName;                    // 0x01B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_DilationStepsParameterName;                      // 0x01C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_DilationTextureSizeParameterName;                // 0x01C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_IsPlaneParameterName;                            // 0x01D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               m_DilateMID;                                       // 0x01D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               m_CopyMID;                                         // 0x01E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               m_BakedPositionHitDrawerInstanceDynamic;           // 0x01E8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1F0[0x8];                                      // 0x01F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BPF_BakeSelfPositionRuntime();
	bool BPF_DrawOnMask(const struct FVector& _vWorldPos, float _fHitSize, float _fHitFade, const struct FVector& _vAxisV, const struct FVector& _vAxisU, class UTexture* _TextureToProject, const struct FLinearColor& _color);
	bool BPF_DrawOnMaskOverride(const struct FVector& _vWorldPos, float _fHitSize, float _fHitFade, const struct FVector& _vAxisV, const struct FVector& _vAxisU, class UTexture* _TextureToProject, const struct FLinearColor& _color, EDynamicTextureMask_DrawShape _eDrawShape);
	void CreateBothTexturesTarget();
	void CreateMaskTextureTarget();
	void CreatePositionBakingTextureTarget();
	void SetupLocalBoundsOffline();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCDynamicTextureMask")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCDynamicTextureMask")
	}
	static class USCDynamicTextureMask* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCDynamicTextureMask>();
	}
};
DUMPER7_ASSERTS_USCDynamicTextureMask;

// Class SCCore.RootMotionModifier_RedirectToLocation
// 0x00B0 (0x01D0 - 0x0120)
class URootMotionModifier_RedirectToLocation : public USCRootMotionModifier
{
public:
	uint8                                         Pad_120[0x20];                                     // 0x0120(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAngleToReachWantedDirection;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bInRange;                                        // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAnimNotifyState>           m_NotifyState;                                     // 0x0148(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bKeepTranslationDirection;                       // 0x0150(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vTargetDirectionInAnimSpace;                     // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fAngleBetweenForwardAndVelocity;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fRotationScale;                                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fTranslationScale;                               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fYawAnim;                                        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_f2DMovementDuringRedirectNotify;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_184[0x4C];                                     // 0x0184(0x004C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_RedirectToLocation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_RedirectToLocation")
	}
	static class URootMotionModifier_RedirectToLocation* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_RedirectToLocation>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_RedirectToLocation;

// Class SCCore.SCTableWidget
// 0x0100 (0x0348 - 0x0248)
class USCTableWidget final : public UVerticalBox
{
public:
	bool                                          m_bUseCustomLayout;                                // 0x0248(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                m_LeftItemPadding;                                 // 0x024C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                m_RightItemPadding;                                // 0x025C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                m_CenterItemsPadding;                              // 0x026C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateChildSize                        m_ItemSize;                                        // 0x027C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          m_ItemHorizontalAlignment;                         // 0x0284(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            m_ItemVerticalAlignment;                           // 0x0285(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_286[0x2];                                      // 0x0286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                m_RowPadding;                                      // 0x0288(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateChildSize                        m_RowSize;                                         // 0x0298(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          m_RowHorizontalAlignment;                          // 0x02A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            m_RowVerticalAlignment;                            // 0x02A1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class USCButtonUserWidget* _button, bool _bWithMouse)> m_OnItemClicked; // 0x02A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCButtonUserWidget* _button, bool _bWithMouse)> m_OnItemRightClicked; // 0x02B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, EFocusCause _eCause)> m_OnItemFocused; // 0x02C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, EFocusCause _eCause)> m_OnItemLostFocus; // 0x02D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, class USCUserWidget* _prevWidget)> m_OnItemSelected; // 0x02E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCUserWidget* _widget, EUINavigation _eNavigation, int32 _iItemIndex)> m_OnItemNavigation; // 0x02F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TDelegate<void(class USCButtonUserWidget* _button, bool _bWithMouse)> m_OnItemClicked_Bindable;  // 0x0308(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class USCUserWidget* _widget, EFocusCause _eCause)> m_OnItemFocused_Bindable;     // 0x0318(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class USCUserWidget* _widget, EFocusCause _eCause)> m_OnItemLostFocus_Bindable;   // 0x0328(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseCustomNavigation;                            // 0x0338(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iItemsPerRow;                                    // 0x033C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHorizontalBox>             m_RowWidgetClass;                                  // 0x0340(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BPF_AddItem(class UUserWidget* _widget);
	int32 BPF_GetChildrenCount();
	class UUserWidget* BPF_GetItemAtIndex(int32 _iIndex);
	int32 BPF_GetItemIndex(class UWidget* _item);
	class UWidget* BPF_GetLastVisibleItem();
	class UWidget* BPF_GetNextItem(class UWidget* _currentButton, ECycleDirection _eDirection, bool _bSkipDisabled);
	class USCButtonUserWidget* BPF_GetSelectedButton();
	void OnItemClicked(class USCButtonUserWidget* _button, bool _bWithMouse);
	void OnItemFocused(class USCUserWidget* _widget, EFocusCause _eCause);
	void OnItemLostFocus(class USCUserWidget* _widget, EFocusCause _eCause);
	void OnItemNavigation(class USCUserWidget* _widget, EUINavigation _eNavigation);
	void OnItemRightClicked(class USCButtonUserWidget* _button, bool _bWithMouse);
	void OnItemSelected(class USCUserWidget* _widget, class USCUserWidget* _prevWidget);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCTableWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCTableWidget")
	}
	static class USCTableWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCTableWidget>();
	}
};
DUMPER7_ASSERTS_USCTableWidget;

// Class SCCore.RootMotionModifier_Snap
// 0x0010 (0x0290 - 0x0280)
class URootMotionModifier_Snap final : public URootMotionModifier_SkewWarp
{
public:
	bool                                          m_bZAxisOnly;                                      // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_281[0xF];                                      // 0x0281(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_Snap")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_Snap")
	}
	static class URootMotionModifier_Snap* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_Snap>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_Snap;

// Class SCCore.SCCommonSessionSubsystem
// 0x0000 (0x0120 - 0x0120)
class USCCommonSessionSubsystem final : public UCommonSessionSubsystem
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCommonSessionSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCommonSessionSubsystem")
	}
	static class USCCommonSessionSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCommonSessionSubsystem>();
	}
};
DUMPER7_ASSERTS_USCCommonSessionSubsystem;

// Class SCCore.RootMotionModifier_SnapToNavMesh
// 0x0000 (0x0120 - 0x0120)
class URootMotionModifier_SnapToNavMesh final : public USCRootMotionModifier
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RootMotionModifier_SnapToNavMesh")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RootMotionModifier_SnapToNavMesh")
	}
	static class URootMotionModifier_SnapToNavMesh* GetDefaultObj()
	{
		return GetDefaultObjImpl<URootMotionModifier_SnapToNavMesh>();
	}
};
DUMPER7_ASSERTS_URootMotionModifier_SnapToNavMesh;

// Class SCCore.SCAbilitiesGameplayEffectComponent
// 0x0020 (0x0058 - 0x0038)
class USCAbilitiesGameplayEffectComponent final : public UAbilitiesGameplayEffectComponent
{
public:
	TArray<struct FSCGameplayAbilitySpecConfigSoftRef> m_GrantAbilityConfigsSoftRef;                 // 0x0038(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAbilitySpecConfig>     m_CachedGrantAbilityConfigs;                       // 0x0048(0x0010)(BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void OnAbilitiesLoaded(const struct FActiveGameplayEffectHandle& _activeGEHandle) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAbilitiesGameplayEffectComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAbilitiesGameplayEffectComponent")
	}
	static class USCAbilitiesGameplayEffectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAbilitiesGameplayEffectComponent>();
	}
};
DUMPER7_ASSERTS_USCAbilitiesGameplayEffectComponent;

// Class SCCore.SCBPAbilityMontageNotify
// 0x0000 (0x0038 - 0x0038)
class USCBPAbilityMontageNotify final : public USCAbilityMontageNotify
{
public:
	void BPF_AbilityNotify(class USCAbilitySystemComponent* _component, const struct FAnimNotifyEvent& _event, class UAnimMontage* _montage, class UAnimInstance* _animInstance, int32 _instanceID, const struct FGameplayAbilityTargetDataHandle& _context, float _fDt) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBPAbilityMontageNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBPAbilityMontageNotify")
	}
	static class USCBPAbilityMontageNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBPAbilityMontageNotify>();
	}
};
DUMPER7_ASSERTS_USCBPAbilityMontageNotify;

// Class SCCore.SCCameraMixerDataOverTime
// 0x0028 (0x00D8 - 0x00B0)
class USCCameraMixerDataOverTime final : public USCCameraMixerData
{
public:
	uint8                                         Pad_B0[0x10];                                      // 0x00B0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fStartingRatio;                                  // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTargetRatio;                                    // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSCAlphaBlendArgs                      m_BlendArgs;                                       // 0x00C8(0x0010)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraMixerDataOverTime")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraMixerDataOverTime")
	}
	static class USCCameraMixerDataOverTime* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraMixerDataOverTime>();
	}
};
DUMPER7_ASSERTS_USCCameraMixerDataOverTime;

// Class SCCore.SCAbilityMontageNotifyState
// 0x0008 (0x0038 - 0x0030)
class USCAbilityMontageNotifyState : public UAnimNotifyState
{
public:
	ESCNotifyStateDurationTimeBehavior            m_eDurationTimeBehavior;                           // 0x0030(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAbilityMontageNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAbilityMontageNotifyState")
	}
	static class USCAbilityMontageNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAbilityMontageNotifyState>();
	}
};
DUMPER7_ASSERTS_USCAbilityMontageNotifyState;

// Class SCCore.SCBPAbilityMontageNotifyState
// 0x0000 (0x0038 - 0x0038)
class USCBPAbilityMontageNotifyState final : public USCAbilityMontageNotifyState
{
public:
	void BPF_AbilityNotifyBegin(class USCAbilitySystemComponent* _component, const struct FAnimNotifyEvent& _event, struct FInstancedStruct& _context, class UAnimMontage* _montage, class UAnimInstance* _animInstance, int32 _instanceID, float _fDt) const;
	void BPF_AbilityNotifyEnd(class USCAbilitySystemComponent* _component, const struct FAnimNotifyEvent& _event, struct FInstancedStruct& _context, class UAnimMontage* _montage, class UAnimInstance* _animInstance, int32 _instanceID, float _fDt) const;
	void BPF_AbilityNotifyTick(class USCAbilitySystemComponent* _component, const struct FAnimNotifyEvent& _event, struct FInstancedStruct& _context, class UAnimMontage* _montage, class UAnimInstance* _animInstance, int32 _instanceID, float _fDt) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBPAbilityMontageNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBPAbilityMontageNotifyState")
	}
	static class USCBPAbilityMontageNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBPAbilityMontageNotifyState>();
	}
};
DUMPER7_ASSERTS_USCBPAbilityMontageNotifyState;

// Class SCCore.TargetingContextHelpers
// 0x0000 (0x0028 - 0x0028)
class UTargetingContextHelpers final : public UBlueprintFunctionLibrary
{
public:
	static struct FQuat BPF_GetForwardFromTargetingContext(const class AActor* _actor, const struct FTargetingContext& _targetingContext);
	static struct FVector BPF_GetVelocityFromTargetingContext(const class AActor* _actor, const struct FTargetingContext& _targetingContext);
	static void BPF_SaveActorState(const class AActor* _actor, struct FTargetingContext* _targetingContext, bool _bFeetLocation, bool _bVelocity, bool _bOrientation);
	static void BPF_SetTargetingContextActorFeetLocation(const class AActor* _actor, struct FTargetingContext& _targetingContext);
	static void BPF_SetTargetingContextActorRotation(const class AActor* _actor, struct FTargetingContext& _targetingContext);
	static void BPF_SetTargetingContextActorVelocity(const class AActor* _actor, struct FTargetingContext& _targetingContext);
	static void BPF_SetTargetingContextRotation(const struct FRotator& _rotator, struct FTargetingContext& _targetingContext);
	static void BPF_SetTargetingContextVelocity(const struct FVector& _vVelocity, struct FTargetingContext& _targetingContext);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetingContextHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetingContextHelpers")
	}
	static class UTargetingContextHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetingContextHelpers>();
	}
};
DUMPER7_ASSERTS_UTargetingContextHelpers;

// Class SCCore.SCCameraOffsetService
// 0x01B0 (0x01F8 - 0x0048)
class USCCameraOffsetService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x1B0];                                     // 0x0048(0x01B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraOffsetService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraOffsetService")
	}
	static class USCCameraOffsetService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraOffsetService>();
	}
};
DUMPER7_ASSERTS_USCCameraOffsetService;

// Class SCCore.DataTableValueHandleHelper
// 0x0000 (0x0028 - 0x0028)
class UDataTableValueHandleHelper final : public UObject
{
public:
	static void BPF_ConvertToInstancedStruct(const struct FDataTableRowHandle& _row, struct FInstancedStruct* _outResult);
	static class UObject* BPF_GetAsset(class UObject* _container, const struct FAssetDataBinding& _prop);
	static class UObject* BPF_GetAssetFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FAssetDataBinding& _prop);
	static bool BPF_GetBooleanValueFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FBooleanDataBinding& _prop);
	static class UClass* BPF_GetClassValue(class UObject* _container, const struct FClassDataBinding& _prop);
	static class UClass* BPF_GetClassValueFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FClassDataBinding& _prop);
	static float BPF_GetFloatValue(class UObject* _container, const struct FFloatDataBinding& _prop);
	static float BPF_GetFloatValueFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FFloatDataBinding& _prop);
	static void BPF_GetGameplayTagContainer(class UObject* _container, const struct FGameplayTagContainerDataBinding& _prop, struct FGameplayTagContainer* _outResult);
	static void BPF_GetGameplayTagContainerFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FGameplayTagContainerDataBinding& _prop, struct FGameplayTagContainer* _outResult);
	static struct FGameplayTag BPF_GetGameplayTagValue(class UObject* _container, const struct FGameplayTagDataBinding& _prop);
	static struct FGameplayTag BPF_GetGameplayTagValueFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FGameplayTagDataBinding& _prop);
	static struct FGameplayTag BPF_GetGameplayTagValueFromTargetData(const struct FSCGameplayAbilityTargetData& _handle, const struct FGameplayTagDataBinding& _prop);
	static int32 BPF_GetIntValue(class UObject* _container, const struct FIntDataBinding& _prop);
	static int32 BPF_GetIntValueFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FIntDataBinding& _prop);
	static struct FLinearColor BPF_GetLinearColorValueFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FLinearColorDataBinding& _prop);
	static struct FLinearColor BPF_GetLinearColorValueFromTargetData(const struct FSCGameplayAbilityTargetData& _handle, const struct FLinearColorDataBinding& _prop);
	static class FName BPF_GetNameValueFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FNameDataBinding& _prop);
	static TSoftClassPtr<class UClass> BPF_GetSoftClassValueFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FSoftClassDataBinding& _prop);
	static TSoftObjectPtr<class UObject> BPF_GetSoftObjectValueFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FSoftAssetDataBinding& _prop);
	static class FText BPF_GetTextValueFromRowHandle(const struct FDataTableRowHandle& _handle, const struct FTextDataBinding& _prop);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DataTableValueHandleHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DataTableValueHandleHelper")
	}
	static class UDataTableValueHandleHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDataTableValueHandleHelper>();
	}
};
DUMPER7_ASSERTS_UDataTableValueHandleHelper;

// Class SCCore.SCAchievementSubsystem
// 0x00B0 (0x0200 - 0x0150)
class USCAchievementSubsystem final : public USCSubsystem
{
public:
	TMulticastInlineDelegate<void(const class FString& AchievementID)> BPE_OnAchievementUnlock;      // 0x0150(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& AchievementID, float Progress)> BPE_OnAchievementSetProgressUpdate; // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& AchievementID, float NewProgress, float Change)> BPE_OnAchievementAddProgressUpdate; // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSCUnwrittenAchievementsData           m_UnwrittenAchievementsData;                       // 0x0180(0x0020)(NativeAccessSpecifierPublic)
	ESCAchievementWriteState                      m_eAchievementWriteState;                          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1[0x5F];                                     // 0x01A1(0x005F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_AddProgress(const class FString& AchievementID, float Progress);
	void BPF_AddProgressByTag(const struct FGameplayTag& AchievementTag, float Progress);
	void BPF_AddStatProgress(const class APlayerState* PlayerState, const class FString& StatName, const int32 StatValueToAdd);
	void BPF_AddStatProgressByTag(const class APlayerState* PlayerState, const TMap<struct FGameplayTag, int32>& AchievementMap, const struct FGameplayTag& StatTag, const int32 StatValueToAdd);
	float BPF_GetProgressByTag(const struct FGameplayTag& _achievementTag);
	void BPF_ResetAllSteamAchievements();
	void BPF_SetProgress(const class FString& AchievementID, float Progress, bool bIsPercent);
	void BPF_SetProgressByTag(const struct FGameplayTag& AchievementTag, float Progress, bool bIsPercent);
	void BPF_SetStatProgress(const class APlayerState* PlayerState, const class FString& StatName, const int32 NewStatValue);
	void BPF_SetStatProgressByTag(const class APlayerState* PlayerState, const TMap<struct FGameplayTag, int32>& AchievementMap, const struct FGameplayTag& StatTag, const int32 NewStatValue);
	void BPF_UnlockAchievement(const class FString& AchievementID, float UnlockPercentage);
	void BPF_UnlockAchievementByTag(const struct FGameplayTag& AchievementTag, float UnlockPercentage);
	void DelayedTryToWriteUnwrittenAchievements();
	void TryToWriteUnwrittenAchievements();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAchievementSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAchievementSubsystem")
	}
	static class USCAchievementSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAchievementSubsystem>();
	}
};
DUMPER7_ASSERTS_USCAchievementSubsystem;

// Class SCCore.SCCameraShakeAnimationPattern
// 0x0018 (0x0070 - 0x0058)
class USCCameraShakeAnimationPattern final : public USimpleCameraShakePattern
{
public:
	class UAnimSequence*                          m_animation;                                       // 0x0058(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_BoneName;                                        // 0x0060(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraShakeAnimationPattern")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraShakeAnimationPattern")
	}
	static class USCCameraShakeAnimationPattern* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraShakeAnimationPattern>();
	}
};
DUMPER7_ASSERTS_USCCameraShakeAnimationPattern;

// Class SCCore.SCActivatableWidgetStack
// 0x0008 (0x0390 - 0x0388)
class USCActivatableWidgetStack final : public UCommonActivatableWidgetStack
{
public:
	struct FGameplayTag                           m_Layer;                                           // 0x0388(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCActivatableWidgetStack")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCActivatableWidgetStack")
	}
	static class USCActivatableWidgetStack* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCActivatableWidgetStack>();
	}
};
DUMPER7_ASSERTS_USCActivatableWidgetStack;

// Class SCCore.SCActorDebugView
// 0x00D8 (0x0100 - 0x0028)
class USCActorDebugView final : public UObject
{
public:
	uint8                                         Pad_28[0xD8];                                      // 0x0028(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCActorDebugView")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCActorDebugView")
	}
	static class USCActorDebugView* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCActorDebugView>();
	}
};
DUMPER7_ASSERTS_USCActorDebugView;

// Class SCCore.SCCameraSmoothRotationModifier
// 0x0008 (0x0050 - 0x0048)
class USCCameraSmoothRotationModifier final : public UCameraModifier
{
public:
	float                                         m_fSmoothSpeed;                                    // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraSmoothRotationModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraSmoothRotationModifier")
	}
	static class USCCameraSmoothRotationModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraSmoothRotationModifier>();
	}
};
DUMPER7_ASSERTS_USCCameraSmoothRotationModifier;

// Class SCCore.SCActorOptimizerComponent
// 0x00B0 (0x0168 - 0x00B8)
class USCActorOptimizerComponent : public UActorComponent
{
public:
	TMap<class FName, struct FSCActorComponentOptimizer> m_Components;                               // 0x00B8(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_108[0x50];                                     // 0x0108(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bEnableDetachComponents;                         // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bDisableCollisionOnDetachComponent;              // 0x0159(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_15A[0xE];                                      // 0x015A(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCActorOptimizerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCActorOptimizerComponent")
	}
	static class USCActorOptimizerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCActorOptimizerComponent>();
	}
};
DUMPER7_ASSERTS_USCActorOptimizerComponent;

// Class SCCore.SCFlowGraphNodeTransition
// 0x0008 (0x0178 - 0x0170)
class USCFlowGraphNodeTransition final : public USCFlowGraphNode
{
public:
	class FName                                   m_NodeID;                                          // 0x0170(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFlowGraphNodeTransition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFlowGraphNodeTransition")
	}
	static class USCFlowGraphNodeTransition* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFlowGraphNodeTransition>();
	}
};
DUMPER7_ASSERTS_USCFlowGraphNodeTransition;

// Class SCCore.SCAestheticAnimationMetadata
// 0x0010 (0x03C0 - 0x03B0)
class USCAestheticAnimationMetadata final : public USCAnimationMetadata
{
public:
	bool                                          m_bStartTimeFromContextNamedFloat;                 // 0x03B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_StartTimeNamedFloat;                             // 0x03B4(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAestheticAnimationMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAestheticAnimationMetadata")
	}
	static class USCAestheticAnimationMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAestheticAnimationMetadata>();
	}
};
DUMPER7_ASSERTS_USCAestheticAnimationMetadata;

// Class SCCore.SCAIController
// 0x0010 (0x03E8 - 0x03D8)
class ASCAIController : public AAIController
{
public:
	uint8                                         Pad_3D8[0x8];                                      // 0x03D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bDestroyOnUnPossess;                             // 0x03E0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAIController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAIController")
	}
	static class ASCAIController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCAIController>();
	}
};
DUMPER7_ASSERTS_ASCAIController;

// Class SCCore.SCFootIkCliffRaycast
// 0x0008 (0x0040 - 0x0038)
class USCFootIkCliffRaycast final : public USCFootIkRaycast
{
public:
	float                                         m_fCliffTraceOffset;                               // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fCliffOffset;                                    // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFootIkCliffRaycast")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFootIkCliffRaycast")
	}
	static class USCFootIkCliffRaycast* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFootIkCliffRaycast>();
	}
};
DUMPER7_ASSERTS_USCFootIkCliffRaycast;

// Class SCCore.SCAIMovementComponent
// 0x0040 (0x0280 - 0x0240)
class USCAIMovementComponent final : public USceneComponent
{
public:
	class ASCAIMoveToTarget*                      m_MoveToTarget;                                    // 0x0240(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_248[0x24];                                     // 0x0248(0x0024)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMoveToAcceptanceRadius;                         // 0x026C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bReachTestIncludesAgentRadius;                   // 0x0270(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bReachTestIncludesGoalRadius;                    // 0x0271(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_272[0x2];                                      // 0x0272(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMinDistanceToRestartMoveTo;                     // 0x0274(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_278[0x8];                                      // 0x0278(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BPF_StartMovement();
	void BPF_StopMovement();

	bool BPF_HasStartedMovement() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAIMovementComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAIMovementComponent")
	}
	static class USCAIMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAIMovementComponent>();
	}
};
DUMPER7_ASSERTS_USCAIMovementComponent;

// Class SCCore.SCAIPerceptionSystem
// 0x0008 (0x0140 - 0x0138)
class USCAIPerceptionSystem final : public UAIPerceptionSystem
{
public:
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAIPerceptionSystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAIPerceptionSystem")
	}
	static class USCAIPerceptionSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAIPerceptionSystem>();
	}
};
DUMPER7_ASSERTS_USCAIPerceptionSystem;

// Class SCCore.DelegateHolder
// 0x0020 (0x0048 - 0x0028)
class UDelegateHolder final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SytemCompleted(class UParticleSystemComponent* Component);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DelegateHolder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DelegateHolder")
	}
	static class UDelegateHolder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelegateHolder>();
	}
};
DUMPER7_ASSERTS_UDelegateHolder;

// Class SCCore.ScaleDistanceRootMotionModifier
// 0x00A0 (0x01C0 - 0x0120)
class UScaleDistanceRootMotionModifier final : public USCRootMotionModifier
{
public:
	TSubclassOf<class UAnimNotifyState>           m_ApexNotifyState;                                 // 0x0120(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatDataBinding                      m_fHorizontalDistanceBinding;                      // 0x0128(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FFloatDataBinding                      m_fVerticalDistanceBinding;                        // 0x0170(0x0048)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B8[0x8];                                      // 0x01B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScaleDistanceRootMotionModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScaleDistanceRootMotionModifier")
	}
	static class UScaleDistanceRootMotionModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScaleDistanceRootMotionModifier>();
	}
};
DUMPER7_ASSERTS_UScaleDistanceRootMotionModifier;

// Class SCCore.ScaleSpeedRootMotionModifier
// 0x00A0 (0x01C0 - 0x0120)
class UScaleSpeedRootMotionModifier final : public USCRootMotionModifier
{
public:
	struct FGameplayTag                           m_SprintTag;                                       // 0x0120(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fMaxInitialSpeed;                                // 0x0128(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fStep;                                           // 0x012C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FScaleSpeedRootMotionTrack>     Tracks;                                            // 0x0130(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<struct FFrameNumber, struct FVector2f>   m_SpeedMap;                                        // 0x0140(0x0050)(NativeAccessSpecifierPrivate)
	struct FVector2f                              m_vSpeedValues2f;                                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_198[0x28];                                     // 0x0198(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ScaleSpeedRootMotionModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ScaleSpeedRootMotionModifier")
	}
	static class UScaleSpeedRootMotionModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScaleSpeedRootMotionModifier>();
	}
};
DUMPER7_ASSERTS_UScaleSpeedRootMotionModifier;

// Class SCCore.SCGameFlowStartState
// 0x0008 (0x0178 - 0x0170)
class USCGameFlowStartState final : public USCFlowGraphStartNode
{
public:
	struct FGameplayTag                           m_StateTag;                                        // 0x0170(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameFlowStartState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameFlowStartState")
	}
	static class USCGameFlowStartState* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameFlowStartState>();
	}
};
DUMPER7_ASSERTS_USCGameFlowStartState;

// Class SCCore.SCAnimationHelper
// 0x0000 (0x0028 - 0x0028)
class USCAnimationHelper final : public UBlueprintFunctionLibrary
{
public:
	static struct FTransform BPF_AnimSpaceTransformToUESpaceTransform(const struct FTransform& _transform);
	static struct FQuat BPF_ComputePlayerRedirection(const class UBasicMontagePlayerConfiguration* _playerRedirectionConfig, const class AActor* _actor, const class UGameplayAbility* _owningAbility, const struct FGameplayAbilityTargetDataHandle& _inOutContext);
	static float BPF_ConvertMontageFrameToTime(const class UAnimMontage* _animMontage, const int32 _iValue);
	static int32 BPF_ConvertMontageTimeToFrame(const class UAnimMontage* _animMontage, const float _fValue);
	static void BPF_ExtractMainSequenceFromMontage(class UAnimMontage* _montage, class UAnimSequence** _outSequence, class FName* _outSlotName);
	static struct FTransform BPF_ExtractRootMotion(class UAnimMontage* _montage);
	static struct FTransform BPF_ExtractRootMotionFromRange(class UAnimMontage* _montage, float _fStartTrackPosition, float _fEndTrackPosition);
	static struct FTransform BPF_ExtractRootTrackTransform(class UAnimSequence* _sequence, float _fAnimRatio);
	static float BPF_FindBestAnimSequenceStartFromFeetLocation(class FName _syncGroupName, class UAnimSequenceBase* _sequence, class UAnimInstance* _animInstance, float _fTolerance);
	static class UAnimMetaData* BPF_FindMetaDataByClass(class UAnimSequenceBase* _animSequence, TSubclassOf<class UAnimMetaData> _metaDataClass);
	static struct FTransform BPF_GetBoneTransformInComponentSpace(class UAnimSequence* _sequence, class FName _boneName, float _fAnimRatio, bool _bMirror, const class UMirrorDataTable* _mirrorDB);
	static bool BPF_IsValidSlotNameInMontage(const class UAnimMontage* _animMontage, class FName _slotName);
	static bool BPF_ShouldMirrorAnimationBasedOnSyncGroup(const class UAnimInstance* _animInstance, const class FName _syncGroupName, const class UAnimSequence* _animSeq, float _fAnimTime, const class UMirrorDataTable* _mirrorTable);
	static void BPF_StopAllMontagesFromAnimNodeSlot(const struct FAnimUpdateContext& _context, const struct FAnimNodeReference& _node, float _fBlendOutTime);
	static void FindNotifiesStateByClass(class UAnimSequenceBase* _sequence, TSubclassOf<class UAnimNotifyState> _class, bool _bIncludeChildren, TArray<struct FAnimNotifyEvent>* _outFoundNotifies);
	static void FindNotifyByClass(class UAnimSequenceBase* _sequence, TSubclassOf<class UAnimNotify> _class, bool _bIncludeChildren, struct FAnimNotifyEvent* _outFoundNotify, bool* _bOutFound);
	static void FindNotifyStateByClass(class UAnimSequenceBase* _sequence, TSubclassOf<class UAnimNotifyState> _class, bool _bIncludeChildren, struct FAnimNotifyEvent* _outFoundNotify, bool* _bOutFound);
	static float GetNotifyDuration(const struct FAnimNotifyEvent& _notify);
	static float GetNotifyEndTriggerTime(const struct FAnimNotifyEvent& _notify);
	static float GetNotifyTriggerTime(const struct FAnimNotifyEvent& _notify);
	static void GetValidUniqueMarkerNames(class UAnimationAsset* _animationAsset, bool* _bOutHasValidMarkers, TArray<class FName>* _outMarkerNames);
	static bool HasInvalidNotifies(class UAnimSequenceBase* _sequence, const class FString& _inNotifyName);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAnimationHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAnimationHelper")
	}
	static class USCAnimationHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAnimationHelper>();
	}
};
DUMPER7_ASSERTS_USCAnimationHelper;

// Class SCCore.TimeStretchNotify
// 0x0050 (0x0088 - 0x0038)
class UTimeStretchNotify : public UAnimNotify
{
public:
	ETimeStretchOption                            m_eStretch;                                        // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntDataBinding                        m_iWantedFrameCount;                               // 0x0040(0x0048)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TimeStretchNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TimeStretchNotify")
	}
	static class UTimeStretchNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTimeStretchNotify>();
	}
};
DUMPER7_ASSERTS_UTimeStretchNotify;

// Class SCCore.SCPoolableActorSpawner
// 0x0000 (0x0000 - 0x0000)
class ISCPoolableActorSpawner final
{
public:
	void BPE_OnGeneratePoolActors(class ASCPoolableActorsContainer* _container);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPoolableActorSpawner")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPoolableActorSpawner")
	}
	static class ISCPoolableActorSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISCPoolableActorSpawner>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISCPoolableActorSpawner;

// Class SCCore.FreezeFrameTimeStretchComputation
// 0x0020 (0x0050 - 0x0030)
class UFreezeFrameTimeStretchComputation final : public UTimeStretchComputation
{
public:
	float                                         m_fEpsilon;                                        // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAtStartTime;                                    // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_AnimRatioTargetDataTag;                          // 0x0038(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_FrameCountTargetDataTag;                         // 0x0040(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_UntilWorldTimeTargetDataTag;                     // 0x0048(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FreezeFrameTimeStretchComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FreezeFrameTimeStretchComputation")
	}
	static class UFreezeFrameTimeStretchComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFreezeFrameTimeStretchComputation>();
	}
};
DUMPER7_ASSERTS_UFreezeFrameTimeStretchComputation;

// Class SCCore.SCSharedAnimationMetadata
// 0x0048 (0x00A8 - 0x0060)
class USCSharedAnimationMetadata : public USCBaseAnimationMetadata
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    m_DataTableRow;                                    // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FSCAnimationMetadataInstance           m_SharedMetadata;                                  // 0x0078(0x0030)(Edit, NativeAccessSpecifierPublic)

public:
	class UScriptStruct* GetCustomDataTableStruct() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSharedAnimationMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSharedAnimationMetadata")
	}
	static class USCSharedAnimationMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSharedAnimationMetadata>();
	}
};
DUMPER7_ASSERTS_USCSharedAnimationMetadata;

// Class SCCore.SCPopupViewModel
// 0x0088 (0x00F8 - 0x0070)
class USCPopupViewModel final : public USCViewModel
{
public:
	class FString                                 m_Title;                                           // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_Message;                                         // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              m_Icon;                                            // 0x0090(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_FocusColorOverride;                              // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USCPopupActionViewModel*>        m_Actions;                                         // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_AdditionalTags;                                  // 0x00D8(0x0020)(Edit, BlueprintVisible, DisableEditOnTemplate, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPopupViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPopupViewModel")
	}
	static class USCPopupViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPopupViewModel>();
	}
};
DUMPER7_ASSERTS_USCPopupViewModel;

// Class SCCore.CyclicSwapLimbsMontagePoseModifier
// 0x0050 (0x0080 - 0x0030)
class UCyclicSwapLimbsMontagePoseModifier final : public UMontagePoseModifier
{
public:
	class FName                                   m_WarpTarget;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         m_PelvisBone;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         m_RootBone;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fInitialAngle;                                   // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           m_CurveSuffixes;                                   // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSCAnimNode_SwapBones_Limb>     m_Limbs;                                           // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CyclicSwapLimbsMontagePoseModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CyclicSwapLimbsMontagePoseModifier")
	}
	static class UCyclicSwapLimbsMontagePoseModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCyclicSwapLimbsMontagePoseModifier>();
	}
};
DUMPER7_ASSERTS_UCyclicSwapLimbsMontagePoseModifier;

// Class SCCore.SCProgressionSubsystem
// 0x01C8 (0x0328 - 0x0160)
class USCProgressionSubsystem final : public USCWorldSubsystem
{
public:
	TMulticastInlineDelegate<void()>              OnInitialized;                                     // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayTagContainer& _abilitiesLockedByProgression)> OnAbilitiesLockedChanged; // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool _bAbilityProgressionBool)> OnAbilityProgressionEnabledChanged; // 0x0180(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool _bAbilityProgressionBool)> OnUseSavedAbilityProgressionChanged; // 0x0190(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool _bAbilityProgressionBool)> OnUseSavedAbilityProgressionAtInitChanged; // 0x01A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool _bAbilityProgressionBool)> OnIsLoadingOrCopyingForSaveChanged; // 0x01B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, bool>               m_DefaultStartingAbilities;                        // 0x01C0(0x0050)(Edit, EditFixedSize, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<TSoftObjectPtr<class UWorld>, struct FAbilityProgression> m_AbilityProgressionDefaultPerLevel; // 0x0210(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  m_AbilitiesUnlockable;                             // 0x0260(0x0020)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          m_bDefaultIsAbilityProgressionEnabled;             // 0x0280(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_DefaultAbilitiesToLock;                          // 0x0288(0x0020)(Transient, NativeAccessSpecifierPrivate)
	class USCAbilitySystemComponent*              m_CurrentASCCached;                                // 0x02A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  m_ProgressionSubsystemFilters;                     // 0x02B0(0x0020)(Transient, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  m_AbilitiesLockedByProgression;                    // 0x02D0(0x0020)(SaveGame, NativeAccessSpecifierPrivate)
	bool                                          m_bUseSavedAbilityProgressionAtInit;               // 0x02F0(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bIsAbilityProgressionEnabled;                    // 0x02F1(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EProgressionSubsystemState                    m_eProgressionSubsystemInitState;                  // 0x02F2(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F3[0x5];                                      // 0x02F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_AbilitiesLockedByProgressionOnCurrentASC;        // 0x02F8(0x0020)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_318[0x10];                                     // 0x0318(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_RequestLockAbilities(const struct FGameplayTagContainer& _abilitiesToLock);
	void BPF_RequestUnlockAbilities(const struct FGameplayTagContainer& _abilitiesToUnlock);
	void BPF_SetIsAbilityProgressionEnabled(bool _bIsAbilityProgressionEnabled);
	void BPF_SetUseSavedAbilityProgressionAtInit(bool _bUseSavedAbilityProgressionAtInit);
	void OnPawnSet(class APlayerState* _player, class APawn* _newPawn, class APawn* _oldPawn);

	struct FGameplayTagContainer BPF_GetAbilitiesLockedByProgression() const;
	struct FGameplayTagContainer BPF_GetAbilitiesUnlockable() const;
	struct FGameplayTagContainer BPF_GetDefaultAbilitiesToLock() const;
	bool BPF_GetDefaultIsAbilityProgressionEnabled() const;
	bool BPF_GetUseSavedAbilityProgressionAtInit() const;
	bool BPF_IsAbilityProgressionEnabled() const;
	bool BPF_IsInitialized() const;
	bool BPF_IsReady() const;
	bool BPF_IsSubsystemLoadingOrCopyingForSave() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCProgressionSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCProgressionSubsystem")
	}
	static class USCProgressionSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCProgressionSubsystem>();
	}
};
DUMPER7_ASSERTS_USCProgressionSubsystem;

// Class SCCore.SCAnimNotify_PlayNiagaraEffect
// 0x00A8 (0x00E0 - 0x0038)
class USCAnimNotify_PlayNiagaraEffect : public UAnimNotify
{
public:
	class UNiagaraSystem*                         m_Template;                                        // 0x0038(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         m_Socket;                                          // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Attached : 1;                                      // 0x0050(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_51[0xF];                                       // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_OffsetTransform;                                 // 0x0060(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bHandleMirror;                                   // 0x00C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCAnimTransformSpace                         m_eLocationSpace;                                  // 0x00C1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCAnimTransformSpace                         m_eRotationSpace;                                  // 0x00C2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCAnimTransformSpace                         m_eScaleSpace;                                     // 0x00C3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemComponent*                     m_SpawnedEffect;                                   // 0x00C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D0[0x10];                                      // 0x00D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UNiagaraSystem* BPE_GetNiagaraSystem(class USkeletalMeshComponent* _meshComp, class UAnimSequenceBase* _animation, const struct FAnimNotifyEventReference& _eventReference) const;
	class UFXSystemComponent* OverrideSpawnEffect(class USkeletalMeshComponent* _meshComp, class UAnimSequenceBase* _animation, const struct FAnimNotifyEventReference& _eventReference) const;
	class UFXSystemComponent* SpawnEffect(class USkeletalMeshComponent* _meshComp, class UAnimSequenceBase* _animation, const struct FAnimNotifyEventReference& _eventReference) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAnimNotify_PlayNiagaraEffect")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAnimNotify_PlayNiagaraEffect")
	}
	static class USCAnimNotify_PlayNiagaraEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAnimNotify_PlayNiagaraEffect>();
	}
};
DUMPER7_ASSERTS_USCAnimNotify_PlayNiagaraEffect;

// Class SCCore.RotationWayHelper
// 0x0000 (0x0028 - 0x0028)
class URotationWayHelper final : public UBlueprintFunctionLibrary
{
public:
	static ESCRotationWay BPF_Mirror(ESCRotationWay _eRotation, bool _bMirror);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RotationWayHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RotationWayHelper")
	}
	static class URotationWayHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<URotationWayHelper>();
	}
};
DUMPER7_ASSERTS_URotationWayHelper;

// Class SCCore.SCBasePlayerController
// 0x0AC0 (0x1340 - 0x0880)
#pragma pack(push, 0x1)
class alignas(0x10) ASCBasePlayerController : public ACommonPlayerController
{
public:
	uint8                                         Pad_880[0x18];                                     // 0x0880(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnInputMappingChanged;                             // 0x0898(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_8A8[0xA90];                                    // 0x08A8(0x0A90)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_ExportRecordedInputs(const class FString& _fileName, const class FString& _overrideFolder, bool _bRemoveLastInput);
	void BPF_ResetInputAction(class USCInputAction* _inputAction);
	void BPF_ResetInputActionData(class USCInputAction* _inputAction);
	void BPF_ServerRequestVisualLoggerSnapshot(const class FString& _fileName);
	void BPF_SetIgnoreInput(bool _bIgnore);
	void BPF_SimulateInputData(const class FString& _filePath);
	void BPF_StartRecordingInputs();
	void BPF_StopInputSimulation();
	void BPF_StopRecordingInputs();
	void ClientFirstRequestTimeSync(uint8 _uiClientRequestID, int64 _serverTimeTicks);
	void ClientGameFlowGotoState(class FName _stateID, class ASCBasePlayerController* _pc);
	void ClientRequestGameStartTime();
	void ClientRequestTimeSync(uint8 _uiClientRequestID, int64 _serverTimeTicks);
	void ClientSetGameStartTime(int64 _iGameStartTime);
	void MulticastRequestVisualLoggerSnapshot(const class FString& _fileName);
	void ServerFirstRequestTimeSync(uint8 _uiClientRequestID);
	void ServerForceRestartPlayer();
	void ServerGameFlowGotoState(class FName _stateID, class ASCBasePlayerController* _pc, uint8 _uiIndex);
	void ServerRequestGameStartTime();
	void ServerRequestOverrideRelevantGameActorsNetParams(const float _fNetUpdateFrequency, const float _fMinNetUpdateFrequency, const float _fNetPriority);
	void ServerRequestTimeSync(uint8 _uiClientRequestID);
	void ServerSetClientFrameTimeMs(float _fFrameTimeMs);
	void ServerSetNetProfile(const class FString& _profile);
	void ServerSkipPlayerSynchro(class FName _stateID);
	void SimulateInputs(const class FString& _filePath);

	class FName BPF_GetControllerType() const;
	class USCMenuComponent* BPF_GetMenuComponent() const;
	class ASCCharacter* BPF_GetSCCharacter() const;
	bool BPF_IsControllerTypeKeyBoard() const;
	bool BPF_IsRecordingInputs() const;
	bool BPF_IsSimulatingInputs() const;
	void Server_RequestSendSynchroAcknowledge(const class FName _synchroType) const;
	void ServerSendSubsystemMessage(const struct FSCSubsystemRemoteMessage& _messageInfos) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBasePlayerController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBasePlayerController")
	}
	static class ASCBasePlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCBasePlayerController>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_ASCBasePlayerController;

// Class SCCore.SCInputSettings
// 0x0680 (0x06B8 - 0x0038)
class USCInputSettings final : public UDeveloperSettings
{
public:
	TSoftObjectPtr<class USCInputContext>         m_DefaultContext;                                  // 0x0038(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInputPriorityGroup>            m_InputPriority;                                   // 0x0060(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FAlwaysCollidingActions>        m_AlwaysCollidingActions;                          // 0x0070(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class USCInputAction>>  m_ActionPriority;                                  // 0x0080(0x0010)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FInputPresetsEnumHandler, struct FInputMappingData> m_Mapping;                       // 0x0090(0x0050)(Config, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FPrimaryAssetType                      m_InputActionBundle;                               // 0x00E0(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPrimaryAssetType                      m_InputContextBundle;                              // 0x00E8(0x0008)(Edit, ZeroConstructor, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBaseInputs                            m_BaseInputs;                                      // 0x00F0(0x00A0)(Edit, Config, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_ALMoveInterruptGameplayTag;                      // 0x0190(0x0008)(Edit, Config, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_ALLookCameraGameplayTag;                         // 0x0198(0x0008)(Edit, Config, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBaseContexts                          m_BaseContexts;                                    // 0x01A0(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TMap<struct FInputMappingProfileEnumHandler, struct FMappingProfileList> m_MappingProfileList;   // 0x01F0(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	bool                                          m_bResetCustomMappingOnConflict;                   // 0x0240(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomMappingProfileList              m_CustomMappingProfileList;                        // 0x0248(0x00C0)(Edit, Config, NativeAccessSpecifierPublic)
	TSet<TSoftObjectPtr<class USCInputAction>>    m_UnremappableActions;                             // 0x0308(0x0050)(Edit, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TSet<TSoftObjectPtr<class USCInputAction>>    m_OptionalMappingActions;                          // 0x0358(0x0050)(Edit, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TSet<struct FKey>                             m_RemappingCaptureIgnoredKeys;                     // 0x03A8(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TArray<struct FRemappingIncompatibilityGroup> m_IncompatibilityGroups;                           // 0x03F8(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TMap<TSoftClassPtr<class UClass>, struct FInputMappingCompatibilityRule> m_InputCustomCompatibilityRules; // 0x0408(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TArray<struct FActionMappingCompatibilityRule> m_ActionCompatibilityRules;                       // 0x0458(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   m_EmptyInputData;                                  // 0x0468(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRemappingClasses                      m_BaseRemapClasses;                                // 0x0490(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	TMap<TSoftObjectPtr<class USCInputAction>, struct FRemappingClasses> m_CustomActionRemapping;    // 0x04A0(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TMap<struct FInputPresetsEnumHandler, struct FRemappingClasses> m_CustomPresetRemapping;         // 0x04F0(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USCInputAction>          m_eInputAction;                                    // 0x0540(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USCInputAction>          m_eAltInputAction;                                 // 0x0568(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bVirtualCursorAcceleration;                      // 0x0590(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fVirtualCursorAcceleration;                      // 0x0594(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fVirtualCursorMaxSpeed;                          // 0x0598(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fVirtualCursorStickySlowdown;                    // 0x059C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fVirtualCursorDeadZone;                          // 0x05A0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bSnapEnabled;                                    // 0x05A4(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A5[0x3];                                      // 0x05A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fSnapSpeed;                                      // 0x05A8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USCInputAction>          m_eHoldConfirmInputAction;                         // 0x05B0(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USCInputAction*>                 m_InputActions;                                    // 0x05D8(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<int32, class USCInputAction*>            m_InputActionMap;                                  // 0x05E8(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class USCInputContext*>                m_InputContexts;                                   // 0x0638(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UInputMappingProfileDB*>         m_CachedProfiles;                                  // 0x0648(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class UInputConditionData>> m_CachedInputDatas;                               // 0x0658(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_668[0x50];                                     // 0x0668(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCInputSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCInputSettings")
	}
	static class USCInputSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCInputSettings>();
	}
};
DUMPER7_ASSERTS_USCInputSettings;

// Class SCCore.SCBlenderSubsystem
// 0x0010 (0x0160 - 0x0150)
class USCBlenderSubsystem final : public USCSubsystem
{
public:
	uint8                                         Pad_150[0x10];                                     // 0x0150(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBlenderSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBlenderSubsystem")
	}
	static class USCBlenderSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBlenderSubsystem>();
	}
};
DUMPER7_ASSERTS_USCBlenderSubsystem;

// Class SCCore.SCCameraTransitionInfo
// 0x0030 (0x0058 - 0x0028)
class USCCameraTransitionInfo : public UObject
{
public:
	float                                         m_fDuration;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_Curve;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_CurveForAngle;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFreezeUnderneathTransition;                     // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bWantUseAngleFromStartNode;                      // 0x0041(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bWantUseRollFromStartNode;                       // 0x0042(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCUpdateAngleMode                            m_ESCUpdateAngleMode;                              // 0x0043(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCCameraTransitionInfo>    m_VirtualClass;                                    // 0x0050(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BPE_OnProcessTransition(class USCCameraComponent* _cameraComponent, float _fTimeElapsed, float _fOldBlendRatio, float _fNewBlendRatio);
	void BPE_OnStartTransition(class USCCameraComponent* _cameraComponent, float _fDuration);
	void BPE_OnStopTransition(class USCCameraComponent* _cameraComponent, float _fTimeElapsed);

	class USCCameraComponent* BPF_GetCameraComponent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraTransitionInfo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraTransitionInfo")
	}
	static class USCCameraTransitionInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraTransitionInfo>();
	}
};
DUMPER7_ASSERTS_USCCameraTransitionInfo;

// Class SCCore.SCBlendInLockCameraTransitionInfo
// 0x0008 (0x0060 - 0x0058)
class USCBlendInLockCameraTransitionInfo final : public USCCameraTransitionInfo
{
public:
	bool                                          m_bUseDefaultTargetReachDurationAsFallback;        // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBlendInLockCameraTransitionInfo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBlendInLockCameraTransitionInfo")
	}
	static class USCBlendInLockCameraTransitionInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBlendInLockCameraTransitionInfo>();
	}
};
DUMPER7_ASSERTS_USCBlendInLockCameraTransitionInfo;

// Class SCCore.SCLevelSequenceActor
// 0x0208 (0x0560 - 0x0358)
#pragma pack(push, 0x1)
class alignas(0x10) ASCLevelSequenceActor : public ALevelSequenceActor
{
public:
	bool                                          m_bEnableCinematicModeAtStart;                     // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsPausedByUser;                                 // 0x0359(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UActorComponent>>    m_ComponentClassesToPauseTick;                     // 0x0360(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>             m_ActorClassesToPauseTick;                         // 0x0370(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_380[0x20];                                     // 0x0380(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_LevelSequenceInstanceDataTransformReplicated;    // 0x03A0(0x0060)(Net, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bOverrideInstanceDataReplicated;                 // 0x0400(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_LevelSequenceTag;                                // 0x0404(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsSequenceSkippable;                            // 0x040C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCMovieScenePawnBindingSettings> m_LocalPawnsBindings;                            // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, NativeAccessSpecifierPublic)
	TMap<struct FSCMovieSceneObjectBindingName, struct FSCMovieSceneActorBindingSettings> m_BindingMap; // 0x0420(0x0050)(Edit, BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	TArray<struct FSCMovieSceneObjectBindingName> m_BindingMeshesToTickOnSkip;                       // 0x0470(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSCFakePawnBinding>             m_FakePawnBindings;                                // 0x0480(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class APawn>, class APawn*> m_FakesPawnsGenerated;                           // 0x0490(0x0050)(Protected, NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class AActor>, struct FSCMovieSceneBindingInfos> m_ActorToBindingInfos;      // 0x04E0(0x0050)(Edit, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_530[0x8];                                      // 0x0530(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCBasicPawnBinding>            m_ReplicatedDynamicPawnBindings;                   // 0x0538(0x0010)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FMovieSceneObjectBindingID>     m_BindingIdsAlreadyUsedForFakePawn;                // 0x0548(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

public:
	void BPE_OnFinished();
	void BPE_OnPostSkip();
	void BPE_OnPreSkip();
	void BPE_OnStarting();
	void BPE_OnStopped();
	bool BPF_TryToMakeFakePawnBinding(const class APawn* _pawn, class FName _tag, TSubclassOf<class APawn> _fakePawnClass);
	void OnFinished();
	void OnPrePlay();
	void OnStopped();
	void SetLevelSequenceInstanceDataTransformReplicated(const struct FTransform& _transform);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLevelSequenceActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLevelSequenceActor")
	}
	static class ASCLevelSequenceActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCLevelSequenceActor>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_ASCLevelSequenceActor;

// Class SCCore.SCBTDecorator
// 0x0008 (0x0070 - 0x0068)
class USCBTDecorator final : public UBTDecorator
{
public:
	bool                                          m_bEvaluateConditionOnTick;                        // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBTDecorator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBTDecorator")
	}
	static class USCBTDecorator* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBTDecorator>();
	}
};
DUMPER7_ASSERTS_USCBTDecorator;

// Class SCCore.SCBTTaskNode
// 0x0000 (0x0070 - 0x0070)
class USCBTTaskNode final : public UBTTaskNode
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBTTaskNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBTTaskNode")
	}
	static class USCBTTaskNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBTTaskNode>();
	}
};
DUMPER7_ASSERTS_USCBTTaskNode;

// Class SCCore.SCCineCameraActor
// 0x0000 (0x0A50 - 0x0A50)
class ASCCineCameraActor : public ACineCameraActor
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCineCameraActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCineCameraActor")
	}
	static class ASCCineCameraActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCCineCameraActor>();
	}
};
DUMPER7_ASSERTS_ASCCineCameraActor;

// Class SCCore.SCBTTaskRunBehaviorDynamic
// 0x0000 (0x0088 - 0x0088)
class USCBTTaskRunBehaviorDynamic final : public UBTTask_RunBehaviorDynamic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBTTaskRunBehaviorDynamic")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBTTaskRunBehaviorDynamic")
	}
	static class USCBTTaskRunBehaviorDynamic* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBTTaskRunBehaviorDynamic>();
	}
};
DUMPER7_ASSERTS_USCBTTaskRunBehaviorDynamic;

// Class SCCore.SCBTTask_CameraNode
// 0x0008 (0x0078 - 0x0070)
class USCBTTask_CameraNode final : public UBTTaskNode
{
public:
	TSubclassOf<class USCAbstractCameraData>      m_CameraData;                                      // 0x0070(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class USCAbstractCameraData* BPF_GetCameraData() const;
	TSubclassOf<class USCAbstractCameraData> BPF_GetCameraDataClass() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBTTask_CameraNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBTTask_CameraNode")
	}
	static class USCBTTask_CameraNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBTTask_CameraNode>();
	}
};
DUMPER7_ASSERTS_USCBTTask_CameraNode;

// Class SCCore.SCLevelSequenceSubsystem
// 0x00D0 (0x0230 - 0x0160)
class USCLevelSequenceSubsystem final : public USCWorldSubsystem
{
public:
	uint8                                         Pad_160[0x48];                                     // 0x0160(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fFrameSkipDuration;                              // 0x01A8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASCLevelSequenceActor*>          m_PlayingSequenceActors;                           // 0x01B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C0[0x70];                                     // 0x01C0(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BPF_IsPaused() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLevelSequenceSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLevelSequenceSubsystem")
	}
	static class USCLevelSequenceSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCLevelSequenceSubsystem>();
	}
};
DUMPER7_ASSERTS_USCLevelSequenceSubsystem;

// Class SCCore.SCBTTask_DynamicCameraNode
// 0x0060 (0x00D0 - 0x0070)
class USCBTTask_DynamicCameraNode final : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                 m_CameraDataBlackboardKeySelector;                 // 0x0070(0x0028)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 m_ActorRefBlackboardKeySelector;                   // 0x00A0(0x0028)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBTTask_DynamicCameraNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBTTask_DynamicCameraNode")
	}
	static class USCBTTask_DynamicCameraNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBTTask_DynamicCameraNode>();
	}
};
DUMPER7_ASSERTS_USCBTTask_DynamicCameraNode;

// Class SCCore.SCAnimLookAtStackDataAsset
// 0x0010 (0x0040 - 0x0030)
class USCAnimLookAtStackDataAsset final : public UDataAsset
{
public:
	TArray<struct FSCAnimLookAtTargetStackElement> m_TargetStack;                                    // 0x0030(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAnimLookAtStackDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAnimLookAtStackDataAsset")
	}
	static class USCAnimLookAtStackDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAnimLookAtStackDataAsset>();
	}
};
DUMPER7_ASSERTS_USCAnimLookAtStackDataAsset;

// Class SCCore.SCCameraCollisionDetectionService
// 0x0078 (0x00C0 - 0x0048)
class USCCameraCollisionDetectionService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x78];                                      // 0x0048(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float BPF_GetDeadZoneMinDist() const;
	float BPF_GetDeadZoneMinDistByAngle(float _fAngle) const;
	struct FVector BPF_GetNearestDeadZoneDirection() const;
	bool BPF_IsColliding() const;
	bool BPF_IsInDeadZone(float _fAngle) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraCollisionDetectionService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraCollisionDetectionService")
	}
	static class USCCameraCollisionDetectionService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraCollisionDetectionService>();
	}
};
DUMPER7_ASSERTS_USCCameraCollisionDetectionService;

// Class SCCore.SCCameraCollisionSideDetectionService
// 0x0018 (0x0060 - 0x0048)
class USCCameraCollisionSideDetectionService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x18];                                      // 0x0048(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraCollisionSideDetectionService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraCollisionSideDetectionService")
	}
	static class USCCameraCollisionSideDetectionService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraCollisionSideDetectionService>();
	}
};
DUMPER7_ASSERTS_USCCameraCollisionSideDetectionService;

// Class SCCore.SCEnsureDataSettings
// 0x01A0 (0x01E8 - 0x0048)
class USCEnsureDataSettings final : public USCBaseGameSettings
{
public:
	uint8                                         Pad_48[0x80];                                      // 0x0048(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCUserEnumSetting                     m_Enums[0x2];                                      // 0x00C8(0x0048)(Edit, Config, NativeAccessSpecifierPublic)
	class FText                                   m_adviserTooltipText;                              // 0x0158(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	class FText                                   m_buildLog;                                        // 0x0168(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	TMap<class FName, struct FAdvisersStruct>     m_ensureCategoryAdvisers;                          // 0x0178(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	bool                                          m_bUseNameInsteadOfPath;                           // 0x01C8(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bRegroupUnderOneCategory;                        // 0x01C9(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_mainCategoryName;                                // 0x01CC(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1D4[0x14];                                     // 0x01D4(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCEnsureDataSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCEnsureDataSettings")
	}
	static class USCEnsureDataSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCEnsureDataSettings>();
	}
};
DUMPER7_ASSERTS_USCEnsureDataSettings;

// Class SCCore.SCCameraData
// 0x01D0 (0x0220 - 0x0050)
class USCCameraData : public USCAbstractCameraData
{
public:
	struct FGameplayTag                           m_UserSettingsTag;                                 // 0x0050(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               m_vFulcrumOffset;                                  // 0x0060(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bDynamicFulcrumOffsetEnabled;                    // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseAboveIdealOffset;                            // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vAboveIdealOffset;                               // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               m_vIdealOffset;                                    // 0x00A0(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseBelowIdealOffset;                            // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vBelowIdealOffset;                               // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsCollisionEnabled;                             // 0x00E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0xF];                                       // 0x00E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               m_vSafeOffset;                                     // 0x00F0(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFov;                                            // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsFovVertical;                                  // 0x0114(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bConstraintAspectRatio;                          // 0x0115(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fConstraintAspectRatio;                          // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFovFromPreviousCameraData;                      // 0x011C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bSnapRefLocation;                                // 0x011D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fRefDampingFactor;                               // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOverrideVerticalDamping;                        // 0x0124(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fRefVerticalDampingFactor;                       // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCCameraTrackingMode                         m_eTrackingTranslationMode;                        // 0x012C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFreezeActorRefLocation;                         // 0x012D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCCameraTrackingMode                         m_eTrackingRotationMode;                           // 0x012E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFreezeActorRefRotation;                         // 0x012F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAllowManualService;                             // 0x0130(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fCoolDownAfterManualCameraTouch;                 // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bSpeedBoostEnabled;                              // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fSpeedBoostInputThreshold;                       // 0x013C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fHorizontalSpeed;                                // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fHorizontalSpeedBoost;                           // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fVerticalSpeed;                                  // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fVerticalSpeedBoost;                             // 0x014C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fAboveLimitPitch;                                // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fBelowLimitPitch;                                // 0x0154(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFixedYaw;                                       // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFixedYawLocal;                                  // 0x0159(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fFixedYawDeg;                                    // 0x015C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFixedPitch;                                     // 0x0160(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFixedPitchLocal;                                // 0x0161(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fFixedPitchDeg;                                  // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFixedRoll;                                      // 0x0168(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFixedRollLocal;                                 // 0x0169(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fFixedRollDeg;                                   // 0x016C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_curveCameraShakeFactorByDistToOwner;             // 0x0170(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bFollow;                                         // 0x0178(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fFollowPitchOffset;                              // 0x017C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFollowPitchDampingFactor;                       // 0x0180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFollowPitchMultiplier;                          // 0x0184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_followYawDampingFactorCurveFromDeltaAngle;       // 0x0188(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_followYawDampingFactorCurveFromCharacterVelocity; // 0x0190(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFollowWakeUpMaxPitchDiffAngle;                  // 0x0198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fFollowWakeUpMaxYawDiffAngle;                    // 0x019C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A0[0x1];                                      // 0x01A0(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bLockOnTarget;                                   // 0x01A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLockOnTargetWakeUpMaxPitchDiffAngle;            // 0x01A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockOnTargetWakeUpMaxYawDiffAngle;              // 0x01A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bLockFollowing;                                  // 0x01AC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLockFollowingWakeUpMaxPitchDiffAngle;           // 0x01B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFollowingWakeUpMaxYawDiffAngle;             // 0x01B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bLockFramingService;                             // 0x01B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLockFraimingContainerDeadZonenCenterX;          // 0x01BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLockFraimingContainerDeadZonenCenterY;          // 0x01C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fScreenPercentSoftEdgeX;                         // 0x01C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fScreenPercentSoftEdgeY;                         // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fScreenPercentHardEdgeX;                         // 0x01CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fScreenPercentHardEdgeY;                         // 0x01D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinRangeDistanceToOwner;                        // 0x01D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxRangeDistanceToOwner;                        // 0x01D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDistanceDampingFactor;                          // 0x01DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCameraFramingLerpOnDistance;                    // 0x01E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fHeightAboveOwner;                               // 0x01E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCameraFramingHeightDampingFactor;               // 0x01E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCameraFramingLerpOnHeight;                      // 0x01EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUsePitchAtRest;                                 // 0x01ED(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bPitchAtRestComputationMethodSlope;              // 0x01EE(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EF[0x1];                                      // 0x01EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fPitchAtRestSprintSpeedValue;                    // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_PitchAtRestValuePerSlopeAngle;                   // 0x01F8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_PitchAtRestOffsetPerSafeZoneSize;                // 0x0200(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPitchAtRestOffsetSpringSpeedValue;              // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPitchAtRestWakeUpMaxPitchDiffAngle;             // 0x020C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseCameraSideCollisionMirror;                   // 0x0210(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseRepulsionFromDeadZone;                       // 0x0211(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fCollisionRatioToConsideredAsNearInRepulsion;    // 0x0214(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCanBeMirrored;                                  // 0x0218(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_BlendNodes(const class USCCameraData* _startNode, const class USCCameraData* _endNode, float _fBlendRatio, const class USCCameraData* _nodeToUseForBooleans);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraData")
	}
	static class USCCameraData* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraData>();
	}
};
DUMPER7_ASSERTS_USCCameraData;

// Class SCCore.SCCameraFollowingService
// 0x0018 (0x0060 - 0x0048)
class USCCameraFollowingService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x18];                                      // 0x0048(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraFollowingService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraFollowingService")
	}
	static class USCCameraFollowingService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraFollowingService>();
	}
};
DUMPER7_ASSERTS_USCCameraFollowingService;

// Class SCCore.SCEnvQueryTest
// 0x0000 (0x01F8 - 0x01F8)
class USCEnvQueryTest : public UEnvQueryTest
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCEnvQueryTest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCEnvQueryTest")
	}
	static class USCEnvQueryTest* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCEnvQueryTest>();
	}
};
DUMPER7_ASSERTS_USCEnvQueryTest;

// Class SCCore.SCEnvQueryTest_Distance
// 0x0018 (0x0210 - 0x01F8)
class USCEnvQueryTest_Distance final : public USCEnvQueryTest
{
public:
	EEnvTestDistance                              TestMode;                                          // 0x01F8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UEnvQueryContext>           m_FromContext;                                     // 0x0200(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UEnvQueryContext>           m_ToContext;                                       // 0x0208(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCEnvQueryTest_Distance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCEnvQueryTest_Distance")
	}
	static class USCEnvQueryTest_Distance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCEnvQueryTest_Distance>();
	}
};
DUMPER7_ASSERTS_USCEnvQueryTest_Distance;

// Class SCCore.SCCameraFulcrumOffsetService
// 0x0058 (0x00A0 - 0x0048)
class USCCameraFulcrumOffsetService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x58];                                      // 0x0048(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraFulcrumOffsetService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraFulcrumOffsetService")
	}
	static class USCCameraFulcrumOffsetService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraFulcrumOffsetService>();
	}
};
DUMPER7_ASSERTS_USCCameraFulcrumOffsetService;

// Class SCCore.SCCameraLagStruct
// 0x0058 (0x0088 - 0x0030)
class USCCameraLagStruct final : public UDataAsset
{
public:
	bool                                          m_bEnableInputLag;                                 // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fInputLagGlobalMultiplier;                       // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fInputLagGlobalMultiplierMax;                    // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fInputLagGlobalMultiplierMin;                    // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fInputLagMouseMultiplier;                        // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              m_vInputLagProportionnalIncrementFadeIn;           // 0x0048(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              m_vInputLagConstantIncrementFadeIn;                // 0x0058(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              m_vInputLagProportionnalIncrementFadeOut;          // 0x0068(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              m_vInputLagConstantIncrementFadeOut;               // 0x0078(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraLagStruct")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraLagStruct")
	}
	static class USCCameraLagStruct* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraLagStruct>();
	}
};
DUMPER7_ASSERTS_USCCameraLagStruct;

// Class SCCore.SCExpandableWidgetLibrary
// 0x0000 (0x0028 - 0x0028)
class USCExpandableWidgetLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_CollapseWidget(class USCUserWidget* _widget);
	static void BPF_ExpandWidget(class USCUserWidget* _widget);
	static bool BPF_IsWidgetExpanded(class USCUserWidget* _widget);
	static void BPF_ToggleWidgetExpansion(class USCUserWidget* _widget);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCExpandableWidgetLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCExpandableWidgetLibrary")
	}
	static class USCExpandableWidgetLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCExpandableWidgetLibrary>();
	}
};
DUMPER7_ASSERTS_USCExpandableWidgetLibrary;

// Class SCCore.SCCameraLockFramingContainerService
// 0x0098 (0x00E0 - 0x0048)
class USCCameraLockFramingContainerService final : public USCCameraBaseLockService
{
public:
	uint8                                         Pad_48[0x98];                                      // 0x0048(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_SetFramingAlgorithmOverrideTarget(bool _bOverride, const struct FVector& _vPosition3D, float _fDurationBlendingIn, class UCurveFloat* _dynamicCurveForBlendingIn, float _fDurationBlendingOut, class UCurveFloat* _dynamicCurveForBlendingOut);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraLockFramingContainerService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraLockFramingContainerService")
	}
	static class USCCameraLockFramingContainerService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraLockFramingContainerService>();
	}
};
DUMPER7_ASSERTS_USCCameraLockFramingContainerService;

// Class SCCore.SCCameraLookAtService
// 0x0668 (0x06B0 - 0x0048)
class alignas(0x10) USCCameraLookAtService final : public USCCameraService
{
public:
	TMulticastInlineDelegate<void(class USCCameraLookAtService* _outService, const struct FSCCameraLookAtServiceBehavior& _outLookAtInfos, int32 _outHandle)> OnLookAtStartBeingEffective; // 0x0048(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USCCameraLookAtService* _outService, int32 _outHandle)> OnLookAtStopBeingEffective; // 0x0058(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         m_fDefaultMoveInputBlendingDuration;               // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6C[0x644];                                     // 0x006C(0x0644)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BPF_AddLookAt(const struct FSCCameraLookAtServiceBehavior& _inNewLookAt);
	void BPF_ApplyBackInitialLookAtOrientation(const float _fDuration, ESCBlendType _defaultBlend, class UCurveFloat* _blendCurve);
	void BPF_ClearLookAtCamOrientationVars();
	float BPF_GetCurrentDurationToReach();
	struct FSCCameraLookAtServiceBehavior BPF_GetTopLookAtBehavior();
	void BPF_InitLookAtCamOrientation();
	int32 BPF_PauseLookAt(float _fDuration, const class FString& _contextString);
	int32 BPF_PauseLookAtWithHandle(const class FString& _contextString);
	void BPF_RemoveAllLookAt();
	void BPF_RemoveLookAt(int32 _iHandle);
	void BPF_StartLookAtInputBlending(const float _fDuration, ESCBlendType _eDefaultBlend, class UCurveFloat* _blendCurve);
	bool BPF_TryUpdatePosToLookAt(const struct FVector& _vNewPos, const int32 _iLookAtHandle);
	void BPF_UnPauseLookAt(int32 _iHandle);

	struct FRotator BPF_GetInitialLookAtCamOrientation() const;
	int32 BPF_GetTopLookAtBehaviorHandle() const;
	bool BPF_HasLookAt() const;
	bool BPF_IsLookAtActive(int32 _iHandle) const;
	bool BPF_IsLookAtInitialCamOrientationSet() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraLookAtService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraLookAtService")
	}
	static class USCCameraLookAtService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraLookAtService>();
	}
};
DUMPER7_ASSERTS_USCCameraLookAtService;

// Class SCCore.SCFlowGraphData
// 0x0000 (0x0000 - 0x0000)
class ISCFlowGraphData final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFlowGraphData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFlowGraphData")
	}
	static class ISCFlowGraphData* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISCFlowGraphData>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISCFlowGraphData;

// Class SCCore.SCCameraMergeDeadZoneRepulsionService
// 0x0030 (0x0078 - 0x0048)
class USCCameraMergeDeadZoneRepulsionService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x30];                                      // 0x0048(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraMergeDeadZoneRepulsionService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraMergeDeadZoneRepulsionService")
	}
	static class USCCameraMergeDeadZoneRepulsionService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraMergeDeadZoneRepulsionService>();
	}
};
DUMPER7_ASSERTS_USCCameraMergeDeadZoneRepulsionService;

// Class SCCore.SCCameraMixerDataBlackBoardBool
// 0x0008 (0x00E8 - 0x00E0)
class USCCameraMixerDataBlackBoardBool : public USCCameraMixerDataBool
{
public:
	class FName                                   m_KeyName;                                         // 0x00E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraMixerDataBlackBoardBool")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraMixerDataBlackBoardBool")
	}
	static class USCCameraMixerDataBlackBoardBool* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraMixerDataBlackBoardBool>();
	}
};
DUMPER7_ASSERTS_USCCameraMixerDataBlackBoardBool;

// Class SCCore.SCCameraMixerDataSpring
// 0x0010 (0x00C0 - 0x00B0)
class USCCameraMixerDataSpring : public USCCameraMixerData
{
public:
	float                                         m_fSpeedFactor;                                    // 0x00B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B4[0xC];                                       // 0x00B4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float BPE_GetSpeedFactor(float _fTargetRatio, float _fOldRatio) const;
	float BPE_GetTargetRatio() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraMixerDataSpring")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraMixerDataSpring")
	}
	static class USCCameraMixerDataSpring* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraMixerDataSpring>();
	}
};
DUMPER7_ASSERTS_USCCameraMixerDataSpring;

// Class SCCore.SCCameraNodeLockFramingService
// 0x0098 (0x00D0 - 0x0038)
class USCCameraNodeLockFramingService final : public USCCameraNodeBaseService
{
public:
	uint8                                         Pad_38[0x98];                                      // 0x0038(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraNodeLockFramingService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraNodeLockFramingService")
	}
	static class USCCameraNodeLockFramingService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraNodeLockFramingService>();
	}
};
DUMPER7_ASSERTS_USCCameraNodeLockFramingService;

// Class SCCore.SCCameraPitchRestingService
// 0x0068 (0x00B0 - 0x0048)
class USCCameraPitchRestingService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x68];                                      // 0x0048(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraPitchRestingService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraPitchRestingService")
	}
	static class USCCameraPitchRestingService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraPitchRestingService>();
	}
};
DUMPER7_ASSERTS_USCCameraPitchRestingService;

// Class SCCore.SCCameraShake
// 0x0000 (0x0210 - 0x0210)
class USCCameraShake final : public ULegacyCameraShake
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraShake")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraShake")
	}
	static class USCCameraShake* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraShake>();
	}
};
DUMPER7_ASSERTS_USCCameraShake;

// Class SCCore.SCCameraShakeChainPattern
// 0x0028 (0x0080 - 0x0058)
class USCCameraShakeChainPattern final : public USimpleCameraShakePattern
{
public:
	TArray<class UCameraShakePattern*>            m_SequenceOfShakes;                                // 0x0058(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x18];                                      // 0x0068(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraShakeChainPattern")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraShakeChainPattern")
	}
	static class USCCameraShakeChainPattern* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraShakeChainPattern>();
	}
};
DUMPER7_ASSERTS_USCCameraShakeChainPattern;

// Class SCCore.SCCameraSleepingService
// 0x0010 (0x0058 - 0x0048)
class USCCameraSleepingService final : public USCCameraService
{
public:
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraSleepingService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraSleepingService")
	}
	static class USCCameraSleepingService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraSleepingService>();
	}
};
DUMPER7_ASSERTS_USCCameraSleepingService;

// Class SCCore.SCCameraSmoothTranslationModifier
// 0x0008 (0x0050 - 0x0048)
class USCCameraSmoothTranslationModifier final : public UCameraModifier
{
public:
	float                                         m_fSmoothSpeed;                                    // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraSmoothTranslationModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraSmoothTranslationModifier")
	}
	static class USCCameraSmoothTranslationModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraSmoothTranslationModifier>();
	}
};
DUMPER7_ASSERTS_USCCameraSmoothTranslationModifier;

// Class SCCore.SCCameraWeightComponent
// 0x0000 (0x00B8 - 0x00B8)
class USCCameraWeightComponent : public UActorComponent
{
public:
	float BPE_GetWeight() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCameraWeightComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCameraWeightComponent")
	}
	static class USCCameraWeightComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCameraWeightComponent>();
	}
};
DUMPER7_ASSERTS_USCCameraWeightComponent;

// Class SCCore.SCCaptureComponent2D
// 0x0000 (0x0BE0 - 0x0BE0)
class USCCaptureComponent2D final : public USceneCaptureComponent2D
{
public:
	bool BPF_ProjectMultipleWorldLocationsToPixelCoordinates(const TArray<struct FVector>& _Locations, TArray<struct FVector2D>* _OutPixelLocations, TArray<struct FVector2D>* _OutUvLocations, TArray<bool>* _OutbAreLocationsInCanvas);
	bool BPF_ProjectWorldLocationToPixelCoordinates(const struct FVector& _vLocation, struct FVector2D* _vOutPixelLocation, struct FVector2D* _vOutUvLocation);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCaptureComponent2D")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCaptureComponent2D")
	}
	static class USCCaptureComponent2D* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCaptureComponent2D>();
	}
};
DUMPER7_ASSERTS_USCCaptureComponent2D;

// Class SCCore.SCCharacter
// 0x0210 (0x08A0 - 0x0690)
class ASCCharacter : public ACharacter
{
public:
	uint8                                         Pad_690[0xC8];                                     // 0x0690(0x00C8)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ASCCharacterImpostor* ImpostorActor)> OnSpawnedImpostorDynamic; // 0x0758(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APlayerState* _newPlayerState, class APlayerState* _oldPlayerState)> OnPlayerStateChangedDynamic; // 0x0768(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_778[0x28];                                     // 0x0778(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class USCInputComponent*                      m_InputComponent;                                  // 0x07A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCCharacterAbilitySystemComponent*     m_CharacterAbilityComponent;                       // 0x07A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSCReplicatedAcceleration              m_ReplicatedAcceleration;                          // 0x07B0(0x0003)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7B3[0x5];                                      // 0x07B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCReplicatedRotator                   m_ReplicatedControlRotation;                       // 0x07B8(0x0018)(Net, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         m_uiLookAtStackIndex;                              // 0x07D0(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7D1[0x3];                                      // 0x07D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_ImpostorName;                                    // 0x07D4(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bCanUnspawn;                                     // 0x07DC(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bCanSpawnImpostor;                               // 0x07DD(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bIsPooled;                                       // 0x07DE(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bPooledActorActive;                              // 0x07DF(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7E0[0x71];                                     // 0x07E0(0x0071)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bDontCreateClotOnLowerEndPlatforms;              // 0x0851(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_852[0x2];                                      // 0x0852(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class USCCameraComponent>      m_SCCamera;                                        // 0x0854(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         fBaseTurnRate;                                     // 0x085C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         fBaseLookUpRate;                                   // 0x0860(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_864[0x4];                                      // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_AbilitiesToSmoothSpeedDebug;                     // 0x0868(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         m_SmoothCoeffSpeedDebugOnAbilities;                // 0x0888(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_88C[0x14];                                     // 0x088C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_AddObjectToKeepAttachedOnImpostor(class AActor* _actor, EAttachmentRule _eAttachmentRules, class FName _boneName);
	void BPF_SetCollisionEnabled(bool _bEnabled, bool _bKeepStaticMeshCollisions);
	void BPF_SetMesh(class USkeletalMesh* _newMesh, bool _bSwapOnlyRendering);
	void BPF_Unspawn(class UAnimSequence* _animation, bool _bMirror, bool _bInstantUnspawn);
	void ClientAckPredictedMove(const float _fTime);
	void CmdPopCamera();
	void CmdPushCamera(const class FString& _cameraName);
	void CmdRedirectCamera(const class FString& _baseCameraName, const class FString& _targetCameraName);
	void CmdResetCameraRedirection(const class FString& _baseCameraName);
	void OnRep_PooledActorActive();
	void OnRep_ReplicatedAcceleration();
	void ServerSetLookAtStackIndex(uint8 _uiStackIndex);

	class FName BPF_GetImpostorName() const;
	class USCCameraComponent* BPF_GetSCCamera() const;
	class USCInputComponent* BPF_GetSCInputComponent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCharacter")
	}
	static class ASCCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCCharacter>();
	}
};
DUMPER7_ASSERTS_ASCCharacter;

// Class SCCore.SCCharacterHelpers
// 0x0000 (0x0028 - 0x0028)
class USCCharacterHelpers final : public UBlueprintFunctionLibrary
{
public:
	static struct FVector BPF_GetFloorNormal(const class ACharacter* _character);
	static bool BPF_TryGetPelvisBoneTransform(const class ACharacter* _character, struct FTransform* _outPevlisTransform);
	static bool BPF_TryGetRootBoneTransform(const class ACharacter* _character, struct FTransform* _outBoneTransform, bool _bComponentSpace);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCharacterHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCharacterHelpers")
	}
	static class USCCharacterHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCharacterHelpers>();
	}
};
DUMPER7_ASSERTS_USCCharacterHelpers;

// Class SCCore.SCCharacterImpostorAnimInstance
// 0x0050 (0x0C20 - 0x0BD0)
class USCCharacterImpostorAnimInstance final : public USCAnimInstance
{
public:
	struct FPoseSnapshot                          m_PoseSnapshotToMimic;                             // 0x0BD0(0x0038)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	bool                                          m_bHasAnimation;                                   // 0x0C08(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C09[0x7];                                      // 0x0C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          m_animation;                                       // 0x0C10(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bMirrorAnimation;                                // 0x0C18(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C19[0x7];                                      // 0x0C19(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCharacterImpostorAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCharacterImpostorAnimInstance")
	}
	static class USCCharacterImpostorAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCharacterImpostorAnimInstance>();
	}
};
DUMPER7_ASSERTS_USCCharacterImpostorAnimInstance;

// Class SCCore.CheatManagerBlueprintHelper
// 0x0000 (0x0028 - 0x0028)
class UCheatManagerBlueprintHelper final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_ActivateCheat(const struct FGameplayTag& _cheatToActivate);
	static void BPF_ActivateCheats(const struct FGameplayTagContainer& _cheatsToActivate);
	static void BPF_ApplyCheats(bool _bForceApply);
	static bool BPF_AreCheatsAllowed();
	static void BPF_DeactivateCheat(const struct FGameplayTag& _cheatToDeactivate);
	static void BPF_DeactivateCheats(const struct FGameplayTagContainer& _cheatsToDeactivate);
	static const struct FGameplayTagContainer BPF_GetActivatedCheats();
	static bool BPF_HasAppliedCheats();
	static bool BPF_IsCheatActivated(const struct FGameplayTag& _cheatToFind);
	static void BPF_UnapplyCheats(bool _bDeactivateCheats);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CheatManagerBlueprintHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CheatManagerBlueprintHelper")
	}
	static class UCheatManagerBlueprintHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCheatManagerBlueprintHelper>();
	}
};
DUMPER7_ASSERTS_UCheatManagerBlueprintHelper;

// Class SCCore.SCCineCameraComponent
// 0x0030 (0x0B30 - 0x0B00)
class USCCineCameraComponent final : public UCineCameraComponent
{
public:
	bool                                          m_bEnableScaleOverridingFocalLength;               // 0x0B00(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B01[0x3];                                      // 0x0B01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraFetchValueDescription           m_ScaleOverridingFocalLengthParams;                // 0x0B04(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bEnableScaleOverridingSensorWidth;               // 0x0B0C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0D[0x3];                                      // 0x0B0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraFetchValueDescription           m_ScaleOverridingSensorWidthParams;                // 0x0B10(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bEnableScaleOverridingSensorHeight;              // 0x0B18(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B19[0x3];                                      // 0x0B19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraFetchValueDescription           m_ScaleOverridingSensorHeightParams;               // 0x0B1C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_B24[0xC];                                      // 0x0B24(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCineCameraComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCineCameraComponent")
	}
	static class USCCineCameraComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCineCameraComponent>();
	}
};
DUMPER7_ASSERTS_USCCineCameraComponent;

// Class SCCore.SCCollisionLibrary
// 0x0000 (0x0028 - 0x0028)
class USCCollisionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static float BPF_CalculateStaticMeshMass(class UStaticMesh* _staticMesh);
	static struct FCollisionResponseContainer BPF_DefaultResponseContainer(ECollisionResponse _eDefaultResponse);
	static struct FCollisionResponseContainer BPF_DefaultResponseContainer_OneException(ECollisionResponse _eDefaultResponse, ECollisionChannel _eExceptionChannel, ECollisionResponse _eExceptionResponse);
	static struct FCollisionResponseContainer BPF_GenerateCollisionResponseContainer(const struct FSCCollisionResponseBuilder& _builder);
	static TArray<struct FSCCollisionProfileDescription> BPF_GetAllCollisionProfileDescriptions();
	static bool BPF_GetCollisionProfile(class FName _collisionProfileName, struct FSCCollisionResponseTemplate* _outTemplatee);
	static ECollisionResponse BPF_GetCollisionResponse(const struct FCollisionResponseContainer& _responseContainer, ECollisionChannel _eCollisionChannel);
	static class UPhysicalMaterial* BPF_GetGroundSimplePhysicalMaterial(class UCharacterMovementComponent* _movementComponent);
	static class UPhysicalMaterial* BPF_GetSimplePhysicalMaterial(class UPrimitiveComponent* _primitiveComponent);
	static ECollisionChannel BPF_ObjectTypeQueryToCollisionChannel(EObjectTypeQuery _eObjectType);
	static void BPF_PrepareContainerForTraceMulti(struct FCollisionResponseContainer& _responses);
	static void BPF_SetCollisionResponseFromPreset(class UPrimitiveComponent* _primitiveComponent, const struct FSCCollisionResponsePreset& _preset);
	static void BPF_SetCollisionResponseFromTemplate(class UPrimitiveComponent* _primitiveComponent, const struct FSCCollisionResponseTemplate& _template);
	static void BPF_SetCollisionResponseToChannels(class UPrimitiveComponent* _primitiveComponent, const struct FCollisionResponseContainer& _newReponses);
	static struct FCollisionResponseContainer BPF_ToContainerForTraceMulti(const struct FCollisionResponseContainer& _responses);
	static ECollisionChannel BPF_TraceTypeQueryToCollisionChannel(ETraceTypeQuery _eTraceType);
	static void BPF_VisualLogCollision(class UPrimitiveComponent* _primitiveComponent, class FName _categoryName);
	static void BPF_VisualLogStatusCollision(class UPrimitiveComponent* _primitiveComponent);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCollisionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCollisionLibrary")
	}
	static class USCCollisionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCollisionLibrary>();
	}
};
DUMPER7_ASSERTS_USCCollisionLibrary;

// Class SCCore.SCColorHelpers
// 0x0000 (0x0028 - 0x0028)
class USCColorHelpers final : public UBlueprintFunctionLibrary
{
public:
	static struct FLinearColor BPF_ApplyColorblindness(EColorblindness _colorblindness, const struct FLinearColor& _color);
	static float BPF_ComputeColorDifference_CIE2000Squared(const struct FLinearColor& _color0, const struct FLinearColor& _color1, double _dLightness, double _dChroma, double _dHue, bool _bGammaCorrection);
	static float BPF_ComputeColorDifference_CIE76Squared(const struct FLinearColor& _color0, const struct FLinearColor& _color1, double _dLightness, double _dRedGreen, double _dBlueYellow, bool _bGammaCorrection);
	static float BPF_ComputeColorDifference_CIELUVDistSquared(const struct FLinearColor& _color0, const struct FLinearColor& _color1, double _dLightness, double _dUComponent, double _dVComponent, bool _bGammaCorrection);
	static float BPF_ComputeColorDifference_Composite(const struct FLinearColor& _color0, const struct FLinearColor& _color1, const TArray<float>& _weights);
	static float BPF_ComputeColorDifference_EuclideanSquared(const struct FLinearColor& _color0, const struct FLinearColor& _color1, double _dR, double _dG, double _dB, bool _bGammaCorrection);
	static float BPF_ComputeColorDifference_LChDistSquared(const struct FLinearColor& _color0, const struct FLinearColor& _color1, double _dLightness, double _dChroma, double _dHue, bool _bGammaCorrection);
	static float BPF_ComputeColorDifference_LMSDistSquared(const struct FLinearColor& _color0, const struct FLinearColor& _color1, double _dR, double _dG, double _dB);
	static float BPF_ComputeColorDifference_Luminance(const struct FLinearColor& _color0, const struct FLinearColor& _color1);
	static float BPF_ComputeColorDifference_RGBLDistSquared(const struct FLinearColor& _color0, const struct FLinearColor& _color1, double _dR, double _dG, double _dB, double _dLightness, bool _bGammaCorrection);
	static float BPF_ComputeColorDifference_WeightedEuclideanSquared(const struct FLinearColor& _color0, const struct FLinearColor& _color1, double _dR, double _dG, double _dB, bool _bGammaCorrection);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCColorHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCColorHelpers")
	}
	static class USCColorHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCColorHelpers>();
	}
};
DUMPER7_ASSERTS_USCColorHelpers;

// Class SCCore.SCComponentHelpers
// 0x0000 (0x0028 - 0x0028)
class USCComponentHelpers final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCComponentHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCComponentHelpers")
	}
	static class USCComponentHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCComponentHelpers>();
	}
};
DUMPER7_ASSERTS_USCComponentHelpers;

// Class SCCore.SCCoreUserSettings
// 0x0018 (0x0050 - 0x0038)
class USCCoreUserSettings final : public UDeveloperSettings
{
public:
	bool                                          m_bAutoSkipCutscenes;                              // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEnableVolumeSolidDraw;                          // 0x0039(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bPauseOnAiNextAction;                            // 0x003A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bListPoolableActorsInOutliner;                   // 0x003B(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAutoGenerateActorPools;                         // 0x003C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bDebugDisplayAllPools;                           // 0x003D(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCDebugActorBoxType                          m_eDebugActorSelectionBoxType;                     // 0x003E(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDirectoryPath                         m_PhonemeDictionaryPath;                           // 0x0040(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCoreUserSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCoreUserSettings")
	}
	static class USCCoreUserSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCoreUserSettings>();
	}
};
DUMPER7_ASSERTS_USCCoreUserSettings;

// Class SCCore.SCCustomDPIScaling
// 0x0018 (0x0040 - 0x0028)
class USCCustomDPIScaling final : public UDPICustomScalingRule
{
public:
	float                                         m_fBaseRatio;                                      // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_CurveBelowRatio;                                 // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_CurveAboveRatio;                                 // 0x0038(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCustomDPIScaling")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCustomDPIScaling")
	}
	static class USCCustomDPIScaling* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCustomDPIScaling>();
	}
};
DUMPER7_ASSERTS_USCCustomDPIScaling;

// Class SCCore.SCDebugDisplayGameInstanceView
// 0x0768 (0x0790 - 0x0028)
class alignas(0x10) USCDebugDisplayGameInstanceView final : public UObject
{
public:
	struct FSCActorDebugCategoriesFilter          m_DisplayFilter;                                   // 0x0028(0x0048)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x50];                                      // 0x0070(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TWeakObjectPtr<class UObject>, class USCActorDebugView*> m_RegisteredObjects;               // 0x00C0(0x0050)(Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_110[0x680];                                    // 0x0110(0x0680)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCDebugDisplayGameInstanceView")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCDebugDisplayGameInstanceView")
	}
	static class USCDebugDisplayGameInstanceView* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCDebugDisplayGameInstanceView>();
	}
};
DUMPER7_ASSERTS_USCDebugDisplayGameInstanceView;

// Class SCCore.SCDebugDisplaySubsystem
// 0x0740 (0x0890 - 0x0150)
class USCDebugDisplaySubsystem : public USCSubsystem
{
public:
	struct FSCDebugDisplayOnScreenSettings        m_OnScreenDisplaySettings;                         // 0x0150(0x0128)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFloatHistoryGraphGridStyle            m_OnScreenHistoryGraphGridStyle;                   // 0x0278(0x0040)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         m_DebugViewFontSize;                               // 0x02B8(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FKey, ESCDebugDisplayMenuInput>   m_InputsMapping;                                   // 0x02C0(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<struct FKey, ESCDebugDisplayMenuInput>   m_InputsMappingV2;                                 // 0x0310(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSet<struct FKey>                             m_OpenSystemMenuInputs;                            // 0x0360(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                         m_OpenSystemMenuInputDuration;                     // 0x03B0(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fContinuousInputDelay;                           // 0x03B4(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fContinuousInputInterval;                        // 0x03B8(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCProfilerStatGroup>           m_StatGroups;                                      // 0x03C0(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TSet<TSoftClassPtr<class UClass>>             m_RegisteredActorTypes;                            // 0x03D0(0x0050)(Edit, Config, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	class USCDebugDisplayGameInstanceView*        m_DisplayedInstance;                               // 0x0420(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bRestoreCategoriesOnLoad;                        // 0x0428(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TSoftClassPtr<class UClass>, struct FSCDebugDisplayStateSerialized> m_SavedDisplayStatesPerClass; // 0x0430(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FSCDebugConsoleVarSerialized> m_SavedDebugCommands;                     // 0x0480(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                         m_iCodeVersion;                                    // 0x04D0(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         m_iLocalVersion;                                   // 0x04D4(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bEnabledCustomLogVisualizersFiltersWidget;       // 0x04D8(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESCDebugDisplayFontSize                       m_eFontSize;                                       // 0x04D9(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4DA[0x6];                                      // 0x04DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        m_Fonts[0x4];                                      // 0x04E0(0x0020)(Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFont*                                  m_FontObjects[0x4];                                // 0x0560(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_580[0x8];                                      // 0x0580(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TWeakObjectPtr<class USCGameInstance>, class USCDebugDisplayGameInstanceView*> m_GameInstanceViews; // 0x0588(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FSCDebugMenuAction>  m_RegisteredActions;                               // 0x05D8(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_628[0x58];                                     // 0x0628(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCDebugDisplayOnScreenStatusSerialized m_OnScreenDisplayStatusSerialized;                // 0x0680(0x0060)(Config, NativeAccessSpecifierPrivate)
	class USCLogVisualizerFiltersContainer*       m_LogVisualizerFilters;                            // 0x06E0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, class FName>                m_LogCategoryRedirection;                          // 0x06E8(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_738[0x158];                                    // 0x0738(0x0158)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BPF_CloseDebugOverlay(const class UObject* _worldContext);
	static bool BPF_IsOnScreenDebugDisplayOpen(const class UObject* _worldCtxt);
	static bool BPF_IsOnScreenDisplayPathEnabled(const class UObject* _objectOwner, const class FString& _displayPath, bool _bUseFirstPlayerPawn);
	static void BPF_LogValue(const class UObject* _worldContext, const class FString& _name, const class FString& _Value, const class FString& _displayPath, const class FString& _userName, bool _bPersistant, ESCDebugDisplayOutputType _eOutput, bool _bUseFirstPlayerPawn);
	static void BPF_LogValueFloat(const class UObject* _worldContext, const class FString& _name, float _fValue, const class FString& _displayPath, const class FString& _userName, bool _bPersistant, ESCDebugDisplayOutputType _eOutput, bool _bUseFirstPlayerPawn);
	static void BPF_LogValueInt(const class UObject* _worldContext, const class FString& _name, int32 _iValue, const class FString& _displayPath, const class FString& _userName, bool _bPersistant, ESCDebugDisplayOutputType _eOutput, bool _bUseFirstPlayerPawn);
	static void BPF_LogValueVector(const class UObject* _worldContext, const class FString& _name, const struct FVector& _vValue, const class FString& _displayPath, const class FString& _userName, bool _bPersistant, ESCDebugDisplayOutputType _eOutput, bool _bUseFirstPlayerPawn);
	static void BPF_RegisterDebugMenuAction(const class UObject* _worldContext, class FName _name, const TDelegate<void(class FName ActionName)>& _event, const class FString& _path);
	static void BPF_RegisterDebugMenuToggleAction(const class UObject* _worldContext, class FName _name, const TDelegate<void(class FName ActionName)>& _event, const TDelegate<void(class FName ActionName)>& _isToggledEvent);
	static void BPF_RegisterDebugMenuToggleActionCVar(const class UObject* _worldContext, class FName _name, const TDelegate<void(bool bToggled)>& _event, const class FString& _command, const TArray<class FName>& _parents, bool _bExecuteEvent, bool _bDefaultValue);
	static void BPF_UnRegisterAllDebugMenuActions(const class UObject* _worldContext, const class FString& _path);
	static void BPF_UnRegisterDebugMenuAction(const class UObject* _worldContext, class FName _name, const class FString& _path);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCDebugDisplaySubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCDebugDisplaySubsystem")
	}
	static class USCDebugDisplaySubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCDebugDisplaySubsystem>();
	}
};
DUMPER7_ASSERTS_USCDebugDisplaySubsystem;

// Class SCCore.SCDebugStatusLogger
// 0x0000 (0x0000 - 0x0000)
class ISCDebugStatusLogger final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCDebugStatusLogger")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCDebugStatusLogger")
	}
	static class ISCDebugStatusLogger* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISCDebugStatusLogger>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISCDebugStatusLogger;

// Class SCCore.SCLogTestInnerClass
// 0x0008 (0x0030 - 0x0028)
class USCLogTestInnerClass final : public UObject
{
public:
	int32                                         m_int;                                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLogTestInnerClass")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLogTestInnerClass")
	}
	static class USCLogTestInnerClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCLogTestInnerClass>();
	}
};
DUMPER7_ASSERTS_USCLogTestInnerClass;

// Class SCCore.SCLogTestClassCustomLog
// 0x0018 (0x0040 - 0x0028)
class USCLogTestClassCustomLog final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_intPropMeta;                                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         m_intNotExposed_1;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLogTestClassCustomLog")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLogTestClassCustomLog")
	}
	static class USCLogTestClassCustomLog* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCLogTestClassCustomLog>();
	}
};
DUMPER7_ASSERTS_USCLogTestClassCustomLog;

// Class SCCore.SCLogTestClassPerPropMeta
// 0x0018 (0x0040 - 0x0028)
class USCLogTestClassPerPropMeta final : public UObject
{
public:
	class USCLogTestInnerClass*                   m_InnerClass;                                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         m_intPropMeta;                                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         m_intNotExposed_1;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLogTestClassPerPropMeta")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLogTestClassPerPropMeta")
	}
	static class USCLogTestClassPerPropMeta* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCLogTestClassPerPropMeta>();
	}
};
DUMPER7_ASSERTS_USCLogTestClassPerPropMeta;

// Class SCCore.SCLogTestClass
// 0x00E8 (0x0118 - 0x0030)
class USCLogTestClass final : public USCLogTestClassParent
{
public:
	int32                                         m_int;                                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_float;                                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        m_double;                                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_string;                                          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_Name;                                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vector;                                          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USCLogTestClassPerPropMeta*             m_ClassNull;                                       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCLogTestClassPerPropMeta*             m_ClassPerPropMeta;                                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCLogTestClassCustomLog*               m_ClassCustomLog;                                  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCLogTestInnerStruct                  m_InnerStruct;                                     // 0x0090(0x0004)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 m_IntArray;                                        // 0x0098(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                   m_GameplayTagArray;                                // 0x00A8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        m_VectorArray;                                     // 0x00B8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            m_HashMap;                                         // 0x00C8(0x0050)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLogTestClass")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLogTestClass")
	}
	static class USCLogTestClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCLogTestClass>();
	}
};
DUMPER7_ASSERTS_USCLogTestClass;

// Class SCCore.SCVlogTest
// 0x0008 (0x02B8 - 0x02B0)
class ASCVlogTest final : public AActor
{
public:
	uint8                                         Pad_2B0[0x8];                                      // 0x02B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVlogTest")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVlogTest")
	}
	static class ASCVlogTest* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCVlogTest>();
	}
};
DUMPER7_ASSERTS_ASCVlogTest;

// Class SCCore.SCDebugNamedOject
// 0x0000 (0x0000 - 0x0000)
class ISCDebugNamedOject final
{
public:
	void SetDebugColor(const struct FColor& _color);
	void SetDebugName(class FName _name);

	struct FColor GetDebugColor() const;
	class FName GetDebugName() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCDebugNamedOject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCDebugNamedOject")
	}
	static class ISCDebugNamedOject* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISCDebugNamedOject>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISCDebugNamedOject;

// Class SCCore.SCDelegate
// 0x0000 (0x0028 - 0x0028)
class USCDelegate final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCDelegate")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCDelegate")
	}
	static class USCDelegate* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCDelegate>();
	}
};
DUMPER7_ASSERTS_USCDelegate;

// Class SCCore.SpeedDescriptionDB
// 0x00C8 (0x00F0 - 0x0028)
class USpeedDescriptionDB : public UObject
{
public:
	float                                         m_fMaxAcceleration;                                // 0x0028(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fBrakingFriction;                                // 0x002C(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               m_RotationRate;                                    // 0x0030(0x0018)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FSpeedDescription>              m_SpeedDescriptions;                               // 0x0048(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FSpeedDescription                      m_SprintSpeedDescription;                          // 0x0058(0x0090)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         uiVersion;                                         // 0x00E8(0x0001)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	ESCCharacterSpeedState BPF_ComputeSpeedState(const class AActor* _actor) const;
	ESCCharacterSpeedState BPF_ComputeSpeedStateFromInput(float _fInputSize) const;
	ESCCharacterSpeedState BPF_ComputeSpeedStateWithRawSpeed(float _fSpeed, float _fForwardToVelocityAngle) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpeedDescriptionDB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpeedDescriptionDB")
	}
	static class USpeedDescriptionDB* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpeedDescriptionDB>();
	}
};
DUMPER7_ASSERTS_USpeedDescriptionDB;

// Class SCCore.DynamicTextureMaskDB
// 0x0098 (0x00C8 - 0x0030)
class UDynamicTextureMaskDB final : public UDataAsset
{
public:
	class ASCPositionBakeSceneCapture*            m_PositionBakingActor;                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_BakedPositionHitDrawer_SimpleStaticMesh;         // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_BakedPositionHitDrawer_ComplexSkeletalMesh;      // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_BakedPositionHitDrawer_SimpleSkeletalMesh;       // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_TexProj_OpaqueAlpha_Standard;             // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_TexProj_OpaqueAlpha_Atlas;                // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_TexProj_OpaqueColor_Standard;             // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_TexProj_OpaqueColor_Atlas;                // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_TexProj_Additive_Standard;                // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_TexProj_Additive_Atlas;                   // 0x0078(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_SphereMask_Additive;                      // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_SphereMask_OpaqueAlpha;                   // 0x0088(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_SphereMask_OpaqueColor;                   // 0x0090(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_CapsuleMask_Additive;                     // 0x0098(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_CapsuleMask_OpaqueAlpha;                  // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_Drawer_CapsuleMask_OpaqueColor;                  // 0x00A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_TextureDilation;                                 // 0x00B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_TextureCopy;                                     // 0x00B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 m_ProxyDilationTexture;                            // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DynamicTextureMaskDB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DynamicTextureMaskDB")
	}
	static class UDynamicTextureMaskDB* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicTextureMaskDB>();
	}
};
DUMPER7_ASSERTS_UDynamicTextureMaskDB;

// Class SCCore.SCEditorPostProcessAnimInstance
// 0x0000 (0x03B0 - 0x03B0)
class USCEditorPostProcessAnimInstance final : public USCAnimInstanceBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCEditorPostProcessAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCEditorPostProcessAnimInstance")
	}
	static class USCEditorPostProcessAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCEditorPostProcessAnimInstance>();
	}
};
DUMPER7_ASSERTS_USCEditorPostProcessAnimInstance;

// Class SCCore.SCEditorWorldSubsystem
// 0x0000 (0x0150 - 0x0150)
class USCEditorWorldSubsystem final : public USCSubsystem
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCEditorWorldSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCEditorWorldSubsystem")
	}
	static class USCEditorWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCEditorWorldSubsystem>();
	}
};
DUMPER7_ASSERTS_USCEditorWorldSubsystem;

// Class SCCore.SCEnvQueryHelpers
// 0x0000 (0x0028 - 0x0028)
class USCEnvQueryHelpers final : public UObject
{
public:
	static class UEnvQueryInstanceBlueprintWrapper* BPF_RunEQSQueryWithParams(class UObject* _worldContextObject, class UEnvQuery* _queryTemplate, class UObject* _querier, EEnvQueryRunMode _runMode, TSubclassOf<class UEnvQueryInstanceBlueprintWrapper> _wrapperClass, const TArray<struct FEnvNamedValue>& _queryParams);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCEnvQueryHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCEnvQueryHelpers")
	}
	static class USCEnvQueryHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCEnvQueryHelpers>();
	}
};
DUMPER7_ASSERTS_USCEnvQueryHelpers;

// Class SCCore.SCEnvQueryManager
// 0x0008 (0x0160 - 0x0158)
class USCEnvQueryManager final : public UEnvQueryManager
{
public:
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCEnvQueryManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCEnvQueryManager")
	}
	static class USCEnvQueryManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCEnvQueryManager>();
	}
};
DUMPER7_ASSERTS_USCEnvQueryManager;

// Class SCCore.SCEnvQueryTest_Trace
// 0x0118 (0x0310 - 0x01F8)
class USCEnvQueryTest_Trace final : public USCEnvQueryTest
{
public:
	struct FEnvTraceData                          m_TraceData;                                       // 0x01F8(0x0040)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bCustomCollisionResponse;                        // 0x0238(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCollisionProfileName                  m_CollisionProfile;                                // 0x023C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCollisionResponseContainer            m_CollisionSettings;                               // 0x0244(0x0020)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UEnvQueryContext>           m_FromContext;                                     // 0x0268(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UEnvQueryContext>           m_ToContext;                                       // 0x0270(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue              m_FromZOffset;                                     // 0x0278(0x0038)(Edit, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue              m_ToZOffset;                                       // 0x02B0(0x0038)(Edit, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          m_bIgnoreQuerier;                                  // 0x02E8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E9[0x27];                                     // 0x02E9(0x0027)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCEnvQueryTest_Trace")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCEnvQueryTest_Trace")
	}
	static class USCEnvQueryTest_Trace* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCEnvQueryTest_Trace>();
	}
};
DUMPER7_ASSERTS_USCEnvQueryTest_Trace;

// Class SCCore.SCErrorHelpers
// 0x0000 (0x0028 - 0x0028)
class USCErrorHelpers final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_Ensure(bool _bValue, const class FString& _message);
	static void BPF_EnsureData(const class UObject* _owner, bool _bValue, class FName _title, const class FString& _message);
	static void BPF_ShowMessageLog(ESCMessageLogSeverity _eSeverity, const class FString& _textContent, class FName _categoryName, bool _bNotify);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCErrorHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCErrorHelpers")
	}
	static class USCErrorHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCErrorHelpers>();
	}
};
DUMPER7_ASSERTS_USCErrorHelpers;

// Class SCCore.SCExpandableWidgetInterface
// 0x0000 (0x0000 - 0x0000)
class ISCExpandableWidgetInterface final
{
public:
	void BPE_Collapse();
	void BPE_Expand();

	bool BPE_IsExpanded() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCExpandableWidgetInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCExpandableWidgetInterface")
	}
	static class ISCExpandableWidgetInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISCExpandableWidgetInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISCExpandableWidgetInterface;

// Class SCCore.SCFixedCameraWeightComponent
// 0x0008 (0x00C0 - 0x00B8)
class USCFixedCameraWeightComponent final : public USCCameraWeightComponent
{
public:
	float                                         m_fFixedWeight;                                    // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFixedCameraWeightComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFixedCameraWeightComponent")
	}
	static class USCFixedCameraWeightComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFixedCameraWeightComponent>();
	}
};
DUMPER7_ASSERTS_USCFixedCameraWeightComponent;

// Class SCCore.SCFlowGraph
// 0x0158 (0x0180 - 0x0028)
class USCFlowGraph : public UObject
{
public:
	uint8                                         Pad_28[0x90];                                      // 0x0028(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bIsSubGraph;                                     // 0x00B8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USCFlowGraphNode*>               m_Nodes;                                           // 0x00C0(0x0010)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	class USCFlowGraphNode*                       m_CurrentNode;                                     // 0x00D0(0x0008)(Edit, ZeroConstructor, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSCFlowGraphHistoryEntry>       m_History;                                         // 0x00D8(0x0010)(Edit, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FSCFlowGraphTransition                 m_PendingTransition;                               // 0x00E8(0x0060)(Edit, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        m_ParentGraph;                                     // 0x0150(0x0020)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_170[0x8];                                      // 0x0170(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bCollapseHistoryLoops;                           // 0x0178(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_TryGoToNextState(const struct FGameplayAbilityTargetDataHandle& _payload);
	void BPF_TryGoToState(const struct FGameplayTag& _stateTag, const struct FGameplayAbilityTargetDataHandle& _payload);

	class FName BPF_GetCurrentNodeTag() const;
	bool BPF_IsInStateId(class FName _ID) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFlowGraph")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFlowGraph")
	}
	static class USCFlowGraph* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFlowGraph>();
	}
};
DUMPER7_ASSERTS_USCFlowGraph;

// Class SCCore.SCFlowGraphConduitNode
// 0x0050 (0x01C0 - 0x0170)
class USCFlowGraphConduitNode : public USCFlowGraphNode
{
public:
	TMap<class FName, struct FBaseActorConditionInstance> m_Conditions;                              // 0x0170(0x0050)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	class AActor* BPE_GetConditionTarget() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFlowGraphConduitNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFlowGraphConduitNode")
	}
	static class USCFlowGraphConduitNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFlowGraphConduitNode>();
	}
};
DUMPER7_ASSERTS_USCFlowGraphConduitNode;

// Class SCCore.SCFlowGraphProxyNode
// 0x0010 (0x0180 - 0x0170)
class USCFlowGraphProxyNode final : public USCFlowGraphNode
{
public:
	class USCFlowGraphNode*                       m_ProxiedNode;                                     // 0x0170(0x0008)(ZeroConstructor, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   m_ProxiedNodeID;                                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFlowGraphProxyNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFlowGraphProxyNode")
	}
	static class USCFlowGraphProxyNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFlowGraphProxyNode>();
	}
};
DUMPER7_ASSERTS_USCFlowGraphProxyNode;

// Class SCCore.SCFlowGraphPureConduitNode
// 0x0020 (0x01E0 - 0x01C0)
class USCFlowGraphPureConduitNode : public USCFlowGraphConduitNode
{
public:
	class FName                                   m_ParentNodePinName;                               // 0x01C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USCFlowGraphNode*                       m_FromNode;                                        // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USCFlowGraphNode*                       m_ToNode;                                          // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        m_uiTransitionFlags;                               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFlowGraphPureConduitNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFlowGraphPureConduitNode")
	}
	static class USCFlowGraphPureConduitNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFlowGraphPureConduitNode>();
	}
};
DUMPER7_ASSERTS_USCFlowGraphPureConduitNode;

// Class SCCore.SCFootIkAnimInstance
// 0x05E0 (0x11B0 - 0x0BD0)
class USCFootIkAnimInstance final : public USCAnimInstance
{
public:
	struct FSCFootIkData                          m_leftFootStructure;                               // 0x0BD0(0x0148)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSCFootIkData                          m_rightFootStructure;                              // 0x0D18(0x0148)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                         m_fMaxSlopeAngle;                                  // 0x0E60(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fThighToFootDistDiff;                            // 0x0E64(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_syncGroup;                                       // 0x0E68(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_footName;                                        // 0x0E70(0x0010)(Edit, ZeroConstructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_thighName;                                       // 0x0E80(0x0010)(Edit, ZeroConstructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_ikSuffix;                                        // 0x0E90(0x0010)(Edit, ZeroConstructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bInvalidateLastGroundOnMarkerHit;                // 0x0EA0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EA1[0x3];                                      // 0x0EA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLerpToSpringMultiplier;                         // 0x0EA4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                     m_alphaCurveByRelFootPos;                          // 0x0EA8(0x0088)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<EMovementMode>                         m_eHandledMovementModes;                           // 0x0F30(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bIgnoreLevelDesignCollisions;                    // 0x0F40(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F41[0x7];                                      // 0x0F41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFootIkDamping                         m_locationDamping;                                 // 0x0F48(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FFootIkDamping                         m_rotationDamping;                                 // 0x0FE0(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         m_fRawToMarkerAlphaDuration;                       // 0x1078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fHipsAttenuation;                                // 0x107C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bHipsUseLerp;                                    // 0x1080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1081[0x3];                                     // 0x1081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fHipsDampingSpeed;                               // 0x1084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class USCFootIkService>>   m_services;                                        // 0x1088(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                         m_fMaxHipsHeightDisplacement;                      // 0x1098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_109C[0x4];                                     // 0x109C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vHipsDisplacment;                                // 0x10A0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsHipsDisplacementValid;                        // 0x10B8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsFootIkEnabled;                                // 0x10B9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10BA[0x6];                                     // 0x10BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vLastComponentVelocity;                          // 0x10C0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10D8[0xD8];                                    // 0x10D8(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFootIkAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFootIkAnimInstance")
	}
	static class USCFootIkAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFootIkAnimInstance>();
	}
};
DUMPER7_ASSERTS_USCFootIkAnimInstance;

// Class SCCore.FootIkDataStatics
// 0x0000 (0x0028 - 0x0028)
class UFootIkDataStatics final : public UBlueprintFunctionLibrary
{
public:
	static bool BPF_GetLastFoundGround(const struct FSCFootIkData& _inFootIkData, struct FVector* _vOutLocation, struct FVector* _vOutNormal);
	static bool BPF_IsFootPlanted(const struct FSCFootIkData& _inFootIkData);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FootIkDataStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FootIkDataStatics")
	}
	static class UFootIkDataStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFootIkDataStatics>();
	}
};
DUMPER7_ASSERTS_UFootIkDataStatics;

// Class SCCore.SCFootIkPlanting
// 0x0008 (0x0030 - 0x0028)
class USCFootIkPlanting final : public USCFootIkService
{
public:
	bool                                          m_bIgnore2DPlane;                                  // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCFootIkPlanting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCFootIkPlanting")
	}
	static class USCFootIkPlanting* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCFootIkPlanting>();
	}
};
DUMPER7_ASSERTS_USCFootIkPlanting;

// Class SCCore.SCGameEngine
// 0x0000 (0x1120 - 0x1120)
class USCGameEngine final : public UGameEngine
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameEngine")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameEngine")
	}
	static class USCGameEngine* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameEngine>();
	}
};
DUMPER7_ASSERTS_USCGameEngine;

// Class SCCore.SCGameFlow
// 0x0000 (0x0180 - 0x0180)
class USCGameFlow : public USCFlowGraph
{
public:
	class USCGameFlowStartState* BPF_FindStartState(const struct FGameplayTag& _tag) const;
	class USCGameFlowState* BPF_FindState(const struct FGameplayTag& _tag) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameFlow")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameFlow")
	}
	static class USCGameFlow* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameFlow>();
	}
};
DUMPER7_ASSERTS_USCGameFlow;

// Class SCCore.SCGameFlowSubsystem
// 0x03A0 (0x04F0 - 0x0150)
class USCGameFlowSubsystem : public USCSubsystem
{
public:
	uint8                                         Pad_150[0x18];                                     // 0x0150(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGameplayTag& _previous, const struct FGameplayTag& _current)> OnStateChangedDynamic; // 0x0168(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_178[0x18];                                     // 0x0178(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGameplayTag& _previous, const struct FGameplayTag& _current, const class FName& _transition)> OnStateChangedWithTransitionDynamic; // 0x0190(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A0[0x18];                                     // 0x01A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bHasLocalPlayerValidatedSynchro;                 // 0x01B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fServerPlayerArrayCompleteTimeOutDuration;       // 0x01BC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C0[0x10];                                     // 0x01C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_FallBackPIEStartState;                           // 0x01D0(0x0008)(Edit, Config, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_GameServerStartState;                            // 0x01D8(0x0008)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_GameServerIdleState;                             // 0x01E0(0x0008)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_PostClientTravelState;                           // 0x01E8(0x0008)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_ClientDisconnectionState;                        // 0x01F0(0x0008)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           m_SkippableStateUILayer;                           // 0x01F8(0x0008)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   m_SkippableStateWidget;                            // 0x0200(0x0028)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bEnableInPIE;                                    // 0x0228(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class USCMenuWidget>>      m_MenuLoadedClasses;                               // 0x0230(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class FName                                   m_MatchState;                                      // 0x0240(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bForceSaveProfileLoading;                        // 0x0248(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USCGameFlow>             m_DefaultGameFlowAsset;                            // 0x0250(0x0028)(Edit, Config, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USCGameFlow>             m_DefaultGameFlowAssetOverride;                    // 0x0278(0x0028)(Edit, Config, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCGameFlow*                            m_GameFlow;                                        // 0x02A0(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_CurrentLevelName;                                // 0x02A8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_PendingLevelPathName;                            // 0x02B0(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSCGameFlowTransitionOptions           m_NextTransitionOptions;                           // 0x02B8(0x0030)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FSCGameFlowTransitionOptions           m_PendingTransitionOptions;                        // 0x02E8(0x0030)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_318[0x4];                                      // 0x0318(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ASCBasePlayerController> m_PlayerController;                                // 0x031C(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCDeferredPopup>               m_DeferredPopups;                                  // 0x0328(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	bool                                          bForceGotoNextNodeAtStart;                         // 0x0338(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_339[0x6F];                                     // 0x0339(0x006F)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           m_PendingSynchrosToSend;                           // 0x03A8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B8[0x78];                                     // 0x03B8(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const ESCSynchroGameStateInitStep& _currentInitStep)> BPE_OnCurrentInitStepChanged; // 0x0430(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPlayersSynchroHandler*                 m_PlayersSynchroHandler;                           // 0x0440(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCSynchroGameStateInitStep                   m_eCurrentSynchroInitStep;                         // 0x0448(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_449[0x9B];                                     // 0x0449(0x009B)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bUseGameFlowViewModel;                           // 0x04E4(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E5[0x3];                                      // 0x04E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USCGameFlowViewModel*                   m_GameFlowViewModel;                               // 0x04E8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static bool BPF_IsGameFlowEnabledInCurrentWorldType(const class UObject* _worldContext);
	static class USCGameFlowSubsystem* GetOwningGameFlowSubsystem(const class USCUserWidget* _widget);
	static class UPlayersSynchroHandler* GetPlayersSynchroHandler(const class UObject* _worldContext);

	void BPE_OnSFXStateChanged(const struct FGameplayTag& GameplayTag);
	void BPE_StateChanged(const struct FGameplayTag& _previousState, const struct FGameplayTag& _currentState);
	void BPF_ClearMenusStack();
	void BPF_CloseTopMenu();
	void BPF_GetAvailableTransitionsFromMenu(TArray<class FName>* _outTransitions, TSoftClassPtr<class UClass> _menuClass);
	struct FGameplayTag BPF_GetNextStateByTransitionName(class FName _transitionName);
	ESCFFlowGraphError BPF_GotoPreviousState(bool _reloadMap);
	ESCFFlowGraphError BPF_GotoSiblingStateByTransitionName(class FName _transitionName, class ASCBasePlayerController* _pc, uint8 _uiIndex, bool _bForceLocal);
	ESCFFlowGraphError BPF_GotoStateByTag(const struct FGameplayTag& _stateTag);
	ESCFFlowGraphError BPF_GotoStateByTransitionName(class FName _transitionName, class ASCBasePlayerController* _pc, uint8 _uiIndex, bool _bForceLocal);
	ESCFFlowGraphError BPF_GotoStateWithCustomTransition(const struct FGameplayTag& _stateTag, class FName _transitionName);
	ESCFFlowGraphError BPF_RestartCurrentState();
	void BPF_SetNextTransitionOptions(const struct FSCGameFlowTransitionOptions& _options);
	void BPF_TryToSkipPlayerSynchro();
	void BPF_ValidateSynchro();

	bool BPF_CanSkipPlayerSynchro() const;
	struct FGameplayTag BPF_GetActiveLayer() const;
	const struct FGameplayTag BPF_GetClientDisconnectionStateTag() const;
	class FName BPF_GetCurrentLevelName() const;
	struct FGameplayTag BPF_GetCurrentState() const;
	ESCSynchroGameStateInitStep BPF_GetCurrentSynchroInitStep() const;
	float BPF_GetFlowStateMaxDuration() const;
	float BPF_GetFlowStateRemainingTime() const;
	class USCGameFlow* BPF_GetGameFlow() const;
	const struct FGameplayTag BPF_GetGameServerIdleStateTag() const;
	struct FPlayerSynchroInfos BPF_GetPlayerSynchroInfos() const;
	ESCGameFlowTransitionType BPF_GetTransitionType() const;
	bool BPF_HasOutputTransitionByName(class FName _transitionName) const;
	bool BPF_IsEnabledInCurrentWorldType() const;
	bool BPF_IsServerWaitingForSynchro(const struct FGameplayTag& _synchro) const;
	bool BPF_IsServerWaitingForSynchroValidation() const;
	bool BPF_IsWidgetActiveLayerRoot(class USCUserWidget* _widget) const;
	bool BPF_ShouldSkipFirstLaunch() const;
	TArray<class FName> BPF_StateLevelNames(const struct FGameplayTag& _stateTag) const;
	bool ShouldUseRealGameFlow() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameFlowSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameFlowSubsystem")
	}
	static class USCGameFlowSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameFlowSubsystem>();
	}
};
DUMPER7_ASSERTS_USCGameFlowSubsystem;

// Class SCCore.SCGameFlowViewModel
// 0x0030 (0x00A0 - 0x0070)
class USCGameFlowViewModel final : public USCViewModel
{
public:
	struct FGameplayTag                           m_CurrentStateTag;                                 // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCGameFlowAutoTransitionType                 m_eCurrentStateTransitionType;                     // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fCurrentStateEnterTime;                          // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fCurrentStateDuration;                           // 0x0080(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iAcknowledgedPlayersCount;                       // 0x0084(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iExpectedPlayersCount;                           // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8C[0x14];                                      // 0x008C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPlayerSynchroChanged(class ASCGameState* _gameState);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameFlowViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameFlowViewModel")
	}
	static class USCGameFlowViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameFlowViewModel>();
	}
};
DUMPER7_ASSERTS_USCGameFlowViewModel;

// Class SCCore.SCGameMode
// 0x0098 (0x0428 - 0x0390)
class ASCGameMode : public AGameMode
{
public:
	uint8                                         Pad_390[0x8];                                      // 0x0390(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AController* _PlayerController)> OnPlayerControllerPostLogged; // 0x0398(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AController* _PlayerController)> OnPlayerControllerPostLogout; // 0x03A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSubclassOf<class USCWorldSubsystem>> m_WorldSubsystemOverrideMap;     // 0x03B8(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UGameplayEffect*>                m_PlayerGameModeGameplayEffects;                   // 0x0408(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          m_bIsUsingPools;                                   // 0x0418(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsMatchStateHandledByGameFlow;                  // 0x0419(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_41A[0x2];                                      // 0x041A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTimeOutConnectionDuration;                      // 0x041C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bTeleportPawnToStartSpotOnRestartEnabled;        // 0x0420(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_InitGameState(class ASCGameState* _gameState);

	bool CanLeaveSpectate(class APlayerController* _newPlayerController) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameMode")
	}
	static class ASCGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCGameMode>();
	}
};
DUMPER7_ASSERTS_ASCGameMode;

// Class SCCore.SCGameplayAbility
// 0x0290 (0x0648 - 0x03B8)
class USCGameplayAbility : public UGameplayAbility
{
public:
	uint8                                         Pad_3B8[0x20];                                     // 0x03B8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         m_uiGameplayTaskPriorityOrder;                     // 0x03D8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UGameplayEffect>>    m_EffectsWhileActive;                              // 0x03E0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	ESCAbilityTrigger                             m_eTrigger;                                        // 0x03F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetDatasourceInstance              m_SharedTargetDataSource;                          // 0x03F8(0x0048)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSCAbilityInputDescription>     m_Inputs;                                          // 0x0440(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FBaseActorConditionInstance            m_TriggerCondition;                                // 0x0450(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bTriggerConditionRequireTarget;                  // 0x0460(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLatentTargetProvider                  m_TriggerConditionTargetProvider;                  // 0x0468(0x0058)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         m_iTriggerConditionPriorityWeight;                 // 0x04C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseOtherTriggersConditionOnGameplayEvent;       // 0x04C4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBaseActorConditionInstance            m_CustomConditionOnGameplayEvent;                  // 0x04C8(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTagAvailabilityLayerContainerInstance m_AvailabilityTags;                                // 0x04D8(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         m_fBufferDuration;                                 // 0x04E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTagAvailabilityLayerContainerInstance m_BufferAvailabilityTags;                          // 0x04F0(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayAbilityCategorisation         m_Categorisation;                                  // 0x0500(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FTargetDataManifestInstance            m_TargetDataManifest;                              // 0x0540(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bIgnoreCostsCheckForActivation;                  // 0x0550(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_551[0x1F];                                     // 0x0551(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class FName _eventName)> m_abilityEventDelegate;                   // 0x0570(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_580[0xC0];                                     // 0x0580(0x00C0)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bStorePreviousTagsWhenAbilityActivate;           // 0x0640(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BPF_AbilityExecEnumToOutput(EAbilityExecOrigin _eIn, EAbilityExecOrigin* _eOut);
	static struct FGameplayAbilityTargetDataHandle BPF_AbilityTargetDataFromBlendParams(float _fDuration, class UCurveFloat* _dynamicByTimeRatio);
	static struct FGameplayAbilityTargetDataHandle BPF_AbilityTargetDataFromDirection(const struct FVector& _vInDirection);
	static struct FGameplayAbilityTargetDataHandle BPF_AbilityTargetDataFromTransition(const struct FSCTransition& _transition);
	static void BPF_AddAnimSequencePlayInfosToAbilityPayload(class USCGameplayAbility* _ability, const struct FAnimSequencePlayInfos& _sequencePlayInfos);
	static void BPF_AddTaskToScope(struct FTaskScope& _scope, class UGameplayTask* _task);
	static struct FGameplayAbilityTargetData_BlendParams BPF_BlendParamsFromAbilityTargetData(const struct FGameplayAbilityTargetDataHandle& _handle, int32 _iIndex, bool* _bOutFound);
	static struct FGameplayAbilityTargetDataHandle BPF_CombineOrReplaceTargetData(const struct FGameplayAbilityTargetDataHandle& _handle, const struct FGameplayAbilityTargetDataHandle& _data);
	static struct FGameplayAbilityTargetDataHandle BPF_CombineTargetDataCommutative(const struct FGameplayAbilityTargetDataHandle& A, const struct FGameplayAbilityTargetDataHandle& B);
	static struct FGameplayAbilityTargetDataHandle BPF_CombineTargetDatas(const TArray<struct FGameplayAbilityTargetDataHandle>& _data);
	static void BPF_EndTaskIfValid(class UGameplayTask* _task);
	static void BPF_EndTasksAndClear(TArray<class UGameplayTask*>& _tasks);
	static void BPF_EndTaskScope(struct FTaskScope& _scope);
	static struct FGameplayAbilityTargetDataHandle BPF_FilterTargetDataByName(const struct FGameplayAbilityTargetDataHandle& _handle, class UScriptStruct* _type, const struct FGameplayTag& _name, bool _bEnsure);
	static struct FGameplayAbilityTargetDataHandle BPF_FilterTargetDataByType(const struct FGameplayAbilityTargetDataHandle& _handle, class UScriptStruct* _type, bool _bEnsure);
	static struct FGameplayAbilityTargetDataHandle BPF_FilterTargetDatasByType(const struct FGameplayAbilityTargetDataHandle& _handle, class UScriptStruct* _type, bool _bEnsure);
	static bool BPF_FindInputTargetData(const struct FGameplayAbilityTargetDataHandle& _data, struct FInputGameplayAbilityTargetData* _outData);
	static TArray<struct FGameplayTag> BPF_GetGameplayTagsFromQuery(const struct FGameplayTagQuery& _query);
	static struct FGameplayEffectQuery BPF_MakeQuery_MatchAllEffectTags(const struct FGameplayTagContainer& InTags);
	static struct FGameplayEffectQuery BPF_MakeQuery_MatchAllOwningTags(const struct FGameplayTagContainer& InTags);
	static struct FGameplayEffectQuery BPF_MakeQuery_MatchAllSourceTags(const struct FGameplayTagContainer& InTags);
	static struct FGameplayEffectQuery BPF_MakeQuery_MatchAnyEffectTags(const struct FGameplayTagContainer& InTags);
	static struct FGameplayEffectQuery BPF_MakeQuery_MatchAnyOwningTags(const struct FGameplayTagContainer& InTags);
	static struct FGameplayEffectQuery BPF_MakeQuery_MatchAnySourceTags(const struct FGameplayTagContainer& InTags);
	static struct FGameplayEffectQuery BPF_MakeQuery_MatchNoEffectTags(const struct FGameplayTagContainer& InTags);
	static struct FGameplayEffectQuery BPF_MakeQuery_MatchNoOwningTags(const struct FGameplayTagContainer& InTags);
	static struct FGameplayEffectQuery BPF_MakeQuery_MatchNoSourceTags(const struct FGameplayTagContainer& InTags);
	static void BPF_SetContextInCueParameters(const struct FGameplayCueParameters& _inParameter, const struct FGameplayEffectContextHandle& _context, struct FGameplayCueParameters* _outResult);
	static void BPF_SetRefTargetData(struct FGameplayAbilityTargetDataHandle& _data, const struct FGameplayAbilityTargetDataHandle& _Value);
	static struct FSCTransitionGameplayAbilityTargetData BPF_TransitionFromAbilityTargetData(const struct FGameplayAbilityTargetDataHandle& _handle, bool* _bOutFound);
	static bool GetTargetData(const struct FGameplayAbilityTargetDataHandle& _handle, const class UScriptStruct* _scriptStruct, bool _bEnsure, int32 _iStartIndex, struct FSCGameplayAbilityTargetData* _outData);
	static bool GetTargetDataNamed(const struct FGameplayTag& _name, const struct FGameplayAbilityTargetDataHandle& _handle, const class UScriptStruct* _scriptStruct, bool _bEnsure, int32 _iStartIndex, struct FSCGameplayAbilityTargetData* _outData);
	static bool GetTargetDataNamedPure(const struct FGameplayTag& _name, const struct FGameplayAbilityTargetDataHandle& _handle, const class UScriptStruct* _scriptStruct, bool _bEnsure, int32 _iStartIndex, struct FSCGameplayAbilityTargetData* _outData);
	static bool GetTargetDataPure(const struct FGameplayAbilityTargetDataHandle& _handle, const class UScriptStruct* _scriptStruct, bool _bEnsure, int32 _iStartIndex, struct FSCGameplayAbilityTargetData* _outData);
	static void MakeTargetDataHandle(const class UScriptStruct* _scriptStruct, bool _bNeedsPostMake, struct FGameplayAbilityTargetDataHandle* _outHandle, const struct FSCGameplayAbilityTargetData& _data);

	void AbilityEvent(const struct FGameplayTag& _eventName);
	bool BP_CheckAbilityCost(TSubclassOf<class UGameplayEffect> _effect);
	bool BP_CommitAbilityCost(TSubclassOf<class UGameplayEffect> _effect);
	void BPE_BuildPayload();
	TArray<struct FActiveGameplayEffectHandle> BPF_ApplyScopedGameplayEffectSpecsToOwner(const TArray<struct FGameplayEffectSpecHandle>& _effectSpecHandle);
	struct FActiveGameplayEffectHandle BPF_ApplyScopedGameplayEffectSpecToOwner(const struct FGameplayEffectSpecHandle& _effectSpecHandle);
	struct FActiveGameplayEffectHandle BPF_ApplyScopedGameplayEffectSpecToTarget(const struct FGameplayEffectSpecHandle& _effectSpecHandle, class UAbilitySystemComponent* _target);
	struct FActiveGameplayEffectHandle BPF_ApplyScopedGameplayEffectToOwner(TSubclassOf<class UGameplayEffect> _gameplayEffectClass, int32 _iGameplayEffectLevel, int32 Stacks);
	struct FActiveGameplayEffectHandle BPF_ApplyScopedGameplayEffectToTarget(TSubclassOf<class UGameplayEffect> _gameplayEffectClass, class UAbilitySystemComponent* _target, int32 _iGameplayEffectLevel, int32 Stacks);
	struct FActiveGameplayEffectHandle BPF_CopyActiveEffectToOwner(const struct FActiveGameplayEffectHandle& _activeEffect, bool _bScoped);
	bool BPF_FindCurrentInputTargetData(struct FInputGameplayAbilityTargetData* _outData);
	void BPF_Log(EDisplayLevel _eVerbosity, const class FString& _subCat, const class FString& _inString);
	void BPF_MakeGameplaySpecWithContext(const struct FGameplayEffectContextHandle& _context, TSubclassOf<class UGameplayEffect> _gameplayEffectClass, float _iGameplayEffectLevel, struct FGameplayEffectSpecHandle* _outResult);
	void BPF_PopBufferAvailabilityLayer();
	void BPF_ResetInputAction(const class APlayerController* _PlayerController);
	void BPF_SetCameraAbilityRefTransform(const struct FTransform& _inTransform);
	void BuildPayloadFromManifest(TSubclassOf<class UObject> _manifest, EAbilityExecOrigin _eIn, EAbilityExecOutputWithValidation* _eOut, const struct FGameplayAbilityTargetDataHandle& _payload, const struct FGameplayAbilityTargetDataHandle& _context, struct FGameplayAbilityTargetDataHandle* _result);
	void BuildPayloadFromProvidedManifest(EAbilityExecOrigin _eIn, EAbilityExecOutputWithValidation* _eOut, const struct FGameplayAbilityTargetDataHandle& _payload, struct FGameplayAbilityTargetDataHandle* _result);
	bool IsToggledDebug(class FName _actionName);
	void OnToggleDebug(class FName _actionName);

	void BPE_ClientPreparePayload(const struct FGameplayAbilityTargetDataHandle& _handle, const class USCAbilitySystemComponent* _component, struct FGameplayAbilityTargetDataHandle* _result) const;
	void BPE_DebugLog() const;
	void BPF_DrawDebug(const class AActor* _actor, const class USCAbilitySystemComponent* _component, bool _bActive) const;
	struct FGameplayTagContainer BPF_GetAbilityTags() const;
	void BPF_GetBuildPayloadTargetData(struct FGameplayAbilityTargetDataHandle* _outData) const;
	class USCCharacterAbilitySystemComponent* BPF_GetCharacterAbilitySystemComponentFromActorInfos() const;
	void BPF_GetProvidedTargetData(struct FGameplayAbilityTargetDataHandle* _outData) const;
	class USCAbilitySystemComponent* BPF_GetSCAbilitySystemComponentFromActorInfos() const;
	class FString BPF_GetVLogContext(const class FString& _category) const;
	void BPF_LogTargetDataHandle(const struct FGameplayAbilityTargetDataHandle& _handle, const class FString& _sLogPrefix) const;
	void GetProvidedTargetData(struct FGameplayAbilityTargetDataHandle* _outData) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameplayAbility")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameplayAbility")
	}
	static class USCGameplayAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameplayAbility>();
	}
};
DUMPER7_ASSERTS_USCGameplayAbility;

// Class SCCore.SCGameplayCueNotify_Actor
// 0x0008 (0x0328 - 0x0320)
class ASCGameplayCueNotify_Actor : public AGameplayCueNotify_Actor
{
public:
	bool                                          m_bAllowOnlyOnLocallyControlledActors;             // 0x0320(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameplayCueNotify_Actor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameplayCueNotify_Actor")
	}
	static class ASCGameplayCueNotify_Actor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCGameplayCueNotify_Actor>();
	}
};
DUMPER7_ASSERTS_ASCGameplayCueNotify_Actor;

// Class SCCore.SCGameplayCueTranslator
// 0x0010 (0x0038 - 0x0028)
class USCGameplayCueTranslator final : public UGameplayCueTranslator
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameplayCueTranslator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameplayCueTranslator")
	}
	static class USCGameplayCueTranslator* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameplayCueTranslator>();
	}
};
DUMPER7_ASSERTS_USCGameplayCueTranslator;

// Class SCCore.SCGameplayStatics
// 0x0000 (0x0028 - 0x0028)
class USCGameplayStatics final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_AsyncGetGameState(const class UObject* _worldContextObject, const struct FLatentActionInfo& _inLatentInfo, class AGameStateBase** _outGameState);
	static void BPF_AsyncGetPlayerStateFromController(const class AController* _inController, const struct FLatentActionInfo& _inLatentInfo, class APlayerState** _outPlayerState);
	static void BPF_AsyncGetPlayerStateFromPawn(const class APawn* _inPawn, const struct FLatentActionInfo& _inLatentInfo, class APlayerState** _outPlayerState);
	static void BPF_DisplayErrorMessage(class FName _title, const class FString& _message);
	static void BPF_ForceRefresh(class AActor* _actor);
	static float BPF_GetActorSimpleCollisionHalfHeight(const class AActor* _inActor);
	static float BPF_GetActorSimpleCollisionRadius(const class AActor* _inActor);
	static float BPF_GetBlendTimeToGo(class APlayerCameraManager* _cameraManager);
	static TArray<class USceneComponent*> BPF_GetChildComponentsByClass(class USceneComponent* _sceneComponent, TSubclassOf<class USceneComponent> _componentClass, bool bIncludeAllDescendants);
	static class UWorld* BPF_GetCurrentPlayWorld();
	static class APawn* BPF_GetFirstLocalPlayerPawn(const class UObject* _worldContextObject);
	static int32 BPF_GetNumPlayers(const class UObject* _worldContextObject);
	static int32 BPF_GetNumPlayersAndBots(const class UObject* _worldContextObject);
	static int32 BPF_GetNumPlayersAndSpectators(const class UObject* _worldContextObject);
	static int32 BPF_GetNumSpectators(const class UObject* _worldContextObject);
	static struct FColor BPF_GetObjectRandomSeededColor(const class UObject* _context, const class UObject* _obj);
	static float BPF_GetScalableValueAtLevel(const struct FScalableFloat& _scalableFloat, float _fLevel, const class FString& _contextString);
	static struct FVector2D BPF_GetScreenSpaceTargetPosRatio(const class APlayerController* _controller, const struct FTransform& _cameraTransformUsed, const struct FVector& _targetPos, const EProjectionComputeBehavior _eProjectionClampMethod, const class FString& _instigatorNameForDebuging);
	static class AActor* BPF_GetViewTarget(class APlayerCameraManager* _cameraManager);
	static bool BPF_IsBuildDev();
	static bool BPF_IsBuildShipping();
	static bool BPF_IsBuildTest();
	static bool BPF_IsGamePaused(const class UObject* _worldContextObject);
	static bool BPF_IsPlaySessionPaused();
	static bool BPF_ProjectScreenToWorldWithTransform(class APlayerController* _player, const struct FVector2D& _vInScreenPosition, struct FVector* _vOutWorldPosition, struct FVector* _vOutWorldDir, const struct FTransform& _cameraTransform);
	static bool BPF_ProjectWorldToScreenWithTransform(class APlayerController* _player, const struct FVector& _vWorldPosition, struct FVector2D* _vOutScreenPosition, const struct FTransform& _cameraTransform, bool _bPlayerViewportRelative, EProjectionComputeBehavior _eComputeBehavior);
	static void BPF_SetCurrentPrimitiveDataAsDefault(class UPrimitiveComponent* _primitiveComponent);
	static void BPF_SetGamePaused(const class UObject* _worldContextObject, bool _bPaused);
	static class UParticleSystemComponent* BPF_SpawnEmitterAtLocationFromPool(const class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, class FName PoolType, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale);
	static class UParticleSystemComponent* BPF_SpawnEmitterAttachedFromPool(class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, class FName PoolType, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, EAttachLocation LocationType);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameplayStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameplayStatics")
	}
	static class USCGameplayStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameplayStatics>();
	}
};
DUMPER7_ASSERTS_USCGameplayStatics;

// Class SCCore.SCGameState
// 0x0250 (0x0578 - 0x0328)
class ASCGameState : public AGameState
{
public:
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fServerFrameRate;                                // 0x0330(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fServerFrameMS;                                  // 0x0334(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fServerSaturatedConnections;                     // 0x0338(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class APlayerState* _PlayerStateAdded)> BPE_OnPlayerStateAdded;    // 0x0340(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APlayerState* _PlayerStateRemoved)> BPE_OnPlayerStateRemoved; // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ENetErrorType _eErrorType, ENetErrorSeverity _eSeverity)> m_OnNetworkError; // 0x0360(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ASCGameState* _gameState)> BPE_OnMatchStarted;               // 0x0370(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class ASCGameState* _gameState)> BPE_OnMatchOver;                  // 0x0380(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_390[0x48];                                     // 0x0390(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class FName _newMatchState)> m_OnMatchStateChangedDyn;             // 0x03D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              m_OnPlayersArrayCompleteOnClient;                  // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F8[0x28];                                     // 0x03F8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_ServerNetEmulationProfile;                       // 0x0420(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsPlayerArrayCompleteOnClients;                 // 0x0428(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIsPlayerArrayCompleteOnServer;                  // 0x0429(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_42A[0x6];                                      // 0x042A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerSynchroInfoContainer            m_ReplicatedSynchroArray;                          // 0x0430(0x0120)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bTeleportPawnToStartSpotOnRestartEnabled;        // 0x0550(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USCGameStateViewModel*                  m_GameStateVM;                                     // 0x0558(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                           m_ToggledRemoteSubsystemMessages;                  // 0x0560(0x0010)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_570[0x8];                                      // 0x0570(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_NetEmulationProfile();
	void OnRep_PlayerArrayCompleteOnClients(const bool& _bOldValue);
	void OnRep_SynchroArray(const struct FPlayerSynchroInfoContainer& _oldReplicatedSynchroArray);

	class APlayerState* BPF_GetPlayerStateFromPlayerId(int32 _playerId) const;
	bool BPF_HasBeenReplicatedOnce() const;
	bool BPF_IsPlayerArrayCompleteOnClients() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameState")
	}
	static class ASCGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCGameState>();
	}
};
DUMPER7_ASSERTS_ASCGameState;

// Class SCCore.SCGameStateViewModel
// 0x0060 (0x00D0 - 0x0070)
class USCGameStateViewModel final : public USCViewModel
{
public:
	TMap<TWeakObjectPtr<class APlayerState>, class USCCharacterViewModel*> m_CharactersViewModelList; // 0x0070(0x0050)(Protected, NativeAccessSpecifierProtected)
	class USCCharacterViewModel*                  m_FirstLocalCharacterViewModel;                    // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameStateViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameStateViewModel")
	}
	static class USCGameStateViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameStateViewModel>();
	}
};
DUMPER7_ASSERTS_USCGameStateViewModel;

// Class SCCore.BlendProfilePayload
// 0x0000 (0x0028 - 0x0028)
class UBlendProfilePayload final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlendProfilePayload")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlendProfilePayload")
	}
	static class UBlendProfilePayload* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlendProfilePayload>();
	}
};
DUMPER7_ASSERTS_UBlendProfilePayload;

// Class SCCore.SCHelpers
// 0x0000 (0x0028 - 0x0028)
class USCHelpers final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_AbortCurrentSlowMotion(class UObject* _context, bool _bIsRelevantForGameplay);
	static void BPF_AbortSlowMotion(class UObject* _context, int32 _iSlowMoID, bool _bIsRelevantForGameplay);
	static struct FSCTypedValue BPF_BoolToTypedValue(bool _bValue);
	static class FString BPF_ColorToHex(const struct FColor& _color);
	static bool BPF_Contains(const struct FFloatRange& _FloatRange, float _fValue);
	static void BPF_EndTasks(const TArray<class UAbilityTask*>& _tasks);
	static struct FSCTypedValue BPF_FloatToTypedValue(float _fValue);
	static struct FGameplayTagContainer BPF_GameplayTagToGameplayTagContainer(const struct FGameplayTag& _gameplayTag);
	static const class UActorComponent* BPF_GetActorClassDefaultComponent(const class AActor* _actor, TSubclassOf<class UActorComponent> _actorComponentClass);
	static class AActor* BPF_GetActorOfClassInWorld(const class UObject* WorldContextObject, TSubclassOf<class AActor> ActorClass);
	static TArray<struct FPrimaryAssetType> BPF_GetAllPrimaryAssetTypes();
	static class FString BPF_GetBuildChangeList();
	static class FString BPF_GetBuildVersion();
	static class UWorld* BPF_GetEditorWorld();
	static struct FGameplayTagContainer BPF_GetGameplayTagChildren(const struct FGameplayTag& _rootTag);
	static const TMap<class FString, class FText> BPF_GetIsoCultureToDisplayName();
	static void BPF_GetMapPathAndName(class FString* _path, class FString* _mapName);
	static void BPF_GetPrimaryAssetIdsFromAssetTypes(const TArray<struct FPrimaryAssetType>& _assetTypes, TArray<struct FPrimaryAssetId>* _outAssetIds);
	static float BPF_GetSlowMotionDebugCoef();
	static float BPF_GetSlowMotionDebugUserValue();
	static void BPF_GetTableRowEmbeddedStructByType(class UScriptStruct* _valueType, const struct FDataTableRowHandle& _handle, struct FGenericStruct* _outData);
	static struct FColor BPF_HexToColor(const class FString& _hex);
	static int32 BPF_InstantSlowMotion(class UObject* _context, float _fScale, bool _bIsRelevantForGameplay);
	static bool BPF_Int32RangeContains(const struct FInt32Range& _range, int32 _iValue);
	static struct FSCTypedValue BPF_IntToTypedValue(int32 _iValue);
	static bool BPF_IsObjectDefault(const class UObject* _object);
	static bool BPF_IsSamePlayerId(const struct FUniqueNetIdRepl& _playerIdA, const struct FUniqueNetIdRepl& _playerIdB);
	static bool BPF_IsSlowMotionEnabled();
	static bool BPF_IsStatEnabled(const class UObject* _worldContextObject, const class FString& _statName);
	static void BPF_Niagara_DeactivateImmediate(class UNiagaraComponent* _niagaraComponent);
	static void BPF_PopBlockSlowmotion(int32 _iHandle, bool _bUnFreezeAnySlowmotion);
	static int32 BPF_PushBlockSlowmotion(bool _bFreezeAnySlowmotion);
	static bool BPF_RandomBoolFromProbability(const float _fProba);
	static void BPF_RebuildBSP(const TArray<class ABrush*>& _brushActors);
	static class UObject* BPF_ResolveObject(const TSoftObjectPtr<class UObject>& _obj, bool _bAllowSyncLoad, bool _bErrorIfSyncLoads, const class UObject* _worldContextObject);
	static void BPF_SetLocalizationPreviewLanguage(const class FString& _inCulture);
	static void BPF_SetStatEnabled(const class UObject* _worldContextObject, const class FString& _statName, bool _bEnabled);
	static int32 BPF_SlowMotion(class UObject* _context, class UCurveFloat* _curve, float _fScale, bool _bIsRelevantForGameplay);
	static int32 BPF_SlowMotionFinisher(class UObject* _context, class UCurveFloat* _curve, TDelegate<void()> _onFinished, float _fScale, bool _bIsRelevantForGameplay, bool _bStopOnOtherSlomo);
	static bool BPF_TestExpressionFloat(const struct FSCMathExpressionFloat& _expression, float _fInputValue);
	static bool BPF_TestExpressionInt(const struct FSCMathExpressionInteger& _expression, int32 _iInputValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCHelpers")
	}
	static class USCHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCHelpers>();
	}
};
DUMPER7_ASSERTS_USCHelpers;

// Class SCCore.SCHUD
// 0x0000 (0x03A8 - 0x03A8)
class ASCHUD : public AHUD
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCHUD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCHUD")
	}
	static class ASCHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCHUD>();
	}
};
DUMPER7_ASSERTS_ASCHUD;

// Class SCCore.SCInGameAchievementsManagerBlueprintHelper
// 0x0000 (0x0028 - 0x0028)
class USCInGameAchievementsManagerBlueprintHelper final : public UBlueprintFunctionLibrary
{
public:
	static class UAchievementUnlockCondition* BPF_GetAchievementConditionFromTag(const struct FGameplayTag& _achievementTag);
	static class USCInGameAchievementsManagerSettings* BPF_GetAchievementManagerSettings();
	static TArray<class UAchievementUnlockCondition*> BPF_GetAllAchievementsToUnlock();
	static TArray<class UAchievementUnlockCondition*> BPF_GetCurrentAchievementsToUnlock();
	static struct FGameplayTagContainer BPF_GetObjectsNewlyUnlocked(const struct FGameplayTag& _newlyUnlockCategory);
	static bool BPF_GetObjectUnlockInfo(const struct FGameplayTag& _objectTag, struct FAchievementUnlockConditionStruct* _outObjectUnlockCondition);
	static bool BPF_IsAchievementUnlocked(const struct FGameplayTag& _achievementTag);
	static bool BPF_IsObjectNewlyUnlocked(const struct FGameplayTag& _newlyUnlockedCategory, const struct FGameplayTag& _objectTag);
	static bool BPF_IsObjectUnlocked(const struct FGameplayTag& _objectTag);
	static void BPF_OnMatchEnded(bool _bHasWon);
	static void BPF_RemoveObjectFromNewlyUnlocked(const struct FGameplayTag& _newlyUnlockedCategory, const struct FGameplayTag& _objectToRemove);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCInGameAchievementsManagerBlueprintHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCInGameAchievementsManagerBlueprintHelper")
	}
	static class USCInGameAchievementsManagerBlueprintHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCInGameAchievementsManagerBlueprintHelper>();
	}
};
DUMPER7_ASSERTS_USCInGameAchievementsManagerBlueprintHelper;

// Class SCCore.SCInGameAchievementsManagerSettings
// 0x00C0 (0x00E8 - 0x0028)
class USCInGameAchievementsManagerSettings final : public UObject
{
public:
	TArray<struct FAchievementUnlockConditionSet> m_InGameAchievements;                              // 0x0028(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FAchievementUnlockConditionSet> m_OnInitAchievements;                              // 0x0038(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FAchievementUnlockConditionSet> m_OnEntitlementQueryCompletedAchievements;         // 0x0048(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FAchievementUnlockConditionSet> m_OnSaveLoadedAchievements;                        // 0x0058(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_NewlyUnlockedCategories;                         // 0x0068(0x0020)(Edit, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FAchievementUnlockConditionStruct> m_Unlocks;                   // 0x0088(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayTag& _objectUnlockedTag)> m_OnObjectUnlocked; // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCInGameAchievementsManagerSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCInGameAchievementsManagerSettings")
	}
	static class USCInGameAchievementsManagerSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCInGameAchievementsManagerSettings>();
	}
};
DUMPER7_ASSERTS_USCInGameAchievementsManagerSettings;

// Class SCCore.SCInputComponent
// 0x0150 (0x0290 - 0x0140)
class USCInputComponent final : public UInputComponent
{
public:
	uint8                                         Pad_140[0x150];                                    // 0x0140(0x0150)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BPF_ListenForSCInputAction(class USCInputAction* _inAction, EInputWatchTrigger _eWatchTrigger, bool _bPassive, bool bConsume, TDelegate<void(const class USCInputAction* _inputAction, const struct FInputActionState& _listenerState)> _callback, int32 _iPriority);
	void BPF_StopListeningForSCInputAction(class USCInputAction* _inAction, EInputWatchTrigger _eWatchTrigger, TDelegate<void(const class USCInputAction* _inputAction, const struct FInputActionState& _listenerState)> _callback);
	void BPF_StopListeningForSCInputActionByID(int32 _iListenerID);

	bool BPF_GetListenerState(int32 _iListenerID, struct FInputActionState* _outState) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCInputComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCInputComponent")
	}
	static class USCInputComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCInputComponent>();
	}
};
DUMPER7_ASSERTS_USCInputComponent;

// Class SCCore.SCInstancedStructHelpers
// 0x0000 (0x0028 - 0x0028)
class USCInstancedStructHelpers final : public UObject
{
public:
	static void GetInstancedStructValuePure(const struct FInstancedStruct& InstancedStruct, int32* Value);
	static struct FInstancedStruct MakeInstancedStructPure(const int32& Value);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCInstancedStructHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCInstancedStructHelpers")
	}
	static class USCInstancedStructHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCInstancedStructHelpers>();
	}
};
DUMPER7_ASSERTS_USCInstancedStructHelpers;

// Class SCCore.SCLDCameraActor
// 0x0818 (0x0AF0 - 0x02D8)
class ASCLDCameraActor : public ASCActor
{
public:
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimalViewInfo                       m_ViewInfoFallback;                                // 0x02E0(0x0800)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_AE0[0x10];                                     // 0x0AE0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_SwitchToGameplayCamera();
	bool BPE_SwitchToLDCamera(const class AActor* _actorToFollowRef, const class AActor* _actorToLookAtRef, TSubclassOf<class USCCameraData> _overrideCamera);
	bool BPF_EnsureBlackBoardKeyIsValid(const class FName& _keyName);
	void BPF_GetPlayerCamera(class USCCameraComponent** _outCameraComponentRef);
	void BPF_GetPlayerCameraBlackBoard(class UBlackboardComponent** _outCameraBlackBoardRef);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLDCameraActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLDCameraActor")
	}
	static class ASCLDCameraActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCLDCameraActor>();
	}
};
DUMPER7_ASSERTS_ASCLDCameraActor;

// Class SCCore.SCLevelScriptActor
// 0x0008 (0x02C0 - 0x02B8)
class ASCLevelScriptActor : public ALevelScriptActor
{
public:
	bool                                          m_bContainsSaveData;                               // 0x02B8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnLevelSequenceSkipped(class ASCLevelSequenceActor* _levelSequenceActor);
	void BPE_OnUpdatedFromSave();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLevelScriptActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLevelScriptActor")
	}
	static class ASCLevelScriptActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCLevelScriptActor>();
	}
};
DUMPER7_ASSERTS_ASCLevelScriptActor;

// Class SCCore.SCLevelSequenceHelpers
// 0x0000 (0x0028 - 0x0028)
class USCLevelSequenceHelpers final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLevelSequenceHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLevelSequenceHelpers")
	}
	static class USCLevelSequenceHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCLevelSequenceHelpers>();
	}
};
DUMPER7_ASSERTS_USCLevelSequenceHelpers;

// Class SCCore.SCLevelSequencePlayer
// 0x0038 (0x0600 - 0x05C8)
class USCLevelSequencePlayer final : public ULevelSequencePlayer
{
public:
	uint8                                         Pad_5C8[0x38];                                     // 0x05C8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsSkippable() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLevelSequencePlayer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLevelSequencePlayer")
	}
	static class USCLevelSequencePlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCLevelSequencePlayer>();
	}
};
DUMPER7_ASSERTS_USCLevelSequencePlayer;

// Class SCCore.SCListViewWidget
// 0x0088 (0x0410 - 0x0388)
class USCListViewWidget : public UUserWidget
{
public:
	TMulticastInlineDelegate<void()>              OnElementsChanged;                                 // 0x0388(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSCUserWidgetInstance                  m_WidgetTemplateClass;                             // 0x0398(0x0010)(Edit, DisableEditOnTemplate, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                         m_iMaxElements;                                    // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         m_iMinElements;                                    // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bLoopSelection;                                  // 0x03B0(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bSelectFirstItemOnSourceChange;                  // 0x03B1(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USCViewModel*>                   m_Sources;                                         // 0x03B8(0x0010)(BlueprintVisible, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                         m_iSelectedIndex;                                  // 0x03C8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USCViewModel*                           m_SelectedSource;                                  // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCViewModel*                           m_HoveredSource;                                   // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCUserWidget*                          m_SelectedWidget;                                  // 0x03E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCUserWidget*                          m_HoveredWidget;                                   // 0x03E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bExpandSelectedItem;                             // 0x03F0(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bCollapseDeselectedItem;                         // 0x03F1(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F2[0xE];                                      // 0x03F2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCUserWidget>              m_WidgetTemplate;                                  // 0x0400(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bExpandableWidgetTemplate;                       // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_ResetSelectedChild();
	void BPF_SelectNextChild();
	void BPF_SelectPreviousChild();
	void BPF_SetMaxElements(int32 _iNum);
	void BPF_SetMinElements(int32 _iNum);
	void BPF_SetSelectedChildAt(int32 _iIndex);
	void BPF_SetSources(const TArray<class USCViewModel*>& _source);
	void OnChildClicked(class USCButtonUserWidget* _button, bool _bWithMouse);
	void OnChildFocusLost(class USCUserWidget* _widget, EFocusCause _eCause);
	void OnChildFocusReceived(class USCUserWidget* _widget, EFocusCause _eCause);

	void BPF_GetElementsWidgets(TArray<class USCUserWidget*>* _widgets) const;
	class UPanelWidget* BPF_GetRootPanel() const;
	class USCUserWidget* BPF_GetWidgetAt(int32 _iIndex) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCListViewWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCListViewWidget")
	}
	static class USCListViewWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCListViewWidget>();
	}
};
DUMPER7_ASSERTS_USCListViewWidget;

// Class SCCore.SCLocalPlayer
// 0x00E8 (0x03E8 - 0x0300)
class USCLocalPlayer final : public UCommonLocalPlayer
{
public:
	uint8                                         Pad_300[0xE8];                                     // 0x0300(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLocalPlayer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLocalPlayer")
	}
	static class USCLocalPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCLocalPlayer>();
	}
};
DUMPER7_ASSERTS_USCLocalPlayer;

// Class SCCore.SCLocomotionTransitionMetaData
// 0x0018 (0x0040 - 0x0028)
class USCLocomotionTransitionMetaData final : public UAnimMetaData
{
public:
	struct FSCTransition                          m_Transition;                                      // 0x0028(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCLocomotionTransitionMetaData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCLocomotionTransitionMetaData")
	}
	static class USCLocomotionTransitionMetaData* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCLocomotionTransitionMetaData>();
	}
};
DUMPER7_ASSERTS_USCLocomotionTransitionMetaData;

// Class SCCore.SCAnimLookAtHelpers
// 0x0000 (0x0028 - 0x0028)
class USCAnimLookAtHelpers final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_ResetTargetTimers(struct FSCAnimLookAtHandler& _handler);
	static void BPF_SetRawTarget(struct FSCAnimLookAtHandler& _handler, const struct FSCLookAtTargetEnumHandler& _eTargetType, class AActor* _target);
	static void BPF_SetTargetDynamicGetter(struct FSCAnimLookAtHandler& _handler, const struct FSCLookAtTargetEnumHandler& _eTargetType, const TDelegate<const class AActor*()>& _getter);
	static void BPF_UseTargetDefaultData(struct FSCAnimLookAtHandler& _handler, const struct FSCLookAtTargetEnumHandler& _eTargetType);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCAnimLookAtHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCAnimLookAtHelpers")
	}
	static class USCAnimLookAtHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAnimLookAtHelpers>();
	}
};
DUMPER7_ASSERTS_USCAnimLookAtHelpers;

// Class SCCore.SCMapInheritanceSubsystem
// 0x00F8 (0x0248 - 0x0150)
class USCMapInheritanceSubsystem final : public USCSubsystem
{
public:
	bool                                          m_bIsMapInheritanceDefaultEnabled;                 // 0x0150(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bIsMapInheritanceEnabled;                        // 0x0151(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FName>                             m_DebugBreakOnSerializeObjects;                    // 0x0158(0x0050)(Edit, Config, NativeAccessSpecifierPrivate)
	TSet<class FName>                             m_DebugBreakOnPostLoadObjects;                     // 0x01A8(0x0050)(Edit, Config, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F8[0x50];                                     // 0x01F8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCMapInheritanceSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCMapInheritanceSubsystem")
	}
	static class USCMapInheritanceSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCMapInheritanceSubsystem>();
	}
};
DUMPER7_ASSERTS_USCMapInheritanceSubsystem;

// Class SCCore.SCBlendFloatCurveMaterialSubsystemParam
// 0x0088 (0x00B8 - 0x0030)
class USCBlendFloatCurveMaterialSubsystemParam final : public USCBlendMaterialSubsystemParam
{
public:
	struct FRuntimeFloatCurve                     m_Curve;                                           // 0x0030(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBlendFloatCurveMaterialSubsystemParam")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBlendFloatCurveMaterialSubsystemParam")
	}
	static class USCBlendFloatCurveMaterialSubsystemParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBlendFloatCurveMaterialSubsystemParam>();
	}
};
DUMPER7_ASSERTS_USCBlendFloatCurveMaterialSubsystemParam;

// Class SCCore.SCBlendMaterialContainerSubsystemParam
// 0x0010 (0x0038 - 0x0028)
class USCBlendMaterialContainerSubsystemParam final : public USCBaseBlendMaterialSubsystemParam
{
public:
	TArray<struct FSCBlendMaterialSubsystemParamInstance> m_Params;                                  // 0x0028(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCBlendMaterialContainerSubsystemParam")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCBlendMaterialContainerSubsystemParam")
	}
	static class USCBlendMaterialContainerSubsystemParam* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCBlendMaterialContainerSubsystemParam>();
	}
};
DUMPER7_ASSERTS_USCBlendMaterialContainerSubsystemParam;

// Class SCCore.SCMaterialSubsystem
// 0x1800 (0x1960 - 0x0160)
class USCMaterialSubsystem final : public USCWorldSubsystem
{
public:
	uint8                                         Pad_160[0x1800];                                   // 0x0160(0x1800)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BPF_Blend_MaterialParameter(class UObject* _owner, class UMaterialInstanceDynamic* _material, const struct FSCBlendMaterialSubsystemParamInstance& _params, TDelegate<void()> _onFinished);
	static void BPF_Blend_Stop(class UObject* _owner, class UMaterialInstanceDynamic* _material, bool _bBroacastFinishEvent, bool _bLastUpdateAtEndTime);
	static bool BPF_IsBlending_MaterialParameter(class UObject* _owner, class UMaterialInstanceDynamic* _material);
	static void BPF_Set_MaterialParameter(class UObject* _owner, class UMaterialInstanceDynamic* _material, const struct FSCBlendMaterialSubsystemParamInstance& _params, float _fWantedTime, TDelegate<void()> _onFinished);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCMaterialSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCMaterialSubsystem")
	}
	static class USCMaterialSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCMaterialSubsystem>();
	}
};
DUMPER7_ASSERTS_USCMaterialSubsystem;

// Class SCCore.SCMathTools
// 0x0000 (0x0028 - 0x0028)
class USCMathTools final : public UBlueprintFunctionLibrary
{
public:
	static void AngleBetweenVector(double* _fHorizontalAngle, double* _fVerticalAngle, const struct FVector& _v1Normalized, const struct FVector& _v2Normalized);
	static double AngleBetweenVectorAbsolute(const struct FVector& _v1Normalized, const struct FVector& _v2Normalized, const struct FVector& _vAxisNormalized);
	static double AngleBetweenVectorHorizontal(const struct FVector& _v1Normalized, const struct FVector& _v2Normalized);
	static struct FVector BPF_ClampHorizontalVectorAngle(const struct FVector& _vFrom, const struct FVector& _vDir, float _fMinAngleDeg, float _fMaxAngleDeg);
	static int32 BPF_ClearBitMaskFromIndex(int32 _iBitMask, uint8 _iBitIndex);
	static int64 BPF_ClearBitMaskFromIndex_64(int64 _iBitMask, uint8 _iBitIndex);
	static int32 BPF_ComputeIncrementedIndexInArray(const int32 _iArrayNum, const int32 _iCurrentIndex, int32 _iIncrementCount);
	static int32 BPF_CreateBitMaskFromIndex(uint8 _iBitIndex);
	static int64 BPF_CreateBitMaskFromIndex_64(uint8 _iBitIndex);
	static float BPF_GaussRand(float _fSigma);
	static void BPF_GetBoundFromFloatRange(const struct FFloatRange& _FloatRange, float* _fOutLowerBoundValue, float* _fOutUpperBoundValue);
	static float BPF_GetFloatValue(const struct FRuntimeFloatCurve& _curve, float _fTime);
	static struct FVector2D BPF_GetLocationAsSphericalUV(const struct FVector& _vLocation);
	static void BPF_GetRotatorEulerInDouble(const struct FRotator& _inRotation, double* _dRoll, double* _dPitch, double* _dYaw);
	static float BPF_GetSplineRatioFromLocation(const struct FVector& _vLocation, const class USplineComponent* _spline, float _fRangeMin, float _fRangeMax);
	static struct FVector BPF_GetVectorValue(const struct FRuntimeVectorCurve& _curve, float _fTime);
	static bool BPF_HasBit(int32 _iBitMask, uint8 _iBitIndex);
	static bool BPF_HasBit_64(int64 _iBitMask, uint8 _iBitIndex);
	static bool BPF_IsPointInsideEllipse(const struct FTransform& _ellipseTransform, const struct FVector2D& _vEllipseSize, const struct FVector& _vPointLocation, float _fPointRadius);
	static struct FFloatRange BPF_MakeLowerBoundFloatRange(float _fLowerBound);
	static struct FFloatRange BPF_MakeOpenFloatRange();
	static struct FFloatRange BPF_MakeUpperBoundFloatRange(float _fUpperBound);
	static int32 BPF_RandomWithWeight(const TArray<float>& _weights, const struct FRandomStream& _inOutStream);
	static int32 BPF_SetBitMaskFromIndex(int32 _iBitMask, uint8 _iBitIndex);
	static int64 BPF_SetBitMaskFromIndex_64(int64 _iBitMask, uint8 _iBitIndex);
	static float ComputeBlendRatio(float _fRatio, ESCBlendType _eBlendType, class UCurveFloat* _blendCurve);
	static ESCCardinalPoints ComputeCardinalPoint(const struct FVector& _vRefDir, const struct FVector& _vOtherVector);
	static ESCCardinalPoints ComputeCardinalPointEastWest(const struct FVector& _vRefDir, const struct FVector& _vOtherVector);
	static ESCCardinalPoints ComputeCardinalPointWithCustomAngles(const struct FVector& _vRefDir, const struct FVector& _vOtherVector, float _fNorthAngleDeg, float _fSouthAngleDeg);
	static float Cursorized(float _fValue, float _fLeftMargin, float _fRightMargin, bool _bClamp);
	static double FloatCriticalSpringInterp(double _fCurrent, const double& _fTarget, double& _fInOutVelocity, double _fSpeedFactor, float _fDeltaTime);
	static double GetAngle2Pi(double _dAngle);
	static ESCRotationWay GetAngleBlendWay(float _fSource, float _fDest);
	static double GetAngleNegPiToPi(double _dAngle);
	static float GetBlendAngle(float _fSource, float _fDest, float _fBlendCoef);
	static double GetBlendAngleForceWay(double _dSource, double _dDest, float _fBlendCoef, ESCRotationWay _eBlendWay, int32 _iExtra2Pi);
	static double GetDestinationAngleForceWay(double _dSource, double _dDest, ESCRotationWay _eBlendWay, int32 _iExtra2Pi);
	static double GetDiffAngleForceWay(double _dSource, double _dDest, ESCRotationWay _eBlendWay);
	static struct FVector GetGlobalToLocal(const struct FQuat& _qBase, const struct FVector& _vGlobal);
	static struct FVector GetGlobalToLocalRotator(const struct FRotator& _rotator, const struct FVector& _vGlobal);
	static void GetLocalLookAtYaw(const struct FVector& _fLookAtDirection, const float& _fRefBoneYawInDegrees, float _fMaxAngleInDegrees, bool _bAlwaysLookAt, float* _fOutLocalYaw, bool* _bOutIsLookAtValid);
	static struct FVector GetLocalToGlobal(const struct FQuat& _qBase, const struct FVector& _vLocal);
	static struct FVector GetLocalToGlobalRotator(const struct FRotator& _rotator, const struct FVector& _vLocal);
	static struct FPlane GetPlaneFromDir(const struct FVector& _vLocation, const struct FVector& _vDir, float _fMaxSlopeAngleInRad);
	static struct FVector GetPositionGlobalToLocal(const struct FTransform& _transformBase, const struct FVector& _globalLocation);
	static struct FVector GetPositionLocalToGlobal(const struct FTransform& _transformBase, const struct FVector& _localLocation);
	static struct FQuat GetQuat(const struct FTransform& _transform);
	static struct FQuat GetQuatGlobalToLocal(const struct FQuat& _qBase, const struct FQuat& _qGlobal);
	static struct FQuat GetQuatLocalToGlobal(const struct FQuat& _qBase, const struct FQuat& _qLocal);
	static struct FTransform GetTransformGlobalToLocal(const struct FTransform& _transformBase, const struct FTransform& _globalTransform, bool _bWithScale);
	static struct FTransform GetTransformLocalToGlobal(const struct FTransform& _transformBase, const struct FTransform& _localTransform, bool _bWithScale);
	static bool IntersectionCircleCircle(struct FVector2D* _vOutPointA, struct FVector2D* _vOutPointB, const struct FVector2D& _vCenter1, const float _fRadius1, const struct FVector2D& _vCenter2, const float _fRadius2);
	static bool IntersectionLineSphereIntersection(struct FVector* _vOutIntersection1, struct FVector* _vOutIntersection2, const struct FVector& _vLineDeltaPosition, const struct FVector& _vLineDirNormalized, const struct FVector& _vSphereOrigin, const float _fSphereRadius, bool _bIgnoreNegativeDot);
	static bool IntersectionSegmentSphereIntersection(struct FVector* _vOutIntersection1, struct FVector* _vOutIntersection2, const struct FVector& _vStart, const struct FVector& _vDirNormalized, float _vLength, const struct FVector& _vSphereOrigin, const float _fSphereRadius);
	static bool IsBetween(float _fValue, float _fBound1, float _fBound2, bool _bInclusive, float _fTolerance);
	static bool IsGreaterWithEpsilon(float _fValueA, float _fValueB, float _fTolerance);
	static bool IsLesserWithEpsilon(float _fValueA, float _fValueB, float _fTolerance);
	static bool IsNearlyGreaterOrEqual(float _fValueA, float _fValueB, float _fTolerance);
	static bool IsNearlyLesserOrEqual(float _fValueA, float _fValueB, float _fTolerance);
	static struct FTransform LerpTransform(const struct FTransform& _a, const struct FTransform& _b, float _fAlpha);
	static struct FVector ProjectPointOnLine(const struct FVector& _vA, const struct FVector& _vDir, const struct FVector& _vPointToTest);
	static struct FVector ProjectPointOnSegment(const struct FVector& _vA, const struct FVector& _vB, const struct FVector& _vPointToTest);
	static ESCCardinalPoints RotateCardinalPoint(const ESCCardinalPoints _eCardinalPoint, const int32 _iClockwiseSteps);
	static struct FQuat Rotator_Quat(const struct FRotator& _rot);
	static struct FVector4 SelectVector4(const struct FVector4& _vA, const struct FVector4& _vB, bool _bSelectA);
	static struct FVector VectorCriticalSpringInterp(const struct FVector& _vCurrent, const struct FVector& _vTarget, struct FVector& _vInOutVelocity, double _fSpeedFactor, float _fDeltaTime);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCMathTools")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCMathTools")
	}
	static class USCMathTools* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCMathTools>();
	}
};
DUMPER7_ASSERTS_USCMathTools;

// Class SCCore.SCMenuAction
// 0x0050 (0x0078 - 0x0028)
class USCMenuAction : public UObject
{
public:
	bool                                          m_bTriggerOnlyOnActiveLayer;                       // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iPriority;                                       // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEnabled;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bDisplayShorcut;                                 // 0x0031(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bShowName;                                       // 0x0032(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_DisplayNameText;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          m_bShowInParentMenu;                               // 0x0048(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iDisplayOrder;                                   // 0x004C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOnlyDisplayWhileOnFocusPath;                    // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_DisplayNameOverrideWhileOnFocusPath;             // 0x0058(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FString                                 m_DisplayName;                                     // 0x0068(0x0010)(ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BPE_OnActionTriggered(class UObject* _worldContext, class USCUserWidget* _instigator) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCMenuAction")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCMenuAction")
	}
	static class USCMenuAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCMenuAction>();
	}
};
DUMPER7_ASSERTS_USCMenuAction;

// Class SCCore.SCMenuComponent
// 0x00D0 (0x0188 - 0x00B8)
class USCMenuComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(TSubclassOf<class USCMenuWidget> _ePrevMenu, TSubclassOf<class USCMenuWidget> _eNewMenu)> OnCurrentMenuChanged; // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGlobalMenuContextViewModel*            m_MenuContext;                                     // 0x00C8(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bLoadMenusAsync;                                 // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class USCMenuWidget>>      m_eMenuListPreventingInGameMenu;                   // 0x00D8(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<TSubclassOf<class USCMenuWidget>, class USCMenuWidget*> m_MenuInstances;                    // 0x00E8(0x0050)(ExportObject, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMenuStackInfos>                m_MenuStack;                                       // 0x0138(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_148[0x40];                                     // 0x0148(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPE_OnCurrentMenuChanged(TSubclassOf<class USCMenuWidget> _prevMenu, TSubclassOf<class USCMenuWidget> _newMenu);
	void BPF_ClearMenuStack();
	class USCMenuWidget* BPF_GetOrCreateMenuInstance(TSubclassOf<class USCMenuWidget> _menuClass);
	void BPF_PopMenu();
	void BPF_PopMenuStack(TSubclassOf<class USCMenuWidget> _menuEnum, bool _bIncluded);
	class USCMenuWidget* BPF_PushMenu(TSubclassOf<class USCMenuWidget> _menu, bool _bSetUIInputMode, class UPanelWidget* _container);
	void BPF_RemoveMenuFromStack(TSubclassOf<class USCMenuWidget> _menuEnum);
	void BPF_SetCurrentMenu(TSubclassOf<class USCMenuWidget> _menuEnum);
	void BPF_SetUIInputModeEnabled(TSubclassOf<class USCMenuWidget> _menu, bool _bEnabled);
	void OnTransitionOutFinished(class USCMenuWidget* _menu);

	TSubclassOf<class USCMenuWidget> BPF_GetCurrentMenu() const;
	class USCMenuWidget* BPF_GetMenuInstance(TSubclassOf<class USCMenuWidget> _menuEnum) const;
	class USCMenuWidget* BPF_GetParentMenu(TSubclassOf<class USCMenuWidget>* _outMenuEnum, int32 _iOffset) const;
	TSubclassOf<class USCMenuWidget> BPF_GetTopMenu() const;
	class USCMenuWidget* BPF_GetTopMenuInstance() const;
	bool BPF_IsMenuInStack(TSubclassOf<class USCMenuWidget> _menuClass) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCMenuComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCMenuComponent")
	}
	static class USCMenuComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCMenuComponent>();
	}
};
DUMPER7_ASSERTS_USCMenuComponent;

// Class SCCore.SCMoviePipelineGameMode
// 0x0000 (0x0428 - 0x0428)
class ASCMoviePipelineGameMode final : public ASCGameMode
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCMoviePipelineGameMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCMoviePipelineGameMode")
	}
	static class ASCMoviePipelineGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCMoviePipelineGameMode>();
	}
};
DUMPER7_ASSERTS_ASCMoviePipelineGameMode;

// Class SCCore.SCMovieSceneHelpers
// 0x0000 (0x0028 - 0x0028)
class USCMovieSceneHelpers final : public UBlueprintFunctionLibrary
{
public:
	static TArray<struct FMovieSceneObjectBindingID> BPF_GetBindingIDsFromName(const class UMovieSceneSequence* _rootSequence, class FName _bindingName);
	static bool BPF_IsSkippingPlayer(class UMovieSceneSequencePlayer* _player);
	static void BPF_SkipSequence(class UMovieSceneSequencePlayer* _player, float _fEndOffset, bool _bStopAtCinematicModeEnded);
	static void BPF_UnbindActor(const class ULevelSequenceDirector* _director, class AActor* _actor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCMovieSceneHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCMovieSceneHelpers")
	}
	static class USCMovieSceneHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCMovieSceneHelpers>();
	}
};
DUMPER7_ASSERTS_USCMovieSceneHelpers;

// Class SCCore.SCNetBlendingFloatLibrary
// 0x0000 (0x0028 - 0x0028)
class USCNetBlendingFloatLibrary final : public UBlueprintFunctionLibrary
{
public:
	static float BPF_GetNetBlendingFloatValue(const struct FSCNetBlendingFloat& _inNetBlendingFloat, float _fTime);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCNetBlendingFloatLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCNetBlendingFloatLibrary")
	}
	static class USCNetBlendingFloatLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCNetBlendingFloatLibrary>();
	}
};
DUMPER7_ASSERTS_USCNetBlendingFloatLibrary;

// Class SCCore.SCPerformanceTelemetry
// 0x0168 (0x02B8 - 0x0150)
class USCPerformanceTelemetry : public USCSubsystem
{
public:
	uint8                                         Pad_150[0x60];                                     // 0x0150(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCTelemetryThreadThreshold>    m_SnapshotThresholds;                              // 0x01B0(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<struct FSCTelemetryThreadThreshold>    m_SnapshotThresholdsServer;                        // 0x01C0(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D0[0x10];                                     // 0x01D0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fFirstSnapshotDelay;                             // 0x01E0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         m_iSnapshotFramesDelay;                            // 0x01E4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                           m_SkipZeroCSVStatNames;                            // 0x01E8(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F8[0x30];                                     // 0x01F8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fCSVFrameTimeHitchThreshold;                     // 0x0228(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_22C[0x8C];                                     // 0x022C(0x008C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BPF_CsvEvent(const class FString& _name);
	static bool BPF_IsPerfSessionRunning();
	static void BPF_StartPerfSession(const class FString& _name, ESCTelemetryExternalProfiler _eExternalProfiler);
	static void BPF_StopPerfSession();

	void BPF_PauseInsightProfile();
	void BPF_ResumeInsightProfile();
	void BPF_StartInsightToFile(const class FString& _file);
	void BPF_StartInsightToNetwork(const class FString& _host);
	void BPF_StartSuperluminalCapture(int32 _iMaxDuration);
	void BPF_StopInsightProfile();

	bool BPF_IsInsightProfiling() const;
	bool BPF_IsSuperluminalCaptureRunning() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPerformanceTelemetry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPerformanceTelemetry")
	}
	static class USCPerformanceTelemetry* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPerformanceTelemetry>();
	}
};
DUMPER7_ASSERTS_USCPerformanceTelemetry;

// Class SCCore.SCPlayerCameraManager
// 0x0010 (0x24F0 - 0x24E0)
class ASCPlayerCameraManager : public APlayerCameraManager
{
public:
	TArray<struct FTViewTarget>                   m_ForcedViewTargetToUpdateUnderneath;              // 0x24D8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_24E8[0x8];                                     // 0x24E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPossessedPawnChanged(class APawn* _oldPawn, class APawn* _newPawn);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPlayerCameraManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPlayerCameraManager")
	}
	static class ASCPlayerCameraManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCPlayerCameraManager>();
	}
};
DUMPER7_ASSERTS_ASCPlayerCameraManager;

// Class SCCore.SCPlayerInput
// 0x01C8 (0x0660 - 0x0498)
class USCPlayerInput final : public UPlayerInput
{
public:
	uint8                                         Pad_498[0x1C8];                                    // 0x0498(0x01C8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BPF_SwapPIEControllers(bool _bReverse);

	class UInputConditionData* BPF_GetInputDataForAction(class USCInputAction* _eAction) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPlayerInput")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPlayerInput")
	}
	static class USCPlayerInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPlayerInput>();
	}
};
DUMPER7_ASSERTS_USCPlayerInput;

// Class SCCore.SCPlayersScoreSubsystem
// 0x0120 (0x0270 - 0x0150)
class USCPlayersScoreSubsystem : public USCSubsystem
{
public:
	TSoftClassPtr<class UClass>                   m_ScoreRecordingGameState;                         // 0x0150(0x0028)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSCScoreEventInfos>             m_Events;                                          // 0x0178(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         m_uiMaxLocalPlayerGameSaved;                       // 0x0190(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerScoreGlobalContainerViewModel*   m_GlobalViewModel;                                 // 0x0198(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPlayerScoreViewModel*>          m_LocalPlayerSavedGameScores;                      // 0x01A0(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, class USCPlayerScoreEventHistory*> m_IDToHistory;                              // 0x01B0(0x0050)(Edit, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_200[0x50];                                     // 0x0200(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class USCStatControllerBase>> m_StatClasses;                                  // 0x0250(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSubclassOf<class AGameStateBase>             m_TransientScoreRecordingGameState;                // 0x0260(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnClientPlayerInitialReplication(class ASCPlayerState* _playerState);
	void OnIsSpectatorReplicated(class ASCPlayerState* _playerState);

	struct FSCScoreEventInfos BPF_GetScoreEventInfos(const TSoftClassPtr<class UClass>& _softStatClass) const;
	int32 BPF_GetScoreFromEvent(const TSoftClassPtr<class UClass>& _softStatClass) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPlayersScoreSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPlayersScoreSubsystem")
	}
	static class USCPlayersScoreSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPlayersScoreSubsystem>();
	}
};
DUMPER7_ASSERTS_USCPlayersScoreSubsystem;

// Class SCCore.SCPlayerStart
// 0x0048 (0x0328 - 0x02E0)
class ASCPlayerStart : public APlayerStart
{
public:
	TMulticastInlineDelegate<void(class AActor* _spawned)> m_OnSpawn;                                // 0x02E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FRotator                               m_CameraRotation;                                  // 0x02F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  m_PlayerStartGameplayTag;                          // 0x0308(0x0020)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPlayerStart")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPlayerStart")
	}
	static class ASCPlayerStart* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCPlayerStart>();
	}
};
DUMPER7_ASSERTS_ASCPlayerStart;

// Class SCCore.SCPlayerState
// 0x0310 (0x0678 - 0x0368)
class ASCPlayerState : public APlayerState
{
public:
	TMulticastInlineDelegate<void(class ASCPlayerState* _playerState)> m_OnUniqueNetIdReplicated;    // 0x0368(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ASCPlayerState* _playerState)> m_OnPlayerNameReplicated;     // 0x0378(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ASCPlayerState* _playerState)> m_OnInitialReplication;       // 0x0388(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ASCPlayerState* _playerState)> m_OnIsSpectatorReplicated;    // 0x0398(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class ASCPlayerState* _playerState, const TSoftClassPtr<class UClass>& _scoreSoftStatClass)> m_OnScoreEventTriggered; // 0x03A8(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B8[0x48];                                     // 0x03B8(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCNetScoreEventCounterContainer       m_EventCounter;                                    // 0x0400(0x0128)(Edit, Net, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FSCRawStatContainer                    m_AllRawStats;                                     // 0x0528(0x0128)(Edit, Net, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	class FString                                 m_ServicesID;                                      // 0x0650(0x0010)(Edit, Net, ZeroConstructor, Transient, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_ServicesConnectionID;                            // 0x0660(0x0010)(Edit, Net, ZeroConstructor, Transient, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_670[0x8];                                      // 0x0670(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPlayerState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPlayerState")
	}
	static class ASCPlayerState* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCPlayerState>();
	}
};
DUMPER7_ASSERTS_ASCPlayerState;

// Class SCCore.SCPlayerVolume
// 0x0010 (0x0360 - 0x0350)
class ASCPlayerVolume final : public ASCVolume
{
public:
	FMulticastSparseDelegateProperty_             OnPlayerBeginOverlap;                              // 0x0350(0x0001)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastSparseDelegateProperty_             OnPlayerEndOverlap;                                // 0x0351(0x0001)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AActor>                  m_PlayerOverlapping;                               // 0x0354(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPlayerVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPlayerVolume")
	}
	static class ASCPlayerVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCPlayerVolume>();
	}
};
DUMPER7_ASSERTS_ASCPlayerVolume;

// Class SCCore.SCPlayerVolumeActor
// 0x0000 (0x02B8 - 0x02B8)
class ASCPlayerVolumeActor final : public ASCVolumeActor
{
public:
	class USCPlayerVolumeComponent* BPF_GetPlayerVolumeComponent() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPlayerVolumeActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPlayerVolumeActor")
	}
	static class ASCPlayerVolumeActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCPlayerVolumeActor>();
	}
};
DUMPER7_ASSERTS_ASCPlayerVolumeActor;

// Class SCCore.SCPlayerVolumeComponent
// 0x0010 (0x0640 - 0x0630)
class USCPlayerVolumeComponent final : public USCVolumeComponent
{
public:
	FMulticastSparseDelegateProperty_             OnPlayerBeginOverlap;                              // 0x0628(0x0001)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastSparseDelegateProperty_             OnPlayerEndOverlap;                                // 0x0629(0x0001)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_62A[0x2];                                      // 0x062A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AActor>                  m_PlayerOverlapping;                               // 0x062C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_634[0xC];                                      // 0x0634(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPlayerVolumeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPlayerVolumeComponent")
	}
	static class USCPlayerVolumeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPlayerVolumeComponent>();
	}
};
DUMPER7_ASSERTS_USCPlayerVolumeComponent;

// Class SCCore.SCPoolableActor
// 0x0000 (0x0000 - 0x0000)
class ISCPoolableActor final
{
public:
	void OnPoolablePostInitializeComponents();
	void OnPoolablePostUninitializeComponents();
	void OnPoolablePreInitializeComponents();
	void OnPoolablePreUninitializeComponents();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPoolableActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPoolableActor")
	}
	static class ISCPoolableActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISCPoolableActor>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISCPoolableActor;

// Class SCCore.SCPoolableActorComponent
// 0x0000 (0x0000 - 0x0000)
class ISCPoolableActorComponent final
{
public:
	void OnPoolableOwnerInitializeComponents();
	void OnPoolableOwnerUninitializeComponents();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPoolableActorComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPoolableActorComponent")
	}
	static class ISCPoolableActorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISCPoolableActorComponent>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ISCPoolableActorComponent;

// Class SCCore.SCPoolHelpers
// 0x0000 (0x0028 - 0x0028)
class USCPoolHelpers final : public UBlueprintFunctionLibrary
{
public:
	static void BPF_DestroyPoolableActor(class AActor* _actor, bool* _bOutWasPooled);
	static void BPF_GetPoolContextInfos(class UClass* _class, int32* _iActiveCount, int32* _iInativeActiveCount);
	static bool BPF_IsActorPooled(const class AActor* _actor, bool* _bOutIsActive);
	static bool BPF_IsActorValid(const class AActor* _actor);
	static class AActor* BPF_SpawnPoolableActor(class AActor* _worldCtxt, class UClass* _class, const struct FTransform& _transform, class FName _poolName, bool _bGrow, bool _bFailIfNoPoolFound);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPoolHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPoolHelpers")
	}
	static class USCPoolHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPoolHelpers>();
	}
};
DUMPER7_ASSERTS_USCPoolHelpers;

// Class SCCore.SCPoolLevelScriptActor
// 0x0000 (0x02C0 - 0x02C0)
class ASCPoolLevelScriptActor final : public ASCLevelScriptActor
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPoolLevelScriptActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPoolLevelScriptActor")
	}
	static class ASCPoolLevelScriptActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCPoolLevelScriptActor>();
	}
};
DUMPER7_ASSERTS_ASCPoolLevelScriptActor;

// Class SCCore.SCPopupWidget
// 0x0000 (0x0C60 - 0x0C60)
class USCPopupWidget : public USCMenuWidget
{
public:
	void OnPopupValidated(const struct FGameplayTag& _tag, const class USCInputAction* _inputAction);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPopupWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPopupWidget")
	}
	static class USCPopupWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPopupWidget>();
	}
};
DUMPER7_ASSERTS_USCPopupWidget;

// Class SCCore.SCPopupWidgetComponent
// 0x0100 (0x0128 - 0x0028)
class USCPopupWidgetComponent final : public USCWidgetComponent
{
public:
	struct FSCPopupContent                        m_Content;                                         // 0x0028(0x00E8)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_110[0x18];                                     // 0x0110(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BPF_ShowPopup(const class APlayerController* _inPlayerController, const struct FSCPopupContent& _content, struct FGameplayTag* _outSelectedOptionTag, class USCInputAction** _outSelectedAction, const struct FLatentActionInfo& _inLatentInfo, class USCGameFlowSubsystem* _gameFlowSystem);
	static void BPF_ShowPopupByTemplate(const class APlayerController* _inPlayerController, const struct FGameplayTag& _templateTag, const class FText& _titleOverride, const class FText& _messageOverride, class UTexture2D* _iconOverride, struct FGameplayTag* _outSelectedOptionTag, class USCInputAction** _outSelectedAction, const struct FLatentActionInfo& _inLatentInfo, const TMap<class FName, class USCViewModel*>& _viewModels);
	static void BPF_ShowPopupByTemplateOnSpecificGameFlow(const class APlayerController* _inPlayerController, const struct FGameplayTag& _templateTag, const class FText& _titleOverride, const class FText& _messageOverride, class UTexture2D* _iconOverride, struct FGameplayTag* _outSelectedOptionTag, class USCInputAction** _outSelectedAction, const struct FLatentActionInfo& _inLatentInfo, const TMap<class FName, class USCViewModel*>& _viewModels, class USCGameFlowSubsystem* _gameFlowSystem);

	void BPF_RegisterOptionWidget(class USCButtonUserWidget* _buttonWidget);
	void BPF_ValidateOptionByAction(const class USCInputAction* _inputAction);
	void BPF_ValidateOptionByTag(const struct FGameplayTag& _tag);
	void OnActionPressed(class USCUserWidget* _widget, const class USCInputAction* _inputAction, const struct FInputActionState& _listenerState);
	void OnClickedOptionButton(class USCButtonUserWidget* _button, bool _bWithMouse);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPopupWidgetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPopupWidgetComponent")
	}
	static class USCPopupWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPopupWidgetComponent>();
	}
};
DUMPER7_ASSERTS_USCPopupWidgetComponent;

// Class SCCore.SCRagdollConfigDB
// 0x0038 (0x0068 - 0x0030)
class USCRagdollConfigDB final : public UDataAsset
{
public:
	float                                         m_fDetectionRadius;                                // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fBoneDetectionRadius;                            // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRagdollMoveableBone>           m_MoveableBones;                                   // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         m_fForceFactor;                                    // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDelayBetweenImpulses;                           // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinimumPlayerVelocity;                          // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_PlayerVelocityCurve;                             // 0x0058(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDetectionFrequency;                             // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDelayBeforeSleep;                               // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCRagdollConfigDB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCRagdollConfigDB")
	}
	static class USCRagdollConfigDB* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCRagdollConfigDB>();
	}
};
DUMPER7_ASSERTS_USCRagdollConfigDB;

// Class SCCore.SCReplayHelper
// 0x0000 (0x0028 - 0x0028)
class USCReplayHelper final : public UBlueprintFunctionLibrary
{
public:
	static bool BPF_IsInReplayMode(const class UObject* _worldContextObject);
	static bool BPF_IsReplayPlaying(const class UObject* _worldContextObject);
	static bool BPF_IsReplayRecording(const class UObject* _worldContextObject);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCReplayHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCReplayHelper")
	}
	static class USCReplayHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCReplayHelper>();
	}
};
DUMPER7_ASSERTS_USCReplayHelper;

// Class SCCore.SCSaveGameComponent
// 0x0030 (0x00E8 - 0x00B8)
class USCSaveGameComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void()>              OnUpdatedFromSave;                                 // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnPreSaveLevel;                                    // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSaveGameComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSaveGameComponent")
	}
	static class USCSaveGameComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSaveGameComponent>();
	}
};
DUMPER7_ASSERTS_USCSaveGameComponent;

// Class SCCore.SCSaveObjectPlayerProfile
// 0x0308 (0x0348 - 0x0040)
class USCSaveObjectPlayerProfile : public USCSaveObject
{
public:
	struct FSCProfileData                         m_BaseProfileData;                                 // 0x0040(0x0308)(Edit, BlueprintVisible, EditConst, SaveGame, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	void BPF_RemoveSave(const class FString& _saveName);

	struct FCharacterSaveDescription BPF_FindSaveByFileName(const class FString& _fileName, bool* _bFound) const;
	bool BPF_IsSaveValid(const class FString& _saveName, bool _bTreatBackup) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSaveObjectPlayerProfile")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSaveObjectPlayerProfile")
	}
	static class USCSaveObjectPlayerProfile* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSaveObjectPlayerProfile>();
	}
};
DUMPER7_ASSERTS_USCSaveObjectPlayerProfile;

// Class SCCore.SCSaveSubsystem
// 0x0520 (0x0670 - 0x0150)
class alignas(0x10) USCSaveSubsystem : public USCSubsystem
{
public:
	TMap<TSoftClassPtr<class UClass>, float>      m_DefaultGameOptions;                              // 0x0150(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<TSoftClassPtr<class UClass>, float>      m_PCOnlyDefaultGameOptions;                        // 0x01A0(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           m_GameOptionsInDebugMenu;                          // 0x01F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class FName>                           m_DebugMenuPath;                                   // 0x0200(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_210[0x78];                                     // 0x0210(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class USCSaveObjectGameData*                  m_CurrentSaveGameData;                             // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCSaveObjectGameData*                  m_SaveGameDataWritten;                             // 0x0290(0x0008)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCSaveObjectGameData*                  m_DumpSaveGameData;                                // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A0[0x18];                                     // 0x02A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool _bSaveInProgress, ESaveResult _eSaveResult)> m_OnSaveStatusChanged; // 0x02B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(ELoadResult _eLoadResult)> m_OnSaveLoaded;                         // 0x02C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void(ELoadResult _eLoadResult)> m_OnProfileLoaded;                      // 0x02D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void()>              m_OnSaveRemappingReset;                            // 0x02E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x10];                                     // 0x02F8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_ParentSaveGameplayTag;                           // 0x0308(0x0008)(Edit, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 m_DefaultSaveName;                                 // 0x0310(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 m_DefaultProfileName;                              // 0x0320(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 m_DefaultAudioCulture;                             // 0x0330(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 m_DefaultTextCulture;                              // 0x0340(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   m_SaveGameObjectSoftType;                          // 0x0350(0x0028)(Edit, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   m_SaveProfileObjectSoftType;                       // 0x0378(0x0028)(Edit, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                 m_SaveGameObjectType;                              // 0x03A0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                 m_SaveProfileObjectType;                           // 0x03A8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fMaxBlockingSaveDuration;                        // 0x03B0(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bEnableSaveLevelInPIE;                           // 0x03B4(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USCSaveObjectGameData*                  m_PendingLoadingSaveGameData;                      // 0x03B8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USCSaveObjectPlayerProfile*             m_PendingLoadingSaveProfileA;                      // 0x03C0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USCSaveObjectPlayerProfile*             m_PendingLoadingSaveProfileB;                      // 0x03C8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class UGameOption>>        m_LoadedGameOptions;                               // 0x03D0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E0[0x58];                                     // 0x03E0(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class USCSaveObjectPlayerProfile*             m_CurrentPlayerProfile;                            // 0x0438(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_440[0x230];                                    // 0x0440(0x0230)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static int32 BPF_GenerateIndexFromSaveName(const class FString& _saveName);
	static class FString BPF_SwapSaveNameToAndFromBackup(const class FString& _currentSaveName);

	void BPF_ApplyPendingOptionsInSave(bool _bSave, bool _bApplyVideoSettings);
	void BPF_CreateNewPendingOptionsFromSave();
	bool BPF_GetCrossplayWarningSeen();
	bool BPF_GetFirstLaunchPassed();
	class FString BPF_GetPreferredRegion();
	bool BPF_LoadSubsystemFromSaveGameObject(class USCSubsystem* _subsystem);
	void BPF_LoadSubsystemsFromSaveGameObject(const struct FGameplayTagContainer& _tagContainer);
	void BPF_RequestCreateProfile();
	void BPF_RequestCreateSaveGame(int32 _iSaveIndex);
	void BPF_RequestDumpSaveInLog(const class FString& _saveName);
	void BPF_RequestLoad(const class FString& _saveName, const struct FGameplayTagContainer& _tagContainer);
	void BPF_RequestLoadFirstSave(const struct FGameplayTagContainer& _tagContainer);
	void BPF_RequestLoadProfile();
	void BPF_RequestResetFromTagContainer(const struct FGameplayTagContainer& _resetTagsContainer);
	void BPF_RequestSaveGame(int32 _iSaveChunksBitmask);
	void BPF_RequestSaveGameFromTag(const struct FGameplayTagContainer& _tagContainer);
	void BPF_RestoreGameSettingsWithDefault();
	void BPF_SetCrossplayWarningSeen(bool _bSeenCrossplayWarning);
	void BPF_SetFirstLaunchPassed(bool _bPassedFirstLaunch);
	void BPF_SetIsSavingEnabled(bool _bIsSavingEnabled);
	void BPF_SetPreferredRegion(const class FString& _preferredRegion);
	void BPF_TryApplyGameOptionsOnSaveLoad();
	void BPF_TryFirstLoadProfileOrCreateNewSynchronous(bool _bCreateIfNotFound);
	bool IsToggledDebugOption(class FName _actionName);
	void OnToggleDebugOption(class FName _actionName);

	class FString BPF_GenerateSaveNameFromIndex(int32 _iIndex) const;
	class USCSaveObjectPlayerProfile* BPF_GetCurrentProfile() const;
	class USCSaveObjectGameData* BPF_GetCurrentSaveGame() const;
	float BPF_GetGameOptionSavedValue(TSubclassOf<class UGameOption> _optionClass) const;
	int32 BPF_GetPlayerSavesCount(bool _bOnlyValidSaves) const;
	class FString BPF_GetSaveBackupSuffix() const;
	struct FTimespan BPF_GetTimePlayedInCurrentSave() const;
	bool BPF_IsSavingEnabled() const;
	bool BPF_IsUsingDebugSaveLevelInPIE() const;
	bool BPF_WasSaveRemappingReset() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSaveSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSaveSubsystem")
	}
	static class USCSaveSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSaveSubsystem>();
	}
};
DUMPER7_ASSERTS_USCSaveSubsystem;

// Class SCCore.SCScalarCrossFade
// 0x0048 (0x02F8 - 0x02B0)
class ASCScalarCrossFade : public AActor
{
public:
	TWeakObjectPtr<class AActor>                  m_OverlappingActor;                                // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fBlockLength;                                    // 0x02B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fDiscontinuityThreshold;                         // 0x02BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          m_BoxComponent;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class ASCVolumeActor>          m_RootVolume;                                      // 0x02C8(0x0028)(Edit, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                        m_RootComp;                                        // 0x02F0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BPE_BeginOverlapInternal();
	struct FGameplayAbilityTargetDataHandle BPE_ComputeRatio(struct FGameplayAbilityTargetDataHandle& _inOutTargetData);
	void BPE_EndOverlapInternal();
	bool BPE_IsBeginOverlapAllowed(const class AActor* _actor);
	bool BPE_IsEndOverlapAllowed(const class AActor* _actor);
	void BPE_OnRatioUpdated(const struct FGameplayAbilityTargetDataHandle& _inOutTargetData);
	void BPE_RatioDebugDisplay(const struct FGameplayAbilityTargetDataHandle& _targetData);
	void BPF_BeginOverlapRequest(class AActor* _actor);
	void BPF_EndOverlapRequest(class AActor* _actor);
	void OnBoxCollisionBeginOverlap(class UPrimitiveComponent* _primitiveComponent, class AActor* _otherActor, class UPrimitiveComponent* _otherPrimitiveComponent, int32 _iInt, bool _bArg, const struct FHitResult& _hitResult);
	void OnBoxCollisionEndOverlap(class UPrimitiveComponent* _primitiveComponent, class AActor* _otherActor, class UPrimitiveComponent* _otherPrimitiveComponent, int32 _iInt);
	void OnRootVolumeCollisionBeginOverlap(class AActor* _actor, class AActor* _otherActor);
	void OnRootVolumeCollisionEndOverlap(class AActor* _actor, class AActor* _otherActor);

	bool BPF_IsOverlapped() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCScalarCrossFade")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCScalarCrossFade")
	}
	static class ASCScalarCrossFade* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCScalarCrossFade>();
	}
};
DUMPER7_ASSERTS_ASCScalarCrossFade;

// Class SCCore.SCServerStartGameMode
// 0x0000 (0x0428 - 0x0428)
class ASCServerStartGameMode final : public ASCGameMode
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCServerStartGameMode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCServerStartGameMode")
	}
	static class ASCServerStartGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCServerStartGameMode>();
	}
};
DUMPER7_ASSERTS_ASCServerStartGameMode;

// Class SCCore.SCSessionTimeManager
// 0x00E8 (0x0110 - 0x0028)
class USCSessionTimeManager : public UObject
{
public:
	uint8                                         Pad_28[0xB8];                                      // 0x0028(0x00B8)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDelayBetweenSync;                               // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fTimeSinceLastSync;                              // 0x00E4(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fScaleTime;                                      // 0x00E8(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EC[0x24];                                      // 0x00EC(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSessionTimeManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSessionTimeManager")
	}
	static class USCSessionTimeManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSessionTimeManager>();
	}
};
DUMPER7_ASSERTS_USCSessionTimeManager;

// Class SCCore.SCShakeSubsystem
// 0x0050 (0x01A0 - 0x0150)
class USCShakeSubsystem final : public USCSubsystem
{
public:
	uint8                                         Pad_150[0x50];                                     // 0x0150(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_StartCameraShake(const class APlayerController* _PlayerController, const struct FGameplayTag& _tagIdentifier, TSubclassOf<class UCameraShakeBase> _cameraShake, ECameraShakePlaySpace _ePlaySpace, const struct FRotator& _userPlaySpaceRot);
	void BPF_StopCameraShake(const class APlayerController* _PlayerController, const struct FGameplayTag& _tagIdentifier, bool bImmediately);
	void BPF_UpdateCameraShakeAmplitude(const class APlayerController* _PlayerController, const struct FGameplayTag& _tagIdentifier, float _fAlpha);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCShakeSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCShakeSubsystem")
	}
	static class USCShakeSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCShakeSubsystem>();
	}
};
DUMPER7_ASSERTS_USCShakeSubsystem;

// Class SCCore.SCSkeletalMeshVLogDebugDrawComponent
// 0x00F8 (0x01B0 - 0x00B8)
class USCSkeletalMeshVLogDebugDrawComponent final : public UActorComponent
{
public:
	TSet<class FName>                             m_SetAllowDebugBones;                              // 0x00B8(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TSet<class FName>                             m_SetIgnoredDebugBones;                            // 0x0108(0x0050)(Edit, NativeAccessSpecifierPrivate)
	bool                                          m_bRecordVLog;                                     // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_159[0x57];                                     // 0x0159(0x0057)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSkeletalMeshVLogDebugDrawComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSkeletalMeshVLogDebugDrawComponent")
	}
	static class USCSkeletalMeshVLogDebugDrawComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSkeletalMeshVLogDebugDrawComponent>();
	}
};
DUMPER7_ASSERTS_USCSkeletalMeshVLogDebugDrawComponent;

// Class SCCore.SCVolumeGroupController
// 0x0040 (0x02F0 - 0x02B0)
class ASCVolumeGroupController : public AActor
{
public:
	TMulticastInlineDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)> OnGroupVolumeBeginOverlap; // 0x02B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> OnGroupVolumeEndOverlap; // 0x02C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ASCPlayerVolume*                        m_RootVolume;                                      // 0x02D0(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASCPlayerVolumeActor*                   m_RootVolumeActor;                                 // 0x02D8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bTriggerOnlyOnPlayer;                            // 0x02E8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_OnRootVolumeBeginOverlap(class UPrimitiveComponent* _overlappedComponent, class AActor* _otherActor, class UPrimitiveComponent* _otherComp, int32 _otherBodyIndex, bool _bFromSweep, const struct FHitResult& _sweepResult);
	void BPF_OnRootVolumeEndOverlap(class UPrimitiveComponent* _overlappedComponent, class AActor* _otherActor, class UPrimitiveComponent* _otherComp, int32 _otherBodyIndex);
	bool GetValidCandidate(class AActor* _otherActor, bool _bIsEntering);

	bool BPF_IsOverlapped() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVolumeGroupController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVolumeGroupController")
	}
	static class ASCVolumeGroupController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCVolumeGroupController>();
	}
};
DUMPER7_ASSERTS_ASCVolumeGroupController;

// Class SCCore.SCSoundAreaController
// 0x0010 (0x0300 - 0x02F0)
class ASCSoundAreaController final : public ASCVolumeGroupController
{
public:
	TArray<TWeakObjectPtr<class ASCSoundCrossFade>> m_CrossFadeList;                                 // 0x02F0(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	void BPE_SetFadeSoundRatio(float _fFadeRatio, const class AActor* _actorRequesting) const;
	void BPE_StartSound(const class AActor* _actorRequesting) const;
	void BPE_StopSound(const class AActor* _actorRequesting) const;
	bool BPF_IsPlayerInAnAttenuationZone() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSoundAreaController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSoundAreaController")
	}
	static class ASCSoundAreaController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCSoundAreaController>();
	}
};
DUMPER7_ASSERTS_ASCSoundAreaController;

// Class SCCore.SCSplineCrossFade
// 0x00B0 (0x03A8 - 0x02F8)
class ASCSplineCrossFade : public ASCScalarCrossFade
{
public:
	class USplineComponent*                       m_SplineComponent;                                 // 0x02F8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    m_SplineEnd;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                    m_SwitchPointIndicator;                            // 0x0308(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fSplineLength;                                   // 0x0310(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseSwitchMethod;                                // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bDecreaseRatioAfterSwitch;                       // 0x0315(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_316[0x2];                                      // 0x0316(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fSwitchRatioThreshold;                           // 0x0318(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vSwitchPointLocation;                            // 0x0320(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseDistanceAttenuationMethod;                   // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fFirstDistanceAttenuationThreshold;              // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fLastDistanceAttenuationThreshold;               // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        m_SplineNearestPointHistoric;                      // 0x0348(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                         m_iSplineNearestPointLengthMax;                    // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           m_HistoricColor;                                   // 0x035C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fHistoricRadius;                                 // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           m_CurrentPointColor;                               // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fCurrentPointRadius;                             // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           m_SwitchPointColor;                                // 0x0384(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fSwitchPointRadius;                              // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_sLogCategory;                                    // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSplineCrossFade")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSplineCrossFade")
	}
	static class ASCSplineCrossFade* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCSplineCrossFade>();
	}
};
DUMPER7_ASSERTS_ASCSplineCrossFade;

// Class SCCore.SCSoundCrossFade
// 0x0020 (0x03C8 - 0x03A8)
class ASCSoundCrossFade final : public ASCSplineCrossFade
{
public:
	class ASCSoundAreaController*                 m_ControllerA;                                     // 0x03A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASCSoundAreaController*                 m_ControllerB;                                     // 0x03B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class ASCSoundAreaController>> m_ControllerList;                           // 0x03B8(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSoundCrossFade")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSoundCrossFade")
	}
	static class ASCSoundCrossFade* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCSoundCrossFade>();
	}
};
DUMPER7_ASSERTS_ASCSoundCrossFade;

// Class SCCore.SCSoundCrossFadeVisualizerComponent
// 0x0000 (0x00B8 - 0x00B8)
class USCSoundCrossFadeVisualizerComponent final : public USCScalarCrossFadeVisualizerComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSoundCrossFadeVisualizerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSoundCrossFadeVisualizerComponent")
	}
	static class USCSoundCrossFadeVisualizerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSoundCrossFadeVisualizerComponent>();
	}
};
DUMPER7_ASSERTS_USCSoundCrossFadeVisualizerComponent;

// Class SCCore.SCSpectatorPawn
// 0x0128 (0x0488 - 0x0360)
class ASCSpectatorPawn : public ASpectatorPawn
{
public:
	struct FViewTargetTransitionParams            m_CameraTransitionParams;                          // 0x0360(0x0010)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         m_fDefaultCameraDistance;                          // 0x0370(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vDefaultCameraViewOffset;                        // 0x0378(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputContext*                        m_SpectatorContext;                                // 0x0390(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_ToggleIsPlayerWaitingInputAction;                // 0x0398(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_ViewSelfInputAction;                             // 0x03A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_ViewNextTargetInputAction;                       // 0x03A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_ViewPrevTargetInputAction;                       // 0x03B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_ViewNextLDCameraInputAction;                     // 0x03B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_ViewPrevLDCameraInputAction;                     // 0x03C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_PawnMoveInputAction;                             // 0x03C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bPawnMoveForwardIn2DOnly;                        // 0x03D0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAxis                                         m_PawnMoveForwardStickAxis;                        // 0x03D1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAxis                                         m_PawnMoveRightStickAxis;                          // 0x03D2(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D3[0x1];                                      // 0x03D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTargetOffsetSpeed;                              // 0x03D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_PawnMoveUpWorldInputAction;                      // 0x03D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAxis                                         m_PawnMoveUpStickAxis;                             // 0x03E0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTargetUpOffsetSpeed;                            // 0x03E4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_CameraInputAction;                               // 0x03E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameOption>                m_CameraSpeedOption;                               // 0x03F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAxis                                         m_CameraLookUpStickAxis;                           // 0x03F8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAxis                                         m_CameraTurnStickAxis;                             // 0x03F9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3FA[0x6];                                      // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              m_vCameraStickMultiplier;                          // 0x0400(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCInputAction*                         m_CameraFOVControlInputAction;                     // 0x0410(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatInterval                         m_FOVControlRange;                                 // 0x0418(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fFOVControlSpeed;                                // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UCameraModifier>>    m_CameraModifiersToApply;                          // 0x0428(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                         m_fOnTargetLocationSmoothSpeed;                    // 0x0438(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fOnLDCameraRotationSmoothSpeed;                  // 0x043C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_440[0x20];                                     // 0x0440(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class USCCameraFOVModifier*                   m_CameraFOVModifier;                               // 0x0460(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCCameraSmoothRotationModifier*        m_SmoothRotationModifier;                          // 0x0468(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCCameraSmoothTranslationModifier*     m_SmoothTranslationModifier;                       // 0x0470(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_478[0x10];                                     // 0x0478(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_ViewLDCamera(class AActor* _ldCamera);
	void BPF_ViewTarget(class AActor* _targetActor);

	class AActor* BPF_GetLDCamera() const;
	class AActor* BPF_GetTarget() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSpectatorPawn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSpectatorPawn")
	}
	static class ASCSpectatorPawn* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCSpectatorPawn>();
	}
};
DUMPER7_ASSERTS_ASCSpectatorPawn;

// Class SCCore.SCStatBehaviourCounter
// 0x0010 (0x0050 - 0x0040)
class USCStatBehaviourCounter final : public USCStatBehaviour
{
public:
	ECounterBehaviour                             m_eBehaviour;                                      // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bCountOnlyOnToggleChanged;                       // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bValueToAddIsTargetDataValue;                      // 0x0042(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iValueToAdd;                                     // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStatBehaviourCounter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStatBehaviourCounter")
	}
	static class USCStatBehaviourCounter* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStatBehaviourCounter>();
	}
};
DUMPER7_ASSERTS_USCStatBehaviourCounter;

// Class SCCore.SCStatController
// 0x0088 (0x0118 - 0x0090)
class USCStatController : public USCStatControllerBase
{
public:
	class UEventBinder*                           m_BinderInstance;                                  // 0x0090(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCStatBehaviour*                       m_StatBehaviourInstance;                           // 0x0098(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USCStatDataCompute*>             m_StatDataComputeInstances;                        // 0x00A0(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bIsTicking;                                      // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventBinderInstance                   m_BinderTemplate;                                  // 0x00B8(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FStatDataComputeInstance>       m_DataComputes;                                    // 0x00F0(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class USCStatBehaviour*                       m_StatBehaviourTemplate;                           // 0x0100(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_108[0x10];                                     // 0x0108(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddValue(float _fValue);
	void BPE_OnBinderTriggeredInternal(const struct FGameplayAbilityTargetDataHandle& _eventData);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStatController")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStatController")
	}
	static class USCStatController* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStatController>();
	}
};
DUMPER7_ASSERTS_USCStatController;

// Class SCCore.SCStatControllerSum
// 0x0010 (0x00B0 - 0x00A0)
class USCStatControllerSum : public USCStatControllerComposite
{
public:
	TArray<TSoftClassPtr<class UClass>>           m_StatsToSumPtr;                                   // 0x00A0(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStatControllerSum")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStatControllerSum")
	}
	static class USCStatControllerSum* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStatControllerSum>();
	}
};
DUMPER7_ASSERTS_USCStatControllerSum;

// Class SCCore.SCStatDataCompute
// 0x0000 (0x0028 - 0x0028)
class USCStatDataCompute : public UObject
{
public:
	void BPE_Compute(const class APlayerState* _owningPlayer, struct FGameplayAbilityTargetDataHandle& _targetDataHandle);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStatDataCompute")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStatDataCompute")
	}
	static class USCStatDataCompute* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStatDataCompute>();
	}
};
DUMPER7_ASSERTS_USCStatDataCompute;

// Class SCCore.SCStateMachine
// 0x0000 (0x0180 - 0x0180)
class USCStateMachine final : public USCFlowGraph
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStateMachine")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStateMachine")
	}
	static class USCStateMachine* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStateMachine>();
	}
};
DUMPER7_ASSERTS_USCStateMachine;

// Class SCCore.StateTreeTargetDataConditionHelper
// 0x0000 (0x0028 - 0x0028)
class UStateTreeTargetDataConditionHelper final : public UObject
{
public:
	static TArray<class UScriptStruct*> GetProvidedTargetData(const struct FInstancedStruct& _structPtr);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StateTreeTargetDataConditionHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StateTreeTargetDataConditionHelper")
	}
	static class UStateTreeTargetDataConditionHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStateTreeTargetDataConditionHelper>();
	}
};
DUMPER7_ASSERTS_UStateTreeTargetDataConditionHelper;

// Class SCCore.SCStateTreeComponent
// 0x0058 (0x01D0 - 0x0178)
class USCStateTreeComponent final : public UStateTreeComponent
{
public:
	uint8                                         Pad_178[0x58];                                     // 0x0178(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_OverrideStateTreeLogic(const struct FStateTreeReference& _stateTreeReference);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStateTreeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStateTreeComponent")
	}
	static class USCStateTreeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStateTreeComponent>();
	}
};
DUMPER7_ASSERTS_USCStateTreeComponent;

// Class SCCore.SCStateWithAbilityNode
// 0x0018 (0x0198 - 0x0180)
class USCStateWithAbilityNode final : public USCStateMachineNode
{
public:
	uint8                                         Pad_180[0x8];                                      // 0x0180(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCGameplayAbility>         m_Ability;                                         // 0x0188(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USCAbilitySystemComponent> m_OwnerASComponent;                              // 0x0190(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class USCStateWithAbilityNode* BPF_GetOwnerNode(const class USCGameplayAbility* _ability);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStateWithAbilityNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStateWithAbilityNode")
	}
	static class USCStateWithAbilityNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStateWithAbilityNode>();
	}
};
DUMPER7_ASSERTS_USCStateWithAbilityNode;

// Class SCCore.SCStatsPage
// 0x0038 (0x0060 - 0x0028)
class USCStatsPage : public UObject
{
public:
	TSoftClassPtr<class UClass>                   m_GameModeClass;                                   // 0x0028(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UClass>>           m_DefaultStatsClass;                               // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStatsPage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStatsPage")
	}
	static class USCStatsPage* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStatsPage>();
	}
};
DUMPER7_ASSERTS_USCStatsPage;

// Class SCCore.SCStatsSubsystem
// 0x00F8 (0x0248 - 0x0150)
class USCStatsSubsystem : public USCSubsystem
{
public:
	uint8                                         Pad_150[0x48];                                     // 0x0150(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           m_DefaultStatPages;                                // 0x0198(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class USCStatsPage>>       m_LoadedDefaultStatPages;                          // 0x01A8(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class USCStatsPage*>                   m_PagesInstanciated;                               // 0x01B8(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<struct FSCStatId, class USCStatControllerBase*> m_AllStatsInstances;                        // 0x01C8(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class USCStatControllerBase>> m_DefaultLoadedStats;                           // 0x0218(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_228[0x10];                                     // 0x0228(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatsGlobalContainerViewModel*         m_GlobalViewModel;                                 // 0x0238(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_240[0x8];                                      // 0x0240(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPlayerControllerPostLogged(class AController* _PlayerController);
	void OnPlayerControllerPostLogout(class AController* _PlayerController);
	void OnPlayerStateInitialReplication(class ASCPlayerState* _scPlayerState);
	void SetRawStatValue(const struct FSCStatId& _statId, float _fValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStatsSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStatsSubsystem")
	}
	static class USCStatsSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStatsSubsystem>();
	}
};
DUMPER7_ASSERTS_USCStatsSubsystem;

// Class SCCore.SCStreamingComponent
// 0x0100 (0x01B8 - 0x00B8)
class USCStreamingComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void()>              OnStreamedIn;                                      // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnStreamedOut;                                     // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDistanceToPlayerChanged;                         // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          m_bPauseActorComponentsTickOnUnload;               // 0x00E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseWorldNavDistanceToPlayer;                    // 0x00E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iWorldNavStreamOutDistanceToPlayer;              // 0x00EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F0[0xA4];                                      // 0x00F0(0x00A4)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_SectorGameplayTag;                               // 0x0194(0x0008)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_19C[0x1C];                                     // 0x019C(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BPF_GetDistanceToPlayer() const;
	ESCStreamingState BPF_GetStreamingState() const;
	bool BPF_IsStreamingIn() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStreamingComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStreamingComponent")
	}
	static class USCStreamingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStreamingComponent>();
	}
};
DUMPER7_ASSERTS_USCStreamingComponent;

// Class SCCore.SCStreamingInNode
// 0x0000 (0x0188 - 0x0188)
class USCStreamingInNode final : public USCStreamingNode
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStreamingInNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStreamingInNode")
	}
	static class USCStreamingInNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStreamingInNode>();
	}
};
DUMPER7_ASSERTS_USCStreamingInNode;

// Class SCCore.SCStreamingSubsystem
// 0x0110 (0x0270 - 0x0160)
class USCStreamingSubsystem final : public USCWorldSubsystem
{
public:
	TSet<class USCStreamingComponent*>            m_RegisteredStreamingComponents;                   // 0x0160(0x0050)(ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class USCStreamingComponent*, int32>     m_StreamingComponentsByWorldNavDistance;           // 0x01B0(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_200[0x70];                                     // 0x0200(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLevelAdded(class ULevel* _addedLevel, class UWorld* _world);
	void OnLevelRemoved(class ULevel* _removedLevel, class UWorld* _world);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStreamingSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStreamingSubsystem")
	}
	static class USCStreamingSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStreamingSubsystem>();
	}
};
DUMPER7_ASSERTS_USCStreamingSubsystem;

// Class SCCore.SCStringsHelper
// 0x0000 (0x0028 - 0x0028)
class USCStringsHelper final : public UObject
{
public:
	static class FString BPF_ObjectPathToPackageName(const class FString& _objectPath);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCStringsHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCStringsHelper")
	}
	static class USCStringsHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCStringsHelper>();
	}
};
DUMPER7_ASSERTS_USCStringsHelper;

// Class SCCore.SCSubsystemBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class USCSubsystemBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class USCSubsystem* GetEngineSubsystem(TSubclassOf<class USCSubsystem> Class_0);
	static class USCSubsystem* GetGameInstanceSubsystem(class UObject* ContextObject, TSubclassOf<class USCSubsystem> Class_0);
	static class USCSubsystem* GetLocalPlayerSubsystem(class UObject* ContextObject, TSubclassOf<class USCSubsystem> Class_0, int32 PlayerIndex);
	static class USCSubsystem* GetWorldSubsystem(class UObject* ContextObject, const struct FGameplayTag& Tag, bool bForceMainWorld);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSubsystemBlueprintLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSubsystemBlueprintLibrary")
	}
	static class USCSubsystemBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSubsystemBlueprintLibrary>();
	}
};
DUMPER7_ASSERTS_USCSubsystemBlueprintLibrary;

// Class SCCore.SCTaggingActorComponent
// 0x0030 (0x00E8 - 0x00B8)
class USCTaggingActorComponent final : public UActorComponent
{
public:
	struct FGameplayTagContainer                  m_ObjectTags;                                      // 0x00B8(0x0020)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FString                                 m_sDescription;                                    // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCTaggingActorComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCTaggingActorComponent")
	}
	static class USCTaggingActorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCTaggingActorComponent>();
	}
};
DUMPER7_ASSERTS_USCTaggingActorComponent;

// Class SCCore.SCTextHelpers
// 0x0000 (0x0028 - 0x0028)
class USCTextHelpers final : public UBlueprintFunctionLibrary
{
public:
	static class FText AsDistance_Float(float Value, ERoundingMode RoundingMode, bool bAlwaysSign, bool bUseGrouping, int32 MinimumIntegralDigits, int32 MaximumIntegralDigits, int32 MinimumFractionalDigits, int32 MaximumFractionalDigits);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCTextHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCTextHelpers")
	}
	static class USCTextHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCTextHelpers>();
	}
};
DUMPER7_ASSERTS_USCTextHelpers;

// Class SCCore.SCTimeHelper
// 0x0000 (0x0028 - 0x0028)
class USCTimeHelper final : public UBlueprintFunctionLibrary
{
public:
	static struct FDateTime BPF_AddDelayToDateTime(const struct FDateTime& _dateTime, float _fDelayInSeconds);
	static float BPF_GetAvgLatencyInMsUsingBuffer(class UObject* _worldContextObject);
	static struct FDateTime BPF_GetCurrentSynchedTimeInDateTime(const class UWorld* _world);
	static float BPF_GetDeltaTimeSlowMotionIndependant(class UObject* _worldContextObject, float _fCurrentDt, float _fSlowMotionFactor);
	static float BPF_GetDiffBetweenToDateTimeInSeconds(const struct FDateTime& _dateTimeA, const struct FDateTime& _dateTimeB);
	static int64 BPF_GetGameStartTime(class UObject* _worldContextObject);
	static float BPF_GetTimePassedSinceGameStart(class UObject* _worldContextObject, bool _bPredictedServerTime);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCTimeHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCTimeHelper")
	}
	static class USCTimeHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCTimeHelper>();
	}
};
DUMPER7_ASSERTS_USCTimeHelper;

// Class SCCore.SCTraceLibrary
// 0x0000 (0x0028 - 0x0028)
class USCTraceLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool BoxTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, ECollisionChannel CollisionChannel, const struct FCollisionResponseContainer& CollisionResponse, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool BoxTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, ECollisionChannel CollisionChannel, const struct FCollisionResponseContainer& CollisionResponse, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool CapsuleTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, ECollisionChannel CollisionChannel, const struct FCollisionResponseContainer& CollisionResponse, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool CapsuleTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, ECollisionChannel CollisionChannel, const struct FCollisionResponseContainer& CollisionResponse, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool LineTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, ECollisionChannel CollisionChannel, const struct FCollisionResponseContainer& CollisionResponse, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool LineTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, ECollisionChannel CollisionChannel, const struct FCollisionResponseContainer& CollisionResponse, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool SphereTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, ECollisionChannel CollisionChannel, const struct FCollisionResponseContainer& CollisionResponse, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	static bool SphereTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, ECollisionChannel CollisionChannel, const struct FCollisionResponseContainer& CollisionResponse, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCTraceLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCTraceLibrary")
	}
	static class USCTraceLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCTraceLibrary>();
	}
};
DUMPER7_ASSERTS_USCTraceLibrary;

// Class SCCore.SCTraceSubsystem
// 0x0060 (0x01C0 - 0x0160)
class USCTraceSubsystem final : public USCWorldSubsystem
{
public:
	int32                                         m_iMaxRequestsPerTick;                             // 0x0160(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_164[0x5C];                                     // 0x0164(0x005C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 BPF_LaunchTraceByChannel(const class AActor* _owner, const struct FSCTraceSetup& _newTrace, const class FString& _traceName, const TDelegate<void(const struct FSCTraceResult& _result)>& _onFinishedCallbackDynamic, bool _bIsAsync);
	int32 BPF_LaunchTracesByChannel(const class AActor* _owner, const TArray<struct FSCTraceSetup>& _newTraces, const class FString& _traceName, const TDelegate<void(const TArray<struct FSCTraceResult>& _results)>& _onFinishedCallbackDynamic, bool _bIsAsync);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCTraceSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCTraceSubsystem")
	}
	static class USCTraceSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCTraceSubsystem>();
	}
};
DUMPER7_ASSERTS_USCTraceSubsystem;

// Class SCCore.SCTransitionHelper
// 0x0000 (0x0028 - 0x0028)
class USCTransitionHelper final : public UBlueprintFunctionLibrary
{
public:
	static ESCCharacterSpeedState GetTransitionSpeedState(const struct FSCTransition& _transition);
	static ESCTransitionType GetTransitionType(const struct FSCTransition& _transition);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCTransitionHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCTransitionHelper")
	}
	static class USCTransitionHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCTransitionHelper>();
	}
};
DUMPER7_ASSERTS_USCTransitionHelper;

// Class SCCore.SCCodeDrivenTransitionDataAsset
// 0x00A0 (0x00D0 - 0x0030)
class USCCodeDrivenTransitionDataAsset final : public UDataAsset
{
public:
	struct FSCCodeDrivenTransitionSettings        m_settingsPerRotation[0x5];                        // 0x0030(0x0010)(Deprecated, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TMap<ETransitionRotation, struct FSCCodeDrivenTransitionPerOrientationSettings> m_VelocityRotationToSettings; // 0x0080(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCodeDrivenTransitionDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCodeDrivenTransitionDataAsset")
	}
	static class USCCodeDrivenTransitionDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCodeDrivenTransitionDataAsset>();
	}
};
DUMPER7_ASSERTS_USCCodeDrivenTransitionDataAsset;

// Class SCCore.SCCodeDrivenTurnTransitionDataAsset
// 0x0028 (0x0058 - 0x0030)
class USCCodeDrivenTurnTransitionDataAsset final : public UDataAsset
{
public:
	class USCCodeDrivenTransitionDataAsset*       m_DeccelData;                                      // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCCodeDrivenTransitionDataAsset*       m_AccelData;                                       // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fTargetSpeedMultiplier[0x5];                     // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCCodeDrivenTurnTransitionDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCCodeDrivenTurnTransitionDataAsset")
	}
	static class USCCodeDrivenTurnTransitionDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCCodeDrivenTurnTransitionDataAsset>();
	}
};
DUMPER7_ASSERTS_USCCodeDrivenTurnTransitionDataAsset;

// Class SCCore.SCTransitionDB
// 0x03B8 (0x03E0 - 0x0028)
class USCTransitionDB : public UObject
{
public:
	uint32                                        m_uiAllowedTransitionTypes;                        // 0x0028(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSCTransitionRange                     m_RotationAngleRanges[0x5];                        // 0x002C(0x000C)(Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSCTransitionRange                     m_FallbackRotationAngleRanges[0x5];                // 0x0068(0x000C)(Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bEnableAnimTransitions;                          // 0x00A4(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAxis                                         m_eForwardAxisInAnimSpace;                         // 0x00A5(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 m_fMaxSpeedPerSpeedState;                          // 0x00A8(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bMirrorEnabled;                                  // 0x00B8(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMirrorDataTable*                       m_MirrorDataTable;                                 // 0x00C0(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                           m_BonesToBake;                                     // 0x00C8(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSCTransitionAnimationEntry>    m_AnimTransitionList;                              // 0x00D8(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bNameParsingEnabled;                             // 0x00E8(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_TransitionTypeKeywords[0x4];                     // 0x00F0(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_SpeedStateKeywords[0x4];                         // 0x0130(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bEnableCodeDrivenTransitions;                    // 0x0170(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        m_uiOverridenAnimDynamicWithCodeDrivenTransitions; // 0x0174(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSCCodeDrivenTransitionSettingsPerSpeedState m_StartCodeDrivenSettings;                   // 0x0178(0x0020)(Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSCCodeDrivenTransitionSettingsPerSpeedState m_StopCodeDrivenSettings;                    // 0x0198(0x0020)(Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSCCodeDrivenTurnTransitionSettings    m_TurnCodeDrivenSettings[0x4];                     // 0x01B8(0x0010)(Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSCCodeDrivenSpeedChangeTransitionSettings m_ToSpeedChangeCodeDrivenSettings[0x4];        // 0x01F8(0x0040)(Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         m_fCatchUpMaxRatioPerType[0x3];                    // 0x02F8(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fMaxTransitionRotationDuration;                  // 0x0304(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_TurnRotationAlphaRemapping;                      // 0x0308(0x0088)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<struct FSCTransition, struct FTransitionAnimSequencePlayInfosArray> m_TransitionToAnimArray; // 0x0390(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)

public:
	bool BPE_IsTransitionAllowed(const struct FSCTransition& _testingTransition, const struct FSCTransition& _currentTransition, float _fTransitionRatio, bool _bIsInDeccel) const;
	TArray<struct FFloatInterval> BPF_GetModifyTransitionAllowedIntervals(const struct FSCTransition& _testingTransition) const;
	struct FSCTransitionVisual BPF_GetTransitionVisual(const struct FSCTransition& _transition, bool* _bOutFound) const;
	void BPF_GetVelocityAngularSpeed(const struct FSCTransition& _testingTransition, float* _fOutSameWay, float* _fOutOppositeWay) const;
	bool IsAnimValidTransition(const struct FAssetData& _assetData) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCTransitionDB")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCTransitionDB")
	}
	static class USCTransitionDB* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCTransitionDB>();
	}
};
DUMPER7_ASSERTS_USCTransitionDB;

// Class SCCore.SCUIHelper
// 0x0000 (0x0028 - 0x0028)
class USCUIHelper final : public UBlueprintFunctionLibrary
{
public:
	static ESlateVisibility BoolToVisibility(bool _bValue);
	static class UWidget* BPF_CircleChildInVerticalBox(class UVerticalBox* _box);
	static void BPF_ClearUserFocus();
	static class UWidget* BPF_CycleChildren(class UPanelWidget* _panel, class UWidget* _currentChild, ECycleDirection _eDirection, bool _bSkipDisabled);
	static void BPF_DeselectAllChildButtons(class UPanelWidget* _panel);
	static void BPF_EndAllAnimations(class UUserWidget* _widget);
	static void BPF_EndAnimation(class UUserWidget* _widget, class UWidgetAnimation* _animation);
	static class USCButtonUserWidget* BPF_FindSelectedButtonInArray(const TArray<class UWidget*>& _widgets);
	static class USCButtonUserWidget* BPF_FindSelectedChildButton(class UPanelWidget* _panel);
	static void BPF_FocusWidget(class UWidget* _widget);
	static void BPF_Get2DPosFrom3D(const class APlayerController* _PlayerController, const struct FVector& _vLocation, const struct FVector& _v3DOffset, const struct FVector2D& _v2DOffset, struct FVector2D* _vOut2DPos, bool* _bOut2DProjSuccess);
	static void BPF_Get2DPosFrom3DBehindCam(const class UObject* _worldContextObject, const struct FVector& _vLocation, const struct FVector& _v3DOffset, const struct FVector2D& _v2DOffset, struct FVector2D* _vOut2DPos, bool* _bOutLocationInFrontOfCamera);
	static float BPF_GetAngleFromScreenCenter(class UObject* _worldContextObject, const struct FVector2D& _v2DPos);
	static struct FVector2D BPF_GetCursorPosition();
	static bool BPF_GetIsEditor();
	static bool BPF_GetIsPIE();
	static EUIInputModes BPF_GetLastNavigationMode();
	static class USCMenuAction* BPF_GetMenuActionInstance(const struct FSCMenuActionInstance& _instance);
	static class UWidget* BPF_GetNextChildWidget(class UPanelWidget* container, class UWidget* currentWidget, ECycleDirection _eDirection, bool _bSkipDisabled);
	static uint8 BPF_GetNextIndex(uint8 _uiCurrentIndex, ECycleDirection _eDirection, uint8 _uiLimitValue, bool _bLoopAtLimit, bool _bIncludeLimit);
	static class UWidget* BPF_GetNextWidgetInArray(const TArray<class UWidget*>& _widgets, class UWidget* _currentWidget, ECycleDirection _eDirection, bool _bSkipDisabled);
	static struct FVector2D BPF_GetPositionOnEllipse(class UObject* _worldContextObject, const struct FVector2D& _vRadius, float _fAngle);
	static struct FVector2D BPF_GetScaledViewportSize(class UObject* _worldContextObject);
	static struct FVector2D BPF_GetScreenCenter2DPos(class UObject* _worldContextObject);
	static void BPF_GetWidget2DPosFrom3D(class UWidget* _widget, const struct FVector& _vLocation, const struct FVector& _v3DOffset, const struct FVector2D& _v2DOffset, float _f2DMinY, struct FVector2D* _vOut2DPos, bool* _bOut2DProjSuccess);
	static bool BPF_Intersect2DPositionWithViewportBounds(class APlayerController* _PlayerController, const struct FVector2D& _vInPosition, struct FVector2D* _vOutIntersection, EIntersectDirection* _eOutIntersectDirection);
	static void BPF_ProjectWorldLocationToEllipse(class UObject* _worldContextObject, const struct FVector& _vLocation, const struct FVector& _v3DOffset, const struct FVector2D& _v2DOffset, const struct FVector2D& _vEllipseRadius, struct FProjectInViewportResult* _outProjectionResult, bool* _bOutIsOnEllipse);
	static void BPF_ProjectWorldLocationToScreen(class APlayerController* _PlayerController, const struct FVector& _vInPosition, bool _bUseViewportBounds, float _fViewportBoundsOffset, struct FVector2D* _vOutScreenPosition, float* _fOutAngle, bool* _bOutIsOfScreen);
	static void BPF_RequestRefreshDesiredFocus(class APlayerController* _PlayerController, bool _bResetLastFocusedChild);
	static void BPF_ResetActiveRootWidget(class APlayerController* _PlayerController);
	static void BPF_SetAutoWrapTextBlock(class UTextBlock* _textBlock, bool _bAutoWrap);
	static void BPF_SetCursorPosition(const struct FVector2D& _vCursor);
	static void BPF_SetVirtualCursorWidget(class ULocalPlayer* _player, EMouseCursor Cursor, class UUserWidget* Widget);
	static void BPF_StopAllAnimations(class UUserWidget* _widget);
	static class FString Conv_FloatToStringDecimals0(float _Value);
	static class FString Conv_FloatToStringDecimals1(float _Value);
	static class FString Conv_FloatToStringDecimals2(float _Value);
	static class FString Conv_FloatToStringDecimals3(float _Value);
	static struct FSlateBrush SelectBrush(bool _bPicker, const struct FSlateBrush& _ifTrue, const struct FSlateBrush& _ifFalse);
	static struct FSlateColor SelectSlateColor(bool _bPicker, const struct FSlateColor& _ifTrue, const struct FSlateColor& _ifFalse);
	static bool VisibilityToBool(ESlateVisibility _eVisibility);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCUIHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCUIHelper")
	}
	static class USCUIHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCUIHelper>();
	}
};
DUMPER7_ASSERTS_USCUIHelper;

// Class SCCore.SCUIManagerSubsystem
// 0x0000 (0x0060 - 0x0060)
class USCUIManagerSubsystem final : public UGameUIManagerSubsystem
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCUIManagerSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCUIManagerSubsystem")
	}
	static class USCUIManagerSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCUIManagerSubsystem>();
	}
};
DUMPER7_ASSERTS_USCUIManagerSubsystem;

// Class SCCore.SCUISettings
// 0x0030 (0x0068 - 0x0038)
class USCUISettings final : public UDeveloperSettings
{
public:
	TSoftObjectPtr<class UControllerIconsDB>      m_ControllerIconsDB;                               // 0x0038(0x0028)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UControllerIconsDB*                     m_ControllerIconsDBCache;                          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCUISettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCUISettings")
	}
	static class USCUISettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCUISettings>();
	}
};
DUMPER7_ASSERTS_USCUISettings;

// Class SCCore.SCUISubsystem
// 0x03F8 (0x0548 - 0x0150)
class USCUISubsystem final : public USCSubsystem
{
public:
	uint8                                         Pad_150[0x30];                                     // 0x0150(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	ESCUIDebugDisplayWidgets                      m_eDebugDisplayWidgets;                            // 0x0180(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TSoftClassPtr<class UClass>, TSoftClassPtr<class UClass>> m_ViewModelClassOverrides;        // 0x0188(0x0050)(Edit, Config, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FSCHUDLayoutRequest>            Layout;                                            // 0x01D8(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<struct FSCHUDElementEntry>             Widgets;                                           // 0x01E8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TSet<class FName>                             m_GlobalViewModelsNeededForHUD;                    // 0x01F8(0x0050)(Edit, Config, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_MenuRootLayer;                                   // 0x0248(0x0008)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_MenuPageLayer;                                   // 0x0250(0x0008)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_ModalLayer;                                      // 0x0258(0x0008)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_FloatingLayer;                                   // 0x0260(0x0008)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_GameLayer;                                       // 0x0268(0x0008)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  m_UIInputModeLayers;                               // 0x0270(0x0020)(Edit, Config, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  m_AlwaysVisibleLayers;                             // 0x0290(0x0020)(Edit, Config, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_PopupOptionValidateTag;                          // 0x02B0(0x0008)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_PopupOptionCancelTag;                            // 0x02B8(0x0008)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_DefaultTemplateTag;                              // 0x02C0(0x0008)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_PopupStateTag;                                   // 0x02C8(0x0008)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FSCPopupContentSoft> m_PopupTemplates;                          // 0x02D0(0x0050)(Edit, Config, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FSCPopupContent> m_LoadedPopupTemplates;                        // 0x0320(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_370[0x60];                                     // 0x0370(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	class USCUIWidgetDebugInfos*                  m_CurrentMenuInfos;                                // 0x03D0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USCUIWidgetDebugInfos*>          m_WidgetsInViewport;                               // 0x03D8(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<TSubclassOf<class USCViewModel>, class UViewModelsPool*> m_ViewModelPools;                  // 0x03E8(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class UObject>, struct FGameplayTagContainer> m_AskerToForcedHiddenLayers;   // 0x0438(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TSet<struct FGameplayTag>                     m_CurrentVisibleLayers;                            // 0x0488(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TSet<struct FGameplayTag>                     m_CurrentHiddenLayers;                             // 0x04D8(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSCDeferredPopup>               m_DeferredPopups;                                  // 0x0528(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(const struct FGameplayTag& _eventTag)> OnUIEventTriggered;         // 0x0538(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)

public:
	static void BPF_AddWidgetToViewport(const class APlayerController* _pc, TSubclassOf<class USCUserWidget> _widgetClass, const struct FGameplayTag& _layer, class USCUserWidget** _createdWidget);
	static void BPF_FindOrAddViewportWidgetOfClass(const class APlayerController* _pc, TSubclassOf<class USCUserWidget> _widgetClass, const struct FGameplayTag& _layer, class USCUserWidget** _widget);
	static void BPF_FindViewportWidgetOfClass(const class APlayerController* _pc, TSubclassOf<class USCUserWidget> _widgetClass, const struct FGameplayTag& _layer, class USCUserWidget** _widget);
	static void BPF_RemoveViewportWidget(const class APlayerController* _pc, class USCUserWidget* _widget);

	void BPF_BroadcastUIEvent(const struct FGameplayTag& _eventTag);
	class UViewModelsPool* BPF_GetOrCreateViewModelPoolChecked(TSubclassOf<class USCViewModel> _viewModelClass);
	void OnLocalPlayerWidgetAddedInViewport(class UWidget* _widget, class ULocalPlayer* _localPlayer);
	void OnLocalPlayerWidgetRemovedInViewport(class UWidget* _widget);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCUISubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCUISubsystem")
	}
	static class USCUISubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCUISubsystem>();
	}
};
DUMPER7_ASSERTS_USCUISubsystem;

// Class SCCore.SCUpdateCameraBlackboardBTService
// 0x0008 (0x00A0 - 0x0098)
class USCUpdateCameraBlackboardBTService : public UBTService_BlueprintBase
{
public:
	TWeakObjectPtr<class USCCameraComponent>      m_CameraComponent;                                 // 0x0098(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCUpdateCameraBlackboardBTService")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCUpdateCameraBlackboardBTService")
	}
	static class USCUpdateCameraBlackboardBTService* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCUpdateCameraBlackboardBTService>();
	}
};
DUMPER7_ASSERTS_USCUpdateCameraBlackboardBTService;

// Class SCCore.SCUserDefinedEnumBinding
// 0x00B0 (0x00D8 - 0x0028)
class USCUserDefinedEnumBinding : public UObject
{
public:
	class UEnum*                                  m_CppEnum;                                         // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnum*                                  m_BPEnum;                                          // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class FName>                m_CppToBPBinding;                                  // 0x0038(0x0050)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x50];                                      // 0x0088(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCUserDefinedEnumBinding")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCUserDefinedEnumBinding")
	}
	static class USCUserDefinedEnumBinding* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCUserDefinedEnumBinding>();
	}
};
DUMPER7_ASSERTS_USCUserDefinedEnumBinding;

// Class SCCore.SCVideoLightManager
// 0x00A8 (0x00D0 - 0x0028)
class USCVideoLightManager final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextureRenderTarget2D*>         m_RTChain;                                         // 0x0048(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               m_SamplerMaterialInstanceDynamic;                  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     m_SamplerMaterialBase;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvas*                                m_CanvasTarget;                                    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x58];                                      // 0x0078(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BPF_ExportCurveFromLight(class ULocalLightComponent* LightComponentToFind, class UCurveLinearColor* curveToFill);
	static void PreCache(class UMediaTexture* MediaTex, class UMediaSource* MediaSource, class UMaterialInterface* SamplerMaterialBase);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVideoLightManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVideoLightManager")
	}
	static class USCVideoLightManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCVideoLightManager>();
	}
};
DUMPER7_ASSERTS_USCVideoLightManager;

// Class SCCore.SCVideoLightManagerDebugger
// 0x0010 (0x00C8 - 0x00B8)
class USCVideoLightManagerDebugger final : public UActorComponent
{
public:
	class UTextureRenderTarget2D*                 m_currentRT;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               m_SamplerMaterialInstanceDynamic;                  // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVideoLightManagerDebugger")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVideoLightManagerDebugger")
	}
	static class USCVideoLightManagerDebugger* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCVideoLightManagerDebugger>();
	}
};
DUMPER7_ASSERTS_USCVideoLightManagerDebugger;

// Class SCCore.SCVideoSpotLightComponent
// 0x0020 (0x03F0 - 0x03D0)
class USCVideoSpotLightComponent final : public USpotLightComponent
{
public:
	struct FLinearColor                           m_FilterAdjustment;                                // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMediaTexture*                          m_MediaTex;                                        // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLengthInSecond;                                 // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      m_ColourCurve;                                     // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnMediaOpen(const class FString& _openedUrl);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVideoSpotLightComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVideoSpotLightComponent")
	}
	static class USCVideoSpotLightComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCVideoSpotLightComponent>();
	}
};
DUMPER7_ASSERTS_USCVideoSpotLightComponent;

// Class SCCore.SCVideoRectLightComponent
// 0x0030 (0x03F0 - 0x03C0)
class USCVideoRectLightComponent final : public URectLightComponent
{
public:
	struct FLinearColor                           m_FilterAdjustment;                                // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMediaTexture*                          m_MediaTex;                                        // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLengthInSecond;                                 // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      m_ColourCurve;                                     // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMediaOpen(const class FString& _openedUrl);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVideoRectLightComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVideoRectLightComponent")
	}
	static class USCVideoRectLightComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCVideoRectLightComponent>();
	}
};
DUMPER7_ASSERTS_USCVideoRectLightComponent;

// Class SCCore.SCVideoSpotLight
// 0x0000 (0x02C8 - 0x02C8)
class ASCVideoSpotLight final : public ASpotLight
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVideoSpotLight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVideoSpotLight")
	}
	static class ASCVideoSpotLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCVideoSpotLight>();
	}
};
DUMPER7_ASSERTS_ASCVideoSpotLight;

// Class SCCore.SCVideoPointLight
// 0x0000 (0x02C8 - 0x02C8)
class ASCVideoPointLight final : public APointLight
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVideoPointLight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVideoPointLight")
	}
	static class ASCVideoPointLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCVideoPointLight>();
	}
};
DUMPER7_ASSERTS_ASCVideoPointLight;

// Class SCCore.SCVisualLoggerHelper
// 0x0000 (0x0028 - 0x0028)
class USCVisualLoggerHelper final : public UBlueprintFunctionLibrary
{
public:
	static bool BPF_IsValidFilename(const class FString& _fileName, class FText* _outError);
	static void BPF_SetVisualLoggerPaused(bool _bPaused);
	static bool BPF_TakeVisualLoggerSnapshot(const class FString& _fileName, class FText* _outError);
	static void BPF_Vlog(const class FString& _inString, const class UObject* _logOwner, const class FString& _category, EDisplayLevel _eVerbosity);
	static void BPF_Vlog_Arrow(const class UObject* _logOwner, const class FString& _displayPath, const class FString& _name, const struct FLinearColor& _color, const struct FVector& _vSegmentStart, const struct FVector& _vSegmentEnd, float _fArrowSize, int32 _iShapeIndex, bool _bUseFirstPlayerPawn);
	static void BPF_Vlog_Box(const class UObject* _logOwner, const class FString& _displayPath, const class FString& _name, const struct FVector& _position, float _size, const struct FColor& _color);
	static void BPF_Vlog_Capsule(const class UObject* _logOwner, const class FString& _displayPath, const class FString& _name, const struct FLinearColor& _color, const struct FVector& _vCenter, float _fHalfHeight, float _fRadius, const struct FQuat& _qRotation, int32 _iShapeIndex, bool _bUseFirstPlayerPawn);
	static void BPF_Vlog_Circle(const class UObject* _logOwner, const class FString& _displayPath, const class FString& _name, const struct FLinearColor& _color, const struct FVector& _vCenter, float _fRadius, int32 Segments, const struct FVector& _vYAxis, const struct FVector& _vZAxis, int32 _iShapeIndex, bool _bUseFirstPlayerPawn);
	static void BPF_Vlog_Cylinder(const class UObject* _logOwner, const class FString& _displayPath, const class FString& _name, const struct FLinearColor& _color, const struct FVector& _vStart, const struct FVector& _vEnd, float _fRadius, int32 Segments, int32 _iShapeIndex, bool _bUseFirstPlayerPawn);
	static void BPF_Vlog_Location(const class UObject* _logOwner, const class FString& _displayPath, const class FString& _name, const struct FLinearColor& _color, const struct FVector& _vLocation, float _fRadius, int32 _iShapeIndex, bool _bUseFirstPlayerPawn);
	static void BPF_Vlog_Point(const class UObject* _logOwner, const class FString& _displayPath, const class FString& _name, const struct FLinearColor& _color, const struct FVector& _vLocation, float _fSize, int32 _iShapeIndex, bool _bUseFirstPlayerPawn);
	static void BPF_Vlog_Segment(const class UObject* _logOwner, const class FString& _displayPath, const class FString& _name, const struct FLinearColor& _color, const struct FVector& _vSegmentStart, const struct FVector& _vSegmentEnd, int32 _iShapeIndex, bool _bUseFirstPlayerPawn);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVisualLoggerHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVisualLoggerHelper")
	}
	static class USCVisualLoggerHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCVisualLoggerHelper>();
	}
};
DUMPER7_ASSERTS_USCVisualLoggerHelper;

// Class SCCore.SCVisualLoggerSettings
// 0x00C8 (0x0100 - 0x0038)
class USCVisualLoggerSettings final : public UDeveloperSettings
{
public:
	TSet<class FName>                             m_SetAllowDebugBones;                              // 0x0038(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TSet<class FName>                             m_SetAllowDebugBonesDrawTransform;                 // 0x0088(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	struct FKey                                   m_SnapshotKey;                                     // 0x00D8(0x0018)(Edit, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fAIMaxDistance;                                  // 0x00F0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4[0xC];                                       // 0x00F4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVisualLoggerSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVisualLoggerSettings")
	}
	static class USCVisualLoggerSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCVisualLoggerSettings>();
	}
};
DUMPER7_ASSERTS_USCVisualLoggerSettings;

// Class SCCore.SCVolumePortalComponent
// 0x0010 (0x0640 - 0x0630)
class USCVolumePortalComponent : public USCVolumeComponent
{
public:
	uint8                                         Pad_628[0x18];                                     // 0x0628(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVolumePortalComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVolumePortalComponent")
	}
	static class USCVolumePortalComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCVolumePortalComponent>();
	}
};
DUMPER7_ASSERTS_USCVolumePortalComponent;

// Class SCCore.SCVolumePlayerPortalComponent
// 0x0000 (0x0640 - 0x0640)
class USCVolumePlayerPortalComponent final : public USCVolumePortalComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVolumePlayerPortalComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVolumePlayerPortalComponent")
	}
	static class USCVolumePlayerPortalComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCVolumePlayerPortalComponent>();
	}
};
DUMPER7_ASSERTS_USCVolumePlayerPortalComponent;

// Class SCCore.SCVolumeVisualizerComponent
// 0x0000 (0x00B8 - 0x00B8)
class USCVolumeVisualizerComponent final : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCVolumeVisualizerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCVolumeVisualizerComponent")
	}
	static class USCVolumeVisualizerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCVolumeVisualizerComponent>();
	}
};
DUMPER7_ASSERTS_USCVolumeVisualizerComponent;

// Class SCCore.SCWidgetImage
// 0x00E0 (0x0480 - 0x03A0)
class USCWidgetImage final : public UImage
{
public:
	TSoftObjectPtr<class UTexture2D>              MaterialTexture0;                                  // 0x03A0(0x0028)(BlueprintVisible, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_MaterialTexture0ParameterName;                   // 0x03C8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              MaterialTexture1;                                  // 0x03D0(0x0028)(BlueprintVisible, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_MaterialTexture1ParameterName;                   // 0x03F8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaterialScalar0;                                   // 0x0400(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_MaterialScalar0ParameterName;                    // 0x0404(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaterialScalar1;                                   // 0x040C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_MaterialScalar1ParameterName;                    // 0x0410(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               MaterialVector0;                                   // 0x0420(0x0020)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_MaterialVector0ParameterName;                    // 0x0440(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               MaterialVector1;                                   // 0x0450(0x0020)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_MaterialVector1ParameterName;                    // 0x0470(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_478[0x8];                                      // 0x0478(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetMaterialScalar0(float _fValue);
	void SetMaterialScalar1(float _fValue);
	void SetMaterialTexture0(TSoftObjectPtr<class UTexture2D>* _texture);
	void SetMaterialTexture1(TSoftObjectPtr<class UTexture2D>* _texture);
	void SetMaterialVector0(const struct FVector4& _vValue);
	void SetMaterialVector1(const struct FVector4& _vValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWidgetImage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWidgetImage")
	}
	static class USCWidgetImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWidgetImage>();
	}
};
DUMPER7_ASSERTS_USCWidgetImage;

// Class SCCore.SCWorldNavControllerComponent
// 0x0000 (0x00B8 - 0x00B8)
class USCWorldNavControllerComponent : public UActorComponent
{
public:
	void BPF_GoToSector(const struct FGameplayTag& _transitionType, const struct FGameplayTag& _sectorId);

	struct FLinearColor BPF_GetDebugColor() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldNavControllerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldNavControllerComponent")
	}
	static class USCWorldNavControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWorldNavControllerComponent>();
	}
};
DUMPER7_ASSERTS_USCWorldNavControllerComponent;

// Class SCCore.SCWorldNavFlowGraph
// 0x0008 (0x0188 - 0x0180)
class USCWorldNavFlowGraph final : public USCFlowGraph
{
public:
	struct FGameplayTag                           m_TransitionsType;                                 // 0x0180(0x0008)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldNavFlowGraph")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldNavFlowGraph")
	}
	static class USCWorldNavFlowGraph* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWorldNavFlowGraph>();
	}
};
DUMPER7_ASSERTS_USCWorldNavFlowGraph;

// Class SCCore.SCWorldNavPortalTransitionNode
// 0x0008 (0x01E8 - 0x01E0)
class USCWorldNavPortalTransitionNode final : public USCFlowGraphPureConduitNode
{
public:
	TWeakObjectPtr<class AActor>                  m_DataOwner;                                       // 0x01E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldNavPortalTransitionNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldNavPortalTransitionNode")
	}
	static class USCWorldNavPortalTransitionNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWorldNavPortalTransitionNode>();
	}
};
DUMPER7_ASSERTS_USCWorldNavPortalTransitionNode;

// Class SCCore.SCWorldNavSectorControllerComponent
// 0x0010 (0x00C8 - 0x00B8)
class USCWorldNavSectorControllerComponent : public USCWorldNavControllerComponent
{
public:
	TWeakObjectPtr<class AActor>                  m_Owner;                                           // 0x00B8(0x0008)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           m_SectorId;                                        // 0x00C0(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldNavSectorControllerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldNavSectorControllerComponent")
	}
	static class USCWorldNavSectorControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWorldNavSectorControllerComponent>();
	}
};
DUMPER7_ASSERTS_USCWorldNavSectorControllerComponent;

// Class SCCore.SCWorldNavSectorNode
// 0x0018 (0x0188 - 0x0170)
class USCWorldNavSectorNode final : public USCFlowGraphNode
{
public:
	TWeakObjectPtr<class AActor>                  m_DataOwner;                                       // 0x0170(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USCWorldNavControllerComponent> m_DataOwnerController;                      // 0x0178(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_180[0x8];                                      // 0x0180(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldNavSectorNode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldNavSectorNode")
	}
	static class USCWorldNavSectorNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWorldNavSectorNode>();
	}
};
DUMPER7_ASSERTS_USCWorldNavSectorNode;

// Class SCCore.SCWorldNavSubsystem
// 0x01D8 (0x0338 - 0x0160)
class USCWorldNavSubsystem final : public USCWorldSubsystem
{
public:
	uint8                                         Pad_160[0x18];                                     // 0x0160(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESCWorldNavControllerType, struct FSCWorldNavControllers> m_RegisteredControllers;          // 0x0178(0x0050)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, class USCWorldNavFlowGraph*> m_FlowGraphInstanceList;                          // 0x01C8(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FGameplayTag> m_TransitionTypeToSectorStartList;                // 0x0218(0x0050)(Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USCWorldNavFlowGraph>    m_FlowGraphAsset;                                  // 0x0268(0x0028)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FSCWorldNavFlowGraphSettings> m_FlowGraphs;                     // 0x0290(0x0050)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UDataLayerAsset>         m_WorldNavDataLayer;                               // 0x02E8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bLoadDataLayersRecursively;                      // 0x0310(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iUnloadDatalayerDisatnce;                        // 0x0314(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UDataLayerInstance>      m_WorldNavDataLayerInstance;                       // 0x0318(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_320[0x18];                                     // 0x0320(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_CleanRefreshFlowGraphFromControllers();
	void BPF_GoToSector(const struct FGameplayTag& _transitionType, const struct FGameplayTag& _sectorId, const class FString& _debugTransitionName);
	void BPF_RefreshFlowGraphFromControllers();
	void BPF_SpawnActorInWorldNavDataLayer(TSubclassOf<class AActor> _class);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldNavSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldNavSubsystem")
	}
	static class USCWorldNavSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWorldNavSubsystem>();
	}
};
DUMPER7_ASSERTS_USCWorldNavSubsystem;

// Class SCCore.SCWorldNavTransitionControllerComponent
// 0x0050 (0x0108 - 0x00B8)
class USCWorldNavTransitionControllerComponent final : public USCWorldNavControllerComponent
{
public:
	TMap<struct FGameplayTag, struct FSCWorldNavTransition> m_TransitionList;                        // 0x00B8(0x0050)(Edit, NativeAccessSpecifierPrivate)

public:
	void BPF_GoToSectorA();
	void BPF_GoToSectorB();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldNavTransitionControllerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldNavTransitionControllerComponent")
	}
	static class USCWorldNavTransitionControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWorldNavTransitionControllerComponent>();
	}
};
DUMPER7_ASSERTS_USCWorldNavTransitionControllerComponent;

// Class SCCore.SCWorldNavZoneActor
// 0x0008 (0x02B8 - 0x02B0)
class ASCWorldNavZoneActor final : public AActor
{
public:
	class USCWorldNavZoneControllerComponent*     m_Controller;                                      // 0x02B0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldNavZoneActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldNavZoneActor")
	}
	static class ASCWorldNavZoneActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCWorldNavZoneActor>();
	}
};
DUMPER7_ASSERTS_ASCWorldNavZoneActor;

// Class SCCore.SCWorldNavZoneControllerComponent
// 0x0020 (0x00E8 - 0x00C8)
class USCWorldNavZoneControllerComponent final : public USCWorldNavSectorControllerComponent
{
public:
	TArray<TSoftObjectPtr<class UDataLayerAsset>> m_DataLayers;                                      // 0x00C8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FLinearColor                           m_ZoneColor;                                       // 0x00D8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldNavZoneControllerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldNavZoneControllerComponent")
	}
	static class USCWorldNavZoneControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWorldNavZoneControllerComponent>();
	}
};
DUMPER7_ASSERTS_USCWorldNavZoneControllerComponent;

// Class SCCore.SCWorldSubsystemsContainer
// 0x0050 (0x0078 - 0x0028)
class USCWorldSubsystemsContainer final : public UObject
{
public:
	TMap<class UWorld*, struct FSCWorldSubsystemsCollection> m_PerWorldSubSystems;                   // 0x0028(0x0050)(Transient, NativeAccessSpecifierPublic)

public:
	static class USCWorldSubsystem* BPF_GetWorldSubsystem(const class UObject* _worldContext, const struct FGameplayTag& _tag, bool _bForceMainWorld);
	static class USCWorldSubsystem* BPF_GetWorldSubsystemFromObject(const class UObject* _worldContext, const struct FGameplayTag& _tag, bool _bForceMainWorld);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCWorldSubsystemsContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCWorldSubsystemsContainer")
	}
	static class USCWorldSubsystemsContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCWorldSubsystemsContainer>();
	}
};
DUMPER7_ASSERTS_USCWorldSubsystemsContainer;

// Class SCCore.Section_NotifyState
// 0x0008 (0x0038 - 0x0030)
class USection_NotifyState final : public UAnimNotifyState
{
public:
	struct FGameplayTag                           m_SectionIdentifier;                               // 0x0030(0x0008)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Section_NotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Section_NotifyState")
	}
	static class USection_NotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<USection_NotifyState>();
	}
};
DUMPER7_ASSERTS_USection_NotifyState;

// Class SCCore.SelfActorCondition
// 0x0010 (0x0088 - 0x0078)
class USelfActorCondition final : public UTargetDataCondition
{
public:
	struct FBaseActorConditionInstance            m_Condition;                                       // 0x0078(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SelfActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SelfActorCondition")
	}
	static class USelfActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<USelfActorCondition>();
	}
};
DUMPER7_ASSERTS_USelfActorCondition;

// Class SCCore.SendGameplayEventNotify
// 0x0028 (0x0060 - 0x0038)
class USendGameplayEventNotify : public UAnimNotify
{
public:
	struct FGameplayTag                           m_EventTag;                                        // 0x0038(0x0008)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_InstigatorTags;                                  // 0x0040(0x0020)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SendGameplayEventNotify")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SendGameplayEventNotify")
	}
	static class USendGameplayEventNotify* GetDefaultObj()
	{
		return GetDefaultObjImpl<USendGameplayEventNotify>();
	}
};
DUMPER7_ASSERTS_USendGameplayEventNotify;

// Class SCCore.EnsureTargetDataTypeSnapComputation
// 0x0010 (0x0088 - 0x0078)
class UEnsureTargetDataTypeSnapComputation final : public USnapAnimationComputation
{
public:
	class UScriptStruct*                          m_FilterType;                                      // 0x0078(0x0008)(Edit, ZeroConstructor, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USnapAnimationComputation*              m_NextStep;                                        // 0x0080(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("EnsureTargetDataTypeSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"EnsureTargetDataTypeSnapComputation")
	}
	static class UEnsureTargetDataTypeSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnsureTargetDataTypeSnapComputation>();
	}
};
DUMPER7_ASSERTS_UEnsureTargetDataTypeSnapComputation;

// Class SCCore.LocoSnapComputation
// 0x0028 (0x00A0 - 0x0078)
class ULocoSnapComputation final : public USnapAnimationComputation
{
public:
	bool                                          m_bClampToMaxSpeed;                                // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLocoDurationScoreCostPerSecond;                 // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fLocoScaleScoreCost;                             // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatRange                            m_fAllowedSpeedDiffRangeWithCurrentVelocity;       // 0x0084(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fMinRequiredDuration;                            // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USnapAnimationComputation*              m_NextStepIfNeeded;                                // 0x0098(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LocoSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LocoSnapComputation")
	}
	static class ULocoSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULocoSnapComputation>();
	}
};
DUMPER7_ASSERTS_ULocoSnapComputation;

// Class SCCore.CropSnapComputation
// 0x0010 (0x0088 - 0x0078)
class UCropSnapComputation final : public USnapAnimationComputation
{
public:
	float                                         m_fScoreCostPerSec;                                // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fScoreCostPerSecAfterSnapStart;                  // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USnapAnimationComputation*              m_NextStep;                                        // 0x0080(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CropSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CropSnapComputation")
	}
	static class UCropSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCropSnapComputation>();
	}
};
DUMPER7_ASSERTS_UCropSnapComputation;

// Class SCCore.KeepSnapperDirectionSnapComputation
// 0x0010 (0x0088 - 0x0078)
class UKeepSnapperDirectionSnapComputation final : public USnapAnimationComputation
{
public:
	bool                                          m_bUseSnapEndAsRef;                                // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bIsMaxHorizontalNoSnapRangePerSec;               // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxHorizontalNoSnapRange;                       // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USnapAnimationComputation*              m_NextStep;                                        // 0x0080(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("KeepSnapperDirectionSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"KeepSnapperDirectionSnapComputation")
	}
	static class UKeepSnapperDirectionSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKeepSnapperDirectionSnapComputation>();
	}
};
DUMPER7_ASSERTS_UKeepSnapperDirectionSnapComputation;

// Class SCCore.ActorLocationTargetDataAsSnapStart
// 0x0010 (0x0088 - 0x0078)
class UActorLocationTargetDataAsSnapStart final : public USnapAnimationComputation
{
public:
	float                                         m_fSnapTimeOffset;                                 // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USnapAnimationComputation*              m_NextStep;                                        // 0x0080(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ActorLocationTargetDataAsSnapStart")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ActorLocationTargetDataAsSnapStart")
	}
	static class UActorLocationTargetDataAsSnapStart* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActorLocationTargetDataAsSnapStart>();
	}
};
DUMPER7_ASSERTS_UActorLocationTargetDataAsSnapStart;

// Class SCCore.TargetExtrapolationSnapComputation
// 0x0008 (0x0080 - 0x0078)
class UTargetExtrapolationSnapComputation final : public USnapAnimationComputation
{
public:
	class USnapAnimationComputation*              m_NextStep;                                        // 0x0078(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetExtrapolationSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetExtrapolationSnapComputation")
	}
	static class UTargetExtrapolationSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetExtrapolationSnapComputation>();
	}
};
DUMPER7_ASSERTS_UTargetExtrapolationSnapComputation;

// Class SCCore.KeepSnapperSpeedSnapComputation
// 0x0020 (0x0098 - 0x0078)
class UKeepSnapperSpeedSnapComputation final : public USnapAnimationComputation
{
public:
	bool                                          m_bKeepAnimSpeed;                                  // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatInterval                         m_fTimeOffsetRange;                                // 0x007C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatInterval                         m_fSpeedOffsetRange;                               // 0x0084(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USnapAnimationComputation*              m_NextStep;                                        // 0x0090(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("KeepSnapperSpeedSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"KeepSnapperSpeedSnapComputation")
	}
	static class UKeepSnapperSpeedSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKeepSnapperSpeedSnapComputation>();
	}
};
DUMPER7_ASSERTS_UKeepSnapperSpeedSnapComputation;

// Class SCCore.ForceSnapComputationValidation
// 0x0000 (0x0078 - 0x0078)
class UForceSnapComputationValidation final : public USnapAnimationComputation
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ForceSnapComputationValidation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ForceSnapComputationValidation")
	}
	static class UForceSnapComputationValidation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UForceSnapComputationValidation>();
	}
};
DUMPER7_ASSERTS_UForceSnapComputationValidation;

// Class SCCore.RedirectToTargetSnapComputation
// 0x0008 (0x0080 - 0x0078)
class URedirectToTargetSnapComputation final : public USnapAnimationComputation
{
public:
	class USnapAnimationComputation*              m_NextStep;                                        // 0x0078(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RedirectToTargetSnapComputation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RedirectToTargetSnapComputation")
	}
	static class URedirectToTargetSnapComputation* GetDefaultObj()
	{
		return GetDefaultObjImpl<URedirectToTargetSnapComputation>();
	}
};
DUMPER7_ASSERTS_URedirectToTargetSnapComputation;

// Class SCCore.SnapComputationContainer
// 0x0008 (0x0080 - 0x0078)
class USnapComputationContainer : public USnapAnimationComputation
{
public:
	class USnapAnimationComputation*              m_Computation;                                     // 0x0078(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SnapComputationContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SnapComputationContainer")
	}
	static class USnapComputationContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<USnapComputationContainer>();
	}
};
DUMPER7_ASSERTS_USnapComputationContainer;

// Class SCCore.SlotAnimSequencePicker
// 0x0008 (0x00A8 - 0x00A0)
class USlotAnimSequencePicker final : public UAnimSequencePicker
{
public:
	class FName                                   m_SlotName;                                        // 0x00A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SlotAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SlotAnimSequencePicker")
	}
	static class USlotAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<USlotAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_USlotAnimSequencePicker;

// Class SCCore.SnapAnimSequencePicker
// 0x0010 (0x01E0 - 0x01D0)
class USnapAnimSequencePicker final : public UBasicAnimSequencePicker
{
public:
	TSubclassOf<class UAnimationModifierComputation> m_SnapComputation;                              // 0x01D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D8[0x8];                                      // 0x01D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SnapAnimSequencePicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SnapAnimSequencePicker")
	}
	static class USnapAnimSequencePicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<USnapAnimSequencePicker>();
	}
};
DUMPER7_ASSERTS_USnapAnimSequencePicker;

// Class SCCore.SpeedActorTargetCondition
// 0x0020 (0x0048 - 0x0028)
class USpeedActorTargetCondition final : public UBaseActorTargetCondition
{
public:
	struct FFloatRange                            m_SelfSpeedRange;                                  // 0x0028(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_TargetSpeedRange;                                // 0x0038(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpeedActorTargetCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpeedActorTargetCondition")
	}
	static class USpeedActorTargetCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpeedActorTargetCondition>();
	}
};
DUMPER7_ASSERTS_USpeedActorTargetCondition;

// Class SCCore.StatsGlobalContainerViewModel
// 0x0010 (0x0080 - 0x0070)
class UStatsGlobalContainerViewModel : public USCViewModel
{
public:
	TArray<class UPlayerStatsViewModel*>          m_Players;                                         // 0x0070(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("StatsGlobalContainerViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"StatsGlobalContainerViewModel")
	}
	static class UStatsGlobalContainerViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStatsGlobalContainerViewModel>();
	}
};
DUMPER7_ASSERTS_UStatsGlobalContainerViewModel;

// Class SCCore.DataTableValueContainer
// 0x0000 (0x0000 - 0x0000)
class IDataTableValueContainer final
{
public:
	class UDataTable* BPE_GetDataTable() const;
	void BPE_GetDataTableRowHandle(struct FDataTableRowHandle* _outHandle) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DataTableValueContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DataTableValueContainer")
	}
	static class IDataTableValueContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<IDataTableValueContainer>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IDataTableValueContainer;

// Class SCCore.DataTableValueContainerActor
// 0x0028 (0x02D8 - 0x02B0)
class ADataTableValueContainerActor : public AActor
{
public:
	uint8                                         Pad_2B0[0x10];                                     // 0x02B0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    m_TableRow;                                        // 0x02C0(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UScriptStruct*                          m_TableRowType;                                    // 0x02D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UScriptStruct* GetCustomDataTableStruct() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DataTableValueContainerActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DataTableValueContainerActor")
	}
	static class ADataTableValueContainerActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADataTableValueContainerActor>();
	}
};
DUMPER7_ASSERTS_ADataTableValueContainerActor;

// Class SCCore.DataTableValueContainerComponent
// 0x0020 (0x00D8 - 0x00B8)
class UDataTableValueContainerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_B8[0x10];                                      // 0x00B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    m_TableRow;                                        // 0x00C8(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DataTableValueContainerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DataTableValueContainerComponent")
	}
	static class UDataTableValueContainerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDataTableValueContainerComponent>();
	}
};
DUMPER7_ASSERTS_UDataTableValueContainerComponent;

// Class SCCore.TagAvailabilityLayerHelpers
// 0x0000 (0x0028 - 0x0028)
class UTagAvailabilityLayerHelpers final : public UBlueprintFunctionLibrary
{
public:
	static class FString GetContainerEditorDesc(const struct FTagAvailabilityLayerContainerInstance& _tags);
	static class FString GetTagsEditorDesc(const struct FTagAvailabilityLayer& _tags);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TagAvailabilityLayerHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TagAvailabilityLayerHelpers")
	}
	static class UTagAvailabilityLayerHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTagAvailabilityLayerHelpers>();
	}
};
DUMPER7_ASSERTS_UTagAvailabilityLayerHelpers;

// Class SCCore.TagAvailabilityLayerNotifyState
// 0x0018 (0x0050 - 0x0038)
class UTagAvailabilityLayerNotifyState : public USCAbilityMontageNotifyState
{
public:
	bool                                          m_bLocallyControlledOnly;                          // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_iMoveInterruptBehavior;                          // 0x0039(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bWantToOverrideMoveInterruptMaxAngleDiff;        // 0x003A(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fOverrideMoveInterruptMaxAngleDiff;              // 0x003C(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTagAvailabilityLayerContainerInstance m_Tags;                                            // 0x0040(0x0010)(Edit, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TagAvailabilityLayerNotifyState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TagAvailabilityLayerNotifyState")
	}
	static class UTagAvailabilityLayerNotifyState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTagAvailabilityLayerNotifyState>();
	}
};
DUMPER7_ASSERTS_UTagAvailabilityLayerNotifyState;

// Class SCCore.TaggedObjectDataTable
// 0x0000 (0x00C0 - 0x00C0)
class UTaggedObjectDataTable final : public UDataTable
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TaggedObjectDataTable")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TaggedObjectDataTable")
	}
	static class UTaggedObjectDataTable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTaggedObjectDataTable>();
	}
};
DUMPER7_ASSERTS_UTaggedObjectDataTable;

// Class SCCore.TargetCondition
// 0x0010 (0x0038 - 0x0028)
class UTargetCondition final : public UBaseActorTargetCondition
{
public:
	struct FBaseActorConditionInstance            m_Condition;                                       // 0x0028(0x0010)(Edit, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetCondition")
	}
	static class UTargetCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetCondition>();
	}
};
DUMPER7_ASSERTS_UTargetCondition;

// Class SCCore.TargetDataContextProvider
// 0x0000 (0x0000 - 0x0000)
class ITargetDataContextProvider final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataContextProvider")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataContextProvider")
	}
	static class ITargetDataContextProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<ITargetDataContextProvider>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ITargetDataContextProvider;

// Class SCCore.TargetDataOutputProvider
// 0x0000 (0x0000 - 0x0000)
class ITargetDataOutputProvider final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataOutputProvider")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataOutputProvider")
	}
	static class ITargetDataOutputProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<ITargetDataOutputProvider>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ITargetDataOutputProvider;

// Class SCCore.TargetDataContextReceiver
// 0x0000 (0x0000 - 0x0000)
class ITargetDataContextReceiver final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataContextReceiver")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataContextReceiver")
	}
	static class ITargetDataContextReceiver* GetDefaultObj()
	{
		return GetDefaultObjImpl<ITargetDataContextReceiver>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ITargetDataContextReceiver;

// Class SCCore.TargetDataManifestHandlerContainer
// 0x0000 (0x0000 - 0x0000)
class ITargetDataManifestHandlerContainer final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDataManifestHandlerContainer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDataManifestHandlerContainer")
	}
	static class ITargetDataManifestHandlerContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<ITargetDataManifestHandlerContainer>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ITargetDataManifestHandlerContainer;

// Class SCCore.DataSourceNodalObjectBlueprint
// 0x0000 (0x00A8 - 0x00A8)
class UDataSourceNodalObjectBlueprint final : public UBlueprint
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DataSourceNodalObjectBlueprint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DataSourceNodalObjectBlueprint")
	}
	static class UDataSourceNodalObjectBlueprint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDataSourceNodalObjectBlueprint>();
	}
};
DUMPER7_ASSERTS_UDataSourceNodalObjectBlueprint;

// Class SCCore.LatentTargetDatasource
// 0x0008 (0x0088 - 0x0080)
class ULatentTargetDatasource final : public UTargetDatasource
{
public:
	uint8                                         Pad_80[0x8];                                       // 0x0080(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnTick(float _fDt);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("LatentTargetDatasource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"LatentTargetDatasource")
	}
	static class ULatentTargetDatasource* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULatentTargetDatasource>();
	}
};
DUMPER7_ASSERTS_ULatentTargetDatasource;

// Class SCCore.TargetDatasourceHelpers
// 0x0000 (0x0028 - 0x0028)
class UTargetDatasourceHelpers final : public UBlueprintFunctionLibrary
{
public:
	static class UTargetDatasource* BPF_GetDatasourceInstance(const struct FTargetDatasourceInstance& _instance);
	static void BPF_PickTarget(const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _context, TSubclassOf<class UTargetDatasource> _datasource, TSubclassOf<class UTargetPicker> _picker, struct FGameplayAbilityTargetDataHandle* _outTargetData, class UObject* _ownerObject);
	static void BPF_PickTargetOnProvider(const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _context, const struct FOnDemandTargetProvider& _provider, struct FGameplayAbilityTargetDataHandle* outTargetData);
	static void BPF_PickTargets(const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _context, TSubclassOf<class UTargetDatasource> _datasource, TSubclassOf<class UTargetPicker> _picker, TArray<struct FGameplayAbilityTargetDataHandle>* _outTargetData);
	static bool BPF_ValidateTarget(const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _context, const struct FOnDemandTargetProvider& _provider, const struct FGameplayAbilityTargetDataHandle& _target, bool _bValidateEmptyTarget);
	static void BPF_ValidateTargetBranch(const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _context, const struct FOnDemandTargetProvider& _provider, const struct FGameplayAbilityTargetDataHandle& _target, ETargetValidationResult* _outResult, bool _bValidateEmptyTarget);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDatasourceHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDatasourceHelpers")
	}
	static class UTargetDatasourceHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDatasourceHelpers>();
	}
};
DUMPER7_ASSERTS_UTargetDatasourceHelpers;

// Class SCCore.SnapLocationCondition
// 0x0030 (0x00A8 - 0x0078)
class USnapLocationCondition final : public UTargetDataCondition
{
public:
	bool                                          m_bTestLocalHorizontalRange;                       // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLocalHorizontalRange;                           // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bHalfCapsuleShape;                               // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_DistanceRange;                                   // 0x0084(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatRange                            m_HeightRange;                                     // 0x0094(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SnapLocationCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SnapLocationCondition")
	}
	static class USnapLocationCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<USnapLocationCondition>();
	}
};
DUMPER7_ASSERTS_USnapLocationCondition;

// Class SCCore.TargetAngleCondition
// 0x0018 (0x0090 - 0x0078)
class UTargetAngleCondition final : public UTargetDataCondition
{
public:
	EAngleComputeMethod                           m_eMethod;                                         // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAbsoluteAngle;                                  // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_AngleRange;                                      // 0x007C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bTargetAngleDrawDebug;                           // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetAngleCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetAngleCondition")
	}
	static class UTargetAngleCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetAngleCondition>();
	}
};
DUMPER7_ASSERTS_UTargetAngleCondition;

// Class SCCore.TargetPitchAngleCondition
// 0x0018 (0x0090 - 0x0078)
class UTargetPitchAngleCondition final : public UTargetDataCondition
{
public:
	bool                                          m_bUseDirToSelfAsRef;                              // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseFeetLocation;                                // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseTargetVelocityAsRef;                         // 0x007A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_AngleRange;                                      // 0x007C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetPitchAngleCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetPitchAngleCondition")
	}
	static class UTargetPitchAngleCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetPitchAngleCondition>();
	}
};
DUMPER7_ASSERTS_UTargetPitchAngleCondition;

// Class SCCore.TargetLocationCollideWithCapsuleCondition
// 0x0008 (0x0080 - 0x0078)
class UTargetLocationCollideWithCapsuleCondition final : public UTargetDataCondition
{
public:
	float                                         m_fCapsuleExtent;                                  // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetLocationCollideWithCapsuleCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetLocationCollideWithCapsuleCondition")
	}
	static class UTargetLocationCollideWithCapsuleCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetLocationCollideWithCapsuleCondition>();
	}
};
DUMPER7_ASSERTS_UTargetLocationCollideWithCapsuleCondition;

// Class SCCore.TargetLocationCurveCondition
// 0x0140 (0x01B8 - 0x0078)
class UTargetLocationCurveCondition final : public UTargetDataCondition
{
public:
	bool                                          m_bUseFeetLocation;                                // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fServerTolerance;                                // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseDistanceRange;                               // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseInputDirection;                              // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseSpeedDirection;                              // 0x0082(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_DistanceRange;                                   // 0x0084(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseHorizontalRange;                             // 0x0094(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     m_HorizontalRange;                                 // 0x0098(0x0088)(Edit, NativeAccessSpecifierPrivate)
	bool                                          m_bUseHeightRange;                                 // 0x0120(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     m_HeightRange;                                     // 0x0128(0x0088)(Edit, NativeAccessSpecifierPrivate)
	bool                                          m_bDrawDebug;                                      // 0x01B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_DrawDebugCurveCondition(const class AActor* _actor) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetLocationCurveCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetLocationCurveCondition")
	}
	static class UTargetLocationCurveCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetLocationCurveCondition>();
	}
};
DUMPER7_ASSERTS_UTargetLocationCurveCondition;

// Class SCCore.TargetActorCondition
// 0x0010 (0x0088 - 0x0078)
class UTargetActorCondition final : public UTargetDataCondition
{
public:
	struct FBaseActorTargetConditionInstance      m_TargetCondition;                                 // 0x0078(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetActorCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetActorCondition")
	}
	static class UTargetActorCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetActorCondition>();
	}
};
DUMPER7_ASSERTS_UTargetActorCondition;

// Class SCCore.SnapSpeedCondition
// 0x0010 (0x0088 - 0x0078)
class USnapSpeedCondition final : public UTargetDataCondition
{
public:
	struct FFloatRange                            m_SpeedDeltaRange;                                 // 0x0078(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SnapSpeedCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SnapSpeedCondition")
	}
	static class USnapSpeedCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<USnapSpeedCondition>();
	}
};
DUMPER7_ASSERTS_USnapSpeedCondition;

// Class SCCore.TargetDelayCondition
// 0x0018 (0x0090 - 0x0078)
class UTargetDelayCondition final : public UTargetDataCondition
{
public:
	struct FFloatRange                            m_DelayRange;                                      // 0x0078(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fServerTolerance;                                // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bAcceptTargetWithoutDelay;                       // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bUseCharacterSpeedWithTargetWithoutDelay;        // 0x008D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetDelayCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetDelayCondition")
	}
	static class UTargetDelayCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetDelayCondition>();
	}
};
DUMPER7_ASSERTS_UTargetDelayCondition;

// Class SCCore.TargetMovingCondition
// 0x0008 (0x0080 - 0x0078)
class UTargetMovingCondition final : public UTargetDataCondition
{
public:
	bool                                          m_bMoving;                                         // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetMovingCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetMovingCondition")
	}
	static class UTargetMovingCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetMovingCondition>();
	}
};
DUMPER7_ASSERTS_UTargetMovingCondition;

// Class SCCore.AccelerationRangeCondition
// 0x0018 (0x0090 - 0x0078)
class UAccelerationRangeCondition final : public UTargetDataCondition
{
public:
	bool                                          m_bStartFromZeroSpeed;                             // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxSpeed;                                       // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fAcceleration;                                   // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bClientOnly;                                     // 0x0084(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fServerValidationRangeTolerance;                 // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AccelerationRangeCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AccelerationRangeCondition")
	}
	static class UAccelerationRangeCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAccelerationRangeCondition>();
	}
};
DUMPER7_ASSERTS_UAccelerationRangeCondition;

// Class SCCore.HasRaycastHitToTargetDataCondition
// 0x0028 (0x00A0 - 0x0078)
class UHasRaycastHitToTargetDataCondition final : public UTargetDataCondition
{
public:
	ECollisionChannel                             m_eTraceChannel;                                   // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bTraceComplex;                                   // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCollisionResponseContainer            m_ResponseParams;                                  // 0x007A(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          m_bSucceedOnHit;                                   // 0x009A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HasRaycastHitToTargetDataCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HasRaycastHitToTargetDataCondition")
	}
	static class UHasRaycastHitToTargetDataCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHasRaycastHitToTargetDataCondition>();
	}
};
DUMPER7_ASSERTS_UHasRaycastHitToTargetDataCondition;

// Class SCCore.TargetReachableOnTimeWithLocoCondition
// 0x0050 (0x00C8 - 0x0078)
class UTargetReachableOnTimeWithLocoCondition final : public UTargetDataConditionWithWeightEvaluation
{
public:
	struct FTargetReachableOnTimeWithLocoConditionData m_Data;                                       // 0x0078(0x0044)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	float                                         m_fDelayScoreMalus;                                // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         m_fVelocityScoreMalus;                             // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	ETargetReachableOnTimeWithLocoCondition_Result BPF_EvaluateTargetSpeed(const class AActor* _actor, const struct FGameplayAbilityTargetDataHandle& _handle, bool _bLog) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetReachableOnTimeWithLocoCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetReachableOnTimeWithLocoCondition")
	}
	static class UTargetReachableOnTimeWithLocoCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetReachableOnTimeWithLocoCondition>();
	}
};
DUMPER7_ASSERTS_UTargetReachableOnTimeWithLocoCondition;

// Class SCCore.TestModel
// 0x0038 (0x0060 - 0x0028)
class UTestModel : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMVVMViewModelContext                  m_ViewModelContext;                                // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UTestViewModel*                         m_ViewModel;                                       // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_48[0x18];                                      // 0x0048(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BPF_ResetForm();
	void BPF_ValidateForm_A();
	void DeInitialize();
	void Initialize(const class UObject* _worldContextObj);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TestModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TestModel")
	}
	static class UTestModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestModel>();
	}
};
DUMPER7_ASSERTS_UTestModel;

// Class SCCore.TestViewModel
// 0x0038 (0x00A8 - 0x0070)
class UTestViewModel : public USCViewModel
{
public:
	bool                                          m_bNativeIsChecked_A;                              // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bNativeIsChecked_B;                              // 0x0071(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bNativeIsCheckedWritable_C;                      // 0x0072(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_NativeText_A;                                    // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   m_NativeText_B;                                    // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<class UTestViewModelChild*>            m_ChildrenVMs;                                     // 0x0098(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void BPF_SetChildFirstName(int32 _iChildIndex, const class FString& _newName);
	void BPF_SetChildLastName(int32 _iChildIndex, const class FString& _newName);
	void BPF_SetChildViewModel(int32 _iChildIndex, class UTestViewModelChild* _childViewModel);

	class UTestViewModelChild* GetChildViewModel(int32 _iIndex) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TestViewModel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TestViewModel")
	}
	static class UTestViewModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestViewModel>();
	}
};
DUMPER7_ASSERTS_UTestViewModel;

// Class SCCore.TestViewModelChild
// 0x0028 (0x0098 - 0x0070)
class UTestViewModelChild final : public USCViewModel
{
public:
	int32                                         m_iIndex;                                          // 0x0070(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_FirstName;                                       // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 m_LastName;                                        // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TestViewModelChild")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TestViewModelChild")
	}
	static class UTestViewModelChild* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestViewModelChild>();
	}
};
DUMPER7_ASSERTS_UTestViewModelChild;

// Class SCCore.ToolTipWidget
// 0x0020 (0x0C10 - 0x0BF0)
class UToolTipWidget final : public USCUserWidget
{
public:
	TWeakObjectPtr<class USCUserWidget>           m_Widget;                                          // 0x0BF0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BF8[0x18];                                     // 0x0BF8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ToolTipWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ToolTipWidget")
	}
	static class UToolTipWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UToolTipWidget>();
	}
};
DUMPER7_ASSERTS_UToolTipWidget;

// Class SCCore.TransitionRotationPointsHelper
// 0x0000 (0x0028 - 0x0028)
class UTransitionRotationPointsHelper final : public UBlueprintFunctionLibrary
{
public:
	static ETransitionRotation BPF_AngleRadToTransitionRotation(float _fAngle, bool _bOnly90DegSteps);
	static ETransitionRotation BPF_CardinalDiffToTransitionRotation(ESCCardinalPoints _eInCardinal, ESCCardinalPoints _eOutCardinal);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TransitionRotationPointsHelper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TransitionRotationPointsHelper")
	}
	static class UTransitionRotationPointsHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTransitionRotationPointsHelper>();
	}
};
DUMPER7_ASSERTS_UTransitionRotationPointsHelper;

// Class SCCore.TransitionTypeCondition
// 0x0008 (0x0030 - 0x0028)
class UTransitionTypeCondition final : public UBaseActorCondition
{
public:
	int32                                         m_iTransitionType;                                 // 0x0028(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TransitionTypeCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TransitionTypeCondition")
	}
	static class UTransitionTypeCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTransitionTypeCondition>();
	}
};
DUMPER7_ASSERTS_UTransitionTypeCondition;

// Class SCCore.TrumpetSkewData
// 0x0018 (0x0048 - 0x0030)
class UTrumpetSkewData final : public USkewData
{
public:
	float                                         m_fSkewZoneAngleDeg;                               // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSkewZoneRadius;                                 // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_Curve;                                           // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETrumpetSkewType                              m_eTrumpetSkewType;                                // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TrumpetSkewData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TrumpetSkewData")
	}
	static class UTrumpetSkewData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrumpetSkewData>();
	}
};
DUMPER7_ASSERTS_UTrumpetSkewData;

// Class SCCore.VectorInputConditionProxy
// 0x02E0 (0x0310 - 0x0030)
class UVectorInputConditionProxy final : public UInputConditionProxy
{
public:
	struct FInputMappingKeySlotContainer          m_HorizontalSlot;                                  // 0x0030(0x0170)(Edit, EditFixedSize, NativeAccessSpecifierPrivate)
	struct FInputMappingKeySlotContainer          m_VerticalSlot;                                    // 0x01A0(0x0170)(Edit, EditFixedSize, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VectorInputConditionProxy")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VectorInputConditionProxy")
	}
	static class UVectorInputConditionProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVectorInputConditionProxy>();
	}
};
DUMPER7_ASSERTS_UVectorInputConditionProxy;

// Class SCCore.VelocityCondition
// 0x0018 (0x0040 - 0x0028)
class UVelocityCondition final : public UBaseActorCondition
{
public:
	EOperationType                                m_eOperation;                                      // 0x0028(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        m_fVelocity;                                       // 0x0030(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bVertical;                                       // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAbsolute;                                       // 0x0039(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VelocityCondition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VelocityCondition")
	}
	static class UVelocityCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVelocityCondition>();
	}
};
DUMPER7_ASSERTS_UVelocityCondition;

// Class SCCore.AbstractVisibilityAsOptionWidgetComponent
// 0x0020 (0x0048 - 0x0028)
class UAbstractVisibilityAsOptionWidgetComponent : public USCWidgetComponent
{
public:
	TSubclassOf<class UGameOption>                m_OptionBoundTo;                                   // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 m_fVisibleAtOptionValues;                          // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbstractVisibilityAsOptionWidgetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbstractVisibilityAsOptionWidgetComponent")
	}
	static class UAbstractVisibilityAsOptionWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbstractVisibilityAsOptionWidgetComponent>();
	}
};
DUMPER7_ASSERTS_UAbstractVisibilityAsOptionWidgetComponent;

// Class SCCore.VisibilityAsOptionWidgetComponent
// 0x0008 (0x0050 - 0x0048)
class UVisibilityAsOptionWidgetComponent final : public UAbstractVisibilityAsOptionWidgetComponent
{
public:
	ESlateVisibility                              m_eVisible;                                        // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              m_eHidden;                                         // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("VisibilityAsOptionWidgetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"VisibilityAsOptionWidgetComponent")
	}
	static class UVisibilityAsOptionWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVisibilityAsOptionWidgetComponent>();
	}
};
DUMPER7_ASSERTS_UVisibilityAsOptionWidgetComponent;

// Class SCCore.BlueprintableVisibilityAsOptionWidgetComponent
// 0x0000 (0x0048 - 0x0048)
class UBlueprintableVisibilityAsOptionWidgetComponent : public UAbstractVisibilityAsOptionWidgetComponent
{
public:
	void BPE_SetWidgetVisibility(class USCUserWidget* _userWidget, bool _bVisible);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("BlueprintableVisibilityAsOptionWidgetComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BlueprintableVisibilityAsOptionWidgetComponent")
	}
	static class UBlueprintableVisibilityAsOptionWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintableVisibilityAsOptionWidgetComponent>();
	}
};
DUMPER7_ASSERTS_UBlueprintableVisibilityAsOptionWidgetComponent;

// Class SCCore.WeightedAnimationPicker
// 0x0060 (0x0100 - 0x00A0)
class UWeightedAnimationPicker final : public UAnimSequencePicker
{
public:
	bool                                          m_bAlwaysValid;                                    // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bEvaluateMirror;                                 // 0x00A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bEarlyReturnFirstAnimUpperWeightThreshold;       // 0x00A2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fEarlyWeightThreshold;                           // 0x00A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTargetWeightEvaluationInstance        m_Evaluation;                                      // 0x00A8(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FWeightedAnimSequencePickerData> m_AnimPickers;                                    // 0x00B8(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAnimSequencePickerInstance            m_DefaultAnimSequence;                             // 0x00C8(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeightedAnimationPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeightedAnimationPicker")
	}
	static class UWeightedAnimationPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeightedAnimationPicker>();
	}
};
DUMPER7_ASSERTS_UWeightedAnimationPicker;

// Class SCCore.TargetWeightEvaluationHelpers
// 0x0000 (0x0028 - 0x0028)
class UTargetWeightEvaluationHelpers final : public UBlueprintFunctionLibrary
{
public:
	static class FString GetEditorDesc(const struct FTargetWeightEvaluationInstance& _instance);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TargetWeightEvaluationHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TargetWeightEvaluationHelpers")
	}
	static class UTargetWeightEvaluationHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetWeightEvaluationHelpers>();
	}
};
DUMPER7_ASSERTS_UTargetWeightEvaluationHelpers;

// Class SCCore.WeightedTargetPicker
// 0x0020 (0x0048 - 0x0028)
class UWeightedTargetPicker : public UTargetPicker
{
public:
	int32                                         m_iCount;                                          // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bHighestWeightFirst;                             // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          m_bOnlyAdjacentData;                               // 0x002D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTargetWeightEvaluationInstance        m_Evaluation;                                      // 0x0030(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                          m_bDisplayVisualLogWeight;                         // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeightedTargetPicker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeightedTargetPicker")
	}
	static class UWeightedTargetPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeightedTargetPicker>();
	}
};
DUMPER7_ASSERTS_UWeightedTargetPicker;

// Class SCCore.AbilityTask_ApplyRootMotionTransition_Base
// 0x0078 (0x0160 - 0x00E8)
class UAbilityTask_ApplyRootMotionTransition_Base : public UAbilityTask_ApplyRootMotion_Base
{
public:
	TMulticastInlineDelegate<void(ETransitionStopReason _eStopReason)> OnFinished;                   // 0x00E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal              m_vWantedDir;                                      // 0x00F8(0x0018)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSCTransitionIntialState               m_InitialState;                                    // 0x0110(0x0050)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UAbilityTask_ApplyRootMotionTransition_Base* ApplyRootMotionStaticTransition(class UGameplayAbility* _owningAbility, class FName _taskInstanceName, TSubclassOf<class USCTransitionDB> _transitionDB, const struct FSCTransition& _transition, const struct FVector& _vStartVelocity, bool _bWasOrientedToMovement, const struct FVector& _vWantedDir, ERootMotionFinishVelocityMode _eVelocityOnFinishMode, const struct FVector& _vSetVelocityOnFinish, float _fClampVelocityOnFinish);

	void BPF_StopTransition(ETransitionStopReason _eStopReason);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_ApplyRootMotionTransition_Base")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_ApplyRootMotionTransition_Base")
	}
	static class UAbilityTask_ApplyRootMotionTransition_Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_ApplyRootMotionTransition_Base>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_ApplyRootMotionTransition_Base;

// Class SCCore.AbilityTask_ApplyRootMotionTransition
// 0x0030 (0x0190 - 0x0160)
class UAbilityTask_ApplyRootMotionTransition final : public UAbilityTask_ApplyRootMotionTransition_Base
{
public:
	TSubclassOf<class USpeedDescriptionDB>        m_SpeedDescriptionDB;                              // 0x0160(0x0008)(Net, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         m_uiPendingMoveUID;                                // 0x0168(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_169[0x27];                                     // 0x0169(0x0027)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAbilityTask_ApplyRootMotionTransition* ApplyRootMotionTransition(class UGameplayAbility* _owningAbility, class FName _taskInstanceName, TSubclassOf<class USCTransitionDB> _transitionDB, const struct FSCTransition& _transition, const struct FVector& _vStartVelocity, bool _bWasOrientedToMovement, const struct FVector& _vWantedDir, ERootMotionFinishVelocityMode _eVelocityOnFinishMode, const struct FVector& _vSetVelocityOnFinish, float _fClampVelocityOnFinish, class USCInputAction* _action, uint8 _uiPendingMoveDirectionUID);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AbilityTask_ApplyRootMotionTransition")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AbilityTask_ApplyRootMotionTransition")
	}
	static class UAbilityTask_ApplyRootMotionTransition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbilityTask_ApplyRootMotionTransition>();
	}
};
DUMPER7_ASSERTS_UAbilityTask_ApplyRootMotionTransition;

// Class SCCore.MovieSceneBinkMediaSection
// 0x0120 (0x0210 - 0x00F0)
class UMovieSceneBinkMediaSection final : public UMovieSceneSection
{
public:
	bool                                          bLooping;                                          // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameNumber                           StartFrameOffset;                                  // 0x00F4(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBinkMediaTexture*                      MediaTexture;                                      // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMediaSourceCacheSettings              CacheSettings;                                     // 0x0100(0x0008)(Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FMovieSceneBoolChannel                 ChannelCanPlayerBeOpen;                            // 0x0108(0x0108)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneBinkMediaSection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneBinkMediaSection")
	}
	static class UMovieSceneBinkMediaSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneBinkMediaSection>();
	}
};
DUMPER7_ASSERTS_UMovieSceneBinkMediaSection;

// Class SCCore.SubsystemDynamicPossession
// 0x0000 (0x0028 - 0x0028)
class USubsystemDynamicPossession final : public UBlueprintFunctionLibrary
{
public:
	static struct FMovieSceneDynamicBindingResolveResult FindSubsystemBindingByClass(class UObject* WorldContextObject, TSubclassOf<class USCSubsystem> Class_0);
	static class USCSubsystem* FindSubsystemInstanceByClass(class UObject* WorldContextObject, TSubclassOf<class USCSubsystem> Class_0);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SubsystemDynamicPossession")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SubsystemDynamicPossession")
	}
	static class USubsystemDynamicPossession* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubsystemDynamicPossession>();
	}
};
DUMPER7_ASSERTS_USubsystemDynamicPossession;

// Class SCCore.SCGameUserSettings
// 0x0000 (0x0150 - 0x0150)
class USCGameUserSettings final : public UGameUserSettings
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCGameUserSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCGameUserSettings")
	}
	static class USCGameUserSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCGameUserSettings>();
	}
};
DUMPER7_ASSERTS_USCGameUserSettings;

// Class SCCore.SCPerfStatWidgetBase
// 0x0010 (0x0C00 - 0x0BF0)
class USCPerfStatWidgetBase final : public USCUserWidget
{
public:
	class USCPerformanceStatSubsystem*            m_CachedStatSubsystem;                             // 0x0BF0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCDisplayablePerformanceStat                 m_eStatToDisplay;                                  // 0x0BF8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BF9[0x7];                                      // 0x0BF9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	double FetchStatValue();

	ESCDisplayablePerformanceStat GetStatToDisplay() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPerfStatWidgetBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPerfStatWidgetBase")
	}
	static class USCPerfStatWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPerfStatWidgetBase>();
	}
};
DUMPER7_ASSERTS_USCPerfStatWidgetBase;

// Class SCCore.SCSimulatedInputWidget
// 0x0040 (0x03F0 - 0x03B0)
class USCSimulatedInputWidget final : public UCommonUserWidget
{
public:
	class UCommonHardwareVisibilityBorder*        CommonVisibilityBorder;                            // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                           AssociatedAction;                                  // 0x03B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKey                                   FallbackBindingKey;                                // 0x03C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D8[0x18];                                     // 0x03D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FlushSimulatedInput();
	void InputKeyValue(const struct FVector& Value);
	void InputKeyValue2D(const struct FVector2D& Value);
	void OnControlMappingsRebuilt();

	const class UInputAction* GetAssociatedAction() const;
	class UEnhancedInputLocalPlayerSubsystem* GetEnhancedInputSubsystem() const;
	struct FKey GetSimulatedKey() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCSimulatedInputWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCSimulatedInputWidget")
	}
	static class USCSimulatedInputWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCSimulatedInputWidget>();
	}
};
DUMPER7_ASSERTS_USCSimulatedInputWidget;

// Class SCCore.MovieSceneGameplayTagSection
// 0x0100 (0x01F0 - 0x00F0)
class UMovieSceneGameplayTagSection final : public UMovieSceneSection
{
public:
	struct FMovieSceneGameplayTagData             GameplayTagData;                                   // 0x00F0(0x0100)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneGameplayTagSection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneGameplayTagSection")
	}
	static class UMovieSceneGameplayTagSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneGameplayTagSection>();
	}
};
DUMPER7_ASSERTS_UMovieSceneGameplayTagSection;

// Class SCCore.MovieSceneGameplayTagTrack
// 0x0008 (0x00D0 - 0x00C8)
class UMovieSceneGameplayTagTrack final : public UMovieScenePropertyTrack
{
public:
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneGameplayTagTrack")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneGameplayTagTrack")
	}
	static class UMovieSceneGameplayTagTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneGameplayTagTrack>();
	}
};
DUMPER7_ASSERTS_UMovieSceneGameplayTagTrack;

// Class SCCore.MovieSceneLightingChannelTrack
// 0x0008 (0x00D0 - 0x00C8)
class UMovieSceneLightingChannelTrack final : public UMovieScenePropertyTrack
{
public:
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneLightingChannelTrack")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneLightingChannelTrack")
	}
	static class UMovieSceneLightingChannelTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneLightingChannelTrack>();
	}
};
DUMPER7_ASSERTS_UMovieSceneLightingChannelTrack;

// Class SCCore.SCPerformanceStatSubsystem
// 0x0010 (0x0040 - 0x0030)
class USCPerformanceStatSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	double GetCachedStat(ESCDisplayablePerformanceStat _eStat) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SCPerformanceStatSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SCPerformanceStatSubsystem")
	}
	static class USCPerformanceStatSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCPerformanceStatSubsystem>();
	}
};
DUMPER7_ASSERTS_USCPerformanceStatSubsystem;

}

