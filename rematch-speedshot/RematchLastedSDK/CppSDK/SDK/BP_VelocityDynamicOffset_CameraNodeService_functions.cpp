#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VelocityDynamicOffset_CameraNodeService

#include "Basic.hpp"

#include "BP_VelocityDynamicOffset_CameraNodeService_classes.hpp"
#include "BP_VelocityDynamicOffset_CameraNodeService_parameters.hpp"


namespace SDK
{

// Function BP_VelocityDynamicOffset_CameraNodeService.BP_VelocityDynamicOffset_CameraNodeService_C.BPE_IsServiceActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_VelocityDynamicOffset_CameraNodeService_C::BPE_IsServiceActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityDynamicOffset_CameraNodeService_C", "BPE_IsServiceActive");

	Params::BP_VelocityDynamicOffset_CameraNodeService_C_BPE_IsServiceActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VelocityDynamicOffset_CameraNodeService.BP_VelocityDynamicOffset_CameraNodeService_C.BPE_OnUpdateNode
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _fDt                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _bBlendOut                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VelocityDynamicOffset_CameraNodeService_C::BPE_OnUpdateNode(float _fDt, bool _bBlendOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityDynamicOffset_CameraNodeService_C", "BPE_OnUpdateNode");

	Params::BP_VelocityDynamicOffset_CameraNodeService_C_BPE_OnUpdateNode Parms{};

	Parms._fDt = _fDt;
	Parms._bBlendOut = _bBlendOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VelocityDynamicOffset_CameraNodeService.BP_VelocityDynamicOffset_CameraNodeService_C.BPE_PostInit
// (Event, Public, BlueprintEvent)

void UBP_VelocityDynamicOffset_CameraNodeService_C::BPE_PostInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityDynamicOffset_CameraNodeService_C", "BPE_PostInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VelocityDynamicOffset_CameraNodeService.BP_VelocityDynamicOffset_CameraNodeService_C.CalculateOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         IdealOffset                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         AboveIdealOffset                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         BelowIdealOffset                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VelocityDynamicOffset_CameraNodeService_C::CalculateOffset(struct FVector* IdealOffset, struct FVector* AboveIdealOffset, struct FVector* BelowIdealOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityDynamicOffset_CameraNodeService_C", "CalculateOffset");

	Params::BP_VelocityDynamicOffset_CameraNodeService_C_CalculateOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IdealOffset != nullptr)
		*IdealOffset = std::move(Parms.IdealOffset);

	if (AboveIdealOffset != nullptr)
		*AboveIdealOffset = std::move(Parms.AboveIdealOffset);

	if (BelowIdealOffset != nullptr)
		*BelowIdealOffset = std::move(Parms.BelowIdealOffset);
}


// Function BP_VelocityDynamicOffset_CameraNodeService.BP_VelocityDynamicOffset_CameraNodeService_C.ExecuteUbergraph_BP_VelocityDynamicOffset_CameraNodeService
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VelocityDynamicOffset_CameraNodeService_C::ExecuteUbergraph_BP_VelocityDynamicOffset_CameraNodeService(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityDynamicOffset_CameraNodeService_C", "ExecuteUbergraph_BP_VelocityDynamicOffset_CameraNodeService");

	Params::BP_VelocityDynamicOffset_CameraNodeService_C_ExecuteUbergraph_BP_VelocityDynamicOffset_CameraNodeService Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VelocityDynamicOffset_CameraNodeService.BP_VelocityDynamicOffset_CameraNodeService_C.GetRatioFromDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D*                       Ratio                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VelocityDynamicOffset_CameraNodeService_C::GetRatioFromDirection(struct FVector2D* Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityDynamicOffset_CameraNodeService_C", "GetRatioFromDirection");

	Params::BP_VelocityDynamicOffset_CameraNodeService_C_GetRatioFromDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ratio != nullptr)
		*Ratio = std::move(Parms.Ratio);
}


// Function BP_VelocityDynamicOffset_CameraNodeService.BP_VelocityDynamicOffset_CameraNodeService_C.UpdateIdleTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VelocityDynamicOffset_CameraNodeService_C::UpdateIdleTimer(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VelocityDynamicOffset_CameraNodeService_C", "UpdateIdleTimer");

	Params::BP_VelocityDynamicOffset_CameraNodeService_C_UpdateIdleTimer Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

