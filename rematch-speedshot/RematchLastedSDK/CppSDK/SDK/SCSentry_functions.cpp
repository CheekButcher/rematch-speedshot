#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SCSentry

#include "Basic.hpp"

#include "SCSentry_classes.hpp"
#include "SCSentry_parameters.hpp"


namespace SDK
{

// Function SCSentry.SCSentry.AddBreadcrumbWithParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    _message                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    _category                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    _type                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TMap<class FString, class FString>&_data                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ESCSentryLevel                          Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USCSentry::AddBreadcrumbWithParams(const class FString& _message, const class FString& _category, const class FString& _type, const TMap<class FString, class FString>& _data, ESCSentryLevel Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SCSentry", "AddBreadcrumbWithParams");

	Params::SCSentry_AddBreadcrumbWithParams Parms{};

	Parms._message = std::move(_message);
	Parms._category = std::move(_category);
	Parms._type = std::move(_type);
	Parms._data = std::move(_data);
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SCSentry.SCSentry.CaptureMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    _message                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    _logCategory                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESCSentryLevel                          _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USCSentry::CaptureMessage(const class FString& _message, const class FString& _logCategory, ESCSentryLevel _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SCSentry", "CaptureMessage");

	Params::SCSentry_CaptureMessage Parms{};

	Parms._message = std::move(_message);
	Parms._logCategory = std::move(_logCategory);
	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SCSentry.SCSentry.RemoveTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    _key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USCSentry::RemoveTag(const class FString& _key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SCSentry", "RemoveTag");

	Params::SCSentry_RemoveTag Parms{};

	Parms._key = std::move(_key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SCSentry.SCSentry.SetTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    _key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USCSentry::SetTag(const class FString& _key, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SCSentry", "SetTag");

	Params::SCSentry_SetTag Parms{};

	Parms._key = std::move(_key);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

