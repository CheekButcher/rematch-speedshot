#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_ShootAbility_Base

#include "Basic.hpp"

#include "GC_ShootAbility_Base_classes.hpp"
#include "GC_ShootAbility_Base_parameters.hpp"


namespace SDK
{

// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.AfterImpactEvent
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USCAbilitySystemComponent*  _abilitySystem                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _gameplayTag                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   _iCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_ShootAbility_Base_C::AfterImpactEvent(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "AfterImpactEvent");

	Params::GC_ShootAbility_Base_C_AfterImpactEvent Parms{};

	Parms._abilitySystem = _abilitySystem;
	Parms._gameplayTag = std::move(_gameplayTag);
	Parms._iCount = _iCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.AfterImpactTagAdded
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::AfterImpactTagAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "AfterImpactTagAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.AfterImpactTagRemoved
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::AfterImpactTagRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "AfterImpactTagRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.BeforeImpactAdded
// (BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::BeforeImpactAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "BeforeImpactAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.BeforeImpactEvent
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USCAbilitySystemComponent*  _abilitySystem                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _gameplayTag                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   _iCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_ShootAbility_Base_C::BeforeImpactEvent(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "BeforeImpactEvent");

	Params::GC_ShootAbility_Base_C_BeforeImpactEvent Parms{};

	Parms._abilitySystem = _abilitySystem;
	Parms._gameplayTag = std::move(_gameplayTag);
	Parms._iCount = _iCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.BeforeImpactTagAdded
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::BeforeImpactTagAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "BeforeImpactTagAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.BeforeImpactTagRemoved
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::BeforeImpactTagRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "BeforeImpactTagRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.ControllerDynamicForceFeedback
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OnImpactShootForceFeedback                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_ShootAbility_Base_C::ControllerDynamicForceFeedback(bool OnImpactShootForceFeedback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "ControllerDynamicForceFeedback");

	Params::GC_ShootAbility_Base_C_ControllerDynamicForceFeedback Parms{};

	Parms.OnImpactShootForceFeedback = OnImpactShootForceFeedback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.Data Applied Event
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USCAbilitySystemComponent*  _abilitySystem                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _gameplayTag                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   _iCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_ShootAbility_Base_C::Data_Applied_Event(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "Data Applied Event");

	Params::GC_ShootAbility_Base_C_Data_Applied_Event Parms{};

	Parms._abilitySystem = _abilitySystem;
	Parms._gameplayTag = std::move(_gameplayTag);
	Parms._iCount = _iCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.DataAppliedTagAdded
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::DataAppliedTagAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "DataAppliedTagAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.DataAppliedTagRemoved
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::DataAppliedTagRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "DataAppliedTagRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.ExecuteUbergraph_GC_ShootAbility_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_ShootAbility_Base_C::ExecuteUbergraph_GC_ShootAbility_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "ExecuteUbergraph_GC_ShootAbility_Base");

	Params::GC_ShootAbility_Base_C_ExecuteUbergraph_GC_ShootAbility_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.On Look at Shake Cam
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::On_Look_at_Shake_Cam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "On Look at Shake Cam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.OnActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_ShootAbility_Base_C::OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "OnActive");

	Params::GC_ShootAbility_Base_C_OnActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.OnGameplayCueRemove
// (BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::OnGameplayCueRemove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "OnGameplayCueRemove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.OnRemove
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_ShootAbility_Base_C::OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "OnRemove");

	Params::GC_ShootAbility_Base_C_OnRemove Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.ResetValues
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::ResetValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "ResetValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.ShakeCam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::ShakeCam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "ShakeCam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.UpdateDataFromGCPayload
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AGC_ShootAbility_Base_C::UpdateDataFromGCPayload(const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "UpdateDataFromGCPayload");

	Params::GC_ShootAbility_Base_C_UpdateDataFromGCPayload Parms{};

	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.UpdateShootForce
// (BlueprintCallable, BlueprintEvent)

void AGC_ShootAbility_Base_C::UpdateShootForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "UpdateShootForce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.GetShootBall
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ABall**                           ShootBall_0                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGC_ShootAbility_Base_C::GetShootBall(class ABall** ShootBall_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "GetShootBall");

	Params::GC_ShootAbility_Base_C_GetShootBall Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShootBall_0 != nullptr)
		*ShootBall_0 = Parms.ShootBall_0;
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.GetShootParams
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FShootParams*                    ShootParams                                            (Parm, OutParm)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_ShootAbility_Base_C::GetShootParams(struct FShootParams* ShootParams, bool* Success) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "GetShootParams");

	Params::GC_ShootAbility_Base_C_GetShootParams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShootParams != nullptr)
		*ShootParams = std::move(Parms.ShootParams);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.GetShootPrep
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FShootPrepTargetData*            ShootPrep_0                                            (Parm, OutParm, ContainsInstancedReference)

void AGC_ShootAbility_Base_C::GetShootPrep(struct FShootPrepTargetData* ShootPrep_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "GetShootPrep");

	Params::GC_ShootAbility_Base_C_GetShootPrep Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShootPrep_0 != nullptr)
		*ShootPrep_0 = std::move(Parms.ShootPrep_0);
}


// Function GC_ShootAbility_Base.GC_ShootAbility_Base_C.IsInstigator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_ShootAbility_Base_C::IsInstigator(bool* Success) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_ShootAbility_Base_C", "IsInstigator");

	Params::GC_ShootAbility_Base_C_IsInstigator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}

}

