#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_GoalKeeper

#include "Basic.hpp"

#include "GC_GoalKeeper_classes.hpp"
#include "GC_GoalKeeper_parameters.hpp"


namespace SDK
{

// Function GC_GoalKeeper.GC_GoalKeeper_C.Attach Gloves to Owner Skeletal Mesh
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_GoalKeeper_C::Attach_Gloves_to_Owner_Skeletal_Mesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "Attach Gloves to Owner Skeletal Mesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.ExecuteUbergraph_GC_GoalKeeper
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_GoalKeeper_C::ExecuteUbergraph_GC_GoalKeeper(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "ExecuteUbergraph_GC_GoalKeeper");

	Params::GC_GoalKeeper_C_ExecuteUbergraph_GC_GoalKeeper Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.GoalKeeperToSweeper
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Instantaneous                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_GoalKeeper_C::GoalKeeperToSweeper(bool Instantaneous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "GoalKeeperToSweeper");

	Params::GC_GoalKeeper_C_GoalKeeperToSweeper Parms{};

	Parms.Instantaneous = Instantaneous;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.OnActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_GoalKeeper_C::OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "OnActive");

	Params::GC_GoalKeeper_C_OnActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.OnActiveGC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AActor*                     Target                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGC_GoalKeeper_C::OnActiveGC(const class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "OnActiveGC");

	Params::GC_GoalKeeper_C_OnActiveGC Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.OnFinishedGlovesDissolution
// (BlueprintCallable, BlueprintEvent)

void AGC_GoalKeeper_C::OnFinishedGlovesDissolution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "OnFinishedGlovesDissolution");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.OnRemove
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_GoalKeeper_C::OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "OnRemove");

	Params::GC_GoalKeeper_C_OnRemove Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_GoalKeeper_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "ReceiveEndPlay");

	Params::GC_GoalKeeper_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.Reset Gameplay Cue
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_GoalKeeper_C::Reset_Gameplay_Cue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "Reset Gameplay Cue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.SwapColor
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_GoalKeeper_C::SwapColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "SwapColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.ToggleVisibilityFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewHidden                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_GoalKeeper_C::ToggleVisibilityFX(bool bNewHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "ToggleVisibilityFX");

	Params::GC_GoalKeeper_C_ToggleVisibilityFX Parms{};

	Parms.bNewHidden = bNewHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.Try Attach to Mesh and Activate
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_GoalKeeper_C::Try_Attach_to_Mesh_and_Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "Try Attach to Mesh and Activate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.WhileActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_GoalKeeper_C::WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "WhileActive");

	Params::GC_GoalKeeper_C_WhileActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_GoalKeeper.GC_GoalKeeper_C.Is GCOwner A Local Player Team Mate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   IsTeamMate                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_GoalKeeper_C::Is_GCOwner_A_Local_Player_Team_Mate(bool* IsTeamMate) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_GoalKeeper_C", "Is GCOwner A Local Player Team Mate");

	Params::GC_GoalKeeper_C_Is_GCOwner_A_Local_Player_Team_Mate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTeamMate != nullptr)
		*IsTeamMate = Parms.IsTeamMate;
}

}

