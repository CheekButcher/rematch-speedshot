#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SOS

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum SOS.ESOSAuthenticationState
// NumValues: 0x0005
enum class ESOSAuthenticationState : uint8
{
	NotLoggedIn                              = 0,
	LoggingIn                                = 1,
	LoggingOut                               = 2,
	LoggedIn                                 = 3,
	ESOSAuthenticationState_MAX              = 4,
};

// Enum SOS.ESOSVoiceChatConfig
// NumValues: 0x0004
enum class ESOSVoiceChatConfig : uint8
{
	Global                                   = 0,
	Team                                     = 1,
	Disabled                                 = 2,
	ESOSVoiceChatConfig_MAX                  = 3,
};

// Enum SOS.ESOSVoiceChannelType
// NumValues: 0x0005
enum class ESOSVoiceChannelType : uint8
{
	GameServer                               = 0,
	Squad                                    = 1,
	CustomMatchLobby                         = 2,
	Invalid                                  = 3,
	ESOSVoiceChannelType_MAX                 = 4,
};

// Enum SOS.ESOSService
// NumValues: 0x000F
enum class ESOSService : uint8
{
	Authentication                           = 0,
	CustomMatch                              = 1,
	Friends                                  = 2,
	Matchmaking                              = 3,
	MatchResult                              = 4,
	Party                                    = 5,
	PlayerProfile                            = 6,
	RecentPlayers                            = 7,
	BlockedPlayers                           = 8,
	Reconnect                                = 9,
	VoiceChat                                = 10,
	Store                                    = 11,
	QoS                                      = 12,
	AvailableFeatures                        = 13,
	ESOSService_MAX                          = 14,
};

// Enum SOS.ESOSFirstParty
// NumValues: 0x0006
enum class ESOSFirstParty : uint8
{
	Invalid                                  = 0,
	EAS                                      = 1,
	Steam                                    = 2,
	PSN                                      = 3,
	GDK                                      = 4,
	ESOSFirstParty_MAX                       = 5,
};

// Enum SOS.ESOSPromotionStatus
// NumValues: 0x0004
enum class ESOSPromotionStatus : uint8
{
	None                                     = 0,
	DivDemotionSeries                        = 1,
	LeaguePromotionSeries                    = 2,
	ESOSPromotionStatus_MAX                  = 3,
};

// Enum SOS.ESOSPartyKind
// NumValues: 0x0004
enum class ESOSPartyKind : uint8
{
	CustomMatch                              = 0,
	Squad                                    = 1,
	Invalid                                  = 2,
	ESOSPartyKind_MAX                        = 3,
};

// Enum SOS.ESOSStoreFeatured
// NumValues: 0x0004
enum class ESOSStoreFeatured : uint8
{
	Big                                      = 0,
	Small                                    = 1,
	None                                     = 2,
	ESOSStoreFeatured_MAX                    = 3,
};

// Enum SOS.ESOSGameType
// NumValues: 0x0008
enum class ESOSGameType : uint8
{
	QuickMatch3v3                            = 0,
	QuickMatch4v4                            = 1,
	QuickMatch5v5                            = 2,
	Ranked                                   = 3,
	Ranked3v3                                = 4,
	CustomMatch                              = 5,
	Invalid                                  = 6,
	ESOSGameType_MAX                         = 7,
};

// Enum SOS.ESOSDebugMatchStatusOperation
// NumValues: 0x0007
enum class ESOSDebugMatchStatusOperation : uint32
{
	StartMatch                               = 0,
	EndMatch                                 = 1,
	MatchResult                              = 2,
	EnableBackfill                           = 3,
	DisableBackfill                          = 4,
	DisableReconnect                         = 5,
	ESOSDebugMatchStatusOperation_MAX        = 6,
};

// Enum SOS.ESOSRematchType
// NumValues: 0x0004
enum class ESOSRematchType : uint8
{
	None                                     = 0,
	MySquadOnly                              = 1,
	WithOtherSquads                          = 2,
	ESOSRematchType_MAX                      = 3,
};

// Enum SOS.ESOSFrontendConnectionState
// NumValues: 0x0004
enum class ESOSFrontendConnectionState : uint8
{
	Disconnected                             = 0,
	Connecting                               = 1,
	Connected                                = 2,
	ESOSFrontendConnectionState_MAX          = 3,
};

// Enum SOS.ESOSFeatureState
// NumValues: 0x0005
enum class ESOSFeatureState : uint8
{
	Invalid                                  = 0,
	Enabled                                  = 1,
	Disabled                                 = 2,
	Hidden                                   = 3,
	ESOSFeatureState_MAX                     = 4,
};

// Enum SOS.ESOSFeature
// NumValues: 0x0020
enum class ESOSFeature : uint8
{
	Inventory                                = 0,
	Store                                    = 1,
	SeasonPass                               = 2,
	JoinSquad                                = 3,
	InviteToSquad                            = 4,
	InviteToSquadNoFullLobbyCheck            = 5,
	LeaveSquad                               = 6,
	KickFromSquad                            = 7,
	PromoteInSquad                           = 8,
	CreateCustomMatch                        = 9,
	JoinCustomMatch                          = 10,
	LeaveCustomMatch                         = 11,
	InviteToCustomMatch                      = 12,
	InviteToCustomMatchNoFullLobbyCheck      = 13,
	KickFromCustomMatch                      = 14,
	PromoteInCustomMatch                     = 15,
	StartCustomMatch                         = 16,
	CancelMatchmaking                        = 17,
	StartQuickMatch3v3                       = 18,
	StartQuickMatch4v4                       = 19,
	StartQuickMatch5v5                       = 20,
	StartRankedMatch                         = 21,
	StartRankedMatch3v3                      = 22,
	StartQuickMatch3v3EndOfMatch             = 23,
	StartQuickMatch4v4EndOfMatch             = 24,
	StartQuickMatch5v5EndOfMatch             = 25,
	StartRankedMatchEndOfMatch               = 26,
	StartRankedMatch3v3EndOfMatch            = 27,
	CrossPlay                                = 28,
	PlayerProfile                            = 29,
	Count                                    = 30,
	ESOSFeature_MAX                          = 31,
};

// Enum SOS.ESOSClientCustomMatchState
// NumValues: 0x0008
enum class ESOSClientCustomMatchState : uint8
{
	None                                     = 0,
	JoiningCustomMatch                       = 1,
	LeavingCustomMatch                       = 2,
	InLobby                                  = 3,
	CreatingCustomMatch                      = 4,
	JoiningGame                              = 5,
	InGame                                   = 6,
	ESOSClientCustomMatchState_MAX           = 7,
};

// Enum SOS.ESOSCustomMatchTeamId
// NumValues: 0x0005
enum class ESOSCustomMatchTeamId : uint8
{
	Unassigneds                              = 0,
	Spectators                               = 1,
	Team1                                    = 2,
	Team2                                    = 3,
	ESOSCustomMatchTeamId_MAX                = 4,
};

// Enum SOS.ESOSCrossplayFriendshipStatus
// NumValues: 0x0008
enum class ESOSCrossplayFriendshipStatus : uint8
{
	StatusNone                               = 0,
	StatusInviteSent                         = 1,
	StatusInviteReceived                     = 2,
	StatusFriend                             = 3,
	StatusBlockedByMe                        = 4,
	StatusBlockedByHim                       = 5,
	StatusMutualBlocked                      = 6,
	ESOSCrossplayFriendshipStatus_MAX        = 7,
};

// Enum SOS.ESOSPlayerReportReason
// NumValues: 0x0007
enum class ESOSPlayerReportReason : uint8
{
	AFKQuitter                               = 0,
	Cheat                                    = 1,
	FoulPlay                                 = 2,
	OffensiveName                            = 3,
	OffensiveLanguage                        = 4,
	Invalid                                  = 5,
	ESOSPlayerReportReason_MAX               = 6,
};

// Enum SOS.ESOSClientMatchmakingStatus
// NumValues: 0x0004
enum class ESOSClientMatchmakingStatus : uint8
{
	None                                     = 0,
	RequestingLatencies                      = 1,
	Searching                                = 2,
	ESOSClientMatchmakingStatus_MAX          = 3,
};

// Enum SOS.ESOSPlayerProfileMatchResult
// NumValues: 0x0005
enum class ESOSPlayerProfileMatchResult : uint8
{
	Win                                      = 0,
	Loss                                     = 1,
	Tie                                      = 2,
	Invalid                                  = 3,
	ESOSPlayerProfileMatchResult_MAX         = 4,
};

// Enum SOS.ESOSTierAvailability
// NumValues: 0x0005
enum class ESOSTierAvailability : uint8
{
	Owned                                    = 0,
	RequirementsNotMet                       = 1,
	ChapterLocked                            = 2,
	Available                                = 3,
	ESOSTierAvailability_MAX                 = 4,
};

// Enum SOS.ESOSCurrencyType
// NumValues: 0x0004
enum class ESOSCurrencyType : uint8
{
	SoftCurrency                             = 0,
	HardCurrency                             = 1,
	Invalid                                  = 2,
	ESOSCurrencyType_MAX                     = 3,
};

// Enum SOS.ESOSErrorType
// NumValues: 0x0081
enum class ESOSErrorType : uint8
{
	SOSConnectionLost                        = 0,
	SOSFrontendTimeout                       = 1,
	SoloSquadCreationFailure                 = 2,
	MandatoryLeaveCustomMatchFailure         = 3,
	FirstPartyProxyError                     = 4,
	UserNotConnectedToPsn                    = 5,
	UserNotConnectedToXboxLive               = 6,
	UserHasNoPsPlus                          = 7,
	UserHasNoXboxGold                        = 8,
	GenericErrorThereWasAlreadyAPopup        = 9,
	AppHasBeenSuspended                      = 10,
	SquadInviteError                         = 11,
	SquadLeaveError                          = 12,
	SquadRejectInviteError                   = 13,
	SquadJoinError                           = 14,
	SquadPromoteError                        = 15,
	SquadKickError                           = 16,
	SquadChangeSettingsError                 = 17,
	SquadKickedFrom                          = 18,
	CustomMatchBadTeamsSize                  = 19,
	CustomMatchBadMaxSpectators              = 20,
	CustomMatchCreateError                   = 21,
	CustomMatchInviteError                   = 22,
	CustomMatchRejectInviteError             = 23,
	CustomMatchAcceptInviteError             = 24,
	CustomMatchLobbyNoLongerAvailable        = 25,
	CustomMatchLeaveError                    = 26,
	CustomMatchKickError                     = 27,
	CustomMatchPromoteError                  = 28,
	CustomMatchStartError                    = 29,
	CustomMatchStartRateLimit                = 30,
	CustomMatchCreateJoinCodeError           = 31,
	CustomMatchJoinThroughCodeNotExistError  = 32,
	CustomMatchJoinThroughCodeBuildMismatchError = 33,
	CustomMatchJoinThroughCodeCrossplayDisabledError = 34,
	CustomMatchJoinThroughCodeCrossplayDisabledByPlayerError = 35,
	CustomMatchJoinThroughCodeCrossplayDisabledByPartyError = 36,
	CustomMatchKickedFrom                    = 37,
	StartQuickMatchError                     = 38,
	StartRankedMatchError                    = 39,
	StartRematchError                        = 40,
	StopMatchmakingError                     = 41,
	StartMatchmakingLeaverPenaltyError       = 42,
	StartMatchmakingRankedReconnectError     = 43,
	StartMatchmakingRankedSeasonHasNotStartedError = 44,
	StartMatchmakingRankedSeasonIsFinishedError = 45,
	MatchmakingCancelSquadChangedError       = 46,
	MatchmakingFailure                       = 47,
	MatchmakingTimeout                       = 48,
	RematchFailure                           = 49,
	FriendsInviteError                       = 50,
	FriendsInviteErrorFirstPartyHandled      = 51,
	FriendsAcceptInviteError                 = 52,
	FriendsRejectInviteError                 = 53,
	FriendsRemoveError                       = 54,
	PlayerShowProfileError                   = 55,
	PlayerBlockError                         = 56,
	PlayerUnblockError                       = 57,
	PlayerReportGenericError                 = 58,
	PlayerReportUserNotFoundError            = 59,
	PlayerReportWaitError                    = 60,
	PlayerProfileRefreshPrivateError         = 61,
	PlayerProfileRefreshPublicError          = 62,
	PersistenceCouldNotSaveInventoryError    = 63,
	PersistenceCouldNotGetInventoryError     = 64,
	StoreRefreshError                        = 65,
	StorePurchaseInProgress                  = 66,
	StoreRefreshInProgress                   = 67,
	StoreForceRefreshSeasonPassError         = 68,
	StoreBuyItemError                        = 69,
	StoreBuyEntitlementError                 = 70,
	StoreBuySeasonPassTierError              = 71,
	StoreBuySeasonPassSlotError              = 72,
	StoreBuySeasonPassPremiumError           = 73,
	StoreDebugAddHardCurrencyError           = 74,
	StoreDebugAddSoftCurrencyError           = 75,
	StoreDebugAddSeasonCurrencyError         = 76,
	StoreDebugAddPremiumSeasonPassTokenError = 77,
	RequestCancelledDisconnection            = 78,
	FeatureNotAvailable                      = 79,
	AccessClientPatchRequiredError           = 80,
	AccessUrlsRefreshRequiredError           = 81,
	AccessNotAvailableError                  = 82,
	AccessServicesMaintenanceError           = 83,
	AccessHighLoadError                      = 84,
	AccessBannedError                        = 85,
	PresenceError                            = 86,
	ClientTravelError                        = 87,
	AccessWillBeDisconnected                 = 88,
	CustomMatchAllocationError               = 89,
	PartyIsFullJoinError                     = 90,
	UserNotPermittedToJoinSessionError       = 91,
	AuthenticationSOSNotReadyError           = 92,
	CustomMatchNoTeamsErrors                 = 93,
	PartyIncompatibleBuildIDError            = 94,
	PartyIncompatibleCrossplaySettingsError  = 95,
	EasLoginError                            = 96,
	SteamLoginError                          = 97,
	GDKLoginError                            = 98,
	PSNLoginError                            = 99,
	GenericFirstPartyLoginError              = 100,
	EACNotRunningLoginError                  = 101,
	KickedDueToEACFailure                    = 102,
	KickedDueToRestirctGameAccessSanction    = 103,
	KickedDueToRestirctMatchmakingSanction   = 104,
	OnlineFatalError                         = 105,
	OnlineFatalErrorWithDebug                = 106,
	OnlineNonFatalError                      = 107,
	OnlineNonFatalErrorWithDebug             = 108,
	CrossplayInvalidFriendCode               = 109,
	CrossplayInvite_UserNotFoundError        = 110,
	CrossplayInvite_BlockedError             = 111,
	CrossplayInvite_AlreadyFriendError       = 112,
	CrossplayInvite_AlreadySentError         = 113,
	CrossplayInvite_AlreadyReceivedError     = 114,
	CrossplayInvite_SamePlatformError        = 115,
	CrossplayRemoveFriend_NotFound           = 116,
	CrossplayUnblock_NotBlockedError         = 117,
	CrossplayBlock_NotFoundError             = 118,
	CrossplayUnblock_NotFoundError           = 119,
	CrossplayAcceptInvite_InviteInvalidError = 120,
	CrossplayRefuseInvite_InviteInvalidError = 121,
	CrossplayFeatureDisabled                 = 122,
	CrossplayUserSettingsDisabled            = 123,
	CrossplayPrivilegeFail                   = 124,
	CrossplayCannotJoinSessionFromAnotherPlatform = 125,
	UnknownError                             = 126,
	Count                                    = 127,
	ESOSErrorType_MAX                        = 128,
};

// Enum SOS.ESOSErrorCode
// NumValues: 0x001D
enum class ESOSErrorCode : uint8
{
	MissingErrorCode                         = 0,
	CupConnectionFailure                     = 1,
	CupWrongResponseCode                     = 2,
	CupParsingFailure                        = 3,
	CupNoStageData                           = 4,
	PS5LoginStatusChanged                    = 5,
	RedpointLoginFailure                     = 6,
	ConfigConnectionFailure                  = 7,
	ConfigInvalidResponse                    = 8,
	ConfigWrongResponseCode                  = 9,
	ConfigParsingFailure                     = 10,
	ConfigProcessRequestFailure              = 11,
	AuthNoFirstPartyAuthData                 = 12,
	AuthInvalidHttpHeaders                   = 13,
	AuthInvalidResponse                      = 14,
	AuthWrongResponseCode                    = 15,
	AuthUnavailableParsingFailure            = 16,
	AuthParsingFailure                       = 17,
	AuthMissingAuthWithAttr                  = 18,
	AuthMissingCanLinkAttr                   = 19,
	AuthUnsupportedFirstParty                = 20,
	AuthFirstPartyValidationFailure          = 21,
	AuthMissingExternalAccountAttr           = 22,
	AuthInvalidLinkedAccountFirstParty       = 23,
	AuthMissingLinkedAccountAuthAttr         = 24,
	AuthOngoingLogin                         = 25,
	AuthOngoingFirstPartyLogin               = 26,
	CrossplayInit                            = 27,
	ESOSErrorCode_MAX                        = 28,
};

// Enum SOS.ESOSShouldDisconnectReason
// NumValues: 0x0005
enum class ESOSShouldDisconnectReason : uint8
{
	ClientPatchRequired                      = 0,
	UrlsRefreshRequired                      = 1,
	Unknown                                  = 2,
	Count                                    = 3,
	ESOSShouldDisconnectReason_MAX           = 4,
};

// ScriptStruct SOS.SOSErrorInfos
// 0x0030 (0x0030 - 0x0000)
struct FSOSErrorInfos final
{
public:
	ESOSErrorType                                 m_eErrorType;                                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_LocalizedError;                                  // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESOSErrorCode                                 m_iErrorCode;                                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_DebugInfo;                                       // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSOSErrorInfos;

// ScriptStruct SOS.SOSRPCRankingData
// 0x000C (0x000C - 0x0000)
struct FSOSRPCRankingData final
{
public:
	uint32                                        m_uiRankedPoints;                                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiDivIdx;                                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiLeagueIdx;                                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSOSRPCRankingData;

// ScriptStruct SOS.SOSServerNetworkEmulationSettings
// 0x0034 (0x0034 - 0x0000)
struct FSOSServerNetworkEmulationSettings final
{
public:
	int32                                         m_iPktLoss;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktLossMaxSize;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktLossMinSize;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktOrder;                                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktDup;                                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktLag;                                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktLagVariance;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktLagMin;                                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktLagMax;                                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktIncomingLagMin;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktIncomingLagMax;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktIncomingLoss;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iPktJitter;                                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSOSServerNetworkEmulationSettings;

// ScriptStruct SOS.SOSRPCPromotionStatus
// 0x0018 (0x0018 - 0x0000)
struct FSOSRPCPromotionStatus final
{
public:
	ESOSPromotionStatus                           m_ePromotionState;                                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        m_uiNbWins;                                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiNbLosses;                                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiVictoryTokens;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiDivDemotionShieldCounter;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiLeagueDemotionShieldCounter;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSOSRPCPromotionStatus;

// ScriptStruct SOS.SOSRPCPlayerRankingUpdate
// 0x007C (0x007C - 0x0000)
struct FSOSRPCPlayerRankingUpdate final
{
public:
	bool                                          m_bHasData;                                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iRankPointsGain;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiTotalRankedPoints;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiOldTotalRankedPoints;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSOSRPCRankingData                     m_PlayerRanking;                                   // 0x0010(0x000C)(NoDestructor, NativeAccessSpecifierPublic)
	struct FSOSRPCRankingData                     m_OldPlayerRanking;                                // 0x001C(0x000C)(NoDestructor, NativeAccessSpecifierPublic)
	struct FSOSRPCPromotionStatus                 m_PlayerPromotionStatus;                           // 0x0028(0x0018)(NoDestructor, NativeAccessSpecifierPublic)
	struct FSOSRPCPromotionStatus                 m_OldPlayerPromotionStatus;                        // 0x0040(0x0018)(NoDestructor, NativeAccessSpecifierPublic)
	uint32                                        m_uiPlacementMatchesLeft;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsPlacementMatch;                               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        m_uiCurrentSeasonIdx;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiRankedPointsPerDivision;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bHasOldSeasonData;                               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        m_uiLastPlayedSeasonIdx;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSOSRPCRankingData                     m_LastSeasonPlayerRanking;                         // 0x0070(0x000C)(NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSOSRPCPlayerRankingUpdate;

// ScriptStruct SOS.SOSRPCPlayerProgression
// 0x0018 (0x0018 - 0x0000)
struct FSOSRPCPlayerProgression final
{
public:
	uint32                                        m_uiLevel;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiTotalExp;                                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiCurrentLvlExp;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiNextLvlExp;                                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              m_NextDailyWin;                                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSOSRPCPlayerProgression;

// ScriptStruct SOS.SOSRPCSeasonPlayerProgression
// 0x000C (0x000C - 0x0000)
struct FSOSRPCSeasonPlayerProgression final
{
public:
	uint32                                        m_uiTotalExp;                                      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiCurrentExp;                                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiNextTokenExp;                                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSOSRPCSeasonPlayerProgression;

// ScriptStruct SOS.SOSRPCPlayerProgressUpdate
// 0x0060 (0x0060 - 0x0000)
struct FSOSRPCPlayerProgressUpdate final
{
public:
	bool                                          m_bHasData;                                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        m_uiSoftCurrGained;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiSeasonTokenGained;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSOSRPCPlayerProgression               m_PlayerProgression;                               // 0x0010(0x0018)(NoDestructor, NativeAccessSpecifierPublic)
	struct FSOSRPCPlayerProgression               m_OldPlayerProgression;                            // 0x0028(0x0018)(NoDestructor, NativeAccessSpecifierPublic)
	struct FSOSRPCSeasonPlayerProgression         m_PlayerSeasonProgression;                         // 0x0040(0x000C)(NoDestructor, NativeAccessSpecifierPublic)
	struct FSOSRPCSeasonPlayerProgression         m_OldPlayerSeasonProgression;                      // 0x004C(0x000C)(NoDestructor, NativeAccessSpecifierPublic)
	uint32                                        m_uiDailyWinExp;                                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSOSRPCPlayerProgressUpdate;

// ScriptStruct SOS.SOSAnalyticsPlayerNetworkStats
// 0x0038 (0x0038 - 0x0000)
struct FSOSAnalyticsPlayerNetworkStats final
{
public:
	float                                         m_MinimumLatencyMs;                                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_AverageLatencyMs;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_MaximumLatencyMs;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_MinimumInPacketLossPercent;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_AverageInPacketLossPercent;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_MaximumInPacketLossPercent;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_MinimumOutPacketLossPercent;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_AverageOutPacketLossPercent;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_MaximumOutPacketLossPercent;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_TotalIncomingDataBytes;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_TotalOutgoingDataBytes;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0xC];                                       // 0x002C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSOSAnalyticsPlayerNetworkStats;

// ScriptStruct SOS.OutLogUploadRequest
// 0x0058 (0x0058 - 0x0000)
struct FOutLogUploadRequest final
{
public:
	bool                                          from_server;                                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 build_id;                                          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 logfile_name;                                      // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 logfile_type;                                      // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 log_context;                                       // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 player_title_id;                                   // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FOutLogUploadRequest;

// ScriptStruct SOS.InLogGetSignedUploadLink
// 0x0050 (0x0050 - 0x0000)
struct FInLogGetSignedUploadLink final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 date;                                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 logfile_name;                                      // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 logfile_type;                                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 signed_upload_url;                                 // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInLogGetSignedUploadLink;

// ScriptStruct SOS.SOSMatchmakingParams
// 0x0018 (0x0018 - 0x0000)
struct FSOSMatchmakingParams final
{
public:
	class FString                                 m_GameMode;                                        // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iMapIndex;                                       // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSOSMatchmakingParams;

// ScriptStruct SOS.SOSCustomMatchParamsGameplayBase
// 0x0003 (0x0003 - 0x0000)
struct FSOSCustomMatchParamsGameplayBase
{
public:
	uint8                                         TeamSize;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         MaxSpectators;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasGlobalVoiceChat;                               // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSOSCustomMatchParamsGameplayBase;

}

