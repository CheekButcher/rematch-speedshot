#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VM_CustomPartySystem

#include "Basic.hpp"

#include "BP_VM_CustomPartySystem_classes.hpp"
#include "BP_VM_CustomPartySystem_parameters.hpp"


namespace SDK
{

// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.GetBrushFromPlayerDisplayName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class FString&                    DisplayName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UTexture2D**                      OutputBrush                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::GetBrushFromPlayerDisplayName(const class FString& DisplayName, class UTexture2D** OutputBrush) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "GetBrushFromPlayerDisplayName");

	Params::BP_VM_CustomPartySystem_C_GetBrushFromPlayerDisplayName Parms{};

	Parms.DisplayName = std::move(DisplayName);

	UObject::ProcessEvent(Func, &Parms);

	if (OutputBrush != nullptr)
		*OutputBrush = Parms.OutputBrush;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.GetCanLeaveParty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   CanLeave                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::GetCanLeaveParty(bool* CanLeave) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "GetCanLeaveParty");

	Params::BP_VM_CustomPartySystem_C_GetCanLeaveParty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanLeave != nullptr)
		*CanLeave = Parms.CanLeave;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.GetPartyCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32*                                  PartyCount                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::GetPartyCount(int32* PartyCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "GetPartyCount");

	Params::BP_VM_CustomPartySystem_C_GetPartyCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PartyCount != nullptr)
		*PartyCount = Parms.PartyCount;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.GetPartyInvitesCount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText*                            Result                                                 (Parm, OutParm)

void UBP_VM_CustomPartySystem_C::GetPartyInvitesCount(class FText* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "GetPartyInvitesCount");

	Params::BP_VM_CustomPartySystem_C_GetPartyInvitesCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.GetPartyInvitesNotifCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32*                                  InvitesCount                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::GetPartyInvitesNotifCount(int32* InvitesCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "GetPartyInvitesNotifCount");

	Params::BP_VM_CustomPartySystem_C_GetPartyInvitesNotifCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InvitesCount != nullptr)
		*InvitesCount = Parms.InvitesCount;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.GetPartyMember
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPartyMemberViewModel**           PartyMember                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::GetPartyMember(int32 Index_0, class UPartyMemberViewModel** PartyMember) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "GetPartyMember");

	Params::BP_VM_CustomPartySystem_C_GetPartyMember Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (PartyMember != nullptr)
		*PartyMember = Parms.PartyMember;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.GetProfilePicBrush
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      OutputBrush                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::GetProfilePicBrush(int32 Index_0, class UTexture2D** OutputBrush) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "GetProfilePicBrush");

	Params::BP_VM_CustomPartySystem_C_GetProfilePicBrush Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (OutputBrush != nullptr)
		*OutputBrush = Parms.OutputBrush;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.IsAnyBlockerForMatchmaking
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   IsEnabled                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::IsAnyBlockerForMatchmaking(bool* IsEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "IsAnyBlockerForMatchmaking");

	Params::BP_VM_CustomPartySystem_C_IsAnyBlockerForMatchmaking Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnabled != nullptr)
		*IsEnabled = Parms.IsEnabled;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.IsAnyPlayerPenaltyLeaver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   IsAnyPlayerPenaltyLeaver_0                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::IsAnyPlayerPenaltyLeaver(bool* IsAnyPlayerPenaltyLeaver_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "IsAnyPlayerPenaltyLeaver");

	Params::BP_VM_CustomPartySystem_C_IsAnyPlayerPenaltyLeaver Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsAnyPlayerPenaltyLeaver_0 != nullptr)
		*IsAnyPlayerPenaltyLeaver_0 = Parms.IsAnyPlayerPenaltyLeaver_0;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.IsAnyPlayerReconnectToRanked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   IsAnyPlayerReconnectToRanked_0                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::IsAnyPlayerReconnectToRanked(bool* IsAnyPlayerReconnectToRanked_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "IsAnyPlayerReconnectToRanked");

	Params::BP_VM_CustomPartySystem_C_IsAnyPlayerReconnectToRanked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsAnyPlayerReconnectToRanked_0 != nullptr)
		*IsAnyPlayerReconnectToRanked_0 = Parms.IsAnyPlayerReconnectToRanked_0;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.IsEmpty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  OutputIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::IsEmpty(int32 Index_0, int32* OutputIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "IsEmpty");

	Params::BP_VM_CustomPartySystem_C_IsEmpty Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (OutputIndex != nullptr)
		*OutputIndex = Parms.OutputIndex;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.IsLocalPlayerPenaltyLeaver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   IsLocalPlayerPenaltyLeaver_0                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::IsLocalPlayerPenaltyLeaver(bool* IsLocalPlayerPenaltyLeaver_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "IsLocalPlayerPenaltyLeaver");

	Params::BP_VM_CustomPartySystem_C_IsLocalPlayerPenaltyLeaver Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsLocalPlayerPenaltyLeaver_0 != nullptr)
		*IsLocalPlayerPenaltyLeaver_0 = Parms.IsLocalPlayerPenaltyLeaver_0;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.IsLocalPlayerReconnectToRanked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   IsLocalPlayerReconnectToRanked_0                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::IsLocalPlayerReconnectToRanked(bool* IsLocalPlayerReconnectToRanked_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "IsLocalPlayerReconnectToRanked");

	Params::BP_VM_CustomPartySystem_C_IsLocalPlayerReconnectToRanked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsLocalPlayerReconnectToRanked_0 != nullptr)
		*IsLocalPlayerReconnectToRanked_0 = Parms.IsLocalPlayerReconnectToRanked_0;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.IsOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsOwner_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::IsOwner(int32 Index_0, bool* IsOwner_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "IsOwner");

	Params::BP_VM_CustomPartySystem_C_IsOwner Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (IsOwner_0 != nullptr)
		*IsOwner_0 = Parms.IsOwner_0;
}


// Function BP_VM_CustomPartySystem.BP_VM_CustomPartySystem_C.IsPlayerSoloInSquad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   IsSoloInSquad                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VM_CustomPartySystem_C::IsPlayerSoloInSquad(bool* IsSoloInSquad) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VM_CustomPartySystem_C", "IsPlayerSoloInSquad");

	Params::BP_VM_CustomPartySystem_C_IsPlayerSoloInSquad Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSoloInSquad != nullptr)
		*IsSoloInSquad = Parms.IsSoloInSquad;
}

}

