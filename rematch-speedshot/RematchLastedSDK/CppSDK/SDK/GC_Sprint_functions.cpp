#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Sprint

#include "Basic.hpp"

#include "GC_Sprint_classes.hpp"
#include "GC_Sprint_parameters.hpp"


namespace SDK
{

// Function GC_Sprint.GC_Sprint_C.Activate PP Effects
// (BlueprintCallable, BlueprintEvent)

void AGC_Sprint_C::Activate_PP_Effects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "Activate PP Effects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.Activation Sprint Local
// (BlueprintCallable, BlueprintEvent)

void AGC_Sprint_C::Activation_Sprint_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "Activation Sprint Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.Active PP__FinishedFunc
// (BlueprintEvent)

void AGC_Sprint_C::Active_PP__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "Active PP__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.Active PP__UpdateFunc
// (BlueprintEvent)

void AGC_Sprint_C::Active_PP__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "Active PP__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.Desactive PP Effect
// (BlueprintCallable, BlueprintEvent)

void AGC_Sprint_C::Desactive_PP_Effect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "Desactive PP Effect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.Desactive PP__FinishedFunc
// (BlueprintEvent)

void AGC_Sprint_C::Desactive_PP__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "Desactive PP__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.Desactive PP__UpdateFunc
// (BlueprintEvent)

void AGC_Sprint_C::Desactive_PP__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "Desactive PP__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.ExecuteUbergraph_GC_Sprint
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_Sprint_C::ExecuteUbergraph_GC_Sprint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "ExecuteUbergraph_GC_Sprint");

	Params::GC_Sprint_C_ExecuteUbergraph_GC_Sprint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_Sprint.GC_Sprint_C.Fade Out VFX 
// (BlueprintCallable, BlueprintEvent)

void AGC_Sprint_C::Fade_Out_VFX_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "Fade Out VFX ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.OnActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_Sprint_C::OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "OnActive");

	Params::GC_Sprint_C_OnActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_Sprint.GC_Sprint_C.OnCharacterGenerated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCharacterCustomizationComponent* _characterCustomizationComponent                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    _bWasCharacterGenerated                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_Sprint_C::OnCharacterGenerated(class UCharacterCustomizationComponent* _characterCustomizationComponent, bool _bWasCharacterGenerated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "OnCharacterGenerated");

	Params::GC_Sprint_C_OnCharacterGenerated Parms{};

	Parms._characterCustomizationComponent = _characterCustomizationComponent;
	Parms._bWasCharacterGenerated = _bWasCharacterGenerated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_Sprint.GC_Sprint_C.OnRemove
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayCueParameters&    Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGC_Sprint_C::OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "OnRemove");

	Params::GC_Sprint_C_OnRemove Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GC_Sprint.GC_Sprint_C.PP Initialisation
// (BlueprintCallable, BlueprintEvent)

void AGC_Sprint_C::PP_Initialisation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "PP Initialisation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_Sprint_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "ReceiveEndPlay");

	Params::GC_Sprint_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_Sprint.GC_Sprint_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGC_Sprint_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "ReceiveTick");

	Params::GC_Sprint_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GC_Sprint.GC_Sprint_C.Sprint Activation Global
// (BlueprintCallable, BlueprintEvent)

void AGC_Sprint_C::Sprint_Activation_Global()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "Sprint Activation Global");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.StopTimeline
// (BlueprintCallable, BlueprintEvent)

void AGC_Sprint_C::StopTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "StopTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.Timeline__FinishedFunc
// (BlueprintEvent)

void AGC_Sprint_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.Timeline__UpdateFunc
// (BlueprintEvent)

void AGC_Sprint_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.VFXInitialization
// (Public, BlueprintCallable, BlueprintEvent)

void AGC_Sprint_C::VFXInitialization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "VFXInitialization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GC_Sprint.GC_Sprint_C.GetSprintBonusLevel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 AGC_Sprint_C::GetSprintBonusLevel(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GC_Sprint_C", "GetSprintBonusLevel");

	Params::GC_Sprint_C_GetSprintBonusLevel Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

