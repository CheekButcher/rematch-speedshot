#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Control

#include "Basic.hpp"

#include "WBP_Control_classes.hpp"
#include "WBP_Control_parameters.hpp"


namespace SDK
{

// Function WBP_Control.WBP_Control_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Control_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Control_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Control.WBP_Control_C.ExecuteUbergraph_WBP_Control
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Control_C::ExecuteUbergraph_WBP_Control(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Control_C", "ExecuteUbergraph_WBP_Control");

	Params::WBP_Control_C_ExecuteUbergraph_WBP_Control Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Control.WBP_Control_C.OnActionPressed
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USCInputAction*             _inputAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FInputActionState&         _listenerState                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Control_C::OnActionPressed(const class USCInputAction* _inputAction, const struct FInputActionState& _listenerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Control_C", "OnActionPressed");

	Params::WBP_Control_C_OnActionPressed Parms{};

	Parms._inputAction = _inputAction;
	Parms._listenerState = std::move(_listenerState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Control.WBP_Control_C.OnActionReleased
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USCInputAction*             _inputAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FInputActionState&         _listenerState                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Control_C::OnActionReleased(const class USCInputAction* _inputAction, const struct FInputActionState& _listenerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Control_C", "OnActionReleased");

	Params::WBP_Control_C_OnActionReleased Parms{};

	Parms._inputAction = _inputAction;
	Parms._listenerState = std::move(_listenerState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Control.WBP_Control_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Control_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Control_C", "PreConstruct");

	Params::WBP_Control_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Control.WBP_Control_C.SetAlignement
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLeftAligned                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Control_C::SetAlignement(bool IsLeftAligned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Control_C", "SetAlignement");

	Params::WBP_Control_C_SetAlignement Parms{};

	Parms.IsLeftAligned = IsLeftAligned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Control.WBP_Control_C.SetDeactivatedColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsDeactivated                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Control_C::SetDeactivatedColor(bool bIsDeactivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Control_C", "SetDeactivatedColor");

	Params::WBP_Control_C_SetDeactivatedColor Parms{};

	Parms.bIsDeactivated = bIsDeactivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Control.WBP_Control_C.SetPressedColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInIsPressed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Control_C::SetPressedColor(bool bInIsPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Control_C", "SetPressedColor");

	Params::WBP_Control_C_SetPressedColor Parms{};

	Parms.bInIsPressed = bInIsPressed;

	UObject::ProcessEvent(Func, &Parms);
}

}

