#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Transition

#include "Basic.hpp"

#include "GA_Transition_classes.hpp"
#include "GA_Transition_parameters.hpp"


namespace SDK
{

// Function GA_Transition.GA_Transition_C.ExecuteUbergraph_GA_Transition
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Transition_C::ExecuteUbergraph_GA_Transition(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Transition_C", "ExecuteUbergraph_GA_Transition");

	Params::GA_Transition_C_ExecuteUbergraph_GA_Transition Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Transition.GA_Transition_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_Transition_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Transition_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Transition.GA_Transition_C.K2_CommitExecute
// (Event, Public, BlueprintEvent)

void UGA_Transition_C::K2_CommitExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Transition_C", "K2_CommitExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Transition.GA_Transition_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Transition_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Transition_C", "K2_OnEndAbility");

	Params::GA_Transition_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Transition.GA_Transition_C.m_OnTransitionFound_F95D422C4FFFF7CB6EDA04BCA80526D4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class USCTransitionDB>      _transitionDB                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// const struct FSCTransition&             _foundTransition                                       (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   _vStartVelocity                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _bWasOrientedToMovement                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   _vWantedDir                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Transition_C::m_OnTransitionFound_F95D422C4FFFF7CB6EDA04BCA80526D4(TSubclassOf<class USCTransitionDB> _transitionDB, const struct FSCTransition& _foundTransition, const struct FVector& _vStartVelocity, bool _bWasOrientedToMovement, const struct FVector& _vWantedDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Transition_C", "m_OnTransitionFound_F95D422C4FFFF7CB6EDA04BCA80526D4");

	Params::GA_Transition_C_m_OnTransitionFound_F95D422C4FFFF7CB6EDA04BCA80526D4 Parms{};

	Parms._transitionDB = _transitionDB;
	Parms._foundTransition = std::move(_foundTransition);
	Parms._vStartVelocity = std::move(_vStartVelocity);
	Parms._bWasOrientedToMovement = _bWasOrientedToMovement;
	Parms._vWantedDir = std::move(_vWantedDir);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Transition.GA_Transition_C.MasterOnNewTransitionFound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           SCTransitionDB                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FSCTransition&             TRANSITION                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector_NetQuantize10&     StartVelocity                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasOrientedToMovement                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector_NetQuantizeNormal& WantedDir                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// uint8                                   PendingMoveUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Transition_C::MasterOnNewTransitionFound(class UClass* SCTransitionDB, const struct FSCTransition& TRANSITION, const struct FVector_NetQuantize10& StartVelocity, bool bWasOrientedToMovement, const struct FVector_NetQuantizeNormal& WantedDir, uint8 PendingMoveUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Transition_C", "MasterOnNewTransitionFound");

	Params::GA_Transition_C_MasterOnNewTransitionFound Parms{};

	Parms.SCTransitionDB = SCTransitionDB;
	Parms.TRANSITION = std::move(TRANSITION);
	Parms.StartVelocity = std::move(StartVelocity);
	Parms.bWasOrientedToMovement = bWasOrientedToMovement;
	Parms.WantedDir = std::move(WantedDir);
	Parms.PendingMoveUID = PendingMoveUID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Transition.GA_Transition_C.OnFinished_659EBC8C40BDF2615034D5B3AC81509F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ETransitionStopReason                   _eStopReason                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Transition_C::OnFinished_659EBC8C40BDF2615034D5B3AC81509F(ETransitionStopReason _eStopReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Transition_C", "OnFinished_659EBC8C40BDF2615034D5B3AC81509F");

	Params::GA_Transition_C_OnFinished_659EBC8C40BDF2615034D5B3AC81509F Parms{};

	Parms._eStopReason = _eStopReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Transition.GA_Transition_C.OnFinished_BF56079A44D5334656618DB96DA0887D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ETransitionStopReason                   _eStopReason                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Transition_C::OnFinished_BF56079A44D5334656618DB96DA0887D(ETransitionStopReason _eStopReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Transition_C", "OnFinished_BF56079A44D5334656618DB96DA0887D");

	Params::GA_Transition_C_OnFinished_BF56079A44D5334656618DB96DA0887D Parms{};

	Parms._eStopReason = _eStopReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Transition.GA_Transition_C.OnTagsChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USCAbilitySystemComponent*  _abilitySystem                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              _gameplayTag                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   _iCount                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Transition_C::OnTagsChanged(const class USCAbilitySystemComponent* _abilitySystem, const struct FGameplayTag& _gameplayTag, int32 _iCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Transition_C", "OnTagsChanged");

	Params::GA_Transition_C_OnTagsChanged Parms{};

	Parms._abilitySystem = _abilitySystem;
	Parms._gameplayTag = std::move(_gameplayTag);
	Parms._iCount = _iCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Transition.GA_Transition_C.PlayTransition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           InTransitionDB                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FSCTransition&             InTransition                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InStartVelocity                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasOrientedToMovement                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InWantedDir                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Transition_C::PlayTransition(class UClass* InTransitionDB, const struct FSCTransition& InTransition, const struct FVector& InStartVelocity, bool bWasOrientedToMovement, const struct FVector& InWantedDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Transition_C", "PlayTransition");

	Params::GA_Transition_C_PlayTransition Parms{};

	Parms.InTransitionDB = InTransitionDB;
	Parms.InTransition = std::move(InTransition);
	Parms.InStartVelocity = std::move(InStartVelocity);
	Parms.bWasOrientedToMovement = bWasOrientedToMovement;
	Parms.InWantedDir = std::move(InWantedDir);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Transition.GA_Transition_C.ServerOnNewTransitionFound
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           SCTransitionDB                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FSCTransition&             TRANSITION                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FVector_NetQuantize10&     StartVelocity                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasOrientedToMovement                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector_NetQuantizeNormal& WantedDir                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// uint8                                   PendingMoveUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Transition_C::ServerOnNewTransitionFound(class UClass* SCTransitionDB, const struct FSCTransition& TRANSITION, const struct FVector_NetQuantize10& StartVelocity, bool bWasOrientedToMovement, const struct FVector_NetQuantizeNormal& WantedDir, uint8 PendingMoveUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Transition_C", "ServerOnNewTransitionFound");

	Params::GA_Transition_C_ServerOnNewTransitionFound Parms{};

	Parms.SCTransitionDB = SCTransitionDB;
	Parms.TRANSITION = std::move(TRANSITION);
	Parms.StartVelocity = std::move(StartVelocity);
	Parms.bWasOrientedToMovement = bWasOrientedToMovement;
	Parms.WantedDir = std::move(WantedDir);
	Parms.PendingMoveUID = PendingMoveUID;

	UObject::ProcessEvent(Func, &Parms);
}

}

