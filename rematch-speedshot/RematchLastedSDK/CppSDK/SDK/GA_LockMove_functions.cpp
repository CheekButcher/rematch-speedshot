#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_LockMove

#include "Basic.hpp"

#include "GA_LockMove_classes.hpp"
#include "GA_LockMove_parameters.hpp"


namespace SDK
{

// Function GA_LockMove.GA_LockMove_C.Added_AB0069F048C33F608F4ED6A558F549F6
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::Added_AB0069F048C33F608F4ED6A558F549F6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "Added_AB0069F048C33F608F4ED6A558F549F6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.Added_AB7403244EF9910F61860A9429567692
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::Added_AB7403244EF9910F61860A9429567692()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "Added_AB7403244EF9910F61860A9429567692");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.Added_D2423D7B4427AEABB8A13C9C50BC2E0D
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::Added_D2423D7B4427AEABB8A13C9C50BC2E0D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "Added_D2423D7B4427AEABB8A13C9C50BC2E0D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.BallInterceptionHandlingForBehavior
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&Context                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_LockMove_C::BallInterceptionHandlingForBehavior(const struct FGameplayAbilityTargetDataHandle& Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "BallInterceptionHandlingForBehavior");

	Params::GA_LockMove_C_BallInterceptionHandlingForBehavior Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.BallInterceptionHandlingForOuterboxPreAnimation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&Context                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// bool*                                   Can_Handle                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::BallInterceptionHandlingForOuterboxPreAnimation(const struct FGameplayAbilityTargetDataHandle& Context, bool* Can_Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "BallInterceptionHandlingForOuterboxPreAnimation");

	Params::GA_LockMove_C_BallInterceptionHandlingForOuterboxPreAnimation Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);

	if (Can_Handle != nullptr)
		*Can_Handle = Parms.Can_Handle;
}


// Function GA_LockMove.GA_LockMove_C.BPE_BuildPayload
// (Event, Public, BlueprintEvent)

void UGA_LockMove_C::BPE_BuildPayload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "BPE_BuildPayload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.EndToggleState
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::EndToggleState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "EndToggleState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.ExecuteUbergraph_GA_LockMove
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::ExecuteUbergraph_GA_LockMove(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "ExecuteUbergraph_GA_LockMove");

	Params::GA_LockMove_C_ExecuteUbergraph_GA_LockMove Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.GetAnimationPicker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass**                          Picker                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::GetAnimationPicker(class UClass** Picker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "GetAnimationPicker");

	Params::GA_LockMove_C_GetAnimationPicker Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Picker != nullptr)
		*Picker = Parms.Picker;
}


// Function GA_LockMove.GA_LockMove_C.GetDefenseModePreAnimationParameters
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&InContext                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAnimMontage**                    OutMontage                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   bOutMirror                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutWorldSyncTime                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutAnimSyncTime                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutAnimBlendOutTime                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::GetDefenseModePreAnimationParameters(const struct FGameplayAbilityTargetDataHandle& InContext, class UAnimMontage** OutMontage, bool* bOutMirror, double* OutWorldSyncTime, double* OutAnimSyncTime, double* OutAnimBlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "GetDefenseModePreAnimationParameters");

	Params::GA_LockMove_C_GetDefenseModePreAnimationParameters Parms{};

	Parms.InContext = std::move(InContext);

	UObject::ProcessEvent(Func, &Parms);

	if (OutMontage != nullptr)
		*OutMontage = Parms.OutMontage;

	if (bOutMirror != nullptr)
		*bOutMirror = Parms.bOutMirror;

	if (OutWorldSyncTime != nullptr)
		*OutWorldSyncTime = Parms.OutWorldSyncTime;

	if (OutAnimSyncTime != nullptr)
		*OutAnimSyncTime = Parms.OutAnimSyncTime;

	if (OutAnimBlendOutTime != nullptr)
		*OutAnimBlendOutTime = Parms.OutAnimBlendOutTime;
}


// Function GA_LockMove.GA_LockMove_C.GetToggleDefenseModeValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UGA_LockMove_C::GetToggleDefenseModeValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "GetToggleDefenseModeValue");

	Params::GA_LockMove_C_GetToggleDefenseModeValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_LockMove.GA_LockMove_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_LockMove_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "K2_ActivateAbilityFromEvent");

	Params::GA_LockMove_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.K2_CommitExecute
// (Event, Public, BlueprintEvent)

void UGA_LockMove_C::K2_CommitExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "K2_CommitExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "K2_OnEndAbility");

	Params::GA_LockMove_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.LookAt
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Remove                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::LookAt(bool Remove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "LookAt");

	Params::GA_LockMove_C_LookAt Parms{};

	Parms.Remove = Remove;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_BuildClientHitboxPayload_660E14AD41600E2D6C501AAFE5E2B518
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPendingHit&               _hit                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilityTargetDataHandle&_context                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAbilityTask_HandleHitboxBase*    _payloadTarget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_BuildClientHitboxPayload_660E14AD41600E2D6C501AAFE5E2B518(const struct FPendingHit& _hit, const struct FGameplayAbilityTargetDataHandle& _context, class UAbilityTask_HandleHitboxBase* _payloadTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_BuildClientHitboxPayload_660E14AD41600E2D6C501AAFE5E2B518");

	Params::GA_LockMove_C_m_BuildClientHitboxPayload_660E14AD41600E2D6C501AAFE5E2B518 Parms{};

	Parms._hit = std::move(_hit);
	Parms._context = std::move(_context);
	Parms._payloadTarget = _payloadTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_BuildClientHitboxPayload_978C98CA4D8D102AEAC1619787249762
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPendingHit&               _hit                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilityTargetDataHandle&_context                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAbilityTask_HandleHitboxBase*    _payloadTarget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_BuildClientHitboxPayload_978C98CA4D8D102AEAC1619787249762(const struct FPendingHit& _hit, const struct FGameplayAbilityTargetDataHandle& _context, class UAbilityTask_HandleHitboxBase* _payloadTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_BuildClientHitboxPayload_978C98CA4D8D102AEAC1619787249762");

	Params::GA_LockMove_C_m_BuildClientHitboxPayload_978C98CA4D8D102AEAC1619787249762 Parms{};

	Parms._hit = std::move(_hit);
	Parms._context = std::move(_context);
	Parms._payloadTarget = _payloadTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnCanMoveInterrupt_C85A83FA408ED850695CAEA4D0446510
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::m_OnCanMoveInterrupt_C85A83FA408ED850695CAEA4D0446510()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnCanMoveInterrupt_C85A83FA408ED850695CAEA4D0446510");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.m_OnHit_660E14AD41600E2D6C501AAFE5E2B518
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPendingHit&               _hit                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilityTargetDataHandle&_context                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAbilityTask_HandleHitboxBase*    _payloadTarget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnHit_660E14AD41600E2D6C501AAFE5E2B518(const struct FPendingHit& _hit, const struct FGameplayAbilityTargetDataHandle& _context, class UAbilityTask_HandleHitboxBase* _payloadTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnHit_660E14AD41600E2D6C501AAFE5E2B518");

	Params::GA_LockMove_C_m_OnHit_660E14AD41600E2D6C501AAFE5E2B518 Parms{};

	Parms._hit = std::move(_hit);
	Parms._context = std::move(_context);
	Parms._payloadTarget = _payloadTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnHit_978C98CA4D8D102AEAC1619787249762
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPendingHit&               _hit                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilityTargetDataHandle&_context                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAbilityTask_HandleHitboxBase*    _payloadTarget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnHit_978C98CA4D8D102AEAC1619787249762(const struct FPendingHit& _hit, const struct FGameplayAbilityTargetDataHandle& _context, class UAbilityTask_HandleHitboxBase* _payloadTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnHit_978C98CA4D8D102AEAC1619787249762");

	Params::GA_LockMove_C_m_OnHit_978C98CA4D8D102AEAC1619787249762 Parms{};

	Parms._hit = std::move(_hit);
	Parms._context = std::move(_context);
	Parms._payloadTarget = _payloadTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnHitRecovery_660E14AD41600E2D6C501AAFE5E2B518
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPendingHit&               _hit                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilityTargetDataHandle&_context                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAbilityTask_HandleHitboxBase*    _payloadTarget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnHitRecovery_660E14AD41600E2D6C501AAFE5E2B518(const struct FPendingHit& _hit, const struct FGameplayAbilityTargetDataHandle& _context, class UAbilityTask_HandleHitboxBase* _payloadTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnHitRecovery_660E14AD41600E2D6C501AAFE5E2B518");

	Params::GA_LockMove_C_m_OnHitRecovery_660E14AD41600E2D6C501AAFE5E2B518 Parms{};

	Parms._hit = std::move(_hit);
	Parms._context = std::move(_context);
	Parms._payloadTarget = _payloadTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnHitRecovery_978C98CA4D8D102AEAC1619787249762
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPendingHit&               _hit                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilityTargetDataHandle&_context                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAbilityTask_HandleHitboxBase*    _payloadTarget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnHitRecovery_978C98CA4D8D102AEAC1619787249762(const struct FPendingHit& _hit, const struct FGameplayAbilityTargetDataHandle& _context, class UAbilityTask_HandleHitboxBase* _payloadTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnHitRecovery_978C98CA4D8D102AEAC1619787249762");

	Params::GA_LockMove_C_m_OnHitRecovery_978C98CA4D8D102AEAC1619787249762 Parms{};

	Parms._hit = std::move(_hit);
	Parms._context = std::move(_context);
	Parms._payloadTarget = _payloadTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnHitRejected_660E14AD41600E2D6C501AAFE5E2B518
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPendingHit&               _hit                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilityTargetDataHandle&_context                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAbilityTask_HandleHitboxBase*    _payloadTarget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnHitRejected_660E14AD41600E2D6C501AAFE5E2B518(const struct FPendingHit& _hit, const struct FGameplayAbilityTargetDataHandle& _context, class UAbilityTask_HandleHitboxBase* _payloadTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnHitRejected_660E14AD41600E2D6C501AAFE5E2B518");

	Params::GA_LockMove_C_m_OnHitRejected_660E14AD41600E2D6C501AAFE5E2B518 Parms{};

	Parms._hit = std::move(_hit);
	Parms._context = std::move(_context);
	Parms._payloadTarget = _payloadTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnHitRejected_978C98CA4D8D102AEAC1619787249762
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPendingHit&               _hit                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilityTargetDataHandle&_context                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAbilityTask_HandleHitboxBase*    _payloadTarget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnHitRejected_978C98CA4D8D102AEAC1619787249762(const struct FPendingHit& _hit, const struct FGameplayAbilityTargetDataHandle& _context, class UAbilityTask_HandleHitboxBase* _payloadTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnHitRejected_978C98CA4D8D102AEAC1619787249762");

	Params::GA_LockMove_C_m_OnHitRejected_978C98CA4D8D102AEAC1619787249762 Parms{};

	Parms._hit = std::move(_hit);
	Parms._context = std::move(_context);
	Parms._payloadTarget = _payloadTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnHitValidated_660E14AD41600E2D6C501AAFE5E2B518
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPendingHit&               _hit                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilityTargetDataHandle&_context                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAbilityTask_HandleHitboxBase*    _payloadTarget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnHitValidated_660E14AD41600E2D6C501AAFE5E2B518(const struct FPendingHit& _hit, const struct FGameplayAbilityTargetDataHandle& _context, class UAbilityTask_HandleHitboxBase* _payloadTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnHitValidated_660E14AD41600E2D6C501AAFE5E2B518");

	Params::GA_LockMove_C_m_OnHitValidated_660E14AD41600E2D6C501AAFE5E2B518 Parms{};

	Parms._hit = std::move(_hit);
	Parms._context = std::move(_context);
	Parms._payloadTarget = _payloadTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnHitValidated_978C98CA4D8D102AEAC1619787249762
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPendingHit&               _hit                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const struct FGameplayAbilityTargetDataHandle&_context                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAbilityTask_HandleHitboxBase*    _payloadTarget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnHitValidated_978C98CA4D8D102AEAC1619787249762(const struct FPendingHit& _hit, const struct FGameplayAbilityTargetDataHandle& _context, class UAbilityTask_HandleHitboxBase* _payloadTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnHitValidated_978C98CA4D8D102AEAC1619787249762");

	Params::GA_LockMove_C_m_OnHitValidated_978C98CA4D8D102AEAC1619787249762 Parms{};

	Parms._hit = std::move(_hit);
	Parms._context = std::move(_context);
	Parms._payloadTarget = _payloadTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnMoveInterrupt_C85A83FA408ED850695CAEA4D0446510
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::m_OnMoveInterrupt_C85A83FA408ED850695CAEA4D0446510()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnMoveInterrupt_C85A83FA408ED850695CAEA4D0446510");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.m_OnTrigger_1C1A0ED04F906D12167E0DA516B02F5D
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputActionState&         _state                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    _bActivated                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnTrigger_1C1A0ED04F906D12167E0DA516B02F5D(const struct FInputActionState& _state, bool _bActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnTrigger_1C1A0ED04F906D12167E0DA516B02F5D");

	Params::GA_LockMove_C_m_OnTrigger_1C1A0ED04F906D12167E0DA516B02F5D Parms{};

	Parms._state = std::move(_state);
	Parms._bActivated = _bActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnTrigger_2C11103F45405ACF05C0B7BA21105D0C
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputActionState&         _state                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    _bActivated                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnTrigger_2C11103F45405ACF05C0B7BA21105D0C(const struct FInputActionState& _state, bool _bActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnTrigger_2C11103F45405ACF05C0B7BA21105D0C");

	Params::GA_LockMove_C_m_OnTrigger_2C11103F45405ACF05C0B7BA21105D0C Parms{};

	Parms._state = std::move(_state);
	Parms._bActivated = _bActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnTrigger_B45DEB8C4289F7B8B51E258941B4BBE1
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputActionState&         _state                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    _bActivated                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnTrigger_B45DEB8C4289F7B8B51E258941B4BBE1(const struct FInputActionState& _state, bool _bActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnTrigger_B45DEB8C4289F7B8B51E258941B4BBE1");

	Params::GA_LockMove_C_m_OnTrigger_B45DEB8C4289F7B8B51E258941B4BBE1 Parms{};

	Parms._state = std::move(_state);
	Parms._bActivated = _bActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnTrigger_BC482665482168E58A1E64B568BCC4B9
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputActionState&         _state                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    _bActivated                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::m_OnTrigger_BC482665482168E58A1E64B568BCC4B9(const struct FInputActionState& _state, bool _bActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnTrigger_BC482665482168E58A1E64B568BCC4B9");

	Params::GA_LockMove_C_m_OnTrigger_BC482665482168E58A1E64B568BCC4B9 Parms{};

	Parms._state = std::move(_state);
	Parms._bActivated = _bActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.m_OnValidNullMontageChosen_C85A83FA408ED850695CAEA4D0446510
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::m_OnValidNullMontageChosen_C85A83FA408ED850695CAEA4D0446510()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "m_OnValidNullMontageChosen_C85A83FA408ED850695CAEA4D0446510");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.MakeManifest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&Handle                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayAbilityTargetDataHandle*Context                                                (Parm, OutParm)

void UGA_LockMove_C::MakeManifest(const struct FGameplayAbilityTargetDataHandle& Handle, struct FGameplayAbilityTargetDataHandle* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "MakeManifest");

	Params::GA_LockMove_C_MakeManifest Parms{};

	Parms.Handle = std::move(Handle);

	UObject::ProcessEvent(Func, &Parms);

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function GA_LockMove.GA_LockMove_C.MovingState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WithDelay                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::MovingState(bool WithDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "MovingState");

	Params::GA_LockMove_C_MovingState Parms{};

	Parms.WithDelay = WithDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.OnBlendedIn_C85A83FA408ED850695CAEA4D0446510
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnBlendedIn_C85A83FA408ED850695CAEA4D0446510()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnBlendedIn_C85A83FA408ED850695CAEA4D0446510");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnBlendOut_474B2CCF4D790D79CA397692DD64D230
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnBlendOut_474B2CCF4D790D79CA397692DD64D230()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnBlendOut_474B2CCF4D790D79CA397692DD64D230");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnBlendOut_C85A83FA408ED850695CAEA4D0446510
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnBlendOut_C85A83FA408ED850695CAEA4D0446510()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnBlendOut_C85A83FA408ED850695CAEA4D0446510");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnCancelled_C85A83FA408ED850695CAEA4D0446510
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnCancelled_C85A83FA408ED850695CAEA4D0446510()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnCancelled_C85A83FA408ED850695CAEA4D0446510");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnCatchup_A5EF05D341ADBB38C9D22BAB858BAF59
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnCatchup_A5EF05D341ADBB38C9D22BAB858BAF59()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnCatchup_A5EF05D341ADBB38C9D22BAB858BAF59");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnCatchup_BA29600F4818A85BCC8665A96DA38D14
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnCatchup_BA29600F4818A85BCC8665A96DA38D14()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnCatchup_BA29600F4818A85BCC8665A96DA38D14");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnCatchup_D3FADFC449ADF73AB6EF209B7700D894
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnCatchup_D3FADFC449ADF73AB6EF209B7700D894()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnCatchup_D3FADFC449ADF73AB6EF209B7700D894");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnCompleted_C85A83FA408ED850695CAEA4D0446510
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnCompleted_C85A83FA408ED850695CAEA4D0446510()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnCompleted_C85A83FA408ED850695CAEA4D0446510");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnEnded_474B2CCF4D790D79CA397692DD64D230
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnEnded_474B2CCF4D790D79CA397692DD64D230()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnEnded_474B2CCF4D790D79CA397692DD64D230");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnFinish_896C095341836569B0C799909447689D
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnFinish_896C095341836569B0C799909447689D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnFinish_896C095341836569B0C799909447689D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnFinish_B2E7B3304CE3E46C007E7982F879D042
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnFinish_B2E7B3304CE3E46C007E7982F879D042()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnFinish_B2E7B3304CE3E46C007E7982F879D042");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnHitAndBuildPayload
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAbilityExecOrigin                      AbilityExec                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FPendingHit&               Hit_Description                                        (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// const struct FGameplayAbilityTargetDataHandle&Player_Context                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_LockMove_C::OnHitAndBuildPayload(EAbilityExecOrigin AbilityExec, const struct FPendingHit& Hit_Description, const struct FGameplayAbilityTargetDataHandle& Player_Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnHitAndBuildPayload");

	Params::GA_LockMove_C_OnHitAndBuildPayload Parms{};

	Parms.AbilityExec = AbilityExec;
	Parms.Hit_Description = std::move(Hit_Description);
	Parms.Player_Context = std::move(Player_Context);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.OnHitPredicted_3351BFD041BA549FCC3E1ABC2865BBB0
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_LockMove_C::OnHitPredicted_3351BFD041BA549FCC3E1ABC2865BBB0(const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnHitPredicted_3351BFD041BA549FCC3E1ABC2865BBB0");

	Params::GA_LockMove_C_OnHitPredicted_3351BFD041BA549FCC3E1ABC2865BBB0 Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.OnHitProjectionFailed_3351BFD041BA549FCC3E1ABC2865BBB0
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnHitProjectionFailed_3351BFD041BA549FCC3E1ABC2865BBB0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnHitProjectionFailed_3351BFD041BA549FCC3E1ABC2865BBB0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnInterrupted_C85A83FA408ED850695CAEA4D0446510
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnInterrupted_C85A83FA408ED850695CAEA4D0446510()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnInterrupted_C85A83FA408ED850695CAEA4D0446510");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnRejected_A5EF05D341ADBB38C9D22BAB858BAF59
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnRejected_A5EF05D341ADBB38C9D22BAB858BAF59()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnRejected_A5EF05D341ADBB38C9D22BAB858BAF59");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnRejected_BA29600F4818A85BCC8665A96DA38D14
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnRejected_BA29600F4818A85BCC8665A96DA38D14()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnRejected_BA29600F4818A85BCC8665A96DA38D14");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnRejected_D3FADFC449ADF73AB6EF209B7700D894
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnRejected_D3FADFC449ADF73AB6EF209B7700D894()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnRejected_D3FADFC449ADF73AB6EF209B7700D894");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnStateEnded_8BD98EE64E207074DB6DC4ADC9585F1D
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnStateEnded_8BD98EE64E207074DB6DC4ADC9585F1D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnStateEnded_8BD98EE64E207074DB6DC4ADC9585F1D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnStateEnded_BC9CE18D488A0366A0CCE8A3D1E2B363
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnStateEnded_BC9CE18D488A0366A0CCE8A3D1E2B363()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnStateEnded_BC9CE18D488A0366A0CCE8A3D1E2B363");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnStateEnded_C28279794F787B168CD1A39A47ACA682
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnStateEnded_C28279794F787B168CD1A39A47ACA682()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnStateEnded_C28279794F787B168CD1A39A47ACA682");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnStateInterrupted_8BD98EE64E207074DB6DC4ADC9585F1D
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnStateInterrupted_8BD98EE64E207074DB6DC4ADC9585F1D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnStateInterrupted_8BD98EE64E207074DB6DC4ADC9585F1D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnStateInterrupted_BC9CE18D488A0366A0CCE8A3D1E2B363
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnStateInterrupted_BC9CE18D488A0366A0CCE8A3D1E2B363()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnStateInterrupted_BC9CE18D488A0366A0CCE8A3D1E2B363");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnStateInterrupted_C28279794F787B168CD1A39A47ACA682
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnStateInterrupted_C28279794F787B168CD1A39A47ACA682()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnStateInterrupted_C28279794F787B168CD1A39A47ACA682");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnSync_2D78F8E24228E2AA392DF6836C5E5C69
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnSync_2D78F8E24228E2AA392DF6836C5E5C69()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnSync_2D78F8E24228E2AA392DF6836C5E5C69");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnSync_7ADDD3BC4BBEDD9113F9B09EA4ADB269
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnSync_7ADDD3BC4BBEDD9113F9B09EA4ADB269()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnSync_7ADDD3BC4BBEDD9113F9B09EA4ADB269");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnSync_F1279D4A45AE2F4EE9C0DEAFFC2F1539
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::OnSync_F1279D4A45AE2F4EE9C0DEAFFC2F1539()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnSync_F1279D4A45AE2F4EE9C0DEAFFC2F1539");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.OnTick_A06B21B94372873D5A78F586AA27A7EA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   fDeltaTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::OnTick_A06B21B94372873D5A78F586AA27A7EA(float fDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "OnTick_A06B21B94372873D5A78F586AA27A7EA");

	Params::GA_LockMove_C_OnTick_A06B21B94372873D5A78F586AA27A7EA Parms{};

	Parms.fDeltaTime = fDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_LockMove.GA_LockMove_C.PreAnimation
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::PreAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "PreAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.Removed_6DA04CB14C20913652FAD8B1E748B866
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::Removed_6DA04CB14C20913652FAD8B1E748B866()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "Removed_6DA04CB14C20913652FAD8B1E748B866");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.Removed_9AD10AAE4E8EF064AD12FB82CF335E1A
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::Removed_9AD10AAE4E8EF064AD12FB82CF335E1A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "Removed_9AD10AAE4E8EF064AD12FB82CF335E1A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.Removed_E82AA0DE43AF2D51A424E1A7882A83B6
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::Removed_E82AA0DE43AF2D51A424E1A7882A83B6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "Removed_E82AA0DE43AF2D51A424E1A7882A83B6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.StopPreAnimation
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::StopPreAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "StopPreAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.StopState
// (BlueprintCallable, BlueprintEvent)

void UGA_LockMove_C::StopState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "StopState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_LockMove.GA_LockMove_C.ValidateHit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&_context                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool*                                   _bReturnResult                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_LockMove_C::ValidateHit(const struct FGameplayAbilityTargetDataHandle& _context, bool* _bReturnResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "ValidateHit");

	Params::GA_LockMove_C_ValidateHit Parms{};

	Parms._context = std::move(_context);

	UObject::ProcessEvent(Func, &Parms);

	if (_bReturnResult != nullptr)
		*_bReturnResult = Parms._bReturnResult;
}


// Function GA_LockMove.GA_LockMove_C.ComputeFreezeFrame
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FPendingHit&               InPendingHit                                           (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UGA_LockMove_C::ComputeFreezeFrame(const struct FPendingHit& InPendingHit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "ComputeFreezeFrame");

	Params::GA_LockMove_C_ComputeFreezeFrame Parms{};

	Parms.InPendingHit = std::move(InPendingHit);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_LockMove.GA_LockMove_C.MakeBallControlManifest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&Handle                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayAbilityTargetDataHandle*Context                                                (Parm, OutParm)

void UGA_LockMove_C::MakeBallControlManifest(const struct FGameplayAbilityTargetDataHandle& Handle, struct FGameplayAbilityTargetDataHandle* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "MakeBallControlManifest");

	Params::GA_LockMove_C_MakeBallControlManifest Parms{};

	Parms.Handle = std::move(Handle);

	UObject::ProcessEvent(Func, &Parms);

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function GA_LockMove.GA_LockMove_C.MakeDeflectManifest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&Handle                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayAbilityTargetDataHandle*Context                                                (Parm, OutParm)
// struct FGameplayAbilityTargetDataHandle*Handle1                                                (ConstParm, Parm, OutParm)

void UGA_LockMove_C::MakeDeflectManifest(const struct FGameplayAbilityTargetDataHandle& Handle, struct FGameplayAbilityTargetDataHandle* Context, struct FGameplayAbilityTargetDataHandle* Handle1) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_LockMove_C", "MakeDeflectManifest");

	Params::GA_LockMove_C_MakeDeflectManifest Parms{};

	Parms.Handle = std::move(Handle);

	UObject::ProcessEvent(Func, &Parms);

	if (Context != nullptr)
		*Context = std::move(Parms.Context);

	if (Handle1 != nullptr)
		*Handle1 = std::move(Parms.Handle1);
}

}

