#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Library_Menu

#include "Basic.hpp"

#include "BP_Library_Menu_classes.hpp"
#include "BP_Library_Menu_parameters.hpp"


namespace SDK
{

// Function BP_Library_Menu.BP_Library_Menu_C.CanChangeItemColor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USCCharacterPartDataAsset*        CharaPartDataAsset                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_Library_Menu_C::CanChangeItemColor(class USCCharacterPartDataAsset* CharaPartDataAsset, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "CanChangeItemColor");

	Params::BP_Library_Menu_C_CanChangeItemColor Parms{};

	Parms.CharaPartDataAsset = CharaPartDataAsset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Library_Menu.BP_Library_Menu_C.CanChangeItemFlockage
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USCCharacterPartDataAsset*        CharaPartDataAsset                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_Library_Menu_C::CanChangeItemFlockage(class USCCharacterPartDataAsset* CharaPartDataAsset, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "CanChangeItemFlockage");

	Params::BP_Library_Menu_C_CanChangeItemFlockage Parms{};

	Parms.CharaPartDataAsset = CharaPartDataAsset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Library_Menu.BP_Library_Menu_C.CanChangeItemPattern
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USCCharacterPartDataAsset*        CharaPartDataAsset                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_Library_Menu_C::CanChangeItemPattern(class USCCharacterPartDataAsset* CharaPartDataAsset, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "CanChangeItemPattern");

	Params::BP_Library_Menu_C_CanChangeItemPattern Parms{};

	Parms.CharaPartDataAsset = CharaPartDataAsset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Library_Menu.BP_Library_Menu_C.Get Item from SOSID
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    _sosId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FShopItem*                       Output                                                 (Parm, OutParm)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Library_Menu_C::Get_Item_from_SOSID(const class FString& _sosId, class UObject* __WorldContext, struct FShopItem* Output, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "Get Item from SOSID");

	Params::BP_Library_Menu_C_Get_Item_from_SOSID Parms{};

	Parms._sosId = std::move(_sosId);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function BP_Library_Menu.BP_Library_Menu_C.GetBrandAssetFromCharaPartAsset
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USCBaseCustomizationDataAsset*    Asset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const TSoftObjectPtr<class UObject>&    SoftAssetIfNoAsset                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBrandDataAsset**                 Brand_Asset                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_Library_Menu_C::GetBrandAssetFromCharaPartAsset(class USCBaseCustomizationDataAsset* Asset, const TSoftObjectPtr<class UObject>& SoftAssetIfNoAsset, class UObject* __WorldContext, class UBrandDataAsset** Brand_Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "GetBrandAssetFromCharaPartAsset");

	Params::BP_Library_Menu_C_GetBrandAssetFromCharaPartAsset Parms{};

	Parms.Asset = Asset;
	Parms.SoftAssetIfNoAsset = SoftAssetIfNoAsset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Brand_Asset != nullptr)
		*Brand_Asset = Parms.Brand_Asset;
}


// Function BP_Library_Menu.BP_Library_Menu_C.GetCustoOrProfileAssetFromSOSID
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    _sosId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UObject>*          Asset                                                  (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Library_Menu_C::GetCustoOrProfileAssetFromSOSID(const class FString& _sosId, class UObject* __WorldContext, TSoftObjectPtr<class UObject>* Asset, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "GetCustoOrProfileAssetFromSOSID");

	Params::BP_Library_Menu_C_GetCustoOrProfileAssetFromSOSID Parms{};

	Parms._sosId = std::move(_sosId);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Asset != nullptr)
		*Asset = Parms.Asset;

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function BP_Library_Menu.BP_Library_Menu_C.GetItemNameFromSOSID
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    _sosId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Display_Name                                           (Parm, OutParm)
// class FText*                            Description                                            (Parm, OutParm)

void UBP_Library_Menu_C::GetItemNameFromSOSID(const class FString& _sosId, class UObject* __WorldContext, class FText* Display_Name, class FText* Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "GetItemNameFromSOSID");

	Params::BP_Library_Menu_C_GetItemNameFromSOSID Parms{};

	Parms._sosId = std::move(_sosId);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Display_Name != nullptr)
		*Display_Name = std::move(Parms.Display_Name);

	if (Description != nullptr)
		*Description = std::move(Parms.Description);
}


// Function BP_Library_Menu.BP_Library_Menu_C.GetSeasonName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SeasonNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Name_0                                                 (Parm, OutParm)

void UBP_Library_Menu_C::GetSeasonName(int32 SeasonNumber, class UObject* __WorldContext, class FText* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "GetSeasonName");

	Params::BP_Library_Menu_C_GetSeasonName Parms{};

	Parms.SeasonNumber = SeasonNumber;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function BP_Library_Menu.BP_Library_Menu_C.GetUIColors
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FUIBaseColors*                   UI_BaseColors                                          (Parm, OutParm, HasGetValueTypeHash)

void UBP_Library_Menu_C::GetUIColors(class UObject* __WorldContext, struct FUIBaseColors* UI_BaseColors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "GetUIColors");

	Params::BP_Library_Menu_C_GetUIColors Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (UI_BaseColors != nullptr)
		*UI_BaseColors = std::move(Parms.UI_BaseColors);
}


// Function BP_Library_Menu.BP_Library_Menu_C.HideCustomMatchParamsWidgets
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UWidget*>&                 InWidgets                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const TMap<class UWidget*, ERuntimeMatchParameterTypes>&InWidgetToMatchParam                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// const TMap<class UWidget*, Enum_CustomMatch_BPParams>&InWidgetToUserMatchParam                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_Library_Menu_C::HideCustomMatchParamsWidgets(TArray<class UWidget*>& InWidgets, const TMap<class UWidget*, ERuntimeMatchParameterTypes>& InWidgetToMatchParam, const TMap<class UWidget*, Enum_CustomMatch_BPParams>& InWidgetToUserMatchParam, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "HideCustomMatchParamsWidgets");

	Params::BP_Library_Menu_C_HideCustomMatchParamsWidgets Parms{};

	Parms.InWidgets = std::move(InWidgets);
	Parms.InWidgetToMatchParam = std::move(InWidgetToMatchParam);
	Parms.InWidgetToUserMatchParam = std::move(InWidgetToUserMatchParam);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	InWidgets = std::move(Parms.InWidgets);
}


// Function BP_Library_Menu.BP_Library_Menu_C.IsAssetEmptyCustoAsset
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UObject>           SoftAsset                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_Library_Menu_C::IsAssetEmptyCustoAsset(TSoftObjectPtr<class UObject> SoftAsset, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "IsAssetEmptyCustoAsset");

	Params::BP_Library_Menu_C_IsAssetEmptyCustoAsset Parms{};

	Parms.SoftAsset = SoftAsset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Library_Menu.BP_Library_Menu_C.SetupScrollBoxStyle
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UScrollBox*                       ScrollBox                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_Library_Menu_C::SetupScrollBoxStyle(class UScrollBox* ScrollBox, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_Library_Menu_C", "SetupScrollBoxStyle");

	Params::BP_Library_Menu_C_SetupScrollBoxStyle Parms{};

	Parms.ScrollBox = ScrollBox;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_Library_Menu.BP_Library_Menu_C.IsButtonItemSmall
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_Library_Menu_C::IsButtonItemSmall(const struct FGameplayTag& Tag, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Library_Menu_C", "IsButtonItemSmall");

	Params::BP_Library_Menu_C_IsButtonItemSmall Parms{};

	Parms.Tag = std::move(Tag);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Library_Menu.BP_Library_Menu_C.GetGameModeName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// ESOSGameType                            GameMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Name_0                                                 (Parm, OutParm)

void UBP_Library_Menu_C::GetGameModeName(ESOSGameType GameMode, class UObject* __WorldContext, class FText* Name_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Library_Menu_C", "GetGameModeName");

	Params::BP_Library_Menu_C_GetGameModeName Parms{};

	Parms.GameMode = GameMode;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function BP_Library_Menu.BP_Library_Menu_C.GetItemNameFromAssetRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          Asset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Display_Name                                           (Parm, OutParm)
// class FText*                            Description                                            (Parm, OutParm)

void UBP_Library_Menu_C::GetItemNameFromAssetRef(class UObject* Asset, class UObject* __WorldContext, class FText* Display_Name, class FText* Description) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Library_Menu_C", "GetItemNameFromAssetRef");

	Params::BP_Library_Menu_C_GetItemNameFromAssetRef Parms{};

	Parms.Asset = Asset;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (Display_Name != nullptr)
		*Display_Name = std::move(Parms.Display_Name);

	if (Description != nullptr)
		*Description = std::move(Parms.Description);
}


// Function BP_Library_Menu.BP_Library_Menu_C.GetItemNameFromSoftAssetRef
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UObject>           Asset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Display_Name                                           (Parm, OutParm)
// class FText*                            Description                                            (Parm, OutParm)

void UBP_Library_Menu_C::GetItemNameFromSoftAssetRef(TSoftObjectPtr<class UObject> Asset, class UObject* __WorldContext, class FText* Display_Name, class FText* Description) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Library_Menu_C", "GetItemNameFromSoftAssetRef");

	Params::BP_Library_Menu_C_GetItemNameFromSoftAssetRef Parms{};

	Parms.Asset = Asset;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (Display_Name != nullptr)
		*Display_Name = std::move(Parms.Display_Name);

	if (Description != nullptr)
		*Description = std::move(Parms.Description);
}

}

