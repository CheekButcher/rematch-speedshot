#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BallSoundComponent

#include "Basic.hpp"

#include "BP_BallSoundComponent_classes.hpp"
#include "BP_BallSoundComponent_parameters.hpp"


namespace SDK
{

// Function BP_BallSoundComponent.BP_BallSoundComponent_C.AddSFXFreezeFrameInfos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayingID                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UAkAudioEvent*&             EventRef                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const class AActor*&                    Actor                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::AddSFXFreezeFrameInfos(const int32& PlayingID, const class UAkAudioEvent*& EventRef, const class AActor*& Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "AddSFXFreezeFrameInfos");

	Params::BP_BallSoundComponent_C_AddSFXFreezeFrameInfos Parms{};

	Parms.PlayingID = PlayingID;
	Parms.EventRef = EventRef;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.Bounce SFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   BounceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   BounceNormal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BallSpeed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPhysicalMaterial*                Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::Bounce_SFX(const struct FVector& BounceLocation, const struct FVector& BounceNormal, double BallSpeed, class UPhysicalMaterial* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "Bounce SFX");

	Params::BP_BallSoundComponent_C_Bounce_SFX Parms{};

	Parms.BounceLocation = std::move(BounceLocation);
	Parms.BounceNormal = std::move(BounceNormal);
	Parms.BallSpeed = BallSpeed;
	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.CancelHardDefenseFX
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::CancelHardDefenseFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "CancelHardDefenseFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.CancelNoControlFX
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::CancelNoControlFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "CancelNoControlFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.CancelNoTackleFX
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::CancelNoTackleFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "CancelNoTackleFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.CancelNoVolleyFX
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::CancelNoVolleyFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "CancelNoVolleyFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.ClearBindings
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::ClearBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "ClearBindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.ClearSFXFreezeFrame
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::ClearSFXFreezeFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "ClearSFXFreezeFrame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.ClearTimers
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::ClearTimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "ClearTimers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.ClearVariables
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::ClearVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "ClearVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.DopplerProcessing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 DopplerValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::DopplerProcessing(double* DopplerValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "DopplerProcessing");

	Params::BP_BallSoundComponent_C_DopplerProcessing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DopplerValue != nullptr)
		*DopplerValue = Parms.DopplerValue;
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.ExecuteUbergraph_BP_BallSoundComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::ExecuteUbergraph_BP_BallSoundComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "ExecuteUbergraph_BP_BallSoundComponent");

	Params::BP_BallSoundComponent_C_ExecuteUbergraph_BP_BallSoundComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.GetAccelerationTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 AccelerationDuration                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::GetAccelerationTime(double* AccelerationDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "GetAccelerationTime");

	Params::BP_BallSoundComponent_C_GetAccelerationTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AccelerationDuration != nullptr)
		*AccelerationDuration = Parms.AccelerationDuration;
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.GetSFXFreezeFrameAtIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkAudioEvent**                   EventRef                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor**                          Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::GetSFXFreezeFrameAtIndex(int32 Index_0, class UAkAudioEvent** EventRef, class AActor** Actor, int32* PlayingID, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "GetSFXFreezeFrameAtIndex");

	Params::BP_BallSoundComponent_C_GetSFXFreezeFrameAtIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (EventRef != nullptr)
		*EventRef = Parms.EventRef;

	if (Actor != nullptr)
		*Actor = Parms.Actor;

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.LaunchHardDefenseFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  StatusUntilTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::LaunchHardDefenseFX(double StatusUntilTime, double CurrentTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "LaunchHardDefenseFX");

	Params::BP_BallSoundComponent_C_LaunchHardDefenseFX Parms{};

	Parms.StatusUntilTime = StatusUntilTime;
	Parms.CurrentTime = CurrentTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.LaunchNoControlFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  StatusUntilTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::LaunchNoControlFX(double StatusUntilTime, double CurrentTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "LaunchNoControlFX");

	Params::BP_BallSoundComponent_C_LaunchNoControlFX Parms{};

	Parms.StatusUntilTime = StatusUntilTime;
	Parms.CurrentTime = CurrentTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.LaunchNoTackleFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  StatusUntilTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::LaunchNoTackleFX(double StatusUntilTime, double CurrentTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "LaunchNoTackleFX");

	Params::BP_BallSoundComponent_C_LaunchNoTackleFX Parms{};

	Parms.StatusUntilTime = StatusUntilTime;
	Parms.CurrentTime = CurrentTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.LaunchNoVolleyFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  StatusUntilTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::LaunchNoVolleyFX(double StatusUntilTime, double CurrentTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "LaunchNoVolleyFX");

	Params::BP_BallSoundComponent_C_LaunchNoVolleyFX Parms{};

	Parms.StatusUntilTime = StatusUntilTime;
	Parms.CurrentTime = CurrentTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.OnBallOwnershipChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBallPlayersInteractionComponent* _ballPlayerInteraction                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::OnBallOwnershipChanged(class UBallPlayersInteractionComponent* _ballPlayerInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "OnBallOwnershipChanged");

	Params::BP_BallSoundComponent_C_OnBallOwnershipChanged Parms{};

	Parms._ballPlayerInteraction = _ballPlayerInteraction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.OnBallRotation
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FQuat&                     _rotation                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::OnBallRotation(const struct FQuat& _rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "OnBallRotation");

	Params::BP_BallSoundComponent_C_OnBallRotation Parms{};

	Parms._rotation = std::move(_rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.OnBounced
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABall*                            _ball                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FBounceData&               _bounceData                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// float                                   _fSpeedAtBounce                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::OnBounced(class ABall* _ball, const struct FBounceData& _bounceData, float _fSpeedAtBounce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "OnBounced");

	Params::BP_BallSoundComponent_C_OnBounced Parms{};

	Parms._ball = _ball;
	Parms._bounceData = std::move(_bounceData);
	Parms._fSpeedAtBounce = _fSpeedAtBounce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.OnGoalScored
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGoalDescription&          GoalDesciprtion                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_BallSoundComponent_C::OnGoalScored(const struct FGoalDescription& GoalDesciprtion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "OnGoalScored");

	Params::BP_BallSoundComponent_C_OnGoalScored Parms{};

	Parms.GoalDesciprtion = std::move(GoalDesciprtion);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.OnRejectedShoot
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FShootParams&              _shootParams                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_BallSoundComponent_C::OnRejectedShoot(const struct FShootParams& _shootParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "OnRejectedShoot");

	Params::BP_BallSoundComponent_C_OnRejectedShoot Parms{};

	Parms._shootParams = std::move(_shootParams);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.OnShoot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABall*                            _ball                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FShootParams&              _shootParams                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_BallSoundComponent_C::OnShoot(class ABall* _ball, const struct FShootParams& _shootParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "OnShoot");

	Params::BP_BallSoundComponent_C_OnShoot Parms{};

	Parms._ball = _ball;
	Parms._shootParams = std::move(_shootParams);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.OnTrajectoryCleared
// (BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::OnTrajectoryCleared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "OnTrajectoryCleared");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.OnTrajectoryUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class ABall*                      _ball                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FShootParams&              _shootParams                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_BallSoundComponent_C::OnTrajectoryUpdated(const class ABall* _ball, const struct FShootParams& _shootParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "OnTrajectoryUpdated");

	Params::BP_BallSoundComponent_C_OnTrajectoryUpdated Parms{};

	Parms._ball = _ball;
	Parms._shootParams = std::move(_shootParams);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.PlayShootTypeSFX
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FShootParams&              ShootParam                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// int32*                                  PlayingID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkAudioEvent**                   EventRef                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor**                          Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::PlayShootTypeSFX(const struct FShootParams& ShootParam, int32* PlayingID, class UAkAudioEvent** EventRef, class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "PlayShootTypeSFX");

	Params::BP_BallSoundComponent_C_PlayShootTypeSFX Parms{};

	Parms.ShootParam = std::move(ShootParam);

	UObject::ProcessEvent(Func, &Parms);

	if (PlayingID != nullptr)
		*PlayingID = Parms.PlayingID;

	if (EventRef != nullptr)
		*EventRef = Parms.EventRef;

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.ProcessDoppler
// (BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::ProcessDoppler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "ProcessDoppler");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_BallSoundComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "ReceiveEndPlay");

	Params::BP_BallSoundComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "ReceiveTick");

	Params::BP_BallSoundComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.Set Magnus RTPC
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   RotationMagnus                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::Set_Magnus_RTPC(const struct FVector& RotationMagnus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "Set Magnus RTPC");

	Params::BP_BallSoundComponent_C_Set_Magnus_RTPC Parms{};

	Parms.RotationMagnus = std::move(RotationMagnus);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.SetBallControlLocation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARuntimeCharacter*                BallOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::SetBallControlLocation(class ARuntimeCharacter* BallOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "SetBallControlLocation");

	Params::BP_BallSoundComponent_C_SetBallControlLocation Parms{};

	Parms.BallOwner = BallOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.SetBallState
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::SetBallState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "SetBallState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.ShootFreezeOver
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABall*                            _ball                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FBounceData&               _bounceData                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// float                                   _fSpeedAtBounce                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BallSoundComponent_C::ShootFreezeOver(class ABall* _ball, const struct FBounceData& _bounceData, float _fSpeedAtBounce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "ShootFreezeOver");

	Params::BP_BallSoundComponent_C_ShootFreezeOver Parms{};

	Parms._ball = _ball;
	Parms._bounceData = std::move(_bounceData);
	Parms._fSpeedAtBounce = _fSpeedAtBounce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BallSoundComponent.BP_BallSoundComponent_C.StopUnresumedSFX
// (BlueprintCallable, BlueprintEvent)

void UBP_BallSoundComponent_C::StopUnresumedSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BallSoundComponent_C", "StopUnresumedSFX");

	UObject::ProcessEvent(Func, nullptr);
}

}

