#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MatchmakingViewModel

#include "Basic.hpp"

#include "BP_MatchmakingViewModel_classes.hpp"
#include "BP_MatchmakingViewModel_parameters.hpp"


namespace SDK
{

// Function BP_MatchmakingViewModel.BP_MatchmakingViewModel_C.Is Ranked Match Available
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   CurrentLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESOSFeatureState                        eRankedMatchState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAnyPlayerInMatch                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isAnyPlayerReconnectingToRanked                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isAnyPlayerLeaver                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsEnabled                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MatchmakingViewModel_C::Is_Ranked_Match_Available(int32 CurrentLevel, ESOSFeatureState eRankedMatchState, bool IsAnyPlayerInMatch, bool isAnyPlayerReconnectingToRanked, bool isAnyPlayerLeaver, bool* IsEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MatchmakingViewModel_C", "Is Ranked Match Available");

	Params::BP_MatchmakingViewModel_C_Is_Ranked_Match_Available Parms{};

	Parms.CurrentLevel = CurrentLevel;
	Parms.eRankedMatchState = eRankedMatchState;
	Parms.IsAnyPlayerInMatch = IsAnyPlayerInMatch;
	Parms.isAnyPlayerReconnectingToRanked = isAnyPlayerReconnectingToRanked;
	Parms.isAnyPlayerLeaver = isAnyPlayerLeaver;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnabled != nullptr)
		*IsEnabled = Parms.IsEnabled;
}


// Function BP_MatchmakingViewModel.BP_MatchmakingViewModel_C.Is Ranked Match Entry Available
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   CurrentLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ConnectedToFronted                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsEnabled                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MatchmakingViewModel_C::Is_Ranked_Match_Entry_Available(int32 CurrentLevel, bool ConnectedToFronted, bool* IsEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MatchmakingViewModel_C", "Is Ranked Match Entry Available");

	Params::BP_MatchmakingViewModel_C_Is_Ranked_Match_Entry_Available Parms{};

	Parms.CurrentLevel = CurrentLevel;
	Parms.ConnectedToFronted = ConnectedToFronted;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnabled != nullptr)
		*IsEnabled = Parms.IsEnabled;
}

}

