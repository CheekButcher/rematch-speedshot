#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IShakeableCameraOwner

#include "Basic.hpp"

#include "IShakeableCameraOwner_classes.hpp"
#include "IShakeableCameraOwner_parameters.hpp"


namespace SDK
{

// Function IShakeableCameraOwner.IShakeableCameraOwner_C.PlayShakeCam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InMultiplier                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           InShakeClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ECameraShakePlaySpace                   InShakePlaySpace                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  InUserShakeRotation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IIShakeableCameraOwner_C::PlayShakeCam(double InMultiplier, class UClass* InShakeClass, ECameraShakePlaySpace InShakePlaySpace, const struct FRotator& InUserShakeRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("IShakeableCameraOwner_C", "PlayShakeCam");

	Params::IShakeableCameraOwner_C_PlayShakeCam Parms{};

	Parms.InMultiplier = InMultiplier;
	Parms.InShakeClass = InShakeClass;
	Parms.InShakePlaySpace = InShakePlaySpace;
	Parms.InUserShakeRotation = std::move(InUserShakeRotation);

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

