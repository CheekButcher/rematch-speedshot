#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SCCore

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "StructUtils_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "RigVM_structs.hpp"
#include "PBIK_structs.hpp"
#include "NetCore_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "MovieScene_structs.hpp"
#include "AIModule_structs.hpp"
#include "StateTreeModule_structs.hpp"


namespace SDK
{

// Enum SCCore.ESCDebugRemoteAction
// NumValues: 0x0004
enum class ESCDebugRemoteAction : uint8
{
	Cvar                                     = 0,
	ConsoleCommand                           = 1,
	Custom                                   = 2,
	ESCDebugRemoteAction_MAX                 = 3,
};

// Enum SCCore.ETransitionRotation
// NumValues: 0x0008
enum class ETransitionRotation : uint8
{
	Degree_0                                 = 0,
	Degree_45                                = 1,
	Degree_90                                = 2,
	Degree_135                               = 3,
	Degree_180                               = 4,
	Count                                    = 5,
	None                                     = 6,
	ETransitionRotation_MAX                  = 7,
};

// Enum SCCore.ESCCharacterSpeedState
// NumValues: 0x0007
enum class ESCCharacterSpeedState : uint8
{
	V0                                       = 0,
	V1                                       = 1,
	V2                                       = 2,
	V3                                       = 3,
	Count                                    = 4,
	None                                     = 5,
	ESCCharacterSpeedState_MAX               = 6,
};

// Enum SCCore.ESCCardinalPoints
// NumValues: 0x0007
enum class ESCCardinalPoints : uint8
{
	North                                    = 0,
	East                                     = 1,
	South                                    = 2,
	West                                     = 3,
	Count                                    = 4,
	None                                     = 5,
	ESCCardinalPoints_MAX                    = 6,
};

// Enum SCCore.ETransitionStopReason
// NumValues: 0x000B
enum class ETransitionStopReason : uint8
{
	TimePassed                               = 0,
	RootMotion                               = 1,
	OrientationModeChanged                   = 2,
	NotWalking                               = 3,
	StopAtLowSpeed                           = 4,
	SpeedDescriptionDBChanged                = 5,
	RestartPlayer                            = 6,
	TaskEnded                                = 7,
	OtherTransition                          = 8,
	None                                     = 9,
	ETransitionStopReason_MAX                = 10,
};

// Enum SCCore.ESCTransitionType
// NumValues: 0x0007
enum class ESCTransitionType : uint8
{
	Start                                    = 0,
	Stop                                     = 1,
	Turn                                     = 2,
	SpeedChange                              = 3,
	Count                                    = 4,
	None                                     = 5,
	ESCTransitionType_MAX                    = 6,
};

// Enum SCCore.ELoadResult
// NumValues: 0x0009
enum class ELoadResult : uint8
{
	Valid                                    = 0,
	Empty                                    = 1,
	HashInvalid                              = 2,
	FileNotFound                             = 3,
	SaveNotCreated                           = 4,
	UnspecifiedError                         = 5,
	Count                                    = 6,
	None                                     = 7,
	ELoadResult_MAX                          = 8,
};

// Enum SCCore.ESCTraceType
// NumValues: 0x0004
enum class ESCTraceType : uint8
{
	Test                                     = 0,
	Single                                   = 1,
	Multi                                    = 2,
	ESCTraceType_MAX                         = 3,
};

// Enum SCCore.ENetErrorSeverity
// NumValues: 0x0003
enum class ENetErrorSeverity : uint8
{
	Warning                                  = 0,
	Error                                    = 1,
	ENetErrorSeverity_MAX                    = 2,
};

// Enum SCCore.ENetErrorType
// NumValues: 0x0004
enum class ENetErrorType : uint8
{
	Movement                                 = 0,
	GAS                                      = 1,
	Hitbox                                   = 2,
	ENetErrorType_MAX                        = 3,
};

// Enum SCCore.ESaveResult
// NumValues: 0x0007
enum class ESaveResult : uint8
{
	Valid                                    = 0,
	Empty                                    = 1,
	ErrorFileNotCreated                      = 2,
	ErrorFileCorrupted                       = 3,
	GenericError                             = 4,
	HashInvalid                              = 5,
	ESaveResult_MAX                          = 6,
};

// Enum SCCore.ESCSynchroGameStateInitStep
// NumValues: 0x000A
enum class ESCSynchroGameStateInitStep : uint8
{
	None                                     = 0,
	Default                                  = 1,
	GameStateReplicated                      = 2,
	PlayerControllerReplicated               = 3,
	PlayerArrayCompleteOnClient              = 4,
	GameStateIsInProgress                    = 5,
	SaveSubsystemCreated                     = 6,
	SaveGameObjectLoaded                     = 7,
	SubsystemsLoadedFromSaveGameObject       = 8,
	ESCSynchroGameStateInitStep_MAX          = 9,
};

// Enum SCCore.ESCBlendType
// NumValues: 0x0020
enum class ESCBlendType : uint8
{
	Linear                                   = 0,
	Parabolic                                = 1,
	Cubic                                    = 2,
	Exponential                              = 3,
	Cosine                                   = 4,
	QuadraticIn                              = 5,
	QuadraticOut                             = 6,
	QuadraticInOut                           = 7,
	CubicIn                                  = 8,
	CubicOut                                 = 9,
	CubicInOut                               = 10,
	CubicAnim                                = 11,
	QuarticIn                                = 12,
	QuarticOut                               = 13,
	QuarticInOut                             = 14,
	QuinticIn                                = 15,
	QuinticOut                               = 16,
	QuinticInOut                             = 17,
	SinusoidalIn                             = 18,
	SinusoidalOut                            = 19,
	SinusoidalInOut                          = 20,
	ExponentialIn                            = 21,
	ExponentialOut                           = 22,
	ExponentialInOut                         = 23,
	Exponential2In                           = 24,
	Exponential2Out                          = 25,
	Exponential2InOut                        = 26,
	CircularIn                               = 27,
	CircularOut                              = 28,
	CircularInOut                            = 29,
	CustomCurve                              = 30,
	ESCBlendType_MAX                         = 31,
};

// Enum SCCore.EBinderTargetType
// NumValues: 0x0004
enum class EBinderTargetType : uint8
{
	Owner                                    = 0,
	SoftRef                                  = 1,
	Deferred                                 = 2,
	EBinderTargetType_MAX                    = 3,
};

// Enum SCCore.EVirtualAction
// NumValues: 0x0004
enum class EVirtualAction : uint32
{
	None                                     = 0,
	Virtual_Accept                           = 1,
	Virtual_Back                             = 2,
	EVirtualAction_MAX                       = 3,
};

// Enum SCCore.ECaptureInputStep
// NumValues: 0x0007
enum class ECaptureInputStep : uint8
{
	ActionStep                               = 0,
	AxisXLeftStep                            = 1,
	AxisXRightStep                           = 2,
	AxisYUpStep                              = 3,
	AxisYDownStep                            = 4,
	Count                                    = 5,
	ECaptureInputStep_MAX                    = 6,
};

// Enum SCCore.ESCRotationWay
// NumValues: 0x0004
enum class ESCRotationWay : uint8
{
	ClockWise                                = 0,
	CounterClockWise                         = 1,
	None                                     = 2,
	ESCRotationWay_MAX                       = 3,
};

// Enum SCCore.ECinematicLayerTypes
// NumValues: 0x0004
enum class ECinematicLayerTypes : uint8
{
	CinematicLayer1                          = 0,
	CinematicLayer2                          = 1,
	Count                                    = 2,
	ECinematicLayerTypes_MAX                 = 3,
};

// Enum SCCore.ESCAnimLookAtDirectionType
// NumValues: 0x0006
enum class ESCAnimLookAtDirectionType : uint8
{
	Camera                                   = 0,
	Local                                    = 1,
	World                                    = 2,
	Velocity                                 = 3,
	Acceleration                             = 4,
	ESCAnimLookAtDirectionType_MAX           = 5,
};

// Enum SCCore.ESCAnimLookAtApplyMode
// NumValues: 0x0005
enum class ESCAnimLookAtApplyMode : uint8
{
	AimOffset                                = 0,
	Procedural_Spine                         = 1,
	Procedural_Head                          = 2,
	None                                     = 3,
	ESCAnimLookAtApplyMode_MAX               = 4,
};

// Enum SCCore.EUIInputModes
// NumValues: 0x0005
enum class EUIInputModes : uint8
{
	Controller                               = 0,
	Mouse                                    = 1,
	Count                                    = 2,
	None                                     = 3,
	EUIInputModes_MAX                        = 4,
};

// Enum SCCore.EInputWatchTrigger
// NumValues: 0x0006
enum class EInputWatchTrigger : uint8
{
	WatchActivation                          = 0,
	WatchDeactivation                        = 1,
	WatchActivationAndDeactivation           = 2,
	WatchActivationThenDeactivation          = 3,
	WatchDeactivationThenActivation          = 4,
	EInputWatchTrigger_MAX                   = 5,
};

// Enum SCCore.EServiceStateUpdate
// NumValues: 0x0005
enum class EServiceStateUpdate : uint8
{
	Deactivated                              = 0,
	Activated                                = 1,
	Sleeping                                 = 2,
	Awaken                                   = 3,
	EServiceStateUpdate_MAX                  = 4,
};

// Enum SCCore.ESCLookAtReachType
// NumValues: 0x0003
enum class ESCLookAtReachType : uint8
{
	Time                                     = 0,
	Spring                                   = 1,
	ESCLookAtReachType_MAX                   = 2,
};

// Enum SCCore.ESCLookAtType
// NumValues: 0x0006
enum class ESCLookAtType : uint8
{
	Actor                                    = 0,
	Pos                                      = 1,
	Melee                                    = 2,
	Count                                    = 3,
	None                                     = 4,
	ESCLookAtType_MAX                        = 5,
};

// Enum SCCore.EMenuTransitions
// NumValues: 0x0005
enum class EMenuTransitions : uint8
{
	Push                                     = 0,
	Pop                                      = 1,
	Count                                    = 2,
	None                                     = 3,
	EMenuTransitions_MAX                     = 4,
};

// Enum SCCore.EWidgetLifeCycle
// NumValues: 0x0004
enum class EWidgetLifeCycle : uint8
{
	ReleaseOnPop                             = 0,
	ReleaseOnPopAndRemoveInstance            = 1,
	NeverReleased                            = 2,
	EWidgetLifeCycle_MAX                     = 3,
};

// Enum SCCore.ECycleDirection
// NumValues: 0x0004
enum class ECycleDirection : uint8
{
	Next                                     = 0,
	Previous                                 = 1,
	None                                     = 2,
	ECycleDirection_MAX                      = 3,
};

// Enum SCCore.EFSMStateWatchAction
// NumValues: 0x0003
enum class EFSMStateWatchAction : uint8
{
	WatchEntered                             = 0,
	WatchExiting                             = 1,
	EFSMStateWatchAction_MAX                 = 2,
};

// Enum SCCore.EInteractionPriorityResult
// NumValues: 0x0004
enum class EInteractionPriorityResult : uint8
{
	Equal                                    = 0,
	Lesser                                   = 1,
	Greater                                  = 2,
	EInteractionPriorityResult_MAX           = 3,
};

// Enum SCCore.EAnalogInputReferenceDirection
// NumValues: 0x0005
enum class EAnalogInputReferenceDirection : uint8
{
	UpdateWithInputDir                       = 0,
	UpdateWithInputVelocity                  = 1,
	UpdateWithActorForward                   = 2,
	UpdateWithInputForward                   = 3,
	EAnalogInputReferenceDirection_MAX       = 4,
};

// Enum SCCore.EAngleRefType
// NumValues: 0x0004
enum class EAngleRefType : uint8
{
	GamepadNorth                             = 0,
	StickInitial                             = 1,
	StickInitialSkewed                       = 2,
	EAngleRefType_MAX                        = 3,
};

// Enum SCCore.EActorAxis
// NumValues: 0x0007
enum class EActorAxis : uint8
{
	Forward                                  = 0,
	Backward                                 = 1,
	Right                                    = 2,
	Left                                     = 3,
	Up                                       = 4,
	Down                                     = 5,
	EActorAxis_MAX                           = 6,
};

// Enum SCCore.EAngleComputeMethod
// NumValues: 0x0007
enum class EAngleComputeMethod : uint8
{
	SelfToTargetOnTargetForward              = 0,
	SelfToTargetOnSelfForward                = 1,
	SelfToTargetOnTargetVelocity             = 2,
	SelfForwardToTargetForward               = 3,
	SelfForwardToTargetVelocity              = 4,
	TargetToSelfOnTargetForward              = 5,
	EAngleComputeMethod_MAX                  = 6,
};

// Enum SCCore.EALBinaryOperation
// NumValues: 0x0004
enum class EALBinaryOperation : uint8
{
	SET                                      = 0,
	AND                                      = 1,
	OR                                       = 2,
	EALBinaryOperation_MAX                   = 3,
};

// Enum SCCore.EMontagePlayerRedirection
// NumValues: 0x0004
enum class EMontagePlayerRedirection : uint8
{
	UseActorForward                          = 0,
	UseActorVelocity                         = 1,
	UseCamera                                = 2,
	EMontagePlayerRedirection_MAX            = 3,
};

// Enum SCCore.EStartTimeOption
// NumValues: 0x0004
enum class EStartTimeOption : uint8
{
	None                                     = 0,
	StartFromCurrentAbilityMontageTime       = 1,
	StartFromContext                         = 2,
	EStartTimeOption_MAX                     = 3,
};

// Enum SCCore.EBoneCoordinateSpace
// NumValues: 0x0007
enum class EBoneCoordinateSpace : uint8
{
	Component                                = 0,
	Actor                                    = 1,
	World                                    = 2,
	BoneSpace                                = 3,
	WorldForceUpdate                         = 4,
	CharacterStatic                          = 5,
	EBoneCoordinateSpace_MAX                 = 6,
};

// Enum SCCore.ECaptureControllerTypes
// NumValues: 0x0005
enum class ECaptureControllerTypes : uint8
{
	None                                     = 0,
	Gamepad                                  = 1,
	Keyboard                                 = 2,
	Count                                    = 3,
	ECaptureControllerTypes_MAX              = 4,
};

// Enum SCCore.EAttributeTriggerType
// NumValues: 0x0004
enum class EAttributeTriggerType : uint8
{
	OnIncreasing                             = 0,
	OnDecreasing                             = 1,
	Always                                   = 2,
	EAttributeTriggerType_MAX                = 3,
};

// Enum SCCore.EControllerIconAxisTypes
// NumValues: 0x000B
enum class EControllerIconAxisTypes : uint8
{
	Horizontal                               = 0,
	Vertical                                 = 1,
	HorizontalAndVertical                    = 2,
	Diagonal                                 = 3,
	Back                                     = 4,
	Front                                    = 5,
	Left                                     = 6,
	Right                                    = 7,
	Count                                    = 8,
	None                                     = 9,
	EControllerIconAxisTypes_MAX             = 10,
};

// Enum SCCore.EPlatform
// NumValues: 0x0008
enum class EPlatform : uint8
{
	STEAM                                    = 0,
	PS4                                      = 1,
	Galaxy                                   = 2,
	LIVE                                     = 3,
	PS5                                      = 4,
	DISPATCHER                               = 254,
	INVALID                                  = 255,
	EPlatform_MAX                            = 256,
};

// Enum SCCore.ECoordinateSystem
// NumValues: 0x0003
enum class ECoordinateSystem : uint8
{
	World                                    = 0,
	Local                                    = 1,
	ECoordinateSystem_MAX                    = 2,
};

// Enum SCCore.EDevTeamDefinedEnums
// NumValues: 0x0004
enum class EDevTeamDefinedEnums : uint8
{
	TechAdviser                              = 0,
	DataAdviser                              = 1,
	Count                                    = 2,
	EDevTeamDefinedEnums_MAX                 = 3,
};

// Enum SCCore.EDirections
// NumValues: 0x0007
enum class EDirections : uint8
{
	Left                                     = 0,
	Right                                    = 1,
	Down                                     = 2,
	Up                                       = 3,
	Count                                    = 4,
	None                                     = 5,
	EDirections_MAX                          = 6,
};

// Enum SCCore.EMoveDirections
// NumValues: 0x0007
enum class EMoveDirections : uint8
{
	Left                                     = 0,
	Right                                    = 1,
	Backward                                 = 2,
	Forward                                  = 3,
	Count                                    = 4,
	None                                     = 5,
	EMoveDirections_MAX                      = 6,
};

// Enum SCCore.DisplayLevel
// NumValues: 0x000D
enum class EDisplayLevel : uint8
{
	NoLogging                                = 0,
	Fatal                                    = 1,
	Error                                    = 2,
	Warning                                  = 3,
	Log                                      = 4,
	Verbose                                  = 5,
	VeryVerbose                              = 6,
	All                                      = 6,
	NumVerbosity                             = 7,
	VerbosityMask                            = 15,
	SetColor                                 = 64,
	BreakOnLog                               = 128,
	DisplayLevel_MAX                         = 129,
};

// Enum SCCore.ECenterComputationType
// NumValues: 0x0003
enum class ECenterComputationType : uint8
{
	Corridor                                 = 0,
	Circle                                   = 1,
	ECenterComputationType_MAX               = 2,
};

// Enum SCCore.EAngleAnimationPickerType
// NumValues: 0x0007
enum class EAngleAnimationPickerType : uint8
{
	InputWorldDirectionRelativeToDirectionTarget = 0,
	CameraForwardRelativeToDirectionTarget   = 1,
	ActorForwardRelativeToTarget             = 2,
	CameraForwardRelativeToActor             = 3,
	InputDirectionAbsolute                   = 4,
	ActorVelocityRelativeToTarget            = 5,
	EAngleAnimationPickerType_MAX            = 6,
};

// Enum SCCore.EConditionalTargetDatasource_ConditionTarget
// NumValues: 0x0003
enum class EConditionalTargetDatasource_ConditionTarget : uint8
{
	Context                                  = 0,
	ParentResultTarget                       = 1,
	EConditionalTargetDatasource_MAX         = 2,
};

// Enum SCCore.EFilterTargetDatasource_FailureBehavior
// NumValues: 0x0005
enum class EFilterTargetDatasource_FailureBehavior : uint8
{
	IgnoreTargetAndContinue                  = 0,
	IgnoreTargetAndStop                      = 1,
	TagTarget                                = 2,
	PickTarget                               = 3,
	EFilterTargetDatasource_MAX              = 4,
};

// Enum SCCore.EWeightOperator
// NumValues: 0x0003
enum class EWeightOperator : uint8
{
	Multiply                                 = 0,
	Add                                      = 1,
	EWeightOperator_MAX                      = 2,
};

// Enum SCCore.EGameplayAttributePercentagePolicy
// NumValues: 0x0003
enum class EGameplayAttributePercentagePolicy : uint32
{
	UseOneAttributeAsRawValue                = 0,
	RatioBetweenAttributes                   = 1,
	EGameplayAttributePercentagePolicy_MAX   = 2,
};

// Enum SCCore.EConditionGroupOperators
// NumValues: 0x0003
enum class EConditionGroupOperators : uint8
{
	OR                                       = 0,
	AND                                      = 1,
	EConditionGroupOperators_MAX             = 2,
};

// Enum SCCore.EIKBodyPart
// NumValues: 0x0005
enum class EIKBodyPart : uint8
{
	Arm_L                                    = 0,
	Arm_R                                    = 1,
	Leg_L                                    = 2,
	Leg_R                                    = 3,
	EIKBodyPart_MAX                          = 4,
};

// Enum SCCore.EInputDeviceLayout
// NumValues: 0x0004
enum class EInputDeviceLayout : uint8
{
	Gamepad                                  = 0,
	KeyboardAzerty                           = 1,
	KeyboardQwerty                           = 2,
	EInputDeviceLayout_MAX                   = 3,
};

// Enum SCCore.EInputMappingKeySlotType
// NumValues: 0x0004
enum class EInputMappingKeySlotType : uint8
{
	Action                                   = 0,
	HorAxis                                  = 1,
	VertAxit                                 = 2,
	EInputMappingKeySlotType_MAX             = 3,
};

// Enum SCCore.EInputMappingKeySlotContainerLayout
// NumValues: 0x0007
enum class EInputMappingKeySlotContainerLayout : uint8
{
	Preset                                   = 0,
	Action                                   = 1,
	Axis                                     = 2,
	VirtualAction                            = 3,
	Custom                                   = 4,
	None                                     = 5,
	EInputMappingKeySlotContainerLayout_MAX  = 6,
};

// Enum SCCore.EInputMappingForceController
// NumValues: 0x0004
enum class EInputMappingForceController : uint8
{
	CurrentController                        = 0,
	Gamepad                                  = 1,
	Keyboard                                 = 2,
	EInputMappingForceController_MAX         = 3,
};

// Enum SCCore.EInputMappingCompatibilityRuleType
// NumValues: 0x0003
enum class EInputMappingCompatibilityRuleType : uint32
{
	CompatibleOnlyWith                       = 0,
	IncompatibleOnlyWith                     = 1,
	EInputMappingCompatibilityRuleType_MAX   = 2,
};

// Enum SCCore.EMappingValidationErrorType
// NumValues: 0x0004
enum class EMappingValidationErrorType : uint8
{
	Collision                                = 0,
	InvalidInput                             = 1,
	Valid                                    = 2,
	EMappingValidationErrorType_MAX          = 3,
};

// Enum SCCore.ESCInputBehavior
// NumValues: 0x0008
enum class ESCInputBehavior : uint8
{
	JustPressed                              = 0,
	Pressed                                  = 1,
	PressedShorterThan                       = 2,
	JustReleased                             = 3,
	JustReleasedBefore                       = 4,
	Neutral                                  = 5,
	Count                                    = 6,
	ESCInputBehavior_MAX                     = 7,
};

// Enum SCCore.ESCInputContext
// NumValues: 0x0004
enum class ESCInputContext : uint8
{
	BasicGameplay                            = 0,
	Menu                                     = 1,
	Empty                                    = 2,
	ESCInputContext_MAX                      = 3,
};

// Enum SCCore.EInputActionEnum
// NumValues: 0x0007
enum class EInputActionEnum : uint8
{
	MenuAction                               = 0,
	MenuCancel                               = 1,
	Move                                     = 2,
	InGameMenu                               = 3,
	Look                                     = 4,
	FSCUserDefinedEnumHandler_BPValue        = 5,
	EInputActionEnum_MAX                     = 6,
};

// Enum SCCore.EInputMappingProfile
// NumValues: 0x0005
enum class EInputMappingProfile : uint8
{
	DefaultGamepad                           = 0,
	DefaultKeyboard                          = 1,
	CustomGamepad                            = 2,
	CustomKeyboard                           = 3,
	EInputMappingProfile_MAX                 = 4,
};

// Enum SCCore.EInputActionWorldDirFallback
// NumValues: 0x0004
enum class EInputActionWorldDirFallback : uint8
{
	None                                     = 0,
	Camera                                   = 1,
	CharacterForward                         = 2,
	EInputActionWorldDirFallback_MAX         = 3,
};

// Enum SCCore.EInputWindowResult
// NumValues: 0x0004
enum class EInputWindowResult : uint8
{
	HasMiss                                  = 0,
	HasTiming                                = 1,
	HasPerfectTiming                         = 2,
	EInputWindowResult_MAX                   = 3,
};

// Enum SCCore.EMovementDescriptionComputationType
// NumValues: 0x0004
enum class EMovementDescriptionComputationType : uint8
{
	Both                                     = 0,
	AccelerationOnly                         = 1,
	VelocityOnly                             = 2,
	EMovementDescriptionComputationType_MAX  = 3,
};

// Enum SCCore.EMandatoryNotifyTiming
// NumValues: 0x0004
enum class EMandatoryNotifyTiming : uint8
{
	RelativeToAnimStart                      = 0,
	RelativeToAnimEnd                        = 1,
	RelativeToNotify                         = 2,
	EMandatoryNotifyTiming_MAX               = 3,
};

// Enum SCCore.ERemappingFinishedStates
// NumValues: 0x0009
enum class ERemappingFinishedStates : uint8
{
	Fail_UnauthorizeKeyPressed               = 0,
	Fail_ExpectKeyboardMouseKey              = 1,
	Fail_ExpectedControllerKey               = 2,
	Count                                    = 3,
	Success                                  = 4,
	Remove                                   = 5,
	Cancelled                                = 6,
	None                                     = 7,
	ERemappingFinishedStates_MAX             = 8,
};

// Enum SCCore.EMappableFieldScaleTypes
// NumValues: 0x0005
enum class EMappableFieldScaleTypes : uint8
{
	PositiveScale                            = 0,
	NegativeScale                            = 1,
	Count                                    = 2,
	None                                     = 3,
	EMappableFieldScaleTypes_MAX             = 4,
};

// Enum SCCore.ERemappingAllowedInputTypes
// NumValues: 0x0006
enum class ERemappingAllowedInputTypes : uint8
{
	KeyboardMouse                            = 0,
	Gamepad                                  = 1,
	Both                                     = 2,
	Count                                    = 3,
	None                                     = 4,
	ERemappingAllowedInputTypes_MAX          = 5,
};

// Enum SCCore.EMatchingBoneEvaluationParams
// NumValues: 0x0009
enum class EMatchingBoneEvaluationParams : uint8
{
	Yaw                                      = 0,
	Pitch                                    = 1,
	Dist2D                                   = 2,
	Height                                   = 3,
	Orientation                              = 4,
	VelocityDir                              = 5,
	Speed                                    = 6,
	Count                                    = 7,
	EMatchingBoneEvaluationParams_MAX        = 8,
};

// Enum SCCore.EBoneEvaluationType
// NumValues: 0x0004
enum class EBoneEvaluationType : uint8
{
	Target                                   = 0,
	Pose                                     = 1,
	Count                                    = 2,
	EBoneEvaluationType_MAX                  = 3,
};

// Enum SCCore.EMirrorAnimBehavior
// NumValues: 0x0006
enum class EMirrorAnimBehavior : uint8
{
	Twins                                    = 0,
	NoTwins                                  = 1,
	TwinsWithSymmetry                        = 2,
	Count                                    = 3,
	None                                     = 4,
	EMirrorAnimBehavior_MAX                  = 5,
};

// Enum SCCore.EActivityType
// NumValues: 0x0004
enum class EActivityType : uint8
{
	Activity                                 = 0,
	Task                                     = 1,
	SubTask                                  = 2,
	EActivityType_MAX                        = 3,
};

// Enum SCCore.ETargetPerceptionFilter
// NumValues: 0x0004
enum class ETargetPerceptionFilter : uint8
{
	None                                     = 0,
	CurrentlyPerceived                       = 1,
	Known                                    = 2,
	ETargetPerceptionFilter_MAX              = 3,
};

// Enum SCCore.ESCPlaneAxis
// NumValues: 0x0006
enum class ESCPlaneAxis : uint8
{
	XY                                       = 0,
	XZ                                       = 1,
	YZ                                       = 2,
	Count                                    = 3,
	None                                     = 4,
	ESCPlaneAxis_MAX                         = 5,
};

// Enum SCCore.ESaveValidationResult
// NumValues: 0x0006
enum class ESaveValidationResult : uint8
{
	Valid                                    = 0,
	Empty                                    = 1,
	ContainsNonAlphaNumeric                  = 2,
	AlreadyExist                             = 3,
	TooLong                                  = 4,
	ESaveValidationResult_MAX                = 5,
};

// Enum SCCore.EGameSaveChunks
// NumValues: 0x0004
enum class EGameSaveChunks : uint8
{
	Profile                                  = 0,
	Settings                                 = 1,
	FSCUserDefinedEnumHandler_BPValue        = 2,
	EGameSaveChunks_MAX                      = 3,
};

// Enum SCCore.ESCNotifyStateDurationTimeBehavior
// NumValues: 0x0004
enum class ESCNotifyStateDurationTimeBehavior : uint8
{
	Manual                                   = 0,
	FromStart                                = 1,
	TillEnd                                  = 2,
	ESCNotifyStateDurationTimeBehavior_MAX   = 3,
};

// Enum SCCore.EMoveInterruptReason
// NumValues: 0x0007
enum class EMoveInterruptReason : uint8
{
	None                                     = 0,
	WantsStaticButIsMoving                   = 1,
	WantsMoveButIsStatic                     = 2,
	VelocityAngleDiff                        = 3,
	ForwardToVelocityAngleDiff               = 4,
	WantsHigherSpeedState                    = 5,
	EMoveInterruptReason_MAX                 = 6,
};

// Enum SCCore.EAbilityExecutionSyncMode
// NumValues: 0x0004
enum class EAbilityExecutionSyncMode : uint8
{
	None                                     = 0,
	ServerRollback                           = 1,
	ClientCatchup                            = 2,
	EAbilityExecutionSyncMode_MAX            = 3,
};

// Enum SCCore.ESCAchievementWriteState
// NumValues: 0x0004
enum class ESCAchievementWriteState : uint8
{
	Idle                                     = 0,
	WritingAchievement                       = 1,
	WritingStat                              = 2,
	ESCAchievementWriteState_MAX             = 3,
};

// Enum SCCore.EActivityPendingStateUpdate
// NumValues: 0x0005
enum class EActivityPendingStateUpdate : uint8
{
	Enabling                                 = 0,
	Starting                                 = 1,
	Ending                                   = 2,
	Reset                                    = 3,
	EActivityPendingStateUpdate_MAX          = 4,
};

// Enum SCCore.ESCActorDebugViewNodeType
// NumValues: 0x0007
enum class ESCActorDebugViewNodeType : uint8
{
	Category                                 = 0,
	Value                                    = 1,
	Shape                                    = 2,
	Action                                   = 3,
	Count                                    = 4,
	None                                     = 5,
	ESCActorDebugViewNodeType_MAX            = 6,
};

// Enum SCCore.ESCAimIKSolverType
// NumValues: 0x0003
enum class ESCAimIKSolverType : uint8
{
	Quaternion                               = 0,
	NoRoll                                   = 1,
	ESCAimIKSolverType_MAX                   = 2,
};

// Enum SCCore.ETimeStretchOption
// NumValues: 0x0005
enum class ETimeStretchOption : uint8
{
	FromAnimStartToNotify                    = 0,
	FromNotifyToAnimEnd                      = 1,
	FromNotifyToMoveInterrupt                = 2,
	FromNotifyToXFrames                      = 3,
	ETimeStretchOption_MAX                   = 4,
};

// Enum SCCore.ESCAnimTransformSpace
// NumValues: 0x0004
enum class ESCAnimTransformSpace : uint8
{
	Bone                                     = 0,
	Actor                                    = 1,
	World                                    = 2,
	ESCAnimTransformSpace_MAX                = 3,
};

// Enum SCCore.ESCUserDefinedEnums
// NumValues: 0x000B
enum class ESCUserDefinedEnums : uint8
{
	InputPresets                             = 0,
	InputKeyPresets                          = 1,
	InputMappingProfile                      = 2,
	Menus                                    = 3,
	InputActionWidgetStyle                   = 4,
	InputActionIconStyle                     = 5,
	GameSaveChunks                           = 6,
	AnimLookAtTargets                        = 7,
	IKProfile                                = 8,
	Count                                    = 9,
	ESCUserDefinedEnums_MAX                  = 10,
};

// Enum SCCore.ESCSequenceBlendViewState
// NumValues: 0x0005
enum class ESCSequenceBlendViewState : uint8
{
	ToSequence                               = 0,
	Sequence                                 = 1,
	ToPlayer                                 = 2,
	None                                     = 3,
	ESCSequenceBlendViewState_MAX            = 4,
};

// Enum SCCore.ESCCameraMirrorManagementType
// NumValues: 0x0006
enum class ESCCameraMirrorManagementType : uint8
{
	UseSpring                                = 0,
	UseBlender                               = 1,
	DirectValue                              = 2,
	Count                                    = 3,
	None                                     = 4,
	ESCCameraMirrorManagementType_MAX        = 5,
};

// Enum SCCore.ESCCameraNodeTypes
// NumValues: 0x0005
enum class ESCCameraNodeTypes : uint8
{
	CameraNode                               = 0,
	CameraNodeBlender                        = 1,
	CameraMixerNode                          = 2,
	Count                                    = 3,
	ESCCameraNodeTypes_MAX                   = 4,
};

// Enum SCCore.ESCCameraBlendBoolNodeUsage
// NumValues: 0x0005
enum class ESCCameraBlendBoolNodeUsage : uint8
{
	Auto                                     = 0,
	StartNode                                = 1,
	EndNode                                  = 2,
	Count                                    = 3,
	ESCCameraBlendBoolNodeUsage_MAX          = 4,
};

// Enum SCCore.EDeadZoneStatus
// NumValues: 0x0004
enum class EDeadZoneStatus : uint8
{
	InSafeZone                               = 0,
	InFarDeadZone                            = 1,
	InNearDeadZone                           = 2,
	EDeadZoneStatus_MAX                      = 3,
};

// Enum SCCore.EWakeUpStep
// NumValues: 0x0005
enum class EWakeUpStep : uint8
{
	JustSleeping                             = 0,
	Sleeping                                 = 1,
	JustTryingToWakeUp                       = 2,
	TryingToWakeUp                           = 3,
	EWakeUpStep_MAX                          = 4,
};

// Enum SCCore.ESCCameraShakeType
// NumValues: 0x0005
enum class ESCCameraShakeType : uint8
{
	FromAnimInstance                         = 0,
	FromAbilityMontage                       = 1,
	UE                                       = 2,
	Count                                    = 3,
	ESCCameraShakeType_MAX                   = 4,
};

// Enum SCCore.ESCCameraTeleportationRotationBehavior
// NumValues: 0x0005
enum class ESCCameraTeleportationRotationBehavior : uint8
{
	None                                     = 0,
	ResetToOwnerForward                      = 1,
	KeepRotationLocalToOwner                 = 2,
	ResetToStartSpot                         = 3,
	ESCCameraTeleportationRotationBehavior_MAX = 4,
};

// Enum SCCore.ESCCameraTrackingMode
// NumValues: 0x0005
enum class ESCCameraTrackingMode : uint8
{
	PlayerRootComponent                      = 0,
	PlayerPelvisBone                         = 1,
	PlayerCamJoint                           = 2,
	AbilityDefined                           = 3,
	ESCCameraTrackingMode_MAX                = 4,
};

// Enum SCCore.ESCUpdateAngleMode
// NumValues: 0x0003
enum class ESCUpdateAngleMode : uint8
{
	Both                                     = 0,
	OnlyEnd                                  = 1,
	ESCUpdateAngleMode_MAX                   = 2,
};

// Enum SCCore.ESCCameraTransitionState
// NumValues: 0x0006
enum class ESCCameraTransitionState : uint8
{
	None                                     = 0,
	BlendIn                                  = 1,
	FullyBlended                             = 2,
	BlendOut                                 = 3,
	Count                                    = 4,
	ESCCameraTransitionState_MAX             = 5,
};

// Enum SCCore.ESCDeadZoneTypes
// NumValues: 0x0004
enum class ESCDeadZoneTypes : uint8
{
	Collision                                = 0,
	CharacterOcclusion                       = 1,
	Merged                                   = 2,
	ESCDeadZoneTypes_MAX                     = 3,
};

// Enum SCCore.ESCAdvancedCardinalPoints
// NumValues: 0x000B
enum class ESCAdvancedCardinalPoints : uint8
{
	North                                    = 0,
	NorthEast                                = 1,
	East                                     = 2,
	SouthEast                                = 3,
	South                                    = 4,
	SouthWest                                = 5,
	West                                     = 6,
	NorthWest                                = 7,
	Count                                    = 8,
	None                                     = 9,
	ESCAdvancedCardinalPoints_MAX            = 10,
};

// Enum SCCore.EImposterSpawnTransformType
// NumValues: 0x0003
enum class EImposterSpawnTransformType : uint8
{
	Actor                                    = 0,
	Component                                = 1,
	EImposterSpawnTransformType_MAX          = 2,
};

// Enum SCCore.ESCColorChannel
// NumValues: 0x0007
enum class ESCColorChannel : uint8
{
	Red                                      = 0,
	Green                                    = 1,
	Blue                                     = 2,
	Alpha                                    = 3,
	Count                                    = 4,
	None                                     = 5,
	ESCColorChannel_MAX                      = 6,
};

// Enum SCCore.EColorExclusionType
// NumValues: 0x000C
enum class EColorExclusionType : uint8
{
	None                                     = 0,
	Euclidean                                = 1,
	EuclideanRedWeight                       = 2,
	CIE76                                    = 3,
	CIE2000                                  = 4,
	CIELUV                                   = 5,
	LCh                                      = 6,
	RGBL                                     = 7,
	LMS                                      = 8,
	Luminance                                = 9,
	Composite                                = 10,
	EColorExclusionType_MAX                  = 11,
};

// Enum SCCore.EColorblindness
// NumValues: 0x0005
enum class EColorblindness : uint8
{
	None                                     = 0,
	Protanopia                               = 1,
	Deuteranopia                             = 2,
	Tritanopia                               = 3,
	EColorblindness_MAX                      = 4,
};

// Enum SCCore.ENullableCondition
// NumValues: 0x0004
enum class ENullableCondition : uint8
{
	Yes                                      = 0,
	No                                       = 1,
	Ignore                                   = 2,
	ENullableCondition_MAX                   = 3,
};

// Enum SCCore.EOperationType
// NumValues: 0x0007
enum class EOperationType : uint8
{
	Equal                                    = 0,
	NotEqual                                 = 1,
	Superior                                 = 2,
	SuperiorOrEqual                          = 3,
	Inferior                                 = 4,
	InferiorOrEqual                          = 5,
	EOperationType_MAX                       = 6,
};

// Enum SCCore.ESCDebugActorBoxType
// NumValues: 0x0003
enum class ESCDebugActorBoxType : uint8
{
	BoudingBox                               = 0,
	BottomSquare                             = 1,
	ESCDebugActorBoxType_MAX                 = 2,
};

// Enum SCCore.ESCDebugDisplayOnScreenMode
// NumValues: 0x0005
enum class ESCDebugDisplayOnScreenMode : uint8
{
	Actor_Shapes_Properties                  = 0,
	Actor_Values                             = 1,
	Count                                    = 2,
	None                                     = 3,
	ESCDebugDisplayOnScreenMode_MAX          = 4,
};

// Enum SCCore.ESCDebugDisplayMenuInput
// NumValues: 0x0014
enum class ESCDebugDisplayMenuInput : uint8
{
	Up                                       = 0,
	Down                                     = 1,
	Left                                     = 2,
	Right                                    = 3,
	Select                                   = 4,
	Back                                     = 5,
	ClearCategories                          = 6,
	ClearShapes                              = 7,
	Hold_ClearShapesAndCategories            = 8,
	PageUp                                   = 9,
	PageDown                                 = 10,
	RightPanelPageUp                         = 11,
	RightPanelPageDown                       = 12,
	GoToObjectSelection                      = 13,
	ShowHelp                                 = 14,
	ResetLayout                              = 15,
	OpenSystemMenu                           = 16,
	Count                                    = 17,
	None                                     = 18,
	ESCDebugDisplayMenuInput_MAX             = 19,
};

// Enum SCCore.ESCDebugDisplayOutputType
// NumValues: 0x0006
enum class ESCDebugDisplayOutputType : uint8
{
	PrintOnScreen                            = 0,
	Vlog                                     = 1,
	Count                                    = 2,
	None                                     = 3,
	All                                      = 4,
	ESCDebugDisplayOutputType_MAX            = 5,
};

// Enum SCCore.ESCDebugDisplayFontSize
// NumValues: 0x0006
enum class ESCDebugDisplayFontSize : uint8
{
	VerySmall                                = 0,
	Small                                    = 1,
	Medium                                   = 2,
	Large                                    = 3,
	Count                                    = 4,
	ESCDebugDisplayFontSize_MAX              = 5,
};

// Enum SCCore.EDynamicTextureMask_PositionBakingType
// NumValues: 0x0004
enum class EDynamicTextureMask_PositionBakingType : uint8
{
	PBT_SimpleStaticMesh                     = 0,
	PBT_ComplexSkeletalMesh                  = 1,
	PBT_SimpleSkeletalMesh                   = 2,
	PBT_MAX                                  = 3,
};

// Enum SCCore.EDynamicTextureMask_DrawType
// NumValues: 0x0004
enum class EDynamicTextureMask_DrawType : uint8
{
	DT_Additive                              = 0,
	DT_OpaqueColor                           = 1,
	DT_OpaqueAlpha                           = 2,
	DT_MAX                                   = 3,
};

// Enum SCCore.EDynamicTextureMask_DrawShape
// NumValues: 0x0005
enum class EDynamicTextureMask_DrawShape : uint8
{
	DS_Sphere                                = 0,
	DS_Capsule                               = 1,
	DS_TextureProjection_Standard            = 2,
	DS_TextureProjection_Atlas               = 3,
	DS_MAX                                   = 4,
};

// Enum SCCore.ESCErrorType
// NumValues: 0x0008
enum class ESCErrorType : uint8
{
	JoinInvitationError                      = 0,
	NetworkServiceUnavailable                = 1,
	ConnectionError                          = 2,
	Success                                  = 3,
	PlayerKicked                             = 4,
	Unknown                                  = 5,
	Count                                    = 6,
	ESCErrorType_MAX                         = 7,
};

// Enum SCCore.ESCPopupType
// NumValues: 0x000C
enum class ESCPopupType : uint8
{
	None                                     = 0,
	Generic                                  = 1,
	InvalidSave                              = 2,
	SigninChanged                            = 3,
	ConnectionFailed                         = 4,
	PairingChanged                           = 5,
	NeedLicense                              = 6,
	ProgressWillNotBeSaved                   = 7,
	ControllerDisconnected                   = 8,
	SaveValidButBackupUsed                   = 9,
	Count                                    = 10,
	ESCPopupType_MAX                         = 11,
};

// Enum SCCore.ESCMessageLogSeverity
// NumValues: 0x0005
enum class ESCMessageLogSeverity : uint8
{
	Info                                     = 0,
	Warning                                  = 1,
	Error                                    = 2,
	CriticalError                            = 3,
	ESCMessageLogSeverity_MAX                = 4,
};

// Enum SCCore.ESCFlowGraphEditorDisplayMode
// NumValues: 0x0003
enum class ESCFlowGraphEditorDisplayMode : uint8
{
	Blueprint_PinnedTransitions              = 0,
	Graph_NoPinnedTransitions                = 1,
	ESCFlowGraphEditorDisplayMode_MAX        = 2,
};

// Enum SCCore.ESCFFlowGraphError
// NumValues: 0x0008
enum class ESCFFlowGraphError : uint8
{
	Success                                  = 0,
	Error_NoTransitionFound                  = 1,
	Error_NodeNotFound                       = 2,
	Error_NoFlowGraphData                    = 3,
	Error_Disabled                           = 4,
	Error_ScheduledAsPending                 = 5,
	Error_Unknown                            = 6,
	ESCFFlowGraphError_MAX                   = 7,
};

// Enum SCCore.ESCFlowGraphSpecialTransition
// NumValues: 0x0004
enum class ESCFlowGraphSpecialTransition : uint8
{
	GoToPreviousNode                         = 0,
	Count                                    = 1,
	None                                     = 2,
	ESCFlowGraphSpecialTransition_MAX        = 3,
};

// Enum SCCore.ESCGameInstanceState
// NumValues: 0x0005
enum class ESCGameInstanceState : uint8
{
	None                                     = 0,
	PressStart                               = 1,
	MessageMenu                              = 2,
	Playing                                  = 3,
	ESCGameInstanceState_MAX                 = 4,
};

// Enum SCCore.EGameFlowInterrupt
// NumValues: 0x0005
enum class EGameFlowInterrupt : uint8
{
	ServicesDisconnection                    = 0,
	KickedFromParty                          = 1,
	ClientTravelFailure                      = 2,
	Count                                    = 3,
	EGameFlowInterrupt_MAX                   = 4,
};

// Enum SCCore.ESCGameFlowCloseMenuBehavior
// NumValues: 0x0005
enum class ESCGameFlowCloseMenuBehavior : uint8
{
	DoNothing                                = 0,
	CloseTopMenu                             = 1,
	CloseMenuStack                           = 2,
	Unspecified                              = 3,
	ESCGameFlowCloseMenuBehavior_MAX         = 4,
};

// Enum SCCore.ESCGameFlowAutoTransitionType
// NumValues: 0x0004
enum class ESCGameFlowAutoTransitionType : uint8
{
	None                                     = 0,
	Duration                                 = 1,
	PlayersSynchro                           = 2,
	ESCGameFlowAutoTransitionType_MAX        = 3,
};

// Enum SCCore.ESCGameFlowPerformanceHitchDetectorState
// NumValues: 0x0005
enum class ESCGameFlowPerformanceHitchDetectorState : uint8
{
	Pause_On_Enter_State                     = 0,
	UnPause_On_Enter_State                   = 1,
	Pause_On_Enter_UnPause_On_Leave_State    = 2,
	UnPause_On_Enter_Pause_On_Leave_State    = 3,
	ESCGameFlowPerformanceHitchDetectorState_MAX = 4,
};

// Enum SCCore.ESCGameFlowStateGCPurgeBehavior
// NumValues: 0x0005
enum class ESCGameFlowStateGCPurgeBehavior : uint8
{
	DoNothing                                = 0,
	Purge_On_Enter_State                     = 1,
	Purge_On_Leave_State                     = 2,
	Purge_On_Enter_And_Leave_State           = 3,
	ESCGameFlowStateGCPurgeBehavior_MAX      = 4,
};

// Enum SCCore.ESCGameFlowStateGCPurgeNetMode
// NumValues: 0x0004
enum class ESCGameFlowStateGCPurgeNetMode : uint8
{
	ClientOnly                               = 0,
	ServerOnly                               = 1,
	Both                                     = 2,
	ESCGameFlowStateGCPurgeNetMode_MAX       = 3,
};

// Enum SCCore.ESCGameFlowStateLogFlushBehavior
// NumValues: 0x0005
enum class ESCGameFlowStateLogFlushBehavior : uint8
{
	DoNothing                                = 0,
	Flush_On_Enter_State                     = 1,
	Flush_On_Leave_State                     = 2,
	Flush_On_Enter_And_Leave_State           = 3,
	ESCGameFlowStateLogFlushBehavior_MAX     = 4,
};

// Enum SCCore.ESCGameFlowTransitionType
// NumValues: 0x0008
enum class ESCGameFlowTransitionType : uint8
{
	None                                     = 0,
	Default                                  = 1,
	Back                                     = 2,
	Next                                     = 3,
	ServerDisconnection                      = 4,
	ServicesDisconnection                    = 5,
	ClientTravel                             = 6,
	ESCGameFlowTransitionType_MAX            = 7,
};

// Enum SCCore.EAbilityExecOrigin
// NumValues: 0x0003
enum class EAbilityExecOrigin : uint8
{
	Exec                                     = 0,
	BuildPayload                             = 1,
	EAbilityExecOrigin_MAX                   = 2,
};

// Enum SCCore.ESCAbilityTrigger
// NumValues: 0x0005
enum class ESCAbilityTrigger : uint8
{
	Inputs                                   = 0,
	Condition                                = 1,
	GameplayTag                              = 2,
	Multi                                    = 3,
	ESCAbilityTrigger_MAX                    = 4,
};

// Enum SCCore.EAbilityExecOutputWithValidation
// NumValues: 0x0004
enum class EAbilityExecOutputWithValidation : uint8
{
	Exec                                     = 0,
	BuildPayload                             = 1,
	Rejected                                 = 2,
	EAbilityExecOutputWithValidation_MAX     = 3,
};

// Enum SCCore.EMoveInterruptBehavior
// NumValues: 0x0006
enum class EMoveInterruptBehavior : uint8
{
	Direction                                = 0,
	SpeedState                               = 1,
	VelocityAndInput                         = 2,
	AngleBetweenVelocityAndForward           = 3,
	Count                                    = 4,
	EMoveInterruptBehavior_MAX               = 5,
};

// Enum SCCore.EProjectionComputeBehavior
// NumValues: 0x0004
enum class EProjectionComputeBehavior : uint8
{
	Raw                                      = 0,
	ClampToBorder                            = 1,
	ClampToBorderOnlyVertical                = 2,
	EProjectionComputeBehavior_MAX           = 3,
};

// Enum SCCore.ESCInputMode
// NumValues: 0x0009
enum class ESCInputMode : uint8
{
	Game                                     = 0,
	Game_And_UI                              = 1,
	Game_Debug_Imgui                         = 2,
	UI                                       = 3,
	Debug_Imgui                              = 4,
	IgnoreInput                              = 5,
	Count                                    = 6,
	None                                     = 7,
	ESCInputMode_MAX                         = 8,
};

// Enum SCCore.ESCShowMouseBehavior
// NumValues: 0x0004
enum class ESCShowMouseBehavior : uint8
{
	Hide                                     = 0,
	ShowIfInputIsKeyboardMouse               = 1,
	ShowAlways                               = 2,
	ESCShowMouseBehavior_MAX                 = 3,
};

// Enum SCCore.ESCCaptureMouseBehavior
// NumValues: 0x0004
enum class ESCCaptureMouseBehavior : uint8
{
	Capture                                  = 0,
	CaptureIfUsingGamepad                    = 1,
	NoCapture                                = 2,
	ESCCaptureMouseBehavior_MAX              = 3,
};

// Enum SCCore.ESCMathCondition
// NumValues: 0x0007
enum class ESCMathCondition : uint8
{
	Lower                                    = 0,
	LowerOrEqual                             = 1,
	Equal                                    = 2,
	NotEqual                                 = 3,
	GreaterOrEqual                           = 4,
	Greater                                  = 5,
	ESCMathCondition_MAX                     = 6,
};

// Enum SCCore.ESCMathConditionExpression
// NumValues: 0x0003
enum class ESCMathConditionExpression : uint8
{
	And                                      = 0,
	Or                                       = 1,
	ESCMathConditionExpression_MAX           = 2,
};

// Enum SCCore.ESCMathConditionValueType
// NumValues: 0x0003
enum class ESCMathConditionValueType : uint8
{
	Integer                                  = 0,
	Float                                    = 1,
	ESCMathConditionValueType_MAX            = 2,
};

// Enum SCCore.ENotificationCategory
// NumValues: 0x0005
enum class ENotificationCategory : uint8
{
	System                                   = 0,
	Incoming                                 = 1,
	Outgoing                                 = 2,
	Count                                    = 3,
	ENotificationCategory_MAX                = 4,
};

// Enum SCCore.ENotificationType
// NumValues: 0x0009
enum class ENotificationType : uint8
{
	PartyInviteSent                          = 0,
	PartyInviteReceived                      = 1,
	CustomMatchInviteSent                    = 2,
	CustomMatchInviteReceived                = 3,
	FriendInviteSent                         = 4,
	FriendInviteAccepted                     = 5,
	ReportSent                               = 6,
	Count                                    = 7,
	ENotificationType_MAX                    = 8,
};

// Enum SCCore.ESCStatDisplayMode
// NumValues: 0x0005
enum class ESCStatDisplayMode : uint8
{
	Hidden                                   = 0,
	TextOnly                                 = 1,
	GraphOnly                                = 2,
	TextAndGraph                             = 3,
	ESCStatDisplayMode_MAX                   = 4,
};

// Enum SCCore.ESCDisplayablePerformanceStat
// NumValues: 0x0011
enum class ESCDisplayablePerformanceStat : uint8
{
	ClientFPS                                = 0,
	ServerFPS                                = 1,
	IdleTime                                 = 2,
	FrameTime                                = 3,
	FrameTime_GameThread                     = 4,
	FrameTime_RenderThread                   = 5,
	FrameTime_RHIThread                      = 6,
	FrameTime_GPU                            = 7,
	Ping                                     = 8,
	PacketLoss_Incoming                      = 9,
	PacketLoss_Outgoing                      = 10,
	PacketRate_Incoming                      = 11,
	PacketRate_Outgoing                      = 12,
	PacketSize_Incoming                      = 13,
	PacketSize_Outgoing                      = 14,
	Count                                    = 15,
	ESCDisplayablePerformanceStat_MAX        = 16,
};

// Enum SCCore.ESCTelemetryThread
// NumValues: 0x0007
enum class ESCTelemetryThread : uint8
{
	Game                                     = 0,
	Render                                   = 1,
	RHI                                      = 2,
	GPU                                      = 3,
	Count                                    = 4,
	None                                     = 5,
	ESCTelemetryThread_MAX                   = 6,
};

// Enum SCCore.ESCTelemetryExternalProfiler
// NumValues: 0x0007
enum class ESCTelemetryExternalProfiler : uint8
{
	None                                     = 0,
	PlatformDefault                          = 1,
	InsightSnapshots                         = 2,
	InsightFullTrace                         = 3,
	SuperluminalSnapshots                    = 4,
	Count                                    = 5,
	ESCTelemetryExternalProfiler_MAX         = 6,
};

// Enum SCCore.ESCTelemetryArtefacts
// NumValues: 0x000A
enum class ESCTelemetryArtefacts : uint8
{
	Log                                      = 0,
	Vlog                                     = 1,
	CSV                                      = 2,
	SessionMetadatas                         = 3,
	InsightSnapshots                         = 4,
	InsightFullTrace                         = 5,
	SuperluminalSnapshots                    = 6,
	Count                                    = 7,
	None                                     = 8,
	ESCTelemetryArtefacts_MAX                = 9,
};

// Enum SCCore.EProgressionSubsystemState
// NumValues: 0x0006
enum class EProgressionSubsystemState : uint8
{
	Default                                  = 0,
	Initialised                              = 1,
	FirstLoadDone                            = 2,
	Ready_ASCSet                             = 3,
	Ready_ASCUnset                           = 4,
	EProgressionSubsystemState_MAX           = 5,
};

// Enum SCCore.EAbilityProgressionEnableType
// NumValues: 0x0004
enum class EAbilityProgressionEnableType : uint8
{
	Enable                                   = 0,
	EnableOnlyInPIE                          = 1,
	Disable                                  = 2,
	EAbilityProgressionEnableType_MAX        = 3,
};

// Enum SCCore.ESCRotationType
// NumValues: 0x0003
enum class ESCRotationType : uint8
{
	Horizontal                               = 0,
	Vertical                                 = 1,
	ESCRotationType_MAX                      = 2,
};

// Enum SCCore.ECounterBehaviour
// NumValues: 0x0004
enum class ECounterBehaviour : uint8
{
	OnFire                                   = 0,
	OnToggleTrue                             = 1,
	OnToggleFalse                            = 2,
	ECounterBehaviour_MAX                    = 3,
};

// Enum SCCore.ETimerBehaviour
// NumValues: 0x0003
enum class ETimerBehaviour : uint8
{
	ToggleTrueDuration                       = 0,
	ToggleFalseDuration                      = 1,
	ETimerBehaviour_MAX                      = 2,
};

// Enum SCCore.EComputationType
// NumValues: 0x0004
enum class EComputationType : uint8
{
	Average                                  = 0,
	Total                                    = 1,
	DirectlySet                              = 2,
	EComputationType_MAX                     = 3,
};

// Enum SCCore.ESCStreamingState
// NumValues: 0x0003
enum class ESCStreamingState : uint8
{
	Loaded                                   = 0,
	Unloaded                                 = 1,
	ESCStreamingState_MAX                    = 2,
};

// Enum SCCore.ESCStreamingStateCaller
// NumValues: 0x0004
enum class ESCStreamingStateCaller : uint8
{
	WorldPartition                           = 0,
	WorldNavDistance                         = 1,
	Count                                    = 2,
	ESCStreamingStateCaller_MAX              = 3,
};

// Enum SCCore.ESCSubsystemNetMode
// NumValues: 0x0006
enum class ESCSubsystemNetMode : uint8
{
	ClientOnly                               = 0,
	ServerOnly                               = 1,
	ClientAndServer                          = 2,
	Count                                    = 3,
	None                                     = 4,
	ESCSubsystemNetMode_MAX                  = 5,
};

// Enum SCCore.ESCSubsystemState
// NumValues: 0x0006
enum class ESCSubsystemState : uint8
{
	Initialize                               = 0,
	MapLoaded                                = 1,
	PreStart                                 = 2,
	PostStart                                = 3,
	WorldIsTearingDown                       = 4,
	ESCSubsystemState_MAX                    = 5,
};

// Enum SCCore.ESCSubsystemLifetime
// NumValues: 0x0008
enum class ESCSubsystemLifetime : uint8
{
	Engine                                   = 0,
	Editor                                   = 1,
	GameInstance                             = 2,
	LocalPlayer                              = 3,
	World                                    = 4,
	Count                                    = 5,
	None                                     = 6,
	ESCSubsystemLifetime_MAX                 = 7,
};

// Enum SCCore.ESCTargetPlatform
// NumValues: 0x000B
enum class ESCTargetPlatform : uint8
{
	Windows                                  = 0,
	Linux                                    = 1,
	WinGDK                                   = 2,
	PS4                                      = 3,
	PS5                                      = 4,
	XBoxOne                                  = 5,
	XBoxSeries                               = 6,
	Switch                                   = 7,
	Count                                    = 8,
	None                                     = 9,
	ESCTargetPlatform_MAX                    = 10,
};

// Enum SCCore.ESCControllerType
// NumValues: 0x0007
enum class ESCControllerType : uint8
{
	Keyboard                                 = 0,
	GenericGamepad                           = 1,
	XBoxController                           = 2,
	PSController                             = 3,
	Count                                    = 4,
	None                                     = 5,
	ESCControllerType_MAX                    = 6,
};

// Enum SCCore.ESCTurnTransitionPart
// NumValues: 0x0004
enum class ESCTurnTransitionPart : uint8
{
	Deccel                                   = 0,
	Accel                                    = 1,
	Count                                    = 2,
	ESCTurnTransitionPart_MAX                = 3,
};

// Enum SCCore.ESCType
// NumValues: 0x000D
enum class ESCType : uint8
{
	Type_float                               = 0,
	Type_FVector                             = 1,
	Type_FLinearColor                        = 2,
	Type_int32                               = 3,
	Type_int16                               = 4,
	Type_double                              = 5,
	Type_uint32                              = 6,
	Type_uint64                              = 7,
	Type_bool                                = 8,
	Type_uint8                               = 9,
	Type_FName                               = 10,
	None                                     = 11,
	ESCType_MAX                              = 12,
};

// Enum SCCore.EIntersectDirection
// NumValues: 0x0007
enum class EIntersectDirection : uint8
{
	Top                                      = 0,
	Bottom                                   = 1,
	Left                                     = 2,
	Right                                    = 3,
	Count                                    = 4,
	None                                     = 5,
	EIntersectDirection_MAX                  = 6,
};

// Enum SCCore.ESCUIDebugDisplayWidgets
// NumValues: 0x0004
enum class ESCUIDebugDisplayWidgets : uint8
{
	AllWidgets                               = 0,
	OnlyViewModelBound                       = 1,
	OnlyViewModelBoundWithParents            = 2,
	ESCUIDebugDisplayWidgets_MAX             = 3,
};

// Enum SCCore.ESCPortalCrossingWay
// NumValues: 0x0004
enum class ESCPortalCrossingWay : uint8
{
	Forward                                  = 0,
	Backward                                 = 1,
	TwoWays                                  = 2,
	ESCPortalCrossingWay_MAX                 = 3,
};

// Enum SCCore.ESCWorldNavControllerType
// NumValues: 0x0005
enum class ESCWorldNavControllerType : uint8
{
	None                                     = 0,
	Transition                               = 1,
	Sector                                   = 2,
	Custom                                   = 3,
	ESCWorldNavControllerType_MAX            = 4,
};

// Enum SCCore.ESimpleAxis
// NumValues: 0x0006
enum class ESimpleAxis : uint8
{
	X                                        = 0,
	Y                                        = 1,
	Z                                        = 2,
	Count                                    = 3,
	None                                     = 4,
	ESimpleAxis_MAX                          = 5,
};

// Enum SCCore.ETagLayerApplication
// NumValues: 0x0004
enum class ETagLayerApplication : uint8
{
	Overwrite                                = 0,
	Add                                      = 1,
	Remove                                   = 2,
	ETagLayerApplication_MAX                 = 3,
};

// Enum SCCore.ETagLayerCreation
// NumValues: 0x0003
enum class ETagLayerCreation : uint8
{
	ConstructFromNothingAndAddTags           = 0,
	ConstructFromEverythingAndRemoveTags     = 1,
	ETagLayerCreation_MAX                    = 2,
};

// Enum SCCore.ELatentTargetDatasourceInstanceScope
// NumValues: 0x0003
enum class ELatentTargetDatasourceInstanceScope : uint8
{
	Component                                = 0,
	Instance                                 = 1,
	ELatentTargetDatasourceInstanceScope_MAX = 2,
};

// Enum SCCore.ETargetValidationResult
// NumValues: 0x0003
enum class ETargetValidationResult : uint8
{
	Valid                                    = 0,
	Invalid                                  = 1,
	ETargetValidationResult_MAX              = 2,
};

// Enum SCCore.ETargetReachableOnTimeWithLocoCondition_Result
// NumValues: 0x0006
enum class ETargetReachableOnTimeWithLocoCondition_Result : uint8
{
	Launchable                               = 0,
	TooFast                                  = 1,
	TooSlow                                  = 2,
	OnTime                                   = 3,
	Unreachable                              = 4,
	ETargetReachableOnTimeWithLocoCondition_MAX = 5,
};

// Enum SCCore.ETrumpetSkewType
// NumValues: 0x0004
enum class ETrumpetSkewType : uint8
{
	HorizontalVertical                       = 0,
	HorizontalVerticalDiagonals              = 1,
	Diagonals                                = 2,
	ETrumpetSkewType_MAX                     = 3,
};

// ScriptStruct SCCore.SCTransitionMovement
// 0x0002 (0x0002 - 0x0000)
struct FSCTransitionMovement final
{
public:
	ESCCardinalPoints                             m_eOrientationToVelocityCardinalPoint;             // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCCharacterSpeedState                        m_eSpeedState;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCTransitionMovement;

// ScriptStruct SCCore.SCTransition
// 0x0018 (0x0018 - 0x0000)
struct FSCTransition final
{
public:
	struct FSCTransitionMovement                  m_InMovement;                                      // 0x0000(0x0002)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCTransitionMovement                  m_OutMovement;                                     // 0x0002(0x0002)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETransitionRotation                           m_eVelocityRotation;                               // 0x0004(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsRotationLeft;                                 // 0x0005(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPredictionKey                         m_PredictionKey;                                   // 0x0008(0x0010)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCTransition;

// ScriptStruct SCCore.RevisionID
// 0x0002 (0x0002 - 0x0000)
struct FRevisionID final
{
public:
	uint16                                        m_Value;                                           // 0x0000(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRevisionID;

// ScriptStruct SCCore.AchievementUnlockConditionClassInstance
// 0x0010 (0x0010 - 0x0000)
struct FAchievementUnlockConditionClassInstance final
{
public:
	TSubclassOf<class UAchievementUnlockCondition> m_DefaultClassObject;                             // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAchievementUnlockCondition*            m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAchievementUnlockConditionClassInstance;

// ScriptStruct SCCore.AchievementUnlockConditionSet
// 0x0020 (0x0020 - 0x0000)
struct FAchievementUnlockConditionSet final
{
public:
	class FString                                 m_EditorTitle;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAchievementUnlockConditionClassInstance> m_AchievementSet;                        // 0x0010(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAchievementUnlockConditionSet;

// ScriptStruct SCCore.SCDebugMenuAction
// 0x00E0 (0x00E0 - 0x0000)
struct alignas(0x10) FSCDebugMenuAction final
{
public:
	class FString                                 m_Name;                                            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_FName;                                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class FName ActionName)>       m_Delegate;                                        // 0x0018(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class FName ActionName)>       m_IsToggledDelegate;                               // 0x0028(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x88];                                      // 0x0038(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_Path;                                            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D0[0x10];                                      // 0x00D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCDebugMenuAction;

// ScriptStruct SCCore.SCUserDefinedEnumHandler
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FSCUserDefinedEnumHandler
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iDefaultEnumValue;                               // 0x0008(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_CPPValue;                                        // 0x000C(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_Value;                                           // 0x0014(0x0008)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C[0x34];                                      // 0x001C(0x0034)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCUserDefinedEnumHandler;

// ScriptStruct SCCore.InputPresetsEnumHandler
// 0x0000 (0x0050 - 0x0050)
struct FInputPresetsEnumHandler final : public FSCUserDefinedEnumHandler
{
};
DUMPER7_ASSERTS_FInputPresetsEnumHandler;

// ScriptStruct SCCore.InputDataProxyPair
// 0x0008 (0x0008 - 0x0000)
struct FInputDataProxyPair final
{
public:
	TSubclassOf<class UInputConditionData>        m_Data;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputDataProxyPair;

// ScriptStruct SCCore.SaveInputAxisKeyMapping
// 0x000C (0x000C - 0x0000)
struct FSaveInputAxisKeyMapping final
{
public:
	class FName                                   m_Key;                                             // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fScale;                                          // 0x0008(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSaveInputAxisKeyMapping;

// ScriptStruct SCCore.SaveGameInputMappingKeySlot
// 0x0040 (0x0040 - 0x0000)
struct FSaveGameInputMappingKeySlot final
{
public:
	EVirtualAction                                m_eVirtualAction;                                  // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           m_Actions;                                         // 0x0008(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	class FName                                   m_SingleAction;                                    // 0x0018(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSaveInputAxisKeyMapping>       m_Axis;                                            // 0x0020(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	struct FSaveInputAxisKeyMapping               m_SingleAxis;                                      // 0x0030(0x000C)(SaveGame, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSaveGameInputMappingKeySlot;

// ScriptStruct SCCore.InputMappingKeySlot
// 0x00B8 (0x00B8 - 0x0000)
struct FInputMappingKeySlot final
{
public:
	EVirtualAction                                m_eVirtualAction;                                  // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 m_SingleAction;                                    // 0x0008(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FInputAxisKeyMapping                   m_SingleAxis;                                      // 0x0030(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FInputActionKeyMapping>         m_Actions;                                         // 0x0058(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FInputAxisKeyMapping>           m_Axis;                                            // 0x0068(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FSaveGameInputMappingKeySlot           m_SaveGameKey;                                     // 0x0078(0x0040)(SaveGame, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FInputMappingKeySlot;

// ScriptStruct SCCore.InputKeyPresetsEnumHandler
// 0x0000 (0x0050 - 0x0050)
struct FInputKeyPresetsEnumHandler final : public FSCUserDefinedEnumHandler
{
};
DUMPER7_ASSERTS_FInputKeyPresetsEnumHandler;

// ScriptStruct SCCore.InputMappingKeySlotContainer
// 0x0170 (0x0170 - 0x0000)
struct FInputMappingKeySlotContainer final
{
public:
	struct FInputPresetsEnumHandler               m_PresetID;                                        // 0x0000(0x0050)(Edit, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UInputConditionData>        m_SubInputData;                                    // 0x0050(0x0008)(Edit, ZeroConstructor, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputKeyPresetsEnumHandler            m_KeyPresetID;                                     // 0x0058(0x0050)(Edit, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputMappingKeySlot                   m_Key;                                             // 0x00A8(0x00B8)(Edit, SaveGame, NativeAccessSpecifierPublic)
	TArray<int32>                                 m_Depth;                                           // 0x0160(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputMappingKeySlotContainer;

// ScriptStruct SCCore.InputMappingData
// 0x0068 (0x0068 - 0x0000)
struct FInputMappingData final
{
public:
	struct FInputPresetsEnumHandler               m_PresetID;                                        // 0x0000(0x0050)(Edit, BlueprintVisible, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputDataProxyPair                    m_InputData;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, SaveGame, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FInputMappingKeySlotContainer>  m_Slots;                                           // 0x0058(0x0010)(ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FInputMappingData;

// ScriptStruct SCCore.InputMapping
// 0x0068 (0x0068 - 0x0000)
struct FInputMapping final
{
public:
	struct FInputMappingData                      m_MappingData;                                     // 0x0000(0x0068)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputMapping;

// ScriptStruct SCCore.InputMappingGroup
// 0x0050 (0x0050 - 0x0000)
struct FInputMappingGroup final
{
public:
	TMap<class USCInputAction*, struct FInputMapping> m_ActionMapping;                               // 0x0000(0x0050)(Edit, SaveGame, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputMappingGroup;

// ScriptStruct SCCore.IKPathSetup
// 0x0010 (0x0010 - 0x0000)
struct FIKPathSetup final
{
public:
	struct FBoneReference                         m_IkTargetBone;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIKPathSetup;

// ScriptStruct SCCore.TargetDataConditionInstance
// 0x0010 (0x0010 - 0x0000)
struct FTargetDataConditionInstance final
{
public:
	TSubclassOf<class UTargetDataCondition>       m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTargetDataCondition*                   m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTargetDataConditionInstance;

// ScriptStruct SCCore.SCAnimLookAtAimOffset
// 0x0010 (0x0010 - 0x0000)
struct FSCAnimLookAtAimOffset final
{
public:
	class UAimOffsetBlendSpace*                   m_aimOffset;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxHeadDiffYaw;                                 // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxHeadDiffPitch;                               // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAnimLookAtAimOffset;

// ScriptStruct SCCore.SCWorldSubsystemsCollection
// 0x00B8 (0x00B8 - 0x0000)
struct FSCWorldSubsystemsCollection final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USCWorldSubsystem*>              m_Array;                                           // 0x0008(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class USCWorldSubsystem>, class USCWorldSubsystem*> m_PerClassMap;              // 0x0018(0x0050)(Transient, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class USCWorldSubsystem*> m_PerTagMap;                                 // 0x0068(0x0050)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCWorldSubsystemsCollection;

// ScriptStruct SCCore.SCSubsystemRemoteMessage
// 0x0020 (0x0020 - 0x0000)
struct FSCSubsystemRemoteMessage final
{
public:
	TWeakObjectPtr<class ASCBasePlayerController> m_Sender;                                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UObject>                    m_SubsystemClass;                                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_Message;                                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCDebugRemoteAction                          m_eType;                                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCSubsystemRemoteMessage;

// ScriptStruct SCCore.CharacterSaveDescription
// 0x0028 (0x0028 - 0x0000)
struct FCharacterSaveDescription final
{
public:
	class FString                                 m_SaveName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimespan                              m_TimePlayed;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              m_SaveTimeStamp;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsABackupSnapshot;                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsValid;                                        // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCharacterSaveDescription;

// ScriptStruct SCCore.MappingSave
// 0x0018 (0x0018 - 0x0000)
struct FMappingSave final
{
public:
	class FName                                   m_KeyName;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_ActionName;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsAxis;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fScale;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMappingSave;

// ScriptStruct SCCore.InputMappingProfileEnumHandler
// 0x0000 (0x0050 - 0x0050)
struct FInputMappingProfileEnumHandler final : public FSCUserDefinedEnumHandler
{
};
DUMPER7_ASSERTS_FInputMappingProfileEnumHandler;

// ScriptStruct SCCore.InputMappingPresets
// 0x00A0 (0x00A0 - 0x0000)
struct FInputMappingPresets final
{
public:
	TMap<struct FInputKeyPresetsEnumHandler, struct FInputMappingKeySlot> m_KeyPresets;              // 0x0000(0x0050)(Edit, SaveGame, NativeAccessSpecifierPublic)
	TMap<struct FInputPresetsEnumHandler, struct FInputMappingData> m_DataPresets;                   // 0x0050(0x0050)(Edit, SaveGame, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputMappingPresets;

// ScriptStruct SCCore.InputMappingProfileData
// 0x00F8 (0x00F8 - 0x0000)
struct FInputMappingProfileData final
{
public:
	bool                                          m_IsSet;                                           // 0x0000(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputMappingPresets                   m_Presets;                                         // 0x0008(0x00A0)(SaveGame, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<TSoftObjectPtr<class USCInputContext>, struct FInputMappingGroup> m_MappingPerContext;      // 0x00A8(0x0050)(SaveGame, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputMappingProfileData;

// ScriptStruct SCCore.SCProfileData
// 0x0308 (0x0308 - 0x0000)
struct FSCProfileData final
{
public:
	struct FDateTime                              m_SaveTimeStamp;                                   // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterSaveDescription>      m_SaveListNames;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, NativeAccessSpecifierPublic)
	class FString                                 m_FirstSave;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMappingSave>                   m_Mapping;                                         // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, SaveGame, NativeAccessSpecifierPublic)
	class FString                                 m_AudioCulture;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_TextCulture;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputMappingProfileEnumHandler        m_GamepadProfile;                                  // 0x0058(0x0050)(Edit, EditConst, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputMappingProfileEnumHandler        m_KeyboardProfile;                                 // 0x00A8(0x0050)(Edit, EditConst, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputMappingProfileData               m_GamepadCustomMapping;                            // 0x00F8(0x00F8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FInputMappingProfileData               m_KeyboardCustomMapping;                           // 0x01F0(0x00F8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bGamepadInputModifierEnabled;                    // 0x02E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bKeyboardInputModifierEnabled;                   // 0x02E9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bInputHoldToggleActivated;                       // 0x02EA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2EB[0x1];                                      // 0x02EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        m_uiEULAVersion;                                   // 0x02EC(0x0004)(Edit, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         m_WelcomeContentReadIds;                           // 0x02F0(0x0010)(Edit, ZeroConstructor, EditConst, SaveGame, NativeAccessSpecifierPublic)
	uint32                                        m_uiVersion;                                       // 0x0300(0x0004)(Edit, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCProfileData;

// ScriptStruct SCCore.SCReplicatedRotator
// 0x0018 (0x0018 - 0x0000)
struct FSCReplicatedRotator final
{
public:
	struct FRotator                               m_Rotator;                                         // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCReplicatedRotator;

// ScriptStruct SCCore.InputActionState
// 0x0098 (0x0098 - 0x0000)
struct FInputActionState final
{
public:
	class USCInputAction*                         m_eInputAction;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x28];                                       // 0x0008(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USCInputAction*>                 m_Sibblings;                                       // 0x0030(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	float                                         m_fTimeLeft;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fStartTime;                                      // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fStopTime;                                       // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fHoldDuration;                                   // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseScaledTime;                                  // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bJustPressed;                                    // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iFrameCount;                                     // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              m_vVectorValue;                                    // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal              m_vWorldVectorValue;                               // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fKeyValue;                                       // 0x0080(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x14];                                      // 0x0084(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInputActionState;

// ScriptStruct SCCore.SCUnwrittenAchievement
// 0x0018 (0x0018 - 0x0000)
struct FSCUnwrittenAchievement final
{
public:
	class FString                                 m_AchievementId;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fAchievementValue;                               // 0x0010(0x0004)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCUnwrittenAchievement;

// ScriptStruct SCCore.SCUnwrittenStatAchievement
// 0x0028 (0x0028 - 0x0000)
struct FSCUnwrittenStatAchievement final
{
public:
	class FString                                 m_StatId;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOverwrite;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iStatValue;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iMaxStatValue;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_SessionName;                                     // 0x001C(0x0008)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCUnwrittenStatAchievement;

// ScriptStruct SCCore.SCUnwrittenAchievementsData
// 0x0020 (0x0020 - 0x0000)
struct FSCUnwrittenAchievementsData final
{
public:
	TArray<struct FSCUnwrittenAchievement>        m_UnwrittenAchievements;                           // 0x0000(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<struct FSCUnwrittenStatAchievement>    m_UnwrittenStatAchievements;                       // 0x0010(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCUnwrittenAchievementsData;

// ScriptStruct SCCore.RigVMFunction_DuplicateItemsRelativeToParent
// 0x0060 (0x0230 - 0x01D0)
struct FRigVMFunction_DuplicateItemsRelativeToParent final : public FRigUnitMutable
{
public:
	struct FRigElementKey                         PreviousRelativeToParent;                          // 0x01D0(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRigElementKey                         NewRelativeToParent;                               // 0x01DC(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRigElementKey>                 ItemsIgnoringReparenting;                          // 0x01E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 PrevPrefix;                                        // 0x01F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewPrefix;                                         // 0x0208(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRigElementKey                         FromRoot;                                          // 0x0218(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_224[0xC];                                      // 0x0224(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRigVMFunction_DuplicateItemsRelativeToParent;

// ScriptStruct SCCore.SCMenuActionWidgetContextOverride
// 0x0028 (0x0028 - 0x0000)
struct FSCMenuActionWidgetContextOverride final
{
public:
	TWeakObjectPtr<class USCUserWidget>           m_Widget;                                          // 0x0000(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TOptional<bool>                               m_bVisible;                                        // 0x0008(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TOptional<bool>                               m_bEnabled;                                        // 0x000A(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<class FText>                        m_DisplayName;                                     // 0x0010(0x0018)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCMenuActionWidgetContextOverride;

// ScriptStruct SCCore.SCMenuActionWidgetContext
// 0x0018 (0x0018 - 0x0000)
struct FSCMenuActionWidgetContext final
{
public:
	class USCInputAction*                         m_InputAction;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSCMenuActionWidgetContextOverride> m_Overrides;                                   // 0x0008(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCMenuActionWidgetContext;

// ScriptStruct SCCore.SCGameplayAbilityTargetData
// 0x0008 (0x0010 - 0x0008)
struct FSCGameplayAbilityTargetData : public FGameplayAbilityTargetData
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCGameplayAbilityTargetData;

// ScriptStruct SCCore.WaitInputRedirectionState
// 0x0020 (0x0030 - 0x0010)
struct FWaitInputRedirectionState final : public FSCGameplayAbilityTargetData
{
public:
	struct FVector2D                              m_v2DOldDirection;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              m_v2DNewDirection;                                 // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWaitInputRedirectionState;

// ScriptStruct SCCore.SCReplicatedAcceleration
// 0x0003 (0x0003 - 0x0000)
struct FSCReplicatedAcceleration final
{
public:
	uint8                                         m_uiAccelXYRadians;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiAccelXYMagnitude;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          m_iAccelZ;                                         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCReplicatedAcceleration;

// ScriptStruct SCCore.SCSkeletonSlot
// 0x0008 (0x0008 - 0x0000)
struct FSCSkeletonSlot final
{
public:
	class FName                                   SlotName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCSkeletonSlot;

// ScriptStruct SCCore.AsyncTextureStruct
// 0x0028 (0x0028 - 0x0000)
struct FAsyncTextureStruct final
{
public:
	TSoftObjectPtr<class UTexture2D>              m_AsyncAsset;                                      // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAsyncTextureStruct;

// ScriptStruct SCCore.RigUnit_MakeGlobalDir
// 0x0058 (0x0060 - 0x0008)
struct FRigUnit_MakeGlobalDir final : public FRigUnit
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Quat;                                              // 0x0010(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Dir;                                               // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Result;                                            // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigUnit_MakeGlobalDir;

// ScriptStruct SCCore.SCPropertyFloorBoneRepartition
// 0x00A0 (0x00A0 - 0x0000)
struct FSCPropertyFloorBoneRepartition final
{
public:
	struct FBoneReference                         m_Bone;                                            // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_DegreeFloorAngleRange;                           // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fRepartitionAlpha;                               // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fResultAlpha;                                    // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_BoneResultTransform;                             // 0x0030(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_90[0x10];                                      // 0x0090(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCPropertyFloorBoneRepartition;

// ScriptStruct SCCore.GenericEnumHandler
// 0x0010 (0x0060 - 0x0050)
struct FGenericEnumHandler : public FSCUserDefinedEnumHandler
{
public:
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnum*                                  m_Enum;                                            // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGenericEnumHandler;

// ScriptStruct SCCore.SCTechAdviserEnumHandler
// 0x0000 (0x0060 - 0x0060)
struct FSCTechAdviserEnumHandler final : public FGenericEnumHandler
{
};
DUMPER7_ASSERTS_FSCTechAdviserEnumHandler;

// ScriptStruct SCCore.SCDataAdviserEnumHandler
// 0x0000 (0x0060 - 0x0060)
struct FSCDataAdviserEnumHandler final : public FGenericEnumHandler
{
};
DUMPER7_ASSERTS_FSCDataAdviserEnumHandler;

// ScriptStruct SCCore.AdvisersStruct
// 0x00C0 (0x00C0 - 0x0000)
struct FAdvisersStruct final
{
public:
	struct FSCTechAdviserEnumHandler              m_techAdviser;                                     // 0x0000(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCDataAdviserEnumHandler              m_dataAdviser;                                     // 0x0060(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAdvisersStruct;

// ScriptStruct SCCore.SCTraceSetup
// 0x0090 (0x0090 - 0x0000)
struct alignas(0x10) FSCTraceSetup final
{
public:
	ESCTraceType                                  m_eTraceType;                                      // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vStart;                                          // 0x0008(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vEnd;                                            // 0x0020(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             m_eTraceChannel;                                   // 0x0038(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0xB];                                       // 0x0039(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          m_bTraceComplex;                                   // 0x0044(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         m_ActorsToIgnore;                                  // 0x0048(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          m_bIgnoreSelf;                                     // 0x0058(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionResponse                            m_eCollisionResponse;                              // 0x0059(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x36];                                      // 0x005A(0x0036)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCTraceSetup;

// ScriptStruct SCCore.SCTraceResult
// 0x00C0 (0x00C0 - 0x0000)
struct FSCTraceResult final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCTraceSetup                          m_Setup;                                           // 0x0010(0x0090)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FHitResult>                     m_HitResults;                                      // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0[0x10];                                      // 0x00B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCTraceResult;

// ScriptStruct SCCore.AnimSequenceSnapInfos
// 0x00A0 (0x00A0 - 0x0000)
struct FAnimSequenceSnapInfos final
{
public:
	struct FTransform                             m_SnapLocation;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fTime;                                           // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fAnimStartTime;                                  // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class USnapAnimationComputation> m_Computation;                                   // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x30];                                      // 0x0070(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAnimSequenceSnapInfos;

// ScriptStruct SCCore.SCLogTestInnerStruct
// 0x0004 (0x0004 - 0x0000)
struct FSCLogTestInnerStruct final
{
public:
	int32                                         m_int;                                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCLogTestInnerStruct;

// ScriptStruct SCCore.InputSequenceStep
// 0x0020 (0x0020 - 0x0000)
struct FInputSequenceStep final
{
public:
	TSubclassOf<class UInputConditionData>        m_Input;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_DelayBeforeNextAction;                           // 0x0008(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bNextActionOnLowerBoundReached;                  // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInputSequenceStep;

// ScriptStruct SCCore.InputSequenceConditionProxyContainer
// 0x0001 (0x0001 - 0x0000)
struct FInputSequenceConditionProxyContainer final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInputSequenceConditionProxyContainer;

// ScriptStruct SCCore.BinderWithConditionInstance
// 0x0010 (0x0010 - 0x0000)
struct FBinderWithConditionInstance final
{
public:
	TSubclassOf<class UBinderWithCondition>       m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBinderWithCondition*                   m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBinderWithConditionInstance;

// ScriptStruct SCCore.BinderInstanceWithTarget
// 0x0068 (0x0068 - 0x0000)
struct FBinderInstanceWithTarget final
{
public:
	EBinderTargetType                             m_eBinderTargetType;                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_DeferredTargetID;                                // 0x0004(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  m_TargetSoftRef;                                   // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBinderWithConditionInstance           m_BinderCondition;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UBinderWithCondition*                   m_BinderConditionInstanceHandle;                   // 0x0048(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayAbilityTargetDataHandle& _gameplayAbilityTargetDataHandle, const struct FGameplayTag& _binderConditionID)> m_Event; // 0x0050(0x0010)(Edit, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	int32                                         m_iID;                                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBinderInstanceWithTarget;

// ScriptStruct SCCore.CustomMontagePlayerContext
// 0x0018 (0x0028 - 0x0010)
struct FCustomMontagePlayerContext : public FSCGameplayAbilityTargetData
{
public:
	uint8                                         Pad_10[0x18];                                      // 0x0010(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCustomMontagePlayerContext;

// ScriptStruct SCCore.MotionWarpingMontagePlayerContext
// 0x0030 (0x0058 - 0x0028)
struct FMotionWarpingMontagePlayerContext : public FCustomMontagePlayerContext
{
public:
	struct FGameplayAbilityTargetDataHandle       m_Context;                                         // 0x0028(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UMotionWarpingMontagePlayerConfiguration* m_Configuration;                                 // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMotionWarpingMontagePlayerContext;

// ScriptStruct SCCore.AdaptiveSnapMontagePlayerContext
// 0x0000 (0x0058 - 0x0058)
struct FAdaptiveSnapMontagePlayerContext final : public FMotionWarpingMontagePlayerContext
{
};
DUMPER7_ASSERTS_FAdaptiveSnapMontagePlayerContext;

// ScriptStruct SCCore.SCAnimLookAtLimits
// 0x0090 (0x0090 - 0x0000)
struct FSCAnimLookAtLimits final
{
public:
	double                                        m_fYawLimit;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_pitchLimitByYaw;                                 // 0x0008(0x0088)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAnimLookAtLimits;

// ScriptStruct SCCore.PropertyBagInstance
// 0x0028 (0x0028 - 0x0000)
struct FPropertyBagInstance
{
public:
	struct FInstancedPropertyBag                  m_Properties;                                      // 0x0000(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                          m_PropertyOverrides;                               // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_20[0x8];                                       // 0x0020(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPropertyBagInstance;

// ScriptStruct SCCore.TargetDatasourceInstance
// 0x0020 (0x0048 - 0x0028)
struct FTargetDatasourceInstance final : public FPropertyBagInstance
{
public:
	TSubclassOf<class UTargetDatasource>          m_DefaultClassObject;                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTargetDatasource*                      m_Instance;                                        // 0x0030(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x10];                                      // 0x0038(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTargetDatasourceInstance;

// ScriptStruct SCCore.TargetPickerInstance
// 0x0010 (0x0010 - 0x0000)
struct FTargetPickerInstance final
{
public:
	TSubclassOf<class UTargetPicker>              m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTargetPicker*                          m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTargetPickerInstance;

// ScriptStruct SCCore.BaseTargetProvider
// 0x0058 (0x0058 - 0x0000)
struct FBaseTargetProvider
{
public:
	struct FTargetDatasourceInstance              m_Datasource;                                      // 0x0000(0x0048)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetPickerInstance                  m_TargetPicker;                                    // 0x0048(0x0010)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBaseTargetProvider;

// ScriptStruct SCCore.RandomTransition
// 0x000C (0x000C - 0x0000)
struct FRandomTransition final
{
public:
	float                                         m_fProbability;                                    // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCooldown;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStateTreeStateLink                    m_TransitionRequest;                               // 0x0008(0x0002)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRandomTransition;

// ScriptStruct SCCore.StateTreeTask_RandomTransition
// 0x0018 (0x0040 - 0x0028)
struct FStateTreeTask_RandomTransition final : public FStateTreeTaskCommonBase
{
public:
	TArray<struct FRandomTransition>              m_Transitions;                                     // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_RandomTransition;

// ScriptStruct SCCore.IKBodyPartEnumHandler
// 0x0000 (0x0050 - 0x0050)
struct FIKBodyPartEnumHandler final : public FSCUserDefinedEnumHandler
{
};
DUMPER7_ASSERTS_FIKBodyPartEnumHandler;

// ScriptStruct SCCore.SCGameFlowInterrupt
// 0x0018 (0x0018 - 0x0000)
struct FSCGameFlowInterrupt final
{
public:
	struct FGameplayTag                           m_InterruptGoToStates[0x3];                        // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCGameFlowInterrupt;

// ScriptStruct SCCore.RigVMFunction_ModifyChainWithCubicInterpolation
// 0x00C0 (0x0290 - 0x01D0)
struct FRigVMFunction_ModifyChainWithCubicInterpolation final : public FRigUnitMutable
{
public:
	struct FRigElementKeyCollection               Items;                                             // 0x01D0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Progress;                                          // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Coef;                                              // 0x01E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawDebug;                                        // 0x01E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             StartTransform;                                    // 0x01F0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                EndLocation;                                       // 0x0250(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                EndUpVector;                                       // 0x0268(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCachedRigElement>              CachedIndexes;                                     // 0x0280(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigVMFunction_ModifyChainWithCubicInterpolation;

// ScriptStruct SCCore.NamedTargetData
// 0x0008 (0x0018 - 0x0010)
struct FNamedTargetData : public FSCGameplayAbilityTargetData
{
public:
	struct FGameplayTag                           m_Name;                                            // 0x0010(0x0008)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedTargetData;

// ScriptStruct SCCore.NamedActorClassTargetData
// 0x0008 (0x0020 - 0x0018)
struct FNamedActorClassTargetData final : public FNamedTargetData
{
public:
	TSubclassOf<class AActor>                     m_ActorClass;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedActorClassTargetData;

// ScriptStruct SCCore.SCCameraLookAtServiceBehaviorTime
// 0x0028 (0x0028 - 0x0000)
struct FSCCameraLookAtServiceBehaviorTime final
{
public:
	ESCLookAtReachType                            m_eReachingType;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fReachDuration;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_CurveReachDurationPerAngleDiff;                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCBlendType                                  m_eReachBlendType;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_ReachCurveDynamic;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSpringSpeed;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCCameraLookAtServiceBehaviorTime;

// ScriptStruct SCCore.SCCameraLookAtServiceBehaviorConfig
// 0x0138 (0x0138 - 0x0000)
struct FSCCameraLookAtServiceBehaviorConfig final
{
public:
	bool                                          m_bLookAtUseCrosshair;                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bGoBackToInitialRotationAtEnd;                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseFraming;                                     // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_AngleDampingCurveYaw;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_AngleDampingCurvePitch;                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              m_fInputNormalizationRatioFromDampingCurve;        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              m_AngleDampingThresholdToWakeup;                   // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              m_vTargetScreenPosOffset;                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bLookAtUseOffset;                                // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                m_mPitchYawLimit;                                  // 0x004C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fLerpSpeedForCameraOffset;                       // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fInputDeadZoneForCameraOffset;                   // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fReachDurationForCameraOffset;                   // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bLookAtUsePitch;                                 // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bLookAtUseYaw;                                   // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseForcePitch;                                  // 0x006A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fForcePitch;                                     // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseForceYaw;                                    // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fForceYaw;                                       // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bStayLock;                                       // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bDeactivateOnManual;                             // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_TagsToMakeLookAtSleep;                           // 0x0080(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          m_bLetSleepingWhenUserForceManualOffScreen;        // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fWakeUpAfterDurationWithoutManualInput;          // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinYawDiffAbsoluteToCancelLookAtLaunch;         // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseYawDampingBasedOnDistance;                   // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseRepulsionAngleToComputeYaw;                  // 0x00AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bRelaunchLookAtIfYawDampingNonZeroAgain;         // 0x00AE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AF[0x1];                                       // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_YawOrientationDampingFromDistanceCurve;          // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_YawNearOrientationDampingFromDistanceCurve;      // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_YawOrientationDampingCurveRatioFromDist;         // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUsePitchDampingBasedOnDistance;                 // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_PitchOrientationDampingFromDistanceCurve;        // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_PitchNearOrientationDampingFromDistanceCurve;    // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_PitchOrientationDampingCurveRatioFromDist;       // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUsePitchComputedWithSlope;                      // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_PitchValuePerSlopeAngleMinDist;                  // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_PitchValuePerSlopeAngleMaxDist;                  // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_PitchWithSlopeRangeMinMaxDist;                   // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bTeleportPointComputation;                       // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseCollisionAnticipationCorrection;             // 0x0111(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUsePositionToLockDamping;                       // 0x0112(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTargetPosDampingValue;                          // 0x0114(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUsePositionZOffset;                             // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fLookAtUpOffset;                                 // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUsePositionRatio;                               // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fPositionRatioToTarget;                          // 0x0124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPositionRatioDistanceMaxToComputeRatioForLockRange; // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPositionRatioLockDistMin;                       // 0x012C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPositionRatioLockDistMax;                       // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPositionRatioLookAtUpOffsetCompensation;        // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCameraLookAtServiceBehaviorConfig;

// ScriptStruct SCCore.SCCameraLookAtServiceBehavior
// 0x0188 (0x0188 - 0x0000)
struct FSCCameraLookAtServiceBehavior final
{
public:
	ESCLookAtType                                 m_eLookATType;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AActor>                  m_Target;                                          // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vTargetPosition;                                 // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCCameraLookAtServiceBehaviorTime     m_timeParams;                                      // 0x0028(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FSCCameraLookAtServiceBehaviorConfig   m_configParams;                                    // 0x0050(0x0138)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCameraLookAtServiceBehavior;

// ScriptStruct SCCore.StateTreeTask_FindTarget
// 0x0008 (0x0030 - 0x0028)
struct FStateTreeTask_FindTarget final : public FStateTreeTaskCommonBase
{
public:
	bool                                          m_bSucceedOnFoundTarget;                           // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_FindTarget;

// ScriptStruct SCCore.AITestGameplayAbilityTargetData
// 0x0000 (0x0010 - 0x0010)
struct FAITestGameplayAbilityTargetData final : public FSCGameplayAbilityTargetData
{
};
DUMPER7_ASSERTS_FAITestGameplayAbilityTargetData;

// ScriptStruct SCCore.IKPathComputation
// 0x0070 (0x0070 - 0x0000)
struct FIKPathComputation final
{
public:
	struct FTransform                             m_GoalComputedTransform;                           // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fAlpha;                                          // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FIKPathComputation;

// ScriptStruct SCCore.SCCharacterMovementDescription
// 0x0068 (0x0068 - 0x0000)
struct FSCCharacterMovementDescription final
{
public:
	struct FVector_NetQuantizeNormal              m_vDirection;                                      // 0x0000(0x0018)(Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal              m_vOrientation;                                    // 0x0018(0x0018)(Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCCharacterSpeedState                        m_eSpeedState;                                     // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USpeedDescriptionDB>        m_SpeedDescriptionDB;                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_GameplayTags;                                    // 0x0040(0x0020)(Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
	bool                                          m_bIsOrientedToMovement;                           // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCCharacterMovementDescription;

// ScriptStruct SCCore.InputModeParams
// 0x0002 (0x0002 - 0x0000)
struct FInputModeParams final
{
public:
	ESCShowMouseBehavior                          m_eViewportShowMouse;                              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCCaptureMouseBehavior                       m_eCaptureMouse;                                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputModeParams;

// ScriptStruct SCCore.SCGameplayAbilitySingleTargetData
// 0x0008 (0x0018 - 0x0010)
struct FSCGameplayAbilitySingleTargetData : public FSCGameplayAbilityTargetData
{
public:
	TWeakObjectPtr<class AActor>                  m_Target;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCGameplayAbilitySingleTargetData;

// ScriptStruct SCCore.SCAnimLookAtLimitsQuery
// 0x00D8 (0x00D8 - 0x0000)
struct FSCAnimLookAtLimitsQuery final
{
public:
	struct FGameplayTagQuery                      m_Query;                                           // 0x0000(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FSCAnimLookAtLimits                    m_Limits;                                          // 0x0048(0x0090)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAnimLookAtLimitsQuery;

// ScriptStruct SCCore.SCAnimLookAtTargetStackState
// 0x000C (0x000C - 0x0000)
struct FSCAnimLookAtTargetStackState final
{
public:
	float                                         m_fTimeSinceValid;                                 // 0x0000(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCooldownTimeRemaining;                          // 0x0004(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fActivationTimeRemaining;                        // 0x0008(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAnimLookAtTargetStackState;

// ScriptStruct SCCore.SCAnimLookAtTargetInfos
// 0x0088 (0x0088 - 0x0000)
struct FSCAnimLookAtTargetInfos final
{
public:
	bool                                          m_bUseDirection;                                   // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESCAnimLookAtDirectionType                    m_eDirectionType;                                  // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bIgnorePitch;                                    // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               m_DirectionRotation;                               // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                  m_TargetPtr;                                       // 0x0020(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_28[0x28];                                      // 0x0028(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vLocalOffset;                                    // 0x0050(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEyesLookAtSpecificBone;                         // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_EyesLookAtSpecificBoneName;                      // 0x006C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UTargetDatasource>          m_TargetDatasource;                                // 0x0078(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UTargetPicker>              m_TargetPicker;                                    // 0x0080(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAnimLookAtTargetInfos;

// ScriptStruct SCCore.SCAnimLookAtHandler
// 0x0398 (0x0398 - 0x0000)
struct FSCAnimLookAtHandler final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              m_vBlendSpaceParams;                               // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_AlphaCurveName;                                  // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              m_vEyeBlendSpaceParams;                            // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                               m_BoneModifierRot;                                 // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	ESCAnimLookAtApplyMode                        m_eApplyMode;                                      // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              m_vAimOffsetParamsMultiplier;                      // 0x0078(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              m_vBoneModifierMultiplier;                         // 0x0088(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              m_vEyesAimOffsetParamsMultiplier;                  // 0x0098(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bInverseValuesOnBoneModifier;                    // 0x00A8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              m_vBoneModifierOffset;                             // 0x00B0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSCAnimLookAtLimits                    m_BoneModifierLimits;                              // 0x00C0(0x0090)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSCAnimLookAtLimitsQuery>       m_BoneModifierLimitsOverrides;                     // 0x0150(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_160[0x90];                                     // 0x0160(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               m_CompensationRot;                                 // 0x01F0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          m_bEnableAnimationCompensation;                    // 0x0208(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxHeadDiffYaw;                                 // 0x020C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bInvertCompensationYaw;                          // 0x0210(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxHeadDiffPitch;                               // 0x0214(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bInvertCompensationPitch;                        // 0x0218(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     m_CompensationPitchLimitByYaw;                     // 0x0220(0x0088)(Edit, Protected, NativeAccessSpecifierProtected)
	class FName                                   m_HeadInWorldSpaceSaveBoneName;                    // 0x02A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_HeadComparaisonInWorldSpaceSaveBoneName;         // 0x02B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   m_HeadInWorldSpacePostLookAtSaveBoneName;          // 0x02B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fSpringSpeed;                                    // 0x02C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fAngleThreshold;                                 // 0x02C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fMaxFrontAngle;                                  // 0x02C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCAnimLookAtAimOffset                 m_aimOffset0;                                      // 0x02D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSCAnimLookAtAimOffset                 m_aimOffset1;                                      // 0x02E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         m_iAimOffsetIndex;                                 // 0x02F0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F1[0x1F];                                     // 0x02F1(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	class USCAnimLookAtStackDataAsset*            m_TargetStackDataAsset;                            // 0x0310(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSCAnimLookAtTargetStackState>  m_TargetStackState;                                // 0x0318(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSCAnimLookAtTargetInfos>       m_ConfigPerTarget;                                 // 0x0328(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_338[0x60];                                     // 0x0338(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCAnimLookAtHandler;

// ScriptStruct SCCore.SCEmptyPayload
// 0x0001 (0x0001 - 0x0000)
struct FSCEmptyPayload final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCEmptyPayload;

// ScriptStruct SCCore.SCActiveHoldMenuAction
// 0x0020 (0x0020 - 0x0000)
struct FSCActiveHoldMenuAction final
{
public:
	class USCInputAction*                         m_InputAction;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fTriggerDuration;                                // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidgetContextViewModel*>        m_WidgetContextViewModels;                         // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCActiveHoldMenuAction;

// ScriptStruct SCCore.SCTypedValue
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FSCTypedValue final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCTypedValue;

// ScriptStruct SCCore.SCMaterialCollectionParamBinding
// 0x00D8 (0x00D8 - 0x0000)
struct FSCMaterialCollectionParamBinding final
{
public:
	bool                                          m_bIsEnabled;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UMaterialParameterCollection> m_Collection;                                 // 0x0004(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UMeshComponent>          m_MeshComponent;                                   // 0x000C(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iMaterialIndex;                                  // 0x0014(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UMaterialInstanceDynamic> m_MaterialInstanceCache;                          // 0x0018(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_ParameterName;                                   // 0x0020(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCTypedValue                          m_Value;                                           // 0x0030(0x0020)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UObject>                 m_ObjectOwner;                                     // 0x0050(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x80];                                      // 0x0058(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCMaterialCollectionParamBinding;

// ScriptStruct SCCore.InputBehaviourStruct
// 0x000C (0x000C - 0x0000)
struct FInputBehaviourStruct final
{
public:
	ESCInputBehavior                              m_behavior;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTimePressed;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAutoReset;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bRegisterPressTimeOnStack;                       // 0x0009(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bRemovePressedTimeFromTimeLeft;                  // 0x000A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInputBehaviourStruct;

// ScriptStruct SCCore.BaseDataBinding
// 0x0028 (0x0028 - 0x0000)
struct FBaseDataBinding
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iManifestItemID;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_ColumnName;                                      // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           m_PropertyPath;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FBaseDataBinding;

// ScriptStruct SCCore.BaseNumericDataBinding
// 0x0018 (0x0040 - 0x0028)
struct FBaseNumericDataBinding : public FBaseDataBinding
{
public:
	TSubclassOf<class UNumericConverter>          m_Converter;                                       // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBaseNumericDataBinding;

// ScriptStruct SCCore.FloatDataBinding
// 0x0008 (0x0048 - 0x0040)
struct FFloatDataBinding final : public FBaseNumericDataBinding
{
public:
	float                                         m_DefaultValue;                                    // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFloatDataBinding;

// ScriptStruct SCCore.MappingID
// 0x00D0 (0x00D0 - 0x0000)
struct FMappingID final
{
public:
	TSoftObjectPtr<class USCInputContext>         m_eContext;                                        // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputPresetsEnumHandler               m_PresetID;                                        // 0x0028(0x0050)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputKeyPresetsEnumHandler            m_KeyPresetID;                                     // 0x0078(0x0050)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCInputAction*                         m_eAction;                                         // 0x00C8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMappingID;

// ScriptStruct SCCore.SCNetBlendingFloat
// 0x0010 (0x0010 - 0x0000)
struct FSCNetBlendingFloat final
{
public:
	float                                         m_fStartValue;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fStartTime;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fEndValue;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fEndTime;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FSCNetBlendingFloat;

// ScriptStruct SCCore.SCAestheticMontagePlayerContext
// 0x0028 (0x0050 - 0x0028)
struct FSCAestheticMontagePlayerContext final : public FCustomMontagePlayerContext
{
public:
	struct FGameplayAbilityTargetDataHandle       m_Context;                                         // 0x0028(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAestheticMontagePlayerContext;

// ScriptStruct SCCore.SCAlphaBlendArgs
// 0x0010 (0x0010 - 0x0000)
struct FSCAlphaBlendArgs final
{
public:
	float                                         m_fBlendTime;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCBlendType                                  m_eBlendOption;                                    // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_CustomCurve;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAlphaBlendArgs;

// ScriptStruct SCCore.SCMovieSceneBindingSettings
// 0x0010 (0x0010 - 0x0000)
struct FSCMovieSceneBindingSettings final
{
public:
	struct FSCAlphaBlendArgs                      m_LocationBlendInArgs;                             // 0x0000(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCMovieSceneBindingSettings;

// ScriptStruct SCCore.BooleanDataBinding
// 0x0008 (0x0030 - 0x0028)
struct FBooleanDataBinding final : public FBaseDataBinding
{
public:
	bool                                          m_DefaultValue;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBooleanDataBinding;

// ScriptStruct SCCore.ReplicatedInputActionInfos
// 0x00B0 (0x00B0 - 0x0000)
struct FReplicatedInputActionInfos final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint64                                        m_uiRevisionID;                                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bActive;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionState                      m_State;                                           // 0x0018(0x0098)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FReplicatedInputActionInfos;

// ScriptStruct SCCore.NamedDataTableRowTargetData
// 0x0010 (0x0028 - 0x0018)
struct FNamedDataTableRowTargetData final : public FNamedTargetData
{
public:
	struct FDataTableRowHandle                    m_RowHandle;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedDataTableRowTargetData;

// ScriptStruct SCCore.AnimSequencePlayInfos
// 0x0120 (0x0130 - 0x0010)
#pragma pack(push, 0x1)
struct alignas(0x10) FAnimSequencePlayInfos : public FSCGameplayAbilityTargetData
{
public:
	class UAnimSequenceBase*                      m_AnimSequence;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bMirror;                                         // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCanBeNull;                                      // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        m_Metadata;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0xD8];                                      // 0x0030(0x00D8)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasicMontagePlayerConfiguration*       m_CustomConfiguration;                             // 0x0108(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_110[0xC];                                      // 0x0110(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fStartTime;                                      // 0x011C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)
DUMPER7_ASSERTS_FAnimSequencePlayInfos;

// ScriptStruct SCCore.SCLookAtTargetEnumHandler
// 0x0000 (0x0050 - 0x0050)
struct FSCLookAtTargetEnumHandler final : public FSCUserDefinedEnumHandler
{
};
DUMPER7_ASSERTS_FSCLookAtTargetEnumHandler;

// ScriptStruct SCCore.BaseActorTargetConditionInstance
// 0x0010 (0x0010 - 0x0000)
struct FBaseActorTargetConditionInstance final
{
public:
	TSubclassOf<class UBaseActorTargetCondition>  m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseActorTargetCondition*              m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBaseActorTargetConditionInstance;

// ScriptStruct SCCore.SCAnimLookAtTargetStackElement
// 0x0118 (0x0118 - 0x0000)
struct FSCAnimLookAtTargetStackElement final
{
public:
	struct FSCLookAtTargetEnumHandler             m_eTarget;                                         // 0x0000(0x0050)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBaseActorTargetConditionInstance      m_OwnerToTargetCondition;                          // 0x0050(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         m_fRotationMultiplier;                             // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCAnimLookAtLimits                    m_RotationLimits;                                  // 0x0068(0x0090)(Edit, NativeAccessSpecifierPublic)
	float                                         m_fActivationDelay;                                // 0x00F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         m_fCooldownDurationRange;                          // 0x00FC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bLimitedActivation;                              // 0x0104(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatInterval                         m_fActivationDurationRange;                        // 0x0108(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOverrideSpringSpeed;                            // 0x0110(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fSpringSpeedOverride;                            // 0x0114(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAnimLookAtTargetStackElement;

// ScriptStruct SCCore.RootMotionSource_MoveToLocationWithSpeed
// 0x0030 (0x0160 - 0x0130)
struct FRootMotionSource_MoveToLocationWithSpeed final : public FRootMotionSource_MoveToForce
{
public:
	class UCurveFloat*                            m_SpeedCurve;                                      // 0x0130(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_138[0x28];                                     // 0x0138(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRootMotionSource_MoveToLocationWithSpeed;

// ScriptStruct SCCore.AnimSequenceSnapPrediction
// 0x0020 (0x0020 - 0x0000)
struct FAnimSequenceSnapPrediction final
{
public:
	struct FVector                                m_vSnapStartLocation;                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSnapStartTime;                                  // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAnimSequenceSnapPrediction;

// ScriptStruct SCCore.InputGameplayAbilityTargetData
// 0x0048 (0x0058 - 0x0010)
struct FInputGameplayAbilityTargetData final : public FSCGameplayAbilityTargetData
{
public:
	class USCInputAction*                         m_ActionTrigger;                                   // 0x0010(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                        m_uiInputActivationID;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iInputIndex;                                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              m_vVectorValue;                                    // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vWorldVectorValue;                               // 0x0038(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fKeyValue;                                       // 0x0050(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fTimePressed;                                    // 0x0054(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputGameplayAbilityTargetData;

// ScriptStruct SCCore.IntDataBinding
// 0x0008 (0x0048 - 0x0040)
struct FIntDataBinding final : public FBaseNumericDataBinding
{
public:
	int32                                         m_DefaultValue;                                    // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FIntDataBinding;

// ScriptStruct SCCore.TimeStretchAnimationModifier
// 0x00D8 (0x00D8 - 0x0000)
struct FTimeStretchAnimationModifier final
{
public:
	struct FIntDataBinding                        m_iStartFrame;                                     // 0x0000(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FIntDataBinding                        m_iEndFrame;                                       // 0x0048(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FIntDataBinding                        m_iWantedFrameCount;                               // 0x0090(0x0048)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTimeStretchAnimationModifier;

// ScriptStruct SCCore.SCWidgetComponentInstance
// 0x0010 (0x0010 - 0x0000)
struct FSCWidgetComponentInstance final
{
public:
	TSubclassOf<class USCWidgetComponent>         m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCWidgetComponent*                     m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCWidgetComponentInstance;

// ScriptStruct SCCore.InputDataForSimulation
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FInputDataForSimulation final
{
public:
	uint8                                         Pad_0[0x58];                                       // 0x0000(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInputDataForSimulation;

// ScriptStruct SCCore.TagAvailabilityLayerContainerInstance
// 0x0010 (0x0010 - 0x0000)
struct FTagAvailabilityLayerContainerInstance final
{
public:
	TSubclassOf<class UTagAvailabilityLayerContainer> m_DefaultClassObject;                          // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTagAvailabilityLayerContainer*         m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTagAvailabilityLayerContainerInstance;

// ScriptStruct SCCore.SCAbilitySystemComponentLastDemotableTickFunction
// 0x0008 (0x0030 - 0x0028)
struct FSCAbilitySystemComponentLastDemotableTickFunction final : public FTickFunction
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCAbilitySystemComponentLastDemotableTickFunction;

// ScriptStruct SCCore.SpeedDescriptionDBOverride
// 0x0050 (0x0050 - 0x0000)
struct FSpeedDescriptionDBOverride final
{
public:
	struct FGameplayTagQuery                      m_Query;                                           // 0x0000(0x0048)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class USpeedDescriptionDB>        m_SpeedDescriptionDB;                              // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSpeedDescriptionDBOverride;

// ScriptStruct SCCore.SCAbilitySystemComponentDuringPhysicsTickFunction
// 0x0008 (0x0030 - 0x0028)
struct FSCAbilitySystemComponentDuringPhysicsTickFunction final : public FTickFunction
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCAbilitySystemComponentDuringPhysicsTickFunction;

// ScriptStruct SCCore.SCScale48
// 0x0006 (0x0006 - 0x0000)
struct alignas(0x02) FSCScale48 final
{
public:
	uint8                                         Pad_0[0x6];                                        // 0x0000(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCScale48;

// ScriptStruct SCCore.RigUnit_PropagateSpineRotation
// 0x0020 (0x01F0 - 0x01D0)
struct FRigUnit_PropagateSpineRotation final : public FRigUnitMutable
{
public:
	TArray<struct FPBIKEffector>                  m_Effectors;                                       // 0x01D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRigElementKey>                 m_Spine;                                           // 0x01E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigUnit_PropagateSpineRotation;

// ScriptStruct SCCore.SCIKPropertyEvaluation
// 0x0160 (0x0160 - 0x0000)
struct FSCIKPropertyEvaluation final
{
public:
	struct FGenericEnumHandler                    m_Mirror;                                          // 0x0000(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         m_RootLimbBone;                                    // 0x0060(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         m_TipBone;                                         // 0x0070(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fBoneLocationAlpha;                              // 0x0080(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fBoneRotationAlpha;                              // 0x0084(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLimbRotationAlpha;                              // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vSelfReferenceBonePosition;                      // 0x0090(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vTargetBonePosition;                             // 0x00A8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               m_TargetBoneRotation;                              // 0x00C0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_TipBoneWantedTransform;                          // 0x00E0(0x0060)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               m_LimbLocalRotation;                               // 0x0140(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCIKPropertyEvaluation;

// ScriptStruct SCCore.SCPerformanceTelemetryRHISurvey
// 0x0050 (0x0050 - 0x0000)
struct FSCPerformanceTelemetryRHISurvey final
{
public:
	class FString                                 AdapterName;                                       // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AdapterInternalDriverVersion;                      // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AdapterUserDriverVersion;                          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AdapterDriverDate;                                 // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AdapterDedicatedMemoryMB;                          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCPerformanceTelemetryRHISurvey;

// ScriptStruct SCCore.SCPerformanceTelemetryHardwareSurvey
// 0x00D0 (0x00D0 - 0x0000)
struct FSCPerformanceTelemetryHardwareSurvey final
{
public:
	class FString                                 Platform;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OSVersion;                                         // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OSSubVersion;                                      // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RenderingAPI;                                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MemoryMB;                                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CPUPerformanceIndex;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GPUPerformanceIndex;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RAMPerformanceIndex;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsLaptopComputer : 1;                             // 0x0050(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        CPUCount;                                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CPUClockGHz;                                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CPUBrand;                                          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CPUNameString;                                     // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCPerformanceTelemetryRHISurvey       RHIAdapter;                                        // 0x0080(0x0050)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCPerformanceTelemetryHardwareSurvey;

// ScriptStruct SCCore.IKPathEntry
// 0x0130 (0x0130 - 0x0000)
struct FIKPathEntry final
{
public:
	struct FGameplayTag                           m_TagIdentifier;                                   // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIKBodyPartEnumHandler                 m_eIKBodyPart;                                     // 0x0008(0x0050)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UAnimMontage>            m_AnimMontage;                                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             m_OwnerTransform;                                  // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             m_TargetWorldTransform;                            // 0x00C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_120[0x10];                                     // 0x0120(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FIKPathEntry;

// ScriptStruct SCCore.IKPathContainer
// 0x0010 (0x0010 - 0x0000)
struct FIKPathContainer final
{
public:
	TArray<struct FIKPathEntry>                   m_IKPaths;                                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIKPathContainer;

// ScriptStruct SCCore.AnimContainer
// 0x0018 (0x0018 - 0x0000)
struct FAnimContainer final
{
public:
	class UAnimSequence*                          m_animation;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bMirror;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bLoopable;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fStartRatio;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiOrderID;                                       // 0x0010(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fPlayRate;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FAnimContainer;

// ScriptStruct SCCore.SCPendingMoveDirection
// 0x0010 (0x001C - 0x000C)
struct FSCPendingMoveDirection final : public FFastArraySerializerItem
{
public:
	float                                         m_fScheduledTime;                                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fWorldDirDeg;                                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         m_iActivationPredictionKey;                        // 0x0014(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_uiAutoGeneratedID;                               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17[0x5];                                       // 0x0017(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCPendingMoveDirection;

// ScriptStruct SCCore.MenuStackInfos
// 0x0018 (0x0018 - 0x0000)
struct FMenuStackInfos final
{
public:
	TSubclassOf<class USCMenuWidget>              m_Menu;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UPanelWidget>            m_Container;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bSetUIInputMode;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMenuStackInfos;

// ScriptStruct SCCore.SCMovieSceneObjectBindingName
// 0x0008 (0x0008 - 0x0000)
struct FSCMovieSceneObjectBindingName final
{
public:
	class FName                                   m_Name;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCMovieSceneObjectBindingName;

// ScriptStruct SCCore.SCMovieScenePawnBindingSettings
// 0x0018 (0x0018 - 0x0000)
struct FSCMovieScenePawnBindingSettings final
{
public:
	struct FSCMovieSceneObjectBindingName         m_BindingName;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCMovieSceneBindingSettings           m_Settings;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCMovieScenePawnBindingSettings;

// ScriptStruct SCCore.TargetDataManifestMetaStruct
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FTargetDataManifestMetaStruct
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTargetDataManifestMetaStruct;

// ScriptStruct SCCore.NamedTargetDataManifestMeta
// 0x0010 (0x0018 - 0x0008)
struct FNamedTargetDataManifestMeta : public FTargetDataManifestMetaStruct
{
public:
	struct FGameplayTag                           m_Name;                                            // 0x0008(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bHideName;                                       // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FNamedTargetDataManifestMeta;

// ScriptStruct SCCore.NamedClassTargetDataManifestMeta
// 0x0008 (0x0020 - 0x0018)
struct FNamedClassTargetDataManifestMeta final : public FNamedTargetDataManifestMeta
{
public:
	class UClass*                                 m_BaseClass;                                       // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedClassTargetDataManifestMeta;

// ScriptStruct SCCore.SCMovieSceneActorBindingSettings
// 0x0038 (0x0038 - 0x0000)
struct FSCMovieSceneActorBindingSettings final
{
public:
	TSoftObjectPtr<class AActor>                  m_ActorToBind;                                     // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCMovieSceneBindingSettings           m_Settings;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCMovieSceneActorBindingSettings;

// ScriptStruct SCCore.SCBPComponentsMap
// 0x0060 (0x0060 - 0x0000)
struct FSCBPComponentsMap final
{
public:
	uint8                                         Pad_0[0x50];                                       // 0x0000(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UEnum*>                          m_ComponentsEnums;                                 // 0x0050(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FSCBPComponentsMap;

// ScriptStruct SCCore.NamedBoolTargetData
// 0x0008 (0x0020 - 0x0018)
struct FNamedBoolTargetData final : public FNamedTargetData
{
public:
	bool                                          m_bValue;                                          // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FNamedBoolTargetData;

// ScriptStruct SCCore.DynamicBlendSettings
// 0x0010 (0x0010 - 0x0000)
struct FDynamicBlendSettings final
{
public:
	EAlphaBlendOption                             m_eBlendOption;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDuration;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_CustomCurve;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDynamicBlendSettings;

// ScriptStruct SCCore.TargetingContext
// 0x00D0 (0x00E0 - 0x0010)
struct alignas(0x10) FTargetingContext final : public FSCGameplayAbilityTargetData
{
public:
	uint8                                         Pad_10[0xD0];                                      // 0x0010(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTargetingContext;

// ScriptStruct SCCore.InputStablizationSettings
// 0x0010 (0x0010 - 0x0000)
struct FInputStablizationSettings final
{
public:
	bool                                          m_bEnabled;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fThresold;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fStartStabilizationDuration;                     // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fStopStabilizationDuration;                      // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputStablizationSettings;

// ScriptStruct SCCore.SCMenuActionInstance
// 0x0010 (0x0010 - 0x0000)
struct FSCMenuActionInstance final
{
public:
	TSubclassOf<class USCMenuAction>              m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCMenuAction*                          m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCMenuActionInstance;

// ScriptStruct SCCore.SCCameraSafePointCondition
// 0x003C (0x003C - 0x0000)
struct FSCCameraSafePointCondition final
{
public:
	bool                                          m_bUseDeadZoneCountRange;                          // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInt32Range                            m_iDeadZoneCountRange;                             // 0x0004(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseDeadZoneAngleRange;                          // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_FSCDeadZoneAngleRange;                           // 0x0018(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseSafeZoneAngleRange;                          // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_fSafeZoneAngleRange;                             // 0x002C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCameraSafePointCondition;

// ScriptStruct SCCore.SCStateWeight
// 0x0010 (0x0010 - 0x0000)
struct FSCStateWeight final
{
public:
	float                                         m_fTargetWeight;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fInDuration;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fOutDuration;                                    // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCStateWeight;

// ScriptStruct SCCore.AchievementUnlockConditionStruct
// 0x0080 (0x0080 - 0x0000)
struct FAchievementUnlockConditionStruct final
{
public:
	class FText                                   m_NotificationTitle;                               // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   m_ObjectDescription;                               // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   m_UnlockDescription;                               // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      m_ConditionQuery;                                  // 0x0030(0x0048)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bShowNotificationOnUnlocking;                    // 0x0078(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAchievementUnlockConditionStruct;

// ScriptStruct SCCore.BaseDataBindingContext
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FBaseDataBindingContext
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBaseDataBindingContext;

// ScriptStruct SCCore.ActorLocationTargetData
// 0x00F8 (0x0110 - 0x0018)
#pragma pack(push, 0x1)
struct alignas(0x10) FActorLocationTargetData : public FSCGameplayAbilitySingleTargetData
{
public:
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_TargetTransform;                                 // 0x0020(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vTargetVelocity;                                 // 0x0080(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_InstigatorTransform;                             // 0x00A0(0x0060)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fTargetTime;                                     // 0x0100(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fInstigatorTime;                                 // 0x0104(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
#pragma pack(pop)
DUMPER7_ASSERTS_FActorLocationTargetData;

// ScriptStruct SCCore.StateTreeTask_ActivateAbility
// 0x0008 (0x0030 - 0x0028)
struct FStateTreeTask_ActivateAbility final : public FStateTreeTaskCommonBase
{
public:
	bool                                          m_bExitStateOnAbilityFinished;                     // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_ActivateAbility;

// ScriptStruct SCCore.SCConditionsToSyncEarly
// 0x0018 (0x0018 - 0x0000)
struct FSCConditionsToSyncEarly final
{
public:
	struct FTargetDataConditionInstance           m_ConditionsToSyncEarly;                           // 0x0000(0x0010)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bSkipLockUpdateParamsAtSync;                     // 0x0010(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCConditionsToSyncEarly;

// ScriptStruct SCCore.SCWorldNavControllers
// 0x0010 (0x0010 - 0x0000)
struct FSCWorldNavControllers final
{
public:
	TArray<TWeakObjectPtr<class USCWorldNavControllerComponent>> m_Components;                       // 0x0000(0x0010)(Edit, ExportObject, ZeroConstructor, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCWorldNavControllers;

// ScriptStruct SCCore.SCNetworkSyncData
// 0x0010 (0x0010 - 0x0000)
struct FSCNetworkSyncData final
{
public:
	TArray<class UScriptStruct*>                  m_ExpectedTargetDataAtSync;                        // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCNetworkSyncData;

// ScriptStruct SCCore.NetSyncInfos
// 0x01D0 (0x01D0 - 0x0000)
struct FNetSyncInfos final
{
public:
	float                                         m_fServerTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_CharacterTransform;                              // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal              m_vCameraForward;                                  // 0x0070(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCCharacterSpeedState                        m_eSpeedState;                                     // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x147];                                     // 0x0089(0x0147)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FNetSyncInfos;

// ScriptStruct SCCore.NetworkSyncTargetData
// 0x01E8 (0x01F0 - 0x0008)
struct FNetworkSyncTargetData final : public FGameplayAbilityTargetData
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetSyncInfos                          m_NetSync;                                         // 0x0010(0x01D0)(NativeAccessSpecifierPublic)
	bool                                          m_bReadyToFire;                                    // 0x01E0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bSyncByConditions;                               // 0x01E1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTimeRemaining;                                  // 0x01E4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E8[0x8];                                      // 0x01E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FNetworkSyncTargetData;

// ScriptStruct SCCore.StateTreeTask_HandleTaskCooldown
// 0x0008 (0x0030 - 0x0028)
struct FStateTreeTask_HandleTaskCooldown final : public FStateTreeTaskCommonBase
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_HandleTaskCooldown;

// ScriptStruct SCCore.InteractionTagMapping
// 0x0068 (0x0068 - 0x0000)
struct FInteractionTagMapping final
{
public:
	struct FGameplayTagQuery                      m_ActorQuery;                                      // 0x0000(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_AddedInteractionTags;                            // 0x0048(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInteractionTagMapping;

// ScriptStruct SCCore.AnalogInputSequenceStep
// 0x004C (0x004C - 0x0000)
struct FAnalogInputSequenceStep final
{
public:
	struct FFloatRange                            m_SizeTolerance;                                   // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_VelocityFromRefDirTolerance;                     // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAbsAngle;                                       // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_AngleDegTolerance;                               // 0x0024(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            m_fHoldDuration;                                   // 0x0034(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxValidityDuration;                            // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsReferenceDirection;                           // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnalogInputReferenceDirection                m_eReferenceDirBehavior;                           // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsResultDirection;                              // 0x004A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bParallelizeOnValidation;                        // 0x004B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAnalogInputSequenceStep;

// ScriptStruct SCCore.SlotAnimSequencePlayInfos
// 0x0000 (0x0130 - 0x0130)
struct FSlotAnimSequencePlayInfos : public FAnimSequencePlayInfos
{
public:
	class FName                                   m_SlotName;                                        // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSlotAnimSequencePlayInfos;

// ScriptStruct SCCore.TaskCooldownConditionInstanceData
// 0x0001 (0x0001 - 0x0000)
struct FTaskCooldownConditionInstanceData final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTaskCooldownConditionInstanceData;

// ScriptStruct SCCore.AnimSequencePickerInstance
// 0x0010 (0x0038 - 0x0028)
struct FAnimSequencePickerInstance final : public FPropertyBagInstance
{
public:
	TSubclassOf<class UAnimSequencePicker>        m_DefaultClassObject;                              // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequencePicker*                    m_Instance;                                        // 0x0030(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAnimSequencePickerInstance;

// ScriptStruct SCCore.TargetDataManifestDeclaration
// 0x0038 (0x0038 - 0x0000)
struct FTargetDataManifestDeclaration final
{
public:
	int32                                         m_iID;                                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptStruct*                          m_TargetDataStruct;                                // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAcceptInheritedStruct;                          // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       m_TargetDataMeta;                                  // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTargetDataManifestDeclaration;

// ScriptStruct SCCore.AnimSequencePickerSlotInstance
// 0x0038 (0x0038 - 0x0000)
struct FAnimSequencePickerSlotInstance final
{
public:
	struct FAnimSequencePickerInstance            m_Instance;                                        // 0x0000(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAnimSequencePickerSlotInstance;

// ScriptStruct SCCore.AnimSequencePickerSlotRepresentation
// 0x0018 (0x0018 - 0x0000)
struct FAnimSequencePickerSlotRepresentation final
{
public:
	class FName                                   m_SlotName;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_DisplayName;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAnimSequencePickerSlotRepresentation;

// ScriptStruct SCCore.EventBinderInstance
// 0x0010 (0x0038 - 0x0028)
struct FEventBinderInstance final : public FPropertyBagInstance
{
public:
	TSubclassOf<class UEventBinder>               m_DefaultClassObject;                              // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEventBinder*                           m_Instance;                                        // 0x0030(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FEventBinderInstance;

// ScriptStruct SCCore.TargetDataManifestHandlerInstance
// 0x0010 (0x0010 - 0x0000)
struct FTargetDataManifestHandlerInstance final
{
public:
	struct FInstancedStruct                       m_Instance;                                        // 0x0000(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTargetDataManifestHandlerInstance;

// ScriptStruct SCCore.RequiredTargetDataHandler
// 0x0010 (0x0010 - 0x0000)
struct FRequiredTargetDataHandler final
{
public:
	TArray<struct FTargetDataManifestHandlerInstance> m_TargetDataInstances;                         // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRequiredTargetDataHandler;

// ScriptStruct SCCore.ProvidedTargetDataReference
// 0x0004 (0x0004 - 0x0000)
struct FProvidedTargetDataReference final
{
public:
	int32                                         m_iIndex;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProvidedTargetDataReference;

// ScriptStruct SCCore.ProvidedTargetDataHandler
// 0x0018 (0x0018 - 0x0000)
struct FProvidedTargetDataHandler final
{
public:
	int32                                         m_iIndex;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       m_Result;                                          // 0x0008(0x0010)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FProvidedTargetDataHandler;

// ScriptStruct SCCore.StateTreeTask_WaitForEventBinderInstanceData
// 0x0088 (0x0088 - 0x0000)
struct FStateTreeTask_WaitForEventBinderInstanceData final
{
public:
	struct FEventBinderInstance                   m_Binder;                                          // 0x0000(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UEventBinder*                           m_BinderInstance;                                  // 0x0038(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRequiredTargetDataHandler             m_ProvidedTargetData;                              // 0x0040(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FProvidedTargetDataReference           m_OutputSelection;                                 // 0x0050(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProvidedTargetDataHandler             m_OutputData;                                      // 0x0058(0x0018)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x18];                                      // 0x0070(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_WaitForEventBinderInstanceData;

// ScriptStruct SCCore.AnimSequencePickerContainerSlotInfos
// 0x0050 (0x0050 - 0x0000)
struct FAnimSequencePickerContainerSlotInfos final
{
public:
	TMap<class FName, struct FAnimSequencePickerSlotInstance> m_Slots;                               // 0x0000(0x0050)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAnimSequencePickerContainerSlotInfos;

// ScriptStruct SCCore.ClassContainerDataBinding
// 0x0008 (0x0030 - 0x0028)
struct FClassContainerDataBinding : public FBaseDataBinding
{
public:
	class UClass*                                 m_Class;                                           // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FClassContainerDataBinding;

// ScriptStruct SCCore.OnDemandTargetProvider
// 0x0000 (0x0058 - 0x0058)
struct FOnDemandTargetProvider final : public FBaseTargetProvider
{
};
DUMPER7_ASSERTS_FOnDemandTargetProvider;

// ScriptStruct SCCore.ClassDataBinding
// 0x0008 (0x0038 - 0x0030)
struct FClassDataBinding final : public FClassContainerDataBinding
{
public:
	class UClass*                                 m_DefaultValue;                                    // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FClassDataBinding;

// ScriptStruct SCCore.AssetDataBinding
// 0x0008 (0x0038 - 0x0030)
struct FAssetDataBinding final : public FClassContainerDataBinding
{
public:
	class UObject*                                m_DefaultValue;                                    // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAssetDataBinding;

// ScriptStruct SCCore.WidgetPoolEntryTemplate
// 0x0060 (0x0060 - 0x0000)
struct FWidgetPoolEntryTemplate final
{
public:
	struct FSCUserDefinedEnumHandler              m_LayerEnum;                                       // 0x0000(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USCUserWidget>              m_WidgetClass;                                     // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iNumberOfInstances;                              // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWidgetPoolEntryTemplate;

// ScriptStruct SCCore.SoftAssetDataBinding
// 0x0028 (0x0058 - 0x0030)
struct FSoftAssetDataBinding final : public FClassContainerDataBinding
{
public:
	TSoftObjectPtr<class UObject>                 m_DefaultValue;                                    // 0x0030(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSoftAssetDataBinding;

// ScriptStruct SCCore.SoftClassDataBinding
// 0x0028 (0x0058 - 0x0030)
struct FSoftClassDataBinding final : public FClassContainerDataBinding
{
public:
	TSoftClassPtr<class UClass>                   m_DefaultValue;                                    // 0x0030(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSoftClassDataBinding;

// ScriptStruct SCCore.SCUserEnumSetting
// 0x0048 (0x0048 - 0x0000)
struct FSCUserEnumSetting final
{
public:
	struct FSoftObjectPath                        m_Enum;                                            // 0x0000(0x0020)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   m_Bindings;                                        // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCUserEnumSetting;

// ScriptStruct SCCore.BaseActorConditionInstance
// 0x0010 (0x0010 - 0x0000)
struct FBaseActorConditionInstance final
{
public:
	TSubclassOf<class UBaseActorCondition>        m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseActorCondition*                    m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBaseActorConditionInstance;

// ScriptStruct SCCore.NameDataBinding
// 0x0008 (0x0030 - 0x0028)
struct FNameDataBinding final : public FBaseDataBinding
{
public:
	class FName                                   m_DefaultValue;                                    // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNameDataBinding;

// ScriptStruct SCCore.TargetIKComputation
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FTargetIKComputation
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTargetIKComputation;

// ScriptStruct SCCore.BoneToLocationIKComputation
// 0x0138 (0x0140 - 0x0008)
struct FBoneToLocationIKComputation final : public FTargetIKComputation
{
public:
	bool                                          m_bUseMotionWarpingTargetBone;                     // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNameDataBinding                       m_TargetBoneName;                                  // 0x0010(0x0030)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bUseAnimInstanceMirrorDataTable;                 // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMirrorDataTable*                       m_MirrorDataTable;                                 // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bSwitchBoneOnMirror;                             // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatDataBinding                      m_fTimeOffset;                                     // 0x0058(0x0048)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bUseStartTime;                                   // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_NamedTimeTag;                                    // 0x00A4(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAnimNotify>                m_TargetNotify;                                    // 0x00B0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimNotifyState>           m_TargetNotifyState;                               // 0x00B8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fNotifyStateRatio;                               // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatDataBinding                      m_fAnimRatio;                                      // 0x00C8(0x0048)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bForceWorldLocation;                             // 0x0110(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vWorldLocation;                                  // 0x0118(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScriptStruct*                          m_TargetDataStruct;                                // 0x0130(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_NamedVectorTag;                                  // 0x0138(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBoneToLocationIKComputation;

// ScriptStruct SCCore.SCBinderTargetData
// 0x0020 (0x0030 - 0x0010)
struct FSCBinderTargetData : public FSCGameplayAbilityTargetData
{
public:
	struct FGameplayTag                           m_BinderType;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vActionPosition;                                 // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCBinderTargetData;

// ScriptStruct SCCore.WidgetPoolElement
// 0x0010 (0x0010 - 0x0000)
struct FWidgetPoolElement final
{
public:
	class USCUserWidget*                          m_Widget;                                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWidgetPoolElement;

// ScriptStruct SCCore.ManifestItem
// 0x0004 (0x0004 - 0x0000)
struct FManifestItem final
{
public:
	int32                                         m_iID;                                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FManifestItem;

// ScriptStruct SCCore.TargetDataManifestInstance
// 0x0010 (0x0010 - 0x0000)
struct FTargetDataManifestInstance final
{
public:
	TSubclassOf<class UObject>                    m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTargetDataManifest*                    m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTargetDataManifestInstance;

// ScriptStruct SCCore.TargetDataTypeFilter
// 0x0030 (0x0030 - 0x0000)
struct FTargetDataTypeFilter final
{
public:
	TArray<class UScriptStruct*>                  m_TargetData;                                      // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FManifestItem>                  m_ManifestItems;                                   // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTargetDataManifestInstance            m_Manifest;                                        // 0x0020(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTargetDataTypeFilter;

// ScriptStruct SCCore.MontagePlayerRedirectionInstance
// 0x0010 (0x0010 - 0x0000)
struct FMontagePlayerRedirectionInstance final
{
public:
	TSubclassOf<class UMontagePlayerRedirection>  m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMontagePlayerRedirection*              m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMontagePlayerRedirectionInstance;

// ScriptStruct SCCore.MovieSceneBinkMediaSectionParams
// 0x0128 (0x0128 - 0x0000)
struct FMovieSceneBinkMediaSectionParams final
{
public:
	class UBinkMediaTexture*                      MediaTexture;                                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           SectionStartFrame;                                 // 0x0008(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           SectionEndFrame;                                   // 0x000C(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLooping;                                          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameNumber                           StartFrameOffset;                                  // 0x0014(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovieSceneFloatChannel                ProxyTextureBlend;                                 // 0x0018(0x0110)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMovieSceneBinkMediaSectionParams;

// ScriptStruct SCCore.MovieSceneBinkMediaSectionTemplate
// 0x0130 (0x0150 - 0x0020)
struct FMovieSceneBinkMediaSectionTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieSceneBinkMediaSectionParams      Params;                                            // 0x0020(0x0128)(NativeAccessSpecifierPrivate)
	class UMovieSceneBinkMediaSection*            MediaSection;                                      // 0x0148(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMovieSceneBinkMediaSectionTemplate;

// ScriptStruct SCCore.BasicMontagePlayerContext
// 0x0030 (0x0058 - 0x0028)
struct FBasicMontagePlayerContext final : public FCustomMontagePlayerContext
{
public:
	struct FGameplayAbilityTargetDataHandle       m_Context;                                         // 0x0028(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UBasicMontagePlayerConfiguration*       m_Configuration;                                   // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBasicMontagePlayerContext;

// ScriptStruct SCCore.CaptureInputResult
// 0x0010 (0x0010 - 0x0000)
struct FCaptureInputResult final
{
public:
	TArray<struct FInputMappingKeySlot>           m_Slots;                                           // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCaptureInputResult;

// ScriptStruct SCCore.WeightedSlotAnimSequencePlayInfos
// 0x0010 (0x0140 - 0x0130)
struct FWeightedSlotAnimSequencePlayInfos final : public FSlotAnimSequencePlayInfos
{
public:
	float                                         m_fWeight;                                         // 0x0130(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_134[0xC];                                      // 0x0134(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeightedSlotAnimSequencePlayInfos;

// ScriptStruct SCCore.CombinationInput
// 0x0010 (0x0010 - 0x0000)
struct FCombinationInput final
{
public:
	TSubclassOf<class UInputConditionData>        m_Input;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLifeSpan;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bRegisterPressTimeOnStack;                       // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bRemovePressedTimeFromTimeLeft;                  // 0x000D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCombinationInput;

// ScriptStruct SCCore.MovieSceneLightingChannelSectionTemplate
// 0x0330 (0x0350 - 0x0020)
struct FMovieSceneLightingChannelSectionTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieScenePropertySectionData         PropertyData;                                      // 0x0020(0x0018)(NativeAccessSpecifierPrivate)
	struct FMovieSceneBoolChannel                 Channels[0x3];                                     // 0x0038(0x0108)(NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMovieSceneLightingChannelSectionTemplate;

// ScriptStruct SCCore.TextDataBinding
// 0x0010 (0x0038 - 0x0028)
struct FTextDataBinding final : public FBaseDataBinding
{
public:
	class FText                                   m_DefaultValue;                                    // 0x0028(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTextDataBinding;

// ScriptStruct SCCore.BaseStructDataBinding
// 0x0000 (0x0028 - 0x0028)
struct FBaseStructDataBinding : public FBaseDataBinding
{
};
DUMPER7_ASSERTS_FBaseStructDataBinding;

// ScriptStruct SCCore.SCCodeDrivenTransitionSettingsPerSpeedState
// 0x0020 (0x0020 - 0x0000)
struct FSCCodeDrivenTransitionSettingsPerSpeedState final
{
public:
	class USCCodeDrivenTransitionDataAsset*       m_TaskSettings[0x4];                               // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCodeDrivenTransitionSettingsPerSpeedState;

// ScriptStruct SCCore.LinearColorDataBinding
// 0x0010 (0x0038 - 0x0028)
struct FLinearColorDataBinding final : public FBaseStructDataBinding
{
public:
	struct FLinearColor                           m_DefaultValue;                                    // 0x0028(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLinearColorDataBinding;

// ScriptStruct SCCore.EnumDataBinding
// 0x0010 (0x0038 - 0x0028)
struct FEnumDataBinding final : public FBaseDataBinding
{
public:
	class UEnum*                                  m_Enum;                                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         m_DefaultValue;                                    // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FEnumDataBinding;

// ScriptStruct SCCore.SCCodeDrivenTransitionSettings
// 0x0010 (0x0010 - 0x0000)
struct FSCCodeDrivenTransitionSettings final
{
public:
	class UCurveFloat*                            m_SpeedDynamic;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDuration;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCCodeDrivenTransitionSettings;

// ScriptStruct SCCore.GameplayTagDataBinding
// 0x0008 (0x0030 - 0x0028)
struct FGameplayTagDataBinding final : public FBaseStructDataBinding
{
public:
	struct FGameplayTag                           m_DefaultValue;                                    // 0x0028(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGameplayTagDataBinding;

// ScriptStruct SCCore.GameplayTagContainerDataBinding
// 0x0020 (0x0048 - 0x0028)
struct FGameplayTagContainerDataBinding final : public FBaseStructDataBinding
{
public:
	struct FGameplayTagContainer                  m_DefaultValue;                                    // 0x0028(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGameplayTagContainerDataBinding;

// ScriptStruct SCCore.MovieSceneGameplayTagData
// 0x00B0 (0x0100 - 0x0050)
struct FMovieSceneGameplayTagData final : public FMovieSceneChannel
{
public:
	TArray<struct FFrameNumber>                   KeyTimes;                                          // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           DefaultValue;                                      // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGameplayTag>                   KeyValues;                                         // 0x0068(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FMovieSceneKeyHandleMap                KeyHandles;                                        // 0x0078(0x0088)(Transient, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMovieSceneGameplayTagData;

// ScriptStruct SCCore.MovieSceneGameplayTagSectionTemplate
// 0x0118 (0x0138 - 0x0020)
struct FMovieSceneGameplayTagSectionTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieScenePropertySectionData         PropertyData;                                      // 0x0020(0x0018)(NativeAccessSpecifierPrivate)
	struct FMovieSceneGameplayTagData             GameplayTagData;                                   // 0x0038(0x0100)(NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMovieSceneGameplayTagSectionTemplate;

// ScriptStruct SCCore.QuatNetSerializedCompressed
// 0x0000 (0x0020 - 0x0020)
struct FQuatNetSerializedCompressed final : public FQuat
{
};
DUMPER7_ASSERTS_FQuatNetSerializedCompressed;

// ScriptStruct SCCore.CompressedPoseSnapshot
// 0x0040 (0x0040 - 0x0000)
struct FCompressedPoseSnapshot final
{
public:
	TArray<uint8>                                 m_BoneFlags;                                       // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FVector_NetQuantize10>          m_Translations;                                    // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FQuatNetSerializedCompressed>   m_Rotations;                                       // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FVector_NetQuantize10>          m_Scales;                                          // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FCompressedPoseSnapshot;

// ScriptStruct SCCore.SCCodeDrivenTransitionPerRotationSettings
// 0x0050 (0x0050 - 0x0000)
struct FSCCodeDrivenTransitionPerRotationSettings final
{
public:
	TMap<ETransitionRotation, struct FSCCodeDrivenTransitionSettings> m_SettingsPerCardinalRotation; // 0x0000(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCodeDrivenTransitionPerRotationSettings;

// ScriptStruct SCCore.SCCodeDrivenTransitionPerOrientationSettings
// 0x0060 (0x0060 - 0x0000)
struct FSCCodeDrivenTransitionPerOrientationSettings final
{
public:
	struct FSCCodeDrivenTransitionSettings        m_DefaultSettings;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TMap<ESCCardinalPoints, struct FSCCodeDrivenTransitionPerRotationSettings> m_SettingsOverridePerInitialCardinal; // 0x0010(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCodeDrivenTransitionPerOrientationSettings;

// ScriptStruct SCCore.ControllerAxisTypeIcons
// 0x0140 (0x0140 - 0x0000)
struct FControllerAxisTypeIcons final
{
public:
	TSoftObjectPtr<class UTexture2D>              m_AxisTypeIcons[0x8];                              // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FControllerAxisTypeIcons;

// ScriptStruct SCCore.ControllerIconStyle
// 0x0000 (0x0050 - 0x0050)
struct FControllerIconStyle final : public FSCUserDefinedEnumHandler
{
};
DUMPER7_ASSERTS_FControllerIconStyle;

// ScriptStruct SCCore.ControllerAxisIcons
// 0x0078 (0x0078 - 0x0000)
struct FControllerAxisIcons final
{
public:
	TArray<struct FKey>                           m_Keys;                                            // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FControllerIconStyle, struct FControllerAxisTypeIcons> m_IconPerStyle;               // 0x0010(0x0050)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bShowText;                                       // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_ReplacementText;                                 // 0x0068(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FControllerAxisIcons;

// ScriptStruct SCCore.CameraFetchValueDescription
// 0x0008 (0x0008 - 0x0000)
struct FCameraFetchValueDescription final
{
public:
	EAxis                                         m_eAxisToUse;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMultiplier;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCameraFetchValueDescription;

// ScriptStruct SCCore.ControllerKeyIcons
// 0x0068 (0x0068 - 0x0000)
struct FControllerKeyIcons final
{
public:
	TMap<struct FControllerIconStyle, TSoftObjectPtr<class UTexture2D>> m_IconPerStyle;              // 0x0000(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          m_bShowText;                                       // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_ReplacementText;                                 // 0x0058(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FControllerKeyIcons;

// ScriptStruct SCCore.ControllerIcons
// 0x0080 (0x0080 - 0x0000)
struct FControllerIcons final
{
public:
	TArray<class FName>                           m_Controllers;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<EPlatform>                             m_Platforms;                                       // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FKey, struct FControllerKeyIcons> m_KeyIcon;                                         // 0x0020(0x0050)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FControllerAxisIcons>           m_AxisIcons;                                       // 0x0070(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FControllerIcons;

// ScriptStruct SCCore.AttributeDataTableBinding
// 0x0080 (0x0080 - 0x0000)
struct FAttributeDataTableBinding final
{
public:
	struct FGameplayAttribute                     m_Attribute;                                       // 0x0000(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatDataBinding                      m_Binding;                                         // 0x0038(0x0048)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAttributeDataTableBinding;

// ScriptStruct SCCore.RigVMFunction_ToOrientationQuat
// 0x0038 (0x0040 - 0x0008)
struct FRigVMFunction_ToOrientationQuat final : public FRigVMFunction_MathVectorBase
{
public:
	struct FVector                                Value;                                             // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  Result;                                            // 0x0020(0x0020)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigVMFunction_ToOrientationQuat;

// ScriptStruct SCCore.RigVMFunction_ToForwardVector
// 0x0048 (0x0050 - 0x0008)
struct FRigVMFunction_ToForwardVector final : public FRigVMFunction_MathVectorBase
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Value;                                             // 0x0010(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Result;                                            // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRigVMFunction_ToForwardVector;

// ScriptStruct SCCore.SCCollisionResponseTemplate
// 0x0023 (0x0023 - 0x0000)
struct FSCCollisionResponseTemplate final
{
public:
	ECollisionEnabled                             m_eCollisionEnabled;                               // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EObjectTypeQuery                              m_eObjectType;                                     // 0x0001(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             m_eCollisionType;                                  // 0x0002(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCollisionResponseContainer            m_ResponseToChannels;                              // 0x0003(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCollisionResponseTemplate;

// ScriptStruct SCCore.SCCollisionResponsePreset
// 0x0030 (0x0030 - 0x0000)
struct FSCCollisionResponsePreset final
{
public:
	bool                                          m_bUseProfile;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseDefaultProfile;                              // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCollisionProfileName                  m_Profile;                                         // 0x0004(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FSCCollisionResponseTemplate           m_Template;                                        // 0x000C(0x0023)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCCollisionResponsePreset;

// ScriptStruct SCCore.ControlRigAnimSequenceReferenceSample
// 0x0018 (0x0018 - 0x0000)
struct FControlRigAnimSequenceReferenceSample final
{
public:
	struct FFloatRange                            m_TimeRange;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          m_Sequence;                                        // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FControlRigAnimSequenceReferenceSample;

// ScriptStruct SCCore.RigUnit_SampleAnimSequence
// 0x0050 (0x0220 - 0x01D0)
struct FRigUnit_SampleAnimSequence final : public FRigUnitMutable
{
public:
	class FName                                   UserDataAnimSequence;                              // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Mirror;                                            // 0x01D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseTime;                                           // 0x01D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x01DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Alpha;                                             // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendWeight;                                       // 0x01E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRigElementKey>                 AnimSequenceBones;                                 // 0x01E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRigElementKey>                 ItemsToApply;                                      // 0x01F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 m_BoneIndices;                                     // 0x0208(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_218[0x8];                                      // 0x0218(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRigUnit_SampleAnimSequence;

// ScriptStruct SCCore.SCPendingMoveDirectionContainer
// 0x0010 (0x0120 - 0x0110)
struct FSCPendingMoveDirectionContainer final : public FFastArraySerializer
{
public:
	TArray<struct FSCPendingMoveDirection>        m_Entries;                                         // 0x0110(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCPendingMoveDirectionContainer;

// ScriptStruct SCCore.RigUnit_ToRigSpace_Vector
// 0x0030 (0x0038 - 0x0008)
struct FRigUnit_ToRigSpace_Vector final : public FRigUnit
{
public:
	struct FVector                                Value;                                             // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Global;                                            // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigUnit_ToRigSpace_Vector;

// ScriptStruct SCCore.RigUnit_ToWorldSpace_Vector
// 0x0030 (0x0038 - 0x0008)
struct FRigUnit_ToWorldSpace_Vector final : public FRigUnit
{
public:
	struct FVector                                Value;                                             // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                World;                                             // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigUnit_ToWorldSpace_Vector;

// ScriptStruct SCCore.TargetingResultMeta
// 0x0028 (0x0038 - 0x0010)
struct FTargetingResultMeta final : public FSCGameplayAbilityTargetData
{
public:
	struct FGameplayTagContainer                  m_Tags;                                            // 0x0010(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         m_fScoreWeight;                                    // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTargetingResultMeta;

// ScriptStruct SCCore.RigUnit_AngularDistance
// 0x0058 (0x0060 - 0x0008)
struct FRigUnit_AngularDistance final : public FRigUnit
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Value1;                                            // 0x0010(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  Value2;                                            // 0x0030(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Result;                                            // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRigUnit_AngularDistance;

// ScriptStruct SCCore.RigUnit_AngularDistanceAxis
// 0x0068 (0x0070 - 0x0008)
struct FRigUnit_AngularDistanceAxis final : public FRigUnit
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Value1;                                            // 0x0010(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  Value2;                                            // 0x0030(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Axis;                                              // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Result;                                            // 0x0068(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRigUnit_AngularDistanceAxis;

// ScriptStruct SCCore.ActorsPoolConfig
// 0x0038 (0x0038 - 0x0000)
struct FActorsPoolConfig final
{
public:
	class FName                                   m_Name;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   m_Class;                                           // 0x0008(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iSize;                                           // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FActorsPoolConfig;

// ScriptStruct SCCore.RigVMFunction_AnimEvalVectorCurve
// 0x0208 (0x0210 - 0x0008)
struct FRigVMFunction_AnimEvalVectorCurve final : public FRigVMStruct
{
public:
	float                                         Value;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeVectorCurve                    Curve;                                             // 0x0010(0x0188)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                                SourceMinimum;                                     // 0x0198(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SourceMaximum;                                     // 0x01B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetMinimum;                                     // 0x01C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetMaximum;                                     // 0x01E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Result;                                            // 0x01F8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigVMFunction_AnimEvalVectorCurve;

// ScriptStruct SCCore.RigVMFunction_FindBestSurface
// 0x00A0 (0x00A8 - 0x0008)
struct FRigVMFunction_FindBestSurface final : public FRigVMStruct
{
public:
	float                                         ResultVerticalDelta;                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ResultUpVector;                                    // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAngle;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxVerticalDelta;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Center;                                            // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RaycastHitUpLeft;                                  // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RaycastHitUpRight;                                 // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RaycastHitDownRight;                               // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RaycastHitDownLeft;                                // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigVMFunction_FindBestSurface;

// ScriptStruct SCCore.RigUnit_MakeRelativeDir
// 0x0058 (0x0060 - 0x0008)
struct FRigUnit_MakeRelativeDir final : public FRigUnit
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Quat;                                              // 0x0010(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Dir;                                               // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Result;                                            // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigUnit_MakeRelativeDir;

// ScriptStruct SCCore.SCGameplayAbilitySpecConfigSoftRef
// 0x0068 (0x0068 - 0x0000)
struct FSCGameplayAbilitySpecConfigSoftRef final
{
public:
	TSoftClassPtr<class UClass>                   m_AbilitySoftRef;                                  // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                         LevelScalableFloat;                                // 0x0028(0x0038)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         InputID;                                           // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGameplayEffectGrantedAbilityRemovePolicy     RemovalPolicy;                                     // 0x0064(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCGameplayAbilitySpecConfigSoftRef;

// ScriptStruct SCCore.RigUnit_ProjectAxis
// 0x0078 (0x0080 - 0x0008)
struct FRigUnit_ProjectAxis final : public FRigUnit
{
public:
	struct FVector                                FromAxis;                                          // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ToAxis;                                            // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Quat;                                              // 0x0040(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  Result;                                            // 0x0060(0x0020)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigUnit_ProjectAxis;

// ScriptStruct SCCore.RigUnit_MakeQuatFromAxis
// 0x0068 (0x0070 - 0x0008)
struct FRigUnit_MakeQuatFromAxis final : public FRigUnit
{
public:
	EAxis                                         m_eAxis1;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vAxisValue1;                                     // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAxis                                         m_eAxis2;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vAxisValue2;                                     // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Result;                                            // 0x0050(0x0020)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigUnit_MakeQuatFromAxis;

// ScriptStruct SCCore.SCActorDebugCategoriesFilter
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x08) FSCActorDebugCategoriesFilter final
{
public:
	uint8                                         Pad_0[0x48];                                       // 0x0000(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCActorDebugCategoriesFilter;

// ScriptStruct SCCore.RigUnit_AdvanceSpineControls
// 0x0040 (0x0210 - 0x01D0)
struct FRigUnit_AdvanceSpineControls final : public FRigUnitMutable
{
public:
	TArray<struct FPBIKEffector>                  m_Effectors;                                       // 0x01D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   m_GroundMetadataName;                              // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vPreviousLocation;                               // 0x01E8(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsInitialized;                                  // 0x0200(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_201[0xF];                                      // 0x0201(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRigUnit_AdvanceSpineControls;

// ScriptStruct SCCore.CachedBoneInfosForBoneMatching
// 0x00D0 (0x00D0 - 0x0000)
struct FCachedBoneInfosForBoneMatching final
{
public:
	struct FTransform                             m_BoneTransform;                                   // 0x0000(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vBoneDir;                                        // 0x0060(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vBoneVelocity;                                   // 0x0078(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fBoneSpeed;                                      // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0xC];                                       // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  m_qBoneVelocityOrientation;                        // 0x00A0(0x0020)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fAnimRatio;                                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCachedBoneInfosForBoneMatching;

// ScriptStruct SCCore.RigUnit_ReassignItemsLocationToDir
// 0x0040 (0x0210 - 0x01D0)
struct FRigUnit_ReassignItemsLocationToDir final : public FRigUnitMutable
{
public:
	struct FVector                                Velocity;                                          // 0x01D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRigElementKey>                 Elements;                                          // 0x01E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRigElementKey>                 TargetElements;                                    // 0x01F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_208[0x8];                                      // 0x0208(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRigUnit_ReassignItemsLocationToDir;

// ScriptStruct SCCore.TrailIKEffector
// 0x0014 (0x0014 - 0x0000)
struct FTrailIKEffector final
{
public:
	struct FRigElementKey                         m_Element;                                         // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fZEulerLimit;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fYEulerLimit;                                    // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTrailIKEffector;

// ScriptStruct SCCore.RigVMFunction_ScaleChainPosition
// 0x0040 (0x0210 - 0x01D0)
struct FRigVMFunction_ScaleChainPosition final : public FRigUnitMutable
{
public:
	struct FRigElementKeyCollection               Items;                                             // 0x01D0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Axis;                                              // 0x01E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x01F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              m_CachedIndexes;                                   // 0x0200(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigVMFunction_ScaleChainPosition;

// ScriptStruct SCCore.RigUnit_TrailIK
// 0x0030 (0x0200 - 0x01D0)
struct FRigUnit_TrailIK final : public FRigUnitMutable
{
public:
	TArray<struct FTrailIKEffector>               m_Effectors;                                       // 0x01D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bDrawDebug;                                        // 0x01E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 m_EffectorSolverIndices;                           // 0x01E8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRigUnit_TrailIK;

// ScriptStruct SCCore.CustomWidgetNavigationData
// 0x0001 (0x0001 - 0x0000)
struct FCustomWidgetNavigationData final
{
public:
	bool                                          m_bAnalogNavigation;                               // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCustomWidgetNavigationData;

// ScriptStruct SCCore.FloatHistoryGraphStyle
// 0x0024 (0x0024 - 0x0000)
struct FFloatHistoryGraphStyle final
{
public:
	float                                         m_fBackgroundMarginSize;                           // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_BackgroundColor;                                 // 0x0004(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_BordersColor;                                    // 0x0014(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFloatHistoryGraphStyle;

// ScriptStruct SCCore.FloatHistoryGraphGridStyle
// 0x0040 (0x0040 - 0x0000)
struct FFloatHistoryGraphGridStyle final
{
public:
	float                                         m_fWidth;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fHeight;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   m_CurveColors;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFloatHistoryGraphStyle                m_Style;                                           // 0x0018(0x0024)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFloatHistoryGraphGridStyle;

// ScriptStruct SCCore.SCAngleRange
// 0x0008 (0x0008 - 0x0000)
struct FSCAngleRange final
{
public:
	float                                         m_fMinAngle;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fAngleSize;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAngleRange;

// ScriptStruct SCCore.GameplayAbilityTargetData_BlendParams
// 0x0010 (0x0018 - 0x0008)
struct FGameplayAbilityTargetData_BlendParams final : public FGameplayAbilityTargetData
{
public:
	float                                         m_fDuration;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UCurveFloat>             m_DynamicByTimeRatio;                              // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGameplayAbilityTargetData_BlendParams;

// ScriptStruct SCCore.SCAnimInstanceRef
// 0x0010 (0x0010 - 0x0000)
struct FSCAnimInstanceRef final
{
public:
	class USCAnimInstanceBase*                    m_AnimInstance;                                    // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_Name;                                            // 0x0008(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAnimInstanceRef;

// ScriptStruct SCCore.GameplayAbilityTargetData_Direction
// 0x0018 (0x0030 - 0x0018)
struct FGameplayAbilityTargetData_Direction final : public FSCGameplayAbilitySingleTargetData
{
public:
	struct FVector                                m_vDirection;                                      // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGameplayAbilityTargetData_Direction;

// ScriptStruct SCCore.GameplayAbilityTargetData_Locomotion
// 0x0008 (0x0018 - 0x0010)
struct FGameplayAbilityTargetData_Locomotion final : public FSCGameplayAbilityTargetData
{
public:
	ESCCharacterSpeedState                        m_eSpeedState;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGameplayAbilityTargetData_Locomotion;

// ScriptStruct SCCore.CachedMontageInfosForBoneMatching
// 0x0058 (0x0058 - 0x0000)
struct FCachedMontageInfosForBoneMatching final
{
public:
	float                                         m_fAnimRatio;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FCachedBoneInfosForBoneMatching> m_BoneToInfos;                         // 0x0008(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCachedMontageInfosForBoneMatching;

// ScriptStruct SCCore.CachedMontageArrayInfosForBoneMatching
// 0x0020 (0x0020 - 0x0000)
struct FCachedMontageArrayInfosForBoneMatching final
{
public:
	TArray<struct FCachedMontageInfosForBoneMatching> m_Array;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCachedMontageInfosForBoneMatching> m_MirroredArray;                               // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCachedMontageArrayInfosForBoneMatching;

// ScriptStruct SCCore.AnimSequencePickerPerCondition
// 0x0050 (0x0050 - 0x0000)
struct FAnimSequencePickerPerCondition final
{
public:
	bool                                          m_bConditionOnAnimation;                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FManifestItem                          m_ConditionOnManifestItem;                         // 0x0004(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0008(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAnimSequencePickerInstance            m_AnimSequencePicker;                              // 0x0018(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAnimSequencePickerPerCondition;

// ScriptStruct SCCore.TargetHeightAnimSequencePicker_PickerPerHeight
// 0x0048 (0x0048 - 0x0000)
struct FTargetHeightAnimSequencePicker_PickerPerHeight final
{
public:
	struct FFloatRange                            m_HeightRange;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimSequencePickerInstance            m_AnimSequencePicker;                              // 0x0010(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTargetHeightAnimSequencePicker_PickerPerHeight;

// ScriptStruct SCCore.ScaleSpeedCurveData
// 0x0098 (0x0098 - 0x0000)
struct FScaleSpeedCurveData final
{
public:
	bool                                          m_bConvertToPercent;                               // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseCharacterVelocityAsEntryValue;               // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bKeepEntryValueAsVelocity;                       // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDefaultValue;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_CurveToApply;                                    // 0x0008(0x0088)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bForcedExitValue;                                // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fExitHorizontalValue;                            // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FScaleSpeedCurveData;

// ScriptStruct SCCore.ConditionalSpeedCurveData
// 0x0158 (0x0158 - 0x0000)
struct FConditionalSpeedCurveData final
{
public:
	EOperationType                                m_eOperation;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fVelocity;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCheckDirectionBetweenVelocityAndAnimDir;        // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            m_AngleRange;                                      // 0x000C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScaleSpeedCurveData                   m_HorizontalData;                                  // 0x0020(0x0098)(Edit, NativeAccessSpecifierPublic)
	struct FScaleSpeedCurveData                   m_VerticalData;                                    // 0x00B8(0x0098)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bCheckSprintingTag;                              // 0x0150(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCharacterIsSprinting;                           // 0x0151(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FConditionalSpeedCurveData;

// ScriptStruct SCCore.CardinalAnimSequenceData
// 0x0058 (0x0058 - 0x0000)
struct FCardinalAnimSequenceData final
{
public:
	ESCAdvancedCardinalPoints                     m_eCardinalFallback;                               // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESCAdvancedCardinalPoints, struct FAnimSequencePickerInstance> m_PickerPerCardinal;         // 0x0008(0x0050)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCardinalAnimSequenceData;

// ScriptStruct SCCore.AngleAnimationPicker_PickerPerAngleRange
// 0x0080 (0x0080 - 0x0000)
struct FAngleAnimationPicker_PickerPerAngleRange final
{
public:
	float                                         m_fStartAngle;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fEndAngle;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimSequencePickerInstance            m_AnimationPicker;                                 // 0x0008(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bMirrorNegativeValue;                            // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePickerInstance            m_MirrorNegativeAnimationPicker;                   // 0x0048(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAngleAnimationPicker_PickerPerAngleRange;

// ScriptStruct SCCore.InputAngleAnimationPickerData
// 0x0040 (0x0040 - 0x0000)
struct FInputAngleAnimationPickerData final
{
public:
	float                                         m_fRange;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSequencePickerInstance            m_AnimationPicker;                                 // 0x0008(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputAngleAnimationPickerData;

// ScriptStruct SCCore.LayerToBoneMask
// 0x0010 (0x0010 - 0x0000)
struct FLayerToBoneMask final
{
public:
	struct FAnimSlotName                          m_SlotName;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendProfile*                          m_BlendMask;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLayerToBoneMask;

// ScriptStruct SCCore.InstancedStructTargetDataManifestMeta
// 0x0008 (0x0020 - 0x0018)
struct FInstancedStructTargetDataManifestMeta final : public FNamedTargetDataManifestMeta
{
public:
	class UScriptStruct*                          m_Struct;                                          // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInstancedStructTargetDataManifestMeta;

// ScriptStruct SCCore.InlineEnumHandler
// 0x0008 (0x0058 - 0x0050)
struct FInlineEnumHandler final : public FSCUserDefinedEnumHandler
{
public:
	class UEnum*                                  m_Enum;                                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInlineEnumHandler;

// ScriptStruct SCCore.NamedEnumTargetData
// 0x0058 (0x0070 - 0x0018)
struct FNamedEnumTargetData final : public FNamedTargetData
{
public:
	struct FInlineEnumHandler                     m_Enum;                                            // 0x0018(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedEnumTargetData;

// ScriptStruct SCCore.NamedEnumTargetDataManifestMeta
// 0x0008 (0x0020 - 0x0018)
struct FNamedEnumTargetDataManifestMeta final : public FNamedTargetDataManifestMeta
{
public:
	class UEnum*                                  m_Enum;                                            // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedEnumTargetDataManifestMeta;

// ScriptStruct SCCore.SCAnimNode_PoseSnapshot
// 0x0018 (0x0028 - 0x0010)
struct FSCAnimNode_PoseSnapshot final : public FAnimNode_Base
{
public:
	struct FPoseLink                              BasePose;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   m_SnapshotName;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAnimNode_PoseSnapshot;

// ScriptStruct SCCore.NamedClassTargetData
// 0x0008 (0x0020 - 0x0018)
struct FNamedClassTargetData final : public FNamedTargetData
{
public:
	TSubclassOf<class UObject>                    m_Value;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedClassTargetData;

// ScriptStruct SCCore.SCCameraRepulsionConfigElement
// 0x0048 (0x0048 - 0x0000)
struct FSCCameraRepulsionConfigElement final
{
public:
	TArray<struct FBaseActorConditionInstance>    m_Conditions;                                      // 0x0000(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FBaseActorTargetConditionInstance> m_ActorTargetConditions;                        // 0x0010(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_DeadZoneHidingAngleSizePerSafeZoneSizeFront;     // 0x0020(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_DeadZoneHidingAngleSizePerSafeZoneSizeBack;      // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_DeadZoneHidingSizeFactorPerDistanceToTargetFront; // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_DeadZoneHidingSizeFactorPerDistanceToTargetBack; // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            m_RepulsionSpringValuePerCameraRailCollisionRatio; // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCameraRepulsionConfigElement;

// ScriptStruct SCCore.SCCameraRepulsionConfig
// 0x0030 (0x0030 - 0x0000)
struct FSCCameraRepulsionConfig final
{
public:
	float                                         m_fRepulsionSleepTimerAfterManualCam;              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCCameraRepulsionConfigElement> m_RepulsionsElements;                             // 0x0008(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         m_FSCDeadZoneHidingTargetPositionSpringSpeed;      // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCollidingDeadZoneExtraAngleOffset;              // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fLookAtYawDampingValueThisFrameToDisableRepulsion; // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fCollisionRailRatioToActivateRepulsionFromCollidingDeadZone; // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseMergedDeadZonesWhenRepulsingFromOnlyHidingZone; // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCCameraRepulsionConfig;

// ScriptStruct SCCore.InstancedStructTargetData
// 0x0010 (0x0028 - 0x0018)
struct FInstancedStructTargetData final : public FNamedTargetData
{
public:
	struct FInstancedStruct                       m_Value;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInstancedStructTargetData;

// ScriptStruct SCCore.ActiveGameplayTargetData
// 0x0008 (0x0018 - 0x0010)
struct FActiveGameplayTargetData final : public FSCGameplayAbilityTargetData
{
public:
	struct FActiveGameplayEffectHandle            m_Value;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FActiveGameplayTargetData;

// ScriptStruct SCCore.NamedIntegerTargetData
// 0x0008 (0x0020 - 0x0018)
struct FNamedIntegerTargetData final : public FNamedTargetData
{
public:
	int32                                         m_iValue;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FNamedIntegerTargetData;

// ScriptStruct SCCore.SCAnimNode_SwapBones_Limb
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FSCAnimNode_SwapBones_Limb final
{
public:
	struct FBoneReference                         m_RootBone;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x20];                                      // 0x0010(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCAnimNode_SwapBones_Limb;

// ScriptStruct SCCore.SCAnimNode_CyclicSwapBones
// 0x0078 (0x0088 - 0x0010)
struct FSCAnimNode_CyclicSwapBones final : public FAnimNode_Base
{
public:
	struct FBoneReference                         m_PelvisBone;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         m_RootBone;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPoseLink                              BasePose;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           m_CurveSuffixes;                                   // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          m_bLockRotation;                                   // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAngle;                                          // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fBlendDuration;                                  // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x1C];                                      // 0x005C(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCAnimNode_SwapBones_Limb>     m_Limbs;                                           // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAnimNode_CyclicSwapBones;

// ScriptStruct SCCore.NamedFloatTargetData
// 0x0008 (0x0020 - 0x0018)
struct FNamedFloatTargetData final : public FNamedTargetData
{
public:
	float                                         m_fValue;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FNamedFloatTargetData;

// ScriptStruct SCCore.NamedVectorQuantTargetData
// 0x0018 (0x0030 - 0x0018)
struct FNamedVectorQuantTargetData : public FNamedTargetData
{
public:
	struct FVector                                m_vValue;                                          // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedVectorQuantTargetData;

// ScriptStruct SCCore.SCCameraMirrorManagementConfig
// 0x0030 (0x0030 - 0x0000)
struct FSCCameraMirrorManagementConfig final
{
public:
	ESCCameraMirrorManagementType                 m_eMirrorType;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        m_dTargetValue;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        m_dSpringSpeed;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bInstantSpring;                                  // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCBlendType                                  m_eBlenderBlendType;                               // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_BlenderCustomCurve;                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fBlenderDuration;                                // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCCameraMirrorManagementConfig;

// ScriptStruct SCCore.NamedVectorNormalizedTargetData
// 0x0000 (0x0030 - 0x0030)
struct FNamedVectorNormalizedTargetData final : public FNamedVectorQuantTargetData
{
};
DUMPER7_ASSERTS_FNamedVectorNormalizedTargetData;

// ScriptStruct SCCore.DataTableRowTargetDataManifestMeta
// 0x0010 (0x0028 - 0x0018)
struct FDataTableRowTargetDataManifestMeta final : public FNamedTargetDataManifestMeta
{
public:
	class UDataTable*                             m_DataTable;                                       // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bHideDatatablePin;                               // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDataTableRowTargetDataManifestMeta;

// ScriptStruct SCCore.NamedActorTargetData
// 0x0008 (0x0020 - 0x0018)
struct FNamedActorTargetData final : public FNamedTargetData
{
public:
	class AActor*                                 m_Actor;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedActorTargetData;

// ScriptStruct SCCore.SCCameraSafePointPlacement
// 0x001C (0x001C - 0x0000)
struct FSCCameraSafePointPlacement final
{
public:
	struct FFloatRange                            m_fSafePointDistRange;                             // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOrientateTowardsCamForward;                     // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseDeadZoneBissector;                           // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fSafeZoneAngleOffset;                            // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fBlendInTime;                                    // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCameraSafePointPlacement;

// ScriptStruct SCCore.NamedActorComponentTargetData
// 0x0008 (0x0020 - 0x0018)
struct FNamedActorComponentTargetData final : public FNamedTargetData
{
public:
	class UActorComponent*                        m_ActorComponent;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedActorComponentTargetData;

// ScriptStruct SCCore.CameraCollisionSideRaycast
// 0x0030 (0x0030 - 0x0000)
struct FCameraCollisionSideRaycast final
{
public:
	struct FVector                                m_vStartLocal;                                     // 0x0000(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vEndLocal;                                       // 0x0018(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCameraCollisionSideRaycast;

// ScriptStruct SCCore.CameraCollisionSideRaycastList
// 0x0010 (0x0010 - 0x0000)
struct FCameraCollisionSideRaycastList final
{
public:
	TArray<struct FCameraCollisionSideRaycast>    m_ListOfRayCast;                                   // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCameraCollisionSideRaycastList;

// ScriptStruct SCCore.NamedDataAssetTargetData
// 0x0008 (0x0020 - 0x0018)
struct FNamedDataAssetTargetData final : public FNamedTargetData
{
public:
	class UDataAsset*                             m_Asset;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedDataAssetTargetData;

// ScriptStruct SCCore.NamedQuatTargetData
// 0x0028 (0x0040 - 0x0018)
struct FNamedQuatTargetData final : public FNamedTargetData
{
public:
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  m_qValue;                                          // 0x0020(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedQuatTargetData;

// ScriptStruct SCCore.SCDeadZone
// 0x000C (0x000C - 0x0000)
struct FSCDeadZone final
{
public:
	struct FSCAngleRange                          m_AngleRange;                                      // 0x0000(0x0008)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fMinDistance;                                    // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCDeadZone;

// ScriptStruct SCCore.NamedStringTargetData
// 0x0010 (0x0028 - 0x0018)
struct FNamedStringTargetData final : public FNamedTargetData
{
public:
	class FString                                 m_Value;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedStringTargetData;

// ScriptStruct SCCore.NamedTransformTargetData
// 0x0068 (0x0080 - 0x0018)
struct FNamedTransformTargetData final : public FNamedTargetData
{
public:
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_Value;                                           // 0x0020(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedTransformTargetData;

// ScriptStruct SCCore.SCClassDescriptor
// 0x0090 (0x0090 - 0x0000)
struct alignas(0x08) FSCClassDescriptor final
{
public:
	uint8                                         Pad_0[0x90];                                       // 0x0000(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCClassDescriptor;

// ScriptStruct SCCore.ConditionalTargetDatasourceData
// 0x0058 (0x0058 - 0x0000)
struct FConditionalTargetDatasourceData final
{
public:
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0000(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetDatasourceInstance              m_Datasource;                                      // 0x0010(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FConditionalTargetDatasourceData;

// ScriptStruct SCCore.AbilityInputWatchTrigger
// 0x0290 (0x0290 - 0x0000)
struct FAbilityInputWatchTrigger final
{
public:
	struct FPredictionKey                         m_PredictionKey;                                   // 0x0000(0x0010)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNetSyncInfos                          m_NetSync;                                         // 0x0010(0x01D0)(NativeAccessSpecifierPublic)
	struct FReplicatedInputActionInfos            m_InputActionInfos;                                // 0x01E0(0x00B0)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAbilityInputWatchTrigger;

// ScriptStruct SCCore.AbilityInputWatchInfos
// 0x01F0 (0x01F0 - 0x0000)
struct FAbilityInputWatchInfos final
{
public:
	class USCInputAction*                         m_Input;                                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputWatchTrigger                            m_eTrigger;                                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAbilityInputWatchTrigger>      m_TriggerStack;                                    // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FNetSyncInfos                          m_NetSyncInfos;                                    // 0x0020(0x01D0)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAbilityInputWatchInfos;

// ScriptStruct SCCore.ReachableOnTimeTargetDatasourceBehavior
// 0x000C (0x000C - 0x0000)
struct FReachableOnTimeTargetDatasourceBehavior final
{
public:
	EFilterTargetDatasource_FailureBehavior       m_eBehavior;                                       // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           m_AssignTag;                                       // 0x0004(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FReachableOnTimeTargetDatasourceBehavior;

// ScriptStruct SCCore.PriorityTargetsPickerInfos
// 0x0058 (0x0058 - 0x0000)
struct FPriorityTargetsPickerInfos final
{
public:
	struct FTargetDatasourceInstance              m_DataSourceCustomizer;                            // 0x0000(0x0048)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetPickerInstance                  m_TargetPicker;                                    // 0x0048(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPriorityTargetsPickerInfos;

// ScriptStruct SCCore.SCCameraTargetPosition
// 0x0020 (0x0020 - 0x0000)
struct FSCCameraTargetPosition final
{
public:
	class AActor*                                 m_Actor;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vPreProcessedTargetPosition;                     // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCameraTargetPosition;

// ScriptStruct SCCore.ConditionTargetsPickerInfos
// 0x0020 (0x0020 - 0x0000)
struct FConditionTargetsPickerInfos final
{
public:
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0000(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTargetPickerInstance                  m_TargetPicker;                                    // 0x0010(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FConditionTargetsPickerInfos;

// ScriptStruct SCCore.SCBasicPawnBinding
// 0x0040 (0x0040 - 0x0000)
struct FSCBasicPawnBinding
{
public:
	struct FMovieSceneObjectBindingID             m_BindingId;                                       // 0x0000(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class APawn>                   m_ActorToBind;                                     // 0x0018(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCBasicPawnBinding;

// ScriptStruct SCCore.TargetWeightEvaluationInstance
// 0x0010 (0x0010 - 0x0000)
struct FTargetWeightEvaluationInstance final
{
public:
	TSubclassOf<class UTargetWeightEvaluation>    m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTargetWeightEvaluation*                m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTargetWeightEvaluationInstance;

// ScriptStruct SCCore.OperationTargetWeightElem
// 0x0018 (0x0018 - 0x0000)
struct FOperationTargetWeightElem final
{
public:
	struct FTargetWeightEvaluationInstance        m_SubOperation;                                    // 0x0000(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         m_fSubOperationWeight;                             // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FOperationTargetWeightElem;

// ScriptStruct SCCore.bool
// 0x0001 (0x0001 - 0x0000)
struct FBool final
{
public:
	bool                                          m_bBool;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBool;

// ScriptStruct SCCore.GroupInputConditionProxyPair
// 0x0001 (0x0001 - 0x0000)
struct FGroupInputConditionProxyPair final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGroupInputConditionProxyPair;

// ScriptStruct SCCore.SCImpostorReplicationInfos
// 0x00E0 (0x00E0 - 0x0000)
struct FSCImpostorReplicationInfos final
{
public:
	bool                                          m_bMirrorAnimation;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ASCCharacterImpostor>       m_Class;                                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>           m_ImpostorAnimation;                               // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>           m_SkeletalMesh;                                    // 0x0038(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPoseSnapshot                          m_PoseToMimic;                                     // 0x0060(0x0038)(NativeAccessSpecifierPublic)
	double                                        m_CheckPointTimeMS;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vLocation;                                       // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  m_qRotation;                                       // 0x00C0(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCImpostorReplicationInfos;

// ScriptStruct SCCore.CustomUIInfosPerSlot
// 0x0008 (0x0008 - 0x0000)
struct FCustomUIInfosPerSlot final
{
public:
	int32                                         m_iSlotIndex;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EControllerIconAxisTypes                      m_AxisTypes;                                       // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCustomUIInfosPerSlot;

// ScriptStruct SCCore.InputKeyMappingHandler
// 0x0030 (0x0030 - 0x0000)
struct FInputKeyMappingHandler final
{
public:
	struct FKey                                   m_Key;                                             // 0x0000(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_ActionName;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_AxisName;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bShift;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAlt;                                            // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCmd;                                            // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCtrl;                                           // 0x002B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fScale;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputKeyMappingHandler;

// ScriptStruct SCCore.InputMappingNode
// 0x0170 (0x0170 - 0x0000)
struct FInputMappingNode final
{
public:
	TSubclassOf<class UInputConditionData>        m_InputData;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputPresetsEnumHandler               m_Preset;                                          // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputKeyPresetsEnumHandler            m_KeyPresetID;                                     // 0x0058(0x0050)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputMappingKeySlot                   m_KeySlot;                                         // 0x00A8(0x00B8)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_160[0x10];                                     // 0x0160(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInputMappingNode;

// ScriptStruct SCCore.ColorExclusionConfiguration
// 0x0038 (0x0038 - 0x0000)
struct FColorExclusionConfiguration final
{
public:
	EColorExclusionType                           m_eColorExclusionType;                             // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDifferenceMinCoeff;                             // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vWeight;                                         // 0x0008(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fOptionalWeight;                                 // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bGammaCorrection;                                // 0x0024(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 m_CompositeWeights;                                // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FColorExclusionConfiguration;

// ScriptStruct SCCore.InputMappingTree
// 0x0050 (0x0050 - 0x0000)
struct FInputMappingTree final
{
public:
	TMap<class USCInputAction*, struct FInputMappingNode> m_NodePerAction;                           // 0x0000(0x0050)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputMappingTree;

// ScriptStruct SCCore.SCDebugConsoleVarSerialized
// 0x0040 (0x0040 - 0x0000)
struct FSCDebugConsoleVarSerialized final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_Name;                                            // 0x0008(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_Description;                                     // 0x0018(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_Category;                                        // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iValue;                                          // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCDebugConsoleVarSerialized;

// ScriptStruct SCCore.InputPriorityGroup
// 0x0050 (0x0050 - 0x0000)
struct FInputPriorityGroup final
{
public:
	TSet<TSoftClassPtr<class UClass>>             m_Data;                                            // 0x0000(0x0050)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputPriorityGroup;

// ScriptStruct SCCore.SCChannelCollisionResponse
// 0x0002 (0x0002 - 0x0000)
struct FSCChannelCollisionResponse final
{
public:
	ECollisionChannel                             m_eChannel;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionResponse                            m_eCollisionResponse;                              // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCChannelCollisionResponse;

// ScriptStruct SCCore.SCCollisionResponseBuilder
// 0x0018 (0x0018 - 0x0000)
struct FSCCollisionResponseBuilder final
{
public:
	ECollisionResponse                            m_eDefaultCollisionResponse;                       // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCChannelCollisionResponse>    m_eChannelResponses;                               // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCollisionResponseBuilder;

// ScriptStruct SCCore.RemappingClasses
// 0x0010 (0x0010 - 0x0000)
struct FRemappingClasses final
{
public:
	TArray<TSoftClassPtr<class UClass>>           m_Classes;                                         // 0x0000(0x0010)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRemappingClasses;

// ScriptStruct SCCore.RemappingIncompatibilityGroup
// 0x0018 (0x0018 - 0x0000)
struct FRemappingIncompatibilityGroup final
{
public:
	bool                                          m_bDetectChildCollisions;                          // 0x0000(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           m_Classes;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRemappingIncompatibilityGroup;

// ScriptStruct SCCore.SCDebugDisplayNodeStateSerialized
// 0x0014 (0x0014 - 0x0000)
struct FSCDebugDisplayNodeStateSerialized final
{
public:
	class FName                                   m_DisplayPath;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_Name;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEnabled;                                        // 0x0010(0x0001)(Edit, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCDebugDisplayNodeStateSerialized;

// ScriptStruct SCCore.InputMappingCompatibilityRule
// 0x0018 (0x0018 - 0x0000)
struct FInputMappingCompatibilityRule final
{
public:
	EInputMappingCompatibilityRuleType            m_eRule;                                           // 0x0000(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           m_Classes;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputMappingCompatibilityRule;

// ScriptStruct SCCore.ActionMappingCompatibilityRule
// 0x0058 (0x0058 - 0x0000)
struct FActionMappingCompatibilityRule final
{
public:
	EInputMappingCompatibilityRuleType            m_eRule;                                           // 0x0000(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<TSoftObjectPtr<class USCInputAction>>    m_Actions;                                         // 0x0008(0x0050)(Edit, Config, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FActionMappingCompatibilityRule;

// ScriptStruct SCCore.MappingValidationError
// 0x01C8 (0x01C8 - 0x0000)
struct FMappingValidationError final
{
public:
	EMappingValidationErrorType                   m_eResult;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMappingID                             m_Id;                                              // 0x0008(0x00D0)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FMappingID                             m_CollideID;                                       // 0x00D8(0x00D0)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UInputConditionData*                    m_CollideWithData;                                 // 0x01A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   m_CollidingKey;                                    // 0x01B0(0x0018)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMappingValidationError;

// ScriptStruct SCCore.SCDebugDisplayOnScreenSettings
// 0x0128 (0x0128 - 0x0000)
struct FSCDebugDisplayOnScreenSettings final
{
public:
	struct FLinearColor                           m_NameColor;                                       // 0x0000(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_ValueColor;                                      // 0x0010(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_BackgroundAlpha;                                 // 0x0020(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_NameToValueSpace;                                // 0x0024(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_DepthOffset;                                     // 0x0028(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_DepthOffsetForValuesDisplay;                     // 0x002C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_SelectionBackground;                             // 0x0030(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_SelectionBoxThickness;                           // 0x0040(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_BackgroundA;                                     // 0x0044(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_BackgroundB;                                     // 0x0054(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_BackgroundEnabled;                               // 0x0064(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_CategoryColor;                                   // 0x0074(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_SpecialCategoryColor;                            // 0x0084(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_SeparatorColor;                                  // 0x0094(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_TitleColor;                                      // 0x00A4(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              m_Location;                                        // 0x00B8(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_GamepadIconColor;                                // 0x00C8(0x0010)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FControllerIconStyle                   m_GamepadIconStyle;                                // 0x00D8(0x0050)(Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCDebugDisplayOnScreenSettings;

// ScriptStruct SCCore.BaseContexts
// 0x0050 (0x0050 - 0x0000)
struct FBaseContexts final
{
public:
	TSoftObjectPtr<class USCInputContext>         m_Gameplay;                                        // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USCInputContext>         m_Menu;                                            // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBaseContexts;

// ScriptStruct SCCore.BaseInputs
// 0x00A0 (0x00A0 - 0x0000)
struct FBaseInputs final
{
public:
	TSoftObjectPtr<class USCInputAction>          m_MenuAction;                                      // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USCInputAction>          m_MenuCancel;                                      // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USCInputAction>          m_Move;                                            // 0x0050(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USCInputAction>          m_Look;                                            // 0x0078(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBaseInputs;

// ScriptStruct SCCore.SCCharacterGroundInfo
// 0x0100 (0x0100 - 0x0000)
struct FSCCharacterGroundInfo final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             m_GroundHitResult;                                 // 0x0008(0x00F8)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCharacterGroundInfo;

// ScriptStruct SCCore.InputActionData
// 0x0058 (0x0058 - 0x0000)
struct FInputActionData final
{
public:
	bool                                          m_bAlwaysValid;                                    // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bReplicated;                                     // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bReplicatedOnClients;                            // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bBlockLowerContext;                              // 0x0003(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAtomic;                                         // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fStackLifeSpan;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseScaledTime;                                  // 0x000C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bResetInputOnRemoveFromStack;                    // 0x000D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bTestCollisionOnEnterStack;                      // 0x000E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bValidateToEnterStack;                           // 0x000F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bRemoveFromStackOnActivationFailed;              // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBaseActorConditionInstance            m_EnterStackValidation;                            // 0x0018(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FBaseActorConditionInstance            m_StayInStackCondition;                            // 0x0028(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bTestCollisionOnActivation;                      // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBaseActorConditionInstance            m_ActivationValidation;                            // 0x0040(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bResetInputOnActivation;                         // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bResetOnSiblingActivation;                       // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bResetOnConflict;                                // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInputActionData;

// ScriptStruct SCCore.InputWindowTargetData
// 0x0010 (0x0020 - 0x0010)
struct FInputWindowTargetData final : public FSCGameplayAbilityTargetData
{
public:
	float                                         m_fFireTime;                                       // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fReleaseTime;                                    // 0x0014(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fOpportunityWindow;                              // 0x0018(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPerfectWindow;                                  // 0x001C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInputWindowTargetData;

// ScriptStruct SCCore.FootIkDamping
// 0x0098 (0x0098 - 0x0000)
struct FFootIkDamping final
{
public:
	bool                                          m_bUseLerp;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDefaultValue;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fPlantedFootValue;                               // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     m_curveByRelFootPos;                               // 0x0010(0x0088)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FFootIkDamping;

// ScriptStruct SCCore.InterchangeableData
// 0x0018 (0x0018 - 0x0000)
struct FInterchangeableData final
{
public:
	struct FBaseActorConditionInstance            m_Condition;                                       // 0x0000(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TSubclassOf<class UInputConditionData>        m_Data;                                            // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInterchangeableData;

// ScriptStruct SCCore.SCError
// 0x0018 (0x0018 - 0x0000)
struct FSCError final
{
public:
	ESCErrorType                                  m_Type;                                            // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_Message;                                         // 0x0008(0x0010)(BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCError;

// ScriptStruct SCCore.SCTransitionIntialState
// 0x0050 (0x0050 - 0x0000)
struct FSCTransitionIntialState final
{
public:
	TSubclassOf<class USCTransitionDB>            m_TransitionDB;                                    // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCTransition                          m_Transition;                                      // 0x0008(0x0018)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSpeed;                                          // 0x0020(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantizeNormal              m_vVelocityDir;                                    // 0x0028(0x0018)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fYaw;                                            // 0x0040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOrientToMovement;                               // 0x0044(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fTimeOffset;                                     // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCTransitionIntialState;

// ScriptStruct SCCore.SCTransitionBetweenGameplayTagQueries
// 0x0098 (0x0098 - 0x0000)
struct FSCTransitionBetweenGameplayTagQueries final
{
public:
	struct FGameplayTagQuery                      m_FromTagQuery;                                    // 0x0000(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      m_ToTagQuery;                                      // 0x0048(0x0048)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class USCTransitionDB>            m_TransitionDB;                                    // 0x0090(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCTransitionBetweenGameplayTagQueries;

// ScriptStruct SCCore.AttributeOverridableFloat
// 0x0040 (0x0040 - 0x0000)
struct FAttributeOverridableFloat final
{
public:
	float                                         m_fDefaultFloat;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          m_bUseGameplayAttribute;                           // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     m_Attribute;                                       // 0x0008(0x0038)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FAttributeOverridableFloat;

// ScriptStruct SCCore.SpeedDescription
// 0x0090 (0x0090 - 0x0000)
struct FSpeedDescription final
{
public:
	float                                         m_fInputThresold;                                  // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttributeOverridableFloat             m_fExpectedMaxSpeed;                               // 0x0008(0x0040)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bForceMaxAccel;                                  // 0x0048(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseAngularSpeed;                                // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bForceMaxSpeed;                                  // 0x004A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxAngularSpeed;                                // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fToNextSpeedStateThresholdRatio;                 // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEnableSpeedModulation;                          // 0x0054(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOverrideRotationRate;                           // 0x0055(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               m_RotationRateOverride;                            // 0x0058(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bOrientToMovement;                               // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOrientToVelocity;                               // 0x0071(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            m_SpeeedMultiplierByAngleCurve;                    // 0x0078(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         m_fSpeedMultiplierByCardinal[0x4];                 // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FSpeedDescription;

// ScriptStruct SCCore.SCTransitionDBQuery
// 0x0050 (0x0050 - 0x0000)
struct FSCTransitionDBQuery final
{
public:
	struct FGameplayTagQuery                      m_Query;                                           // 0x0000(0x0048)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class USCTransitionDB>            m_TransitionDB;                                    // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCTransitionDBQuery;

// ScriptStruct SCCore.SCTransitionSettings
// 0x0030 (0x0030 - 0x0000)
struct FSCTransitionSettings final
{
public:
	float                                         m_fTimeThresholdToUseStartSpeedDuringStop;         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSpeedStateOverrideDuringStopRatio;              // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USCTransitionDB>            m_DefaultTransitionDB;                             // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSCTransitionDBQuery>           m_TransitionDBOverrides;                           // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSCTransitionBetweenGameplayTagQueries> m_TransitionsBetweenTagQueries;            // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCTransitionSettings;

// ScriptStruct SCCore.SCAnimationMetadataInstance
// 0x0008 (0x0030 - 0x0028)
struct FSCAnimationMetadataInstance final : public FPropertyBagInstance
{
public:
	TSubclassOf<class USCAnimationMetadata>       m_DefaultClassObject;                              // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCAnimationMetadataInstance;

// ScriptStruct SCCore.TransitionComputationResult
// 0x0038 (0x0038 - 0x0000)
struct FTransitionComputationResult final
{
public:
	bool                                          m_bAllTransitionRejected;                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCTransition>                  m_Transitions;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<bool>                                  m_bTransitionValidArray;                           // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	int32                                         m_iTransitionIndex;                                // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCTransitionDB>            m_TransitionDB;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTransitionComputationResult;

// ScriptStruct SCCore.MandatoryNotifyInstance
// 0x0010 (0x0010 - 0x0000)
struct FMandatoryNotifyInstance final
{
public:
	TSubclassOf<class UObject>                    m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMandatoryNotifyInstance;

// ScriptStruct SCCore.GameplayAbilityTargetingInstance
// 0x0010 (0x0010 - 0x0000)
struct FGameplayAbilityTargetingInstance final
{
public:
	TSubclassOf<class UGameplayAbilityTargeting>  m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayAbilityTargeting*              m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGameplayAbilityTargetingInstance;

// ScriptStruct SCCore.MandatoryNotifyInfos
// 0x00E0 (0x00E0 - 0x0000)
struct FMandatoryNotifyInfos final
{
public:
	struct FMandatoryNotifyInstance               m_Notify;                                          // 0x0000(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bPlaceable;                                      // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_TrackName;                                       // 0x0014(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMandatoryNotifyTiming                        m_StartTimePlacement;                              // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatDataBinding                      m_StartTime;                                       // 0x0020(0x0048)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UObject>                    m_StartNotify;                                     // 0x0068(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bStartRelativeToNotifyEnd;                       // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMandatoryNotifyTiming                        m_EndTimePlacement;                                // 0x0071(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatDataBinding                      m_EndTime;                                         // 0x0078(0x0048)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UObject>                    m_EndNotify;                                       // 0x00C0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEndRelativeToNotifyEnd;                         // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEncapsulateRootMotionRedirection;               // 0x00C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fRedirectTolerance;                              // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  m_InstanceID;                                      // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMandatoryNotifyInfos;

// ScriptStruct SCCore.MandatoryNotifyHandlerInstance
// 0x0020 (0x0020 - 0x0000)
struct FMandatoryNotifyHandlerInstance final
{
public:
	struct FGuid                                  m_MandatoryID;                                     // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  m_NotifyID;                                        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMandatoryNotifyHandlerInstance;

// ScriptStruct SCCore.SCBoneIK
// 0x00F0 (0x00F0 - 0x0000)
struct alignas(0x10) FSCBoneIK
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoneReference                         m_Bone;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fWeight;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0xCC];                                      // 0x0024(0x00CC)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCBoneIK;

// ScriptStruct SCCore.MandatoryNotifyHandler
// 0x0010 (0x0010 - 0x0000)
struct FMandatoryNotifyHandler final
{
public:
	TArray<struct FMandatoryNotifyHandlerInstance> m_Instances;                                      // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMandatoryNotifyHandler;

// ScriptStruct SCCore.MappableInputStruct
// 0x0038 (0x0038 - 0x0000)
struct FMappableInputStruct final
{
public:
	class FName                                   m_UnrealMappingName;                               // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERemappingAllowedInputTypes                   m_eRemappingAllowedInputType;                      // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_DisplayedMappingNameText[0x2];                   // 0x0010(0x0010)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bIsAxisMappingAllowed;                           // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCheckDuplicateKey;                              // 0x0031(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bForceDisplayAsSingleField;                      // 0x0032(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fKeyToAxisMultScaleFactor;                       // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMappableInputStruct;

// ScriptStruct SCCore.EditorFunctionButton
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEditorFunctionButton
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FEditorFunctionButton;

// ScriptStruct SCCore.RemappingSectionStruct
// 0x0020 (0x0020 - 0x0000)
struct FRemappingSectionStruct final
{
public:
	class FText                                   m_SectionDisplayText;                              // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FMappableInputStruct>           m_RemappableActions;                               // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRemappingSectionStruct;

// ScriptStruct SCCore.SCGameFlowTransitionOptions
// 0x0030 (0x0030 - 0x0000)
struct FSCGameFlowTransitionOptions final
{
public:
	TSoftClassPtr<class UClass>                   m_GameModeOverride;                                // 0x0000(0x0028)(BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iLevelIndex;                                     // 0x0028(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iListenPortOverride;                             // 0x002C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCGameFlowTransitionOptions;

// ScriptStruct SCCore.MatchingBoneEvaluationParams
// 0x005C (0x005C - 0x0000)
struct FMatchingBoneEvaluationParams final
{
public:
	uint32                                        m_uiScoreParams;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fYawToTargetWeight;                              // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         m_fYawToTargetAngleDiffAtMinMaxWeight;             // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPitchToTargetWeight;                            // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         m_fPitchToTargetAngleDiffAtMinMaxWeight;           // 0x0014(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDistance2DWeight;                               // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         m_fDistance2DAtMinMaxWeight;                       // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fHeightWeight;                                   // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         m_fHeightAtMinMaxWeight;                           // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fOrientationWeight;                              // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         m_fOrientationAngleDiffAtMinMaxWeight;             // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fNullSpeedThresold;                              // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSpeedWeight;                                    // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         m_fSpeedDiffAtMinMaxWeight;                        // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fVelocityDirWeight;                              // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         m_fVelocityAngleDiffAtMinMaxWeight;                // 0x0054(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMatchingBoneEvaluationParams;

// ScriptStruct SCCore.BoneEvaluation
// 0x00C4 (0x00C4 - 0x0000)
struct FBoneEvaluation final
{
public:
	class FName                                   m_BoneName;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneEvaluationType                           m_EvaluationType;                                  // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchingBoneEvaluationParams          m_MainEvaluationParams;                            // 0x000C(0x005C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMatchingBoneEvaluationParams          m_SecondaryEvaluationParams;                       // 0x0068(0x005C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBoneEvaluation;

// ScriptStruct SCCore.SCGameplayTagHierarchy
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FSCGameplayTagHierarchy final
{
public:
	struct FGameplayTag                           m_gameplayTag;                                     // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x18];                                       // 0x0008(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCGameplayTagHierarchy;

// ScriptStruct SCCore.MatchingBoneAnimPosition
// 0x0020 (0x0020 - 0x0000)
struct FMatchingBoneAnimPosition final
{
public:
	TArray<struct FBoneEvaluation>                m_BoneEvaluations;                                 // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint32                                        m_uiEvaluationParamsBitmask;                       // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseSnapEnd;                                     // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseActorLocationTargetTime;                     // 0x0015(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAnimRatio;                                      // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fTimeOffset;                                     // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMatchingBoneAnimPosition;

// ScriptStruct SCCore.MenuEnumHandler
// 0x0000 (0x0050 - 0x0050)
struct FMenuEnumHandler final : public FSCUserDefinedEnumHandler
{
};
DUMPER7_ASSERTS_FMenuEnumHandler;

// ScriptStruct SCCore.LatentTargetProvider
// 0x0000 (0x0058 - 0x0058)
struct FLatentTargetProvider final : public FBaseTargetProvider
{
};
DUMPER7_ASSERTS_FLatentTargetProvider;

// ScriptStruct SCCore.SCAbilityInputDescription
// 0x00A8 (0x00A8 - 0x0000)
struct FSCAbilityInputDescription final
{
public:
	int32                                         m_iPriorityWeight;                                 // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USCInputAction*                         m_InputAction;                                     // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBaseActorConditionInstance            m_ActivationCondition;                             // 0x0010(0x0010)(Edit, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FBaseActorConditionInstance            m_ServerOnlyActivationCondition;                   // 0x0020(0x0010)(Edit, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FBaseActorConditionInstance            m_ClientOnlyActivationCondition;                   // 0x0030(0x0010)(Edit, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          m_bRequireTarget;                                  // 0x0040(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bRequireInput;                                   // 0x0041(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bResetInputWhenAbilityEnds;                      // 0x0042(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLatentTargetProvider                  m_TargetProvider;                                  // 0x0048(0x0058)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         m_fPreviewTargetRefreshRate;                       // 0x00A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCAbilityInputDescription;

// ScriptStruct SCCore.MirrorAnimStruct
// 0x0028 (0x0028 - 0x0000)
struct FMirrorAnimStruct final
{
public:
	class FString                                 m_Description;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_BoneName;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMirrorAnimBehavior                           m_eMirrorBehavior;                                 // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_TwinBoneName;                                    // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESimpleAxis                                   m_eMirrorRotationAxis;                             // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCPlaneAxis                                  m_eMirrorTranslationPlaneAxis;                     // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsSocket;                                       // 0x0026(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMirrorAnimStruct;

// ScriptStruct SCCore.MirrorReference
// 0x0000 (0x0010 - 0x0010)
struct FMirrorReference final : public FAnimNodeReference
{
};
DUMPER7_ASSERTS_FMirrorReference;

// ScriptStruct SCCore.NamedGameplayTagContainerTargetData
// 0x0020 (0x0038 - 0x0018)
struct FNamedGameplayTagContainerTargetData final : public FNamedTargetData
{
public:
	struct FGameplayTagContainer                  m_TagContainer;                                    // 0x0018(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedGameplayTagContainerTargetData;

// ScriptStruct SCCore.MoveInterruptContext
// 0x000C (0x000C - 0x0000)
struct alignas(0x04) FMoveInterruptContext final
{
public:
	uint8                                         Pad_0[0xC];                                        // 0x0000(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMoveInterruptContext;

// ScriptStruct SCCore.NamedGameplayTagTargetData
// 0x0008 (0x0020 - 0x0018)
struct FNamedGameplayTagTargetData final : public FNamedTargetData
{
public:
	struct FGameplayTag                           m_gameplayTag;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNamedGameplayTagTargetData;

// ScriptStruct SCCore.OnlineActivitiesTableRow
// 0x0010 (0x0018 - 0x0008)
struct FOnlineActivitiesTableRow final : public FTableRowBase
{
public:
	class FName                                   m_activityID;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EActivityType                                 m_eActivityType;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FOnlineActivitiesTableRow;

// ScriptStruct SCCore.SCGestureAndBlendProfile
// 0x0038 (0x0038 - 0x0000)
struct FSCGestureAndBlendProfile final
{
public:
	struct FAnimContainer                         m_GesturesAnimContainer;                           // 0x0000(0x0018)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bUseBlendProfilePayload;                         // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_GestureBlendProfile;                             // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UBlendProfilePayload>       m_BlendProfilePayload;                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAllowSyncFidgetMirrorWithQuadrant;              // 0x0030(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCAnimLookAtApplyMode                        m_eLookAtApplyMode;                                // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCGestureAndBlendProfile;

// ScriptStruct SCCore.SCGestureContainer
// 0x0010 (0x0010 - 0x0000)
struct FSCGestureContainer final
{
public:
	TArray<struct FSCGestureAndBlendProfile>      m_aGesturesAnimContainer;                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCGestureContainer;

// ScriptStruct SCCore.OverTimeGameplayAttributeData
// 0x0010 (0x0020 - 0x0010)
struct FOverTimeGameplayAttributeData final : public FGameplayAttributeData
{
public:
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fClientTime;                                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FOverTimeGameplayAttributeData;

// ScriptStruct SCCore.PlayerSynchroInfos
// 0x0024 (0x0030 - 0x000C)
struct FPlayerSynchroInfos final : public FFastArraySerializerItem
{
public:
	class FName                                   m_Name;                                            // 0x000C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fTimeOutAtTime;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iRequiredPlayerNum;                              // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerState*>                   m_PlayerStatesAcknowledge;                         // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPlayerSynchroInfos;

// ScriptStruct SCCore.PlayerSynchroInfoContainer
// 0x0010 (0x0120 - 0x0110)
struct FPlayerSynchroInfoContainer final : public FFastArraySerializer
{
public:
	TArray<struct FPlayerSynchroInfos>            m_Entries;                                         // 0x0110(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPlayerSynchroInfoContainer;

// ScriptStruct SCCore.RaycastTargetData
// 0x00F0 (0x0200 - 0x0110)
struct FRaycastTargetData : public FActorLocationTargetData
{
public:
	struct FHitResult                             m_HitResult;                                       // 0x0108(0x00F8)(BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRaycastTargetData;

// ScriptStruct SCCore.MappingProfileList
// 0x0050 (0x0050 - 0x0000)
struct FMappingProfileList final
{
public:
	TMap<EInputDeviceLayout, TSoftClassPtr<class UClass>> m_MappingProfiles;                         // 0x0000(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMappingProfileList;

// ScriptStruct SCCore.CustomMappingProfileList
// 0x00C0 (0x00C0 - 0x0000)
struct FCustomMappingProfileList final
{
public:
	struct FMappingProfileList                    m_ProfilesWithModifier;                            // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FActionMappingCompatibilityRule> m_ModifierActionCompatibilityRules;               // 0x0050(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	struct FMappingProfileList                    m_ProfilesWithoutModifier;                         // 0x0060(0x0050)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FActionMappingCompatibilityRule> m_WithoutModifierActionCompatibilityRules;        // 0x00B0(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCustomMappingProfileList;

// ScriptStruct SCCore.RaycastCustomContainerInstance
// 0x0010 (0x0010 - 0x0000)
struct FRaycastCustomContainerInstance final
{
public:
	TSubclassOf<class URaycastCustomContainer>    m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URaycastCustomContainer*                m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRaycastCustomContainerInstance;

// ScriptStruct SCCore.InputActionWidgetStyleEnumHandler
// 0x0000 (0x0050 - 0x0050)
struct FInputActionWidgetStyleEnumHandler final : public FSCUserDefinedEnumHandler
{
};
DUMPER7_ASSERTS_FInputActionWidgetStyleEnumHandler;

// ScriptStruct SCCore.RootMotionSource_MoveToSnapLocation
// 0x0020 (0x0150 - 0x0130)
struct FRootMotionSource_MoveToSnapLocation final : public FRootMotionSource_MoveToForce
{
public:
	struct FRotator                               m_InitialRotation;                                 // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          m_bRedirectToTarget;                               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fRotationBlendDuration;                          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRootMotionSource_MoveToSnapLocation;

// ScriptStruct SCCore.SCMovieSceneBindingInfos
// 0x0190 (0x0190 - 0x0000)
struct FSCMovieSceneBindingInfos final
{
public:
	class FName                                   m_BindingName;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsSpawned;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     m_Bindings;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                m_vVelocity;                                       // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_LastRawTransform;                                // 0x0040(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             m_LastTransform;                                   // 0x00A0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEnableTickOnUnbound;                            // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0xF];                                      // 0x0101(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             m_TransformAtBound;                                // 0x0110(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fTimeAtBound;                                    // 0x0170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCMovieSceneBindingSettings           m_Settings;                                        // 0x0178(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCMovieSceneBindingInfos;

// ScriptStruct SCCore.RootMotionSource_SnapFromInitialSpeed
// 0x0050 (0x0130 - 0x00E0)
struct FRootMotionSource_SnapFromInitialSpeed final : public FRootMotionSource
{
public:
	struct FVector_NetQuantize100                 m_vInitialVelocity;                                // 0x00D8(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                 m_vTargetLocation;                                 // 0x00F0(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSlowingDistance;                                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vInterpVelocity;                                 // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSpringSpeed;                                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRootMotionSource_SnapFromInitialSpeed;

// ScriptStruct SCCore.RootMotionSource_Transition
// 0x00F0 (0x01D0 - 0x00E0)
struct FRootMotionSource_Transition final : public FRootMotionSource
{
public:
	uint8                                         m_uiPendingMoveUID;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCTransitionIntialState               m_InitialState;                                    // 0x00E0(0x0050)(NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fTargetSpeed;                                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantizeNormal              m_vWantedDir;                                      // 0x0138(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               m_ControllerDesiredDir;                            // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal              m_vCurrentDir;                                     // 0x0168(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fSameWayVelocityMaxAngularSpeed;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fOppositeWayVelocityMaxAngularSpeed;             // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFloatInterval>                 m_fModifyDirectionAllowedIntervalArray;            // 0x0188(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_198[0x38];                                     // 0x0198(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRootMotionSource_Transition;

// ScriptStruct SCCore.AlwaysCollidingActions
// 0x0050 (0x0050 - 0x0000)
struct FAlwaysCollidingActions final
{
public:
	TSet<class USCInputAction*>                   m_Actions;                                         // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAlwaysCollidingActions;

// ScriptStruct SCCore.GameSaveChunksEnumHandler
// 0x0000 (0x0050 - 0x0050)
struct FGameSaveChunksEnumHandler final : public FSCUserDefinedEnumHandler
{
};
DUMPER7_ASSERTS_FGameSaveChunksEnumHandler;

// ScriptStruct SCCore.SCGameplayEffectContext
// 0x0200 (0x0280 - 0x0080)
#pragma pack(push, 0x1)
struct alignas(0x10) FSCGameplayEffectContext : public FGameplayEffectContext
{
public:
	struct FNetSyncInfos                          m_NetSync;                                         // 0x0080(0x01D0)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAbilityTargetDataHandle       m_TargetDataHandle;                                // 0x0250(0x0028)(BlueprintVisible, NativeAccessSpecifierPublic)
};
#pragma pack(pop)
DUMPER7_ASSERTS_FSCGameplayEffectContext;

// ScriptStruct SCCore.SCAbilityExecutionContext
// 0x0210 (0x0210 - 0x0000)
struct FSCAbilityExecutionContext final
{
public:
	EAbilityExecutionSyncMode                     m_eSyncMode;                                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetSyncInfos                          m_NetSync;                                         // 0x0010(0x01D0)(NativeAccessSpecifierPublic)
	struct FPredictionKey                         m_ClientCatchupPredictionKey;                      // 0x01E0(0x0010)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F0[0x20];                                     // 0x01F0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCAbilityExecutionContext;

// ScriptStruct SCCore.LoggerCache
// 0x0001 (0x0001 - 0x0000)
struct FLoggerCache final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLoggerCache;

// ScriptStruct SCCore.ActivityInfo
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FActivityInfo final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FActivityInfo;

// ScriptStruct SCCore.SCActorComponentOptimizer
// 0x00D0 (0x00D0 - 0x0000)
struct alignas(0x10) FSCActorComponentOptimizer final
{
public:
	struct FGameplayTagContainer                  m_AttachIfHasTags;                                 // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_AttachIfNotHasTags;                              // 0x0020(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bClientOnly;                                     // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x8F];                                      // 0x0041(0x008F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCActorComponentOptimizer;

// ScriptStruct SCCore.ScaleSpeedRootMotionTrack
// 0x0150 (0x0150 - 0x0000)
struct FScaleSpeedRootMotionTrack final
{
public:
	bool                                          m_bUpToEnd;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUpToMoveInterrupt;                              // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseFrame;                                       // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntDataBinding                        m_iStartFrame;                                     // 0x0008(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FIntDataBinding                        m_iEndFrame;                                       // 0x0050(0x0048)(Edit, NativeAccessSpecifierPublic)
	ETimeStretchOption                            m_eOption;                                         // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMandatoryNotifyInstance               m_Notify;                                          // 0x00A0(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FIntDataBinding                        m_iWantedFrameCount;                               // 0x00B0(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FMandatoryNotifyInstance               m_ApexNotify;                                      // 0x00F8(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FMandatoryNotifyInstance               m_OverrideVerticalEffectiveRangeNotifyState;       // 0x0108(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FClassDataBinding                      m_ScaleSpeedRootMotionModifierDataBinding;         // 0x0118(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FScaleSpeedRootMotionTrack;

// ScriptStruct SCCore.SlotToMontageContainer
// 0x0050 (0x0050 - 0x0000)
struct FSlotToMontageContainer final
{
public:
	TMap<class FName, class UAnimMontage*>        m_Map;                                             // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSlotToMontageContainer;

// ScriptStruct SCCore.AnimationMetadataEditorInfos
// 0x0210 (0x0220 - 0x0010)
struct FAnimationMetadataEditorInfos final : public FEditorFunctionButton
{
public:
	struct FRuntimeVectorCurve                    m_RootMotionCurveResult;                           // 0x0010(0x0188)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     m_TimingCurveResult;                               // 0x0198(0x0088)(Edit, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAnimationMetadataEditorInfos;

// ScriptStruct SCCore.AssociatedPropsAnimInfo
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FAssociatedPropsAnimInfo final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAssociatedPropsAnimInfo;

// ScriptStruct SCCore.SCAnimNode_AimIK
// 0x0208 (0x02D0 - 0x00C8)
struct alignas(0x10) FSCAnimNode_AimIK final : public FAnimNode_SkeletalControlBase
{
public:
	TArray<struct FSCBoneIK>                      mIKBoneChain;                                      // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   mSocketNameToTransform;                            // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                mvTargetPosition;                                  // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         mfMinDistanceRatio;                                // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         mfMaxDistanceRatio;                                // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         mBoneAnimTargetted;                                // 0x0100(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          mbUseDirectWorldPositionForHitTarget;              // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                mvHitTargetPosition;                               // 0x0118(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         muiNbIterations;                                   // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         mfAbsoluteAngleTolerance;                          // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          mbDebugActivated;                                  // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCAimIKSolverType                            meIKSolverType;                                    // 0x0139(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13A[0x196];                                    // 0x013A(0x0196)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCAnimNode_AimIK;

// ScriptStruct SCCore.SCAnimNode_MultiVariableWeightBlender
// 0x0218 (0x0228 - 0x0010)
struct FSCAnimNode_MultiVariableWeightBlender final : public FAnimNode_Base
{
public:
	struct FPoseLink                              BasePose;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FPoseLink>                      VariableWeightPoses;                               // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAnimSlotName>                  SlotVariableWeight;                                // 0x0030(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 LayerAlpha;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bMute;                                             // 0x0050(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x1D7];                                     // 0x0051(0x01D7)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCAnimNode_MultiVariableWeightBlender;

// ScriptStruct SCCore.SCAnimNode_SaveBoneTransform
// 0x0020 (0x00E8 - 0x00C8)
struct FSCAnimNode_SaveBoneTransform final : public FAnimNode_SkeletalControlBase
{
public:
	struct FBoneReference                         m_SourceBone;                                      // 0x00C8(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   m_BoneSaveName;                                    // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneControlSpace                             m_eControlSpace;                                   // 0x00E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCAnimNode_SaveBoneTransform;

// ScriptStruct SCCore.AnimNode_SetSlotBlendMask
// 0x0070 (0x0080 - 0x0010)
struct FAnimNode_SetSlotBlendMask final : public FAnimNode_Base
{
public:
	struct FPoseLink                              SourcePose;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, EditFixedSize, NoDestructor, NativeAccessSpecifierPublic)
	TMap<struct FAnimSlotName, class UBlendProfile*> BlendMaskPerSlot;                               // 0x0020(0x0050)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FLayerToBoneMask>               DynamicBlendMaskPerSlot;                           // 0x0070(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAnimNode_SetSlotBlendMask;

// ScriptStruct SCCore.PerCameraGameOptionClasses
// 0x0028 (0x0028 - 0x0000)
struct FPerCameraGameOptionClasses final
{
public:
	TSubclassOf<class UGameOption>                m_CameraSpeedClass;                                // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameOption>                m_GamepadCameraSpeedClass;                         // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameOption>                m_GamepadCameraSpeedBoostClass;                    // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameOption>                m_CameraFOVClass;                                  // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameOption>                m_CameraVerticalScale;                             // 0x0020(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPerCameraGameOptionClasses;

// ScriptStruct SCCore.SCCameraSafePointConditionalPlacement
// 0x0058 (0x0058 - 0x0000)
struct FSCCameraSafePointConditionalPlacement final
{
public:
	struct FSCCameraSafePointCondition            m_Condition;                                       // 0x0000(0x003C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FSCCameraSafePointPlacement            m_placement;                                       // 0x003C(0x001C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCameraSafePointConditionalPlacement;

// ScriptStruct SCCore.SCCameraTransitionInfoPairStruct
// 0x0050 (0x0050 - 0x0000)
struct FSCCameraTransitionInfoPairStruct final
{
public:
	TSoftClassPtr<class UClass>                   m_CameraDataClass;                                 // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   m_CameraTransitionInfoClass;                       // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCameraTransitionInfoPairStruct;

// ScriptStruct SCCore.GameplayAbilitySpecTriggers
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FGameplayAbilitySpecTriggers final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGameplayAbilitySpecTriggers;

// ScriptStruct SCCore.MoveInterrupt
// 0x0008 (0x0008 - 0x0000)
struct FMoveInterrupt final
{
public:
	struct FGameplayAbilitySpecHandleAndPredictionKey m_Infos;                                       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMoveInterrupt;

// ScriptStruct SCCore.SCPropertyDescriptor
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FSCPropertyDescriptor final
{
public:
	uint8                                         Pad_0[0x58];                                       // 0x0000(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCPropertyDescriptor;

// ScriptStruct SCCore.SCCollisionProfileDescription
// 0x002C (0x002C - 0x0000)
struct FSCCollisionProfileDescription final
{
public:
	class FName                                   m_Name;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCCollisionResponseTemplate           m_Template;                                        // 0x0008(0x0023)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCCollisionProfileDescription;

// ScriptStruct SCCore.SCErrorPopup
// 0x0030 (0x0030 - 0x0000)
struct FSCErrorPopup final
{
public:
	class FText                                   m_TextMessage;                                     // 0x0000(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	class FText                                   m_TextConfirm;                                     // 0x0010(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	class FText                                   m_TextCancel;                                      // 0x0020(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCErrorPopup;

// ScriptStruct SCCore.SCProfilerStatGroup
// 0x0078 (0x0078 - 0x0000)
struct FSCProfilerStatGroup final
{
public:
	class FString                                 m_Name;                                            // 0x0000(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FString>                           m_Stats;                                           // 0x0020(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCProfilerStatGroup;

// ScriptStruct SCCore.SCDebugDisplayOnScreenStatusSerialized
// 0x0060 (0x0060 - 0x0000)
struct FSCDebugDisplayOnScreenStatusSerialized final
{
public:
	ESCDebugDisplayOnScreenMode                   m_eDisplayMode;                                    // 0x0000(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FString>                           m_ExpandedNodes;                                   // 0x0008(0x0050)(Config, NativeAccessSpecifierPublic)
	class FName                                   m_SelectionObject;                                 // 0x0058(0x0008)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCDebugDisplayOnScreenStatusSerialized;

// ScriptStruct SCCore.SCDebugDisplayStateSerialized
// 0x00A0 (0x00A0 - 0x0000)
struct FSCDebugDisplayStateSerialized final
{
public:
	TMap<class FName, struct FSCDebugDisplayNodeStateSerialized> m_Paths;                            // 0x0000(0x0050)(Edit, Config, EditConst, NativeAccessSpecifierPublic)
	TMap<class FName, struct FSCDebugDisplayNodeStateSerialized> m_Shapes;                           // 0x0050(0x0050)(Edit, Config, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCDebugDisplayStateSerialized;

// ScriptStruct SCCore.SCGatheredObjectInfo
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FSCGatheredObjectInfo final
{
public:
	uint8                                         Pad_0[0x40];                                       // 0x0000(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCGatheredObjectInfo;

// ScriptStruct SCCore.SCFieldPath
// 0x0030 (0x0030 - 0x0000)
struct FSCFieldPath final
{
public:
	TFieldPath<class FProperty>                   m_PropertyPath;                                    // 0x0000(0x0020)(Edit, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                  m_PropertyGuid;                                    // 0x0020(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FSCFieldPath;

// ScriptStruct SCCore.SCFlowGraphHistoryEntry
// 0x0020 (0x0020 - 0x0000)
struct FSCFlowGraphHistoryEntry final
{
public:
	class USCFlowGraphNode*                       m_Node;                                            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_FromTransition;                                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           m_FromPath;                                        // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCFlowGraphHistoryEntry;

// ScriptStruct SCCore.SCGameplayAbilityFlowGraphTargetData
// 0x0008 (0x0018 - 0x0010)
struct FSCGameplayAbilityFlowGraphTargetData final : public FSCGameplayAbilityTargetData
{
public:
	TWeakObjectPtr<class USCFlowGraph>            m_Target;                                          // 0x0010(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCGameplayAbilityFlowGraphTargetData;

// ScriptStruct SCCore.SCFlowGraphNodeLink
// 0x0010 (0x0010 - 0x0000)
struct FSCFlowGraphNodeLink final
{
public:
	class USCFlowGraphNode*                       m_Node;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        m_uiFlags;                                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCFlowGraphNodeLink;

// ScriptStruct SCCore.SCFlowGraphTransition
// 0x0060 (0x0060 - 0x0000)
struct FSCFlowGraphTransition final
{
public:
	class FName                                   m_Name;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_NodeInputPin;                                    // 0x0018(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCFlowGraphNode*                       m_From;                                            // 0x0020(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCFlowGraphNode*                       m_To;                                              // 0x0028(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCFlowGraphTransition;

// ScriptStruct SCCore.SCFootIkData
// 0x0148 (0x0148 - 0x0000)
struct FSCFootIkData final
{
public:
	class FName                                   m_footIkBoneName;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_thighBoneName;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 m_suffix;                                          // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_markerName;                                      // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x40];                                      // 0x0028(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                m_vDampedWorldLocationOffset;                      // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bApplyIkToFoot;                                  // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x1F];                                      // 0x0081(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               m_dampedWorldRotationOffset;                       // 0x00A0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fRotationAlpha;                                  // 0x00B8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x8C];                                      // 0x00BC(0x008C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCFootIkData;

// ScriptStruct SCCore.SCGameFlowMap
// 0x0030 (0x0030 - 0x0000)
struct FSCGameFlowMap final
{
public:
	ESCGameInstanceState                          m_State;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_StateName;                                       // 0x0004(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        m_Map;                                             // 0x0010(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCGameFlowMap;

// ScriptStruct SCCore.SCGameFlowData
// 0x0028 (0x0028 - 0x0000)
struct FSCGameFlowData final
{
public:
	ESCGameInstanceState                          m_eInitialState;                                   // 0x0000(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        m_InitialMap;                                      // 0x0008(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCGameFlowData;

// ScriptStruct SCCore.SCGameFlowWidgetsList
// 0x0010 (0x0010 - 0x0000)
struct FSCGameFlowWidgetsList final
{
public:
	TArray<TSoftClassPtr<class UClass>>           m_Widgets;                                         // 0x0000(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCGameFlowWidgetsList;

// ScriptStruct SCCore.SCGameplayCueTranslatorInfos
// 0x0058 (0x0058 - 0x0000)
struct FSCGameplayCueTranslatorInfos final
{
public:
	class FName                                   m_BaseName;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSoftClassPtr<class UClass>, class FName> m_TagMappingPerClass;                             // 0x0008(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCGameplayCueTranslatorInfos;

// ScriptStruct SCCore.GameplayAbilityCategorisation
// 0x0040 (0x0040 - 0x0000)
struct FGameplayAbilityCategorisation final
{
public:
	struct FGameplayTagContainer                  m_CategoryTags;                                    // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_AdditionalCategoryTagsToCancel;                  // 0x0020(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGameplayAbilityCategorisation;

// ScriptStruct SCCore.TaskScope
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FTaskScope final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTaskScope;

// ScriptStruct SCCore.SCGameplayAbilityActorInfo
// 0x0050 (0x0098 - 0x0048)
struct FSCGameplayAbilityActorInfo final : public FGameplayAbilityActorInfo
{
public:
	uint8                                         Pad_48[0x50];                                      // 0x0048(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCGameplayAbilityActorInfo;

// ScriptStruct SCCore.SCLDCameraDataAssets
// 0x0010 (0x0010 - 0x0000)
struct FSCLDCameraDataAssets final
{
public:
	TSubclassOf<class ASCLDCameraActor>           m_LDCameraClass;                                   // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USCCameraData>              m_CameraData;                                      // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCLDCameraDataAssets;

// ScriptStruct SCCore.SCFakePawnBinding
// 0x0008 (0x0048 - 0x0040)
struct FSCFakePawnBinding final : public FSCBasicPawnBinding
{
public:
	TSubclassOf<class APawn>                      m_FakePawnClass;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCFakePawnBinding;

// ScriptStruct SCCore.SCBlendMaterialSubsystemParamInstance
// 0x0010 (0x0010 - 0x0000)
struct FSCBlendMaterialSubsystemParamInstance final
{
public:
	TSubclassOf<class USCBaseBlendMaterialSubsystemParam> m_DefaultClassObject;                      // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCBaseBlendMaterialSubsystemParam*     m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCBlendMaterialSubsystemParamInstance;

// ScriptStruct SCCore.SCMaterialParamBinding
// 0x0030 (0x0030 - 0x0000)
struct FSCMaterialParamBinding final
{
public:
	TWeakObjectPtr<class UMaterialInstanceDynamic> m_MaterialInstanceDynamic;                        // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCBlendMaterialSubsystemParamInstance m_Params;                                          // 0x0008(0x0010)(Edit, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         m_fCurrentDuration;                                // 0x0018(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxDuration;                                    // 0x001C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20[0x10];                                      // 0x0020(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCMaterialParamBinding;

// ScriptStruct SCCore.SCLocation48
// 0x0006 (0x0006 - 0x0000)
struct alignas(0x02) FSCLocation48 final
{
public:
	uint8                                         Pad_0[0x6];                                        // 0x0000(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCLocation48;

// ScriptStruct SCCore.SCRotation4
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FSCRotation4 final
{
public:
	uint8                                         Pad_0[0x4];                                        // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCRotation4;

// ScriptStruct SCCore.SCTransform52
// 0x000C (0x000C - 0x0000)
struct FSCTransform52
{
public:
	struct FSCLocation48                          m_Location;                                        // 0x0000(0x0006)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCRotation4                           m_Rotation;                                        // 0x0008(0x0004)(SaveGame, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCTransform52;

// ScriptStruct SCCore.SCTransform100
// 0x0008 (0x0014 - 0x000C)
struct FSCTransform100 final : public FSCTransform52
{
public:
	struct FSCScale48                             m_Scale3D;                                         // 0x000C(0x0006)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCTransform100;

// ScriptStruct SCCore.SCMathCondition
// 0x0010 (0x0010 - 0x0000)
struct FSCMathCondition final
{
public:
	ESCMathConditionValueType                     m_eValueType;                                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iComparedValue;                                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fComparedValue;                                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCMathCondition                              m_eCondition;                                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCMathCondition;

// ScriptStruct SCCore.SCMathConditionGroup
// 0x0030 (0x0030 - 0x0000)
struct FSCMathConditionGroup final
{
public:
	ESCMathConditionValueType                     m_eValueType;                                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iDepth;                                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCMathConditionExpression                    m_eType;                                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 m_SubGroupIndexes;                                 // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSCMathCondition>               m_Conditions;                                      // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCMathConditionGroup;

// ScriptStruct SCCore.SCMathExpression
// 0x0020 (0x0020 - 0x0000)
struct FSCMathExpression
{
public:
	ESCMathConditionValueType                     m_eValueType;                                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCMathConditionGroup>          m_ConditionGroups;                                 // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         m_iMaxDepth;                                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCMathExpression;

// ScriptStruct SCCore.SCMathExpressionFloat
// 0x0000 (0x0020 - 0x0020)
struct FSCMathExpressionFloat final : public FSCMathExpression
{
};
DUMPER7_ASSERTS_FSCMathExpressionFloat;

// ScriptStruct SCCore.SCMathExpressionInteger
// 0x0000 (0x0020 - 0x0020)
struct FSCMathExpressionInteger final : public FSCMathExpression
{
};
DUMPER7_ASSERTS_FSCMathExpressionInteger;

// ScriptStruct SCCore.SCDisplayedMenuAction
// 0x0038 (0x0038 - 0x0000)
struct FSCDisplayedMenuAction final
{
public:
	class USCInputAction*                         m_InputAction;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCUserWidget*                          m_OwnerWidget;                                     // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCMenuActionInstance                  m_MenuActionInstance;                              // 0x0010(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FText                                   m_DisplayNameOverride;                             // 0x0020(0x0010)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bIsEnabled;                                      // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsHoldAction;                                   // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCDisplayedMenuAction;

// ScriptStruct SCCore.SCNetScoreEventCounter
// 0x0014 (0x0020 - 0x000C)
struct FSCNetScoreEventCounter final : public FFastArraySerializerItem
{
public:
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCStatControllerBase>      m_StatClass;                                       // 0x0010(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iCount;                                          // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCNetScoreEventCounter;

// ScriptStruct SCCore.SCNetScoreEventCounterContainer
// 0x0018 (0x0128 - 0x0110)
struct FSCNetScoreEventCounterContainer final : public FFastArraySerializer
{
public:
	TArray<struct FSCNetScoreEventCounter>        m_Counters;                                        // 0x0110(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCNetScoreEventCounterContainer;

// ScriptStruct SCCore.NotificationParams
// 0x0068 (0x0068 - 0x0000)
struct FNotificationParams final
{
public:
	TSoftClassPtr<class UClass>                   m_WidgetClass;                                     // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDisplayDuration;                                // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_DefaultTitle;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USCInputAction>          m_HandleInput;                                     // 0x0040(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNotificationParams;

// ScriptStruct SCCore.NotificationContent
// 0x0020 (0x0020 - 0x0000)
struct FNotificationContent final
{
public:
	class FText                                   m_Title;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   m_Message;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FNotificationContent;

// ScriptStruct SCCore.SCNotification
// 0x0018 (0x0018 - 0x0000)
struct FSCNotification final
{
public:
	class UNotificationViewModel*                 m_ViewModel;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCNotification;

// ScriptStruct SCCore.SCObjectInfoGameArchive
// 0x0020 (0x0020 - 0x0000)
struct FSCObjectInfoGameArchive final
{
public:
	class UObject*                                m_Object;                                          // 0x0000(0x0008)(ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 m_ObjectClass;                                     // 0x0008(0x0008)(ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 m_Data;                                            // 0x0010(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCObjectInfoGameArchive;

// ScriptStruct SCCore.SCTelemetryThreadThreshold
// 0x0010 (0x0010 - 0x0000)
struct FSCTelemetryThreadThreshold final
{
public:
	ESCTelemetryThread                            m_eThread;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fThreshold;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         m_iNumSnapshots;                                   // 0x0008(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCTelemetryThreadThreshold;

// ScriptStruct SCCore.SCDynamicPlayerScore
// 0x0038 (0x0038 - 0x0000)
struct FSCDynamicPlayerScore final
{
public:
	int32                                         m_iDefaultScore;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCFieldPath                           m_ScoreProperty;                                   // 0x0008(0x0030)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FSCDynamicPlayerScore;

// ScriptStruct SCCore.SCDynamicPlayerScoreMultiplier
// 0x0038 (0x0038 - 0x0000)
struct FSCDynamicPlayerScoreMultiplier final
{
public:
	float                                         m_fDefaultMultiplier;                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCFieldPath                           m_MultiplierProperty;                              // 0x0008(0x0030)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FSCDynamicPlayerScoreMultiplier;

// ScriptStruct SCCore.SCScoreEventInfos
// 0x0150 (0x0150 - 0x0000)
struct FSCScoreEventInfos final
{
public:
	TSoftClassPtr<class UClass>                   m_SoftStatClass;                                   // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   m_Title;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            m_Icon;                                            // 0x0040(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          m_bShowNotification;                               // 0x0110(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bShowInRecap;                                    // 0x0111(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fNotificationDelay;                              // 0x0114(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCDynamicPlayerScore                  m_ScoreOnTrigger;                                  // 0x0118(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCScoreEventInfos;

// ScriptStruct SCCore.SCPoolableActorsContainerPoolEntry
// 0x0020 (0x0020 - 0x0000)
struct FSCPoolableActorsContainerPoolEntry final
{
public:
	class FName                                   m_Name;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     m_Class;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         m_Actors;                                          // 0x0010(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCPoolableActorsContainerPoolEntry;

// ScriptStruct SCCore.SCMenuActionParams
// 0x0050 (0x0050 - 0x0000)
struct FSCMenuActionParams final
{
public:
	TSoftObjectPtr<class USCInputAction>          m_InputAction;                                     // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_OptionTag;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bDisplay;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m_DisplayName;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          m_bBindInput;                                      // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCMenuActionParams;

// ScriptStruct SCCore.SCPopupContent
// 0x00E8 (0x00E8 - 0x0000)
struct FSCPopupContent final
{
public:
	class FText                                   m_Title;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   m_Message;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                             m_Icon;                                            // 0x0020(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_FocusColorOverride;                              // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSCMenuActionParams>            m_Actions;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class USCPopupWidget>             m_WidgetClass;                                     // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class USCViewModel*>        m_ViewModels;                                      // 0x0050(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_AdditionalTags;                                  // 0x00A0(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          m_bInterruptedByClientDisconnection;               // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_ShowOnEnterGameFlowStates;                       // 0x00C8(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCPopupContent;

// ScriptStruct SCCore.SCPopupContentSoft
// 0x00D8 (0x00D8 - 0x0000)
struct FSCPopupContentSoft final
{
public:
	class FText                                   m_Title;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   m_Message;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              m_Icon;                                            // 0x0020(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           m_FocusColorOverride;                              // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSCMenuActionParams>            m_Actions;                                         // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   m_WidgetClass;                                     // 0x0068(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_AdditionalTags;                                  // 0x0090(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          m_bInterruptedByClientDisconnection;               // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_ShowOnEnterGameFlowStates;                       // 0x00B8(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCPopupContentSoft;

// ScriptStruct SCCore.SCDeferredPopup
// 0x0140 (0x0140 - 0x0000)
struct alignas(0x10) FSCDeferredPopup final
{
public:
	class ULocalPlayer*                           m_LocalPlayer;                                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCPopupContent                        m_Content;                                         // 0x0008(0x00E8)(NativeAccessSpecifierPublic)
	uint8                                         Pad_F0[0x50];                                      // 0x00F0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCDeferredPopup;

// ScriptStruct SCCore.SCPoseAssetSelection
// 0x0010 (0x0010 - 0x0000)
struct FSCPoseAssetSelection final
{
public:
	struct FSmartName                             m_PoseName;                                        // 0x0000(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fWeight;                                         // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCPoseAssetSelection;

// ScriptStruct SCCore.AbilityProgression
// 0x0058 (0x0058 - 0x0000)
struct FAbilityProgression final
{
public:
	EAbilityProgressionEnableType                 m_eAbilityProgressionEnableType;                   // 0x0000(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, bool>               m_EligibleAbilities;                               // 0x0008(0x0050)(Edit, EditFixedSize, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAbilityProgression;

// ScriptStruct SCCore.RagdollBone
// 0x000C (0x000C - 0x0000)
struct FRagdollBone final
{
public:
	class FName                                   m_Name;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fForceFactor;                                    // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRagdollBone;

// ScriptStruct SCCore.RagdollMoveableBone
// 0x0020 (0x0020 - 0x0000)
struct FRagdollMoveableBone final
{
public:
	struct FRagdollBone                           m_Bone;                                            // 0x0000(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRagdollBone>                   m_CascadedBones;                                   // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRagdollMoveableBone;

// ScriptStruct SCCore.SCRawStat
// 0x0014 (0x0020 - 0x000C)
struct FSCRawStat final : public FFastArraySerializerItem
{
public:
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCStatControllerBase>      m_StatClass;                                       // 0x0010(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fValue;                                          // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCRawStat;

// ScriptStruct SCCore.SCRawStatContainer
// 0x0018 (0x0128 - 0x0110)
struct FSCRawStatContainer final : public FFastArraySerializer
{
public:
	TArray<struct FSCRawStat>                     m_Stats;                                           // 0x0110(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCRawStatContainer;

// ScriptStruct SCCore.ObjectSave
// 0x0010 (0x0010 - 0x0000)
struct FObjectSave final
{
public:
	TArray<uint8>                                 m_ObjectStateSaved;                                // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectSave;

// ScriptStruct SCCore.SCGameData
// 0x01A0 (0x01A0 - 0x0000)
struct FSCGameData final
{
public:
	TMap<class FName, struct FObjectSave>         m_WorldStatesSaved;                                // 0x0000(0x0050)(Edit, BlueprintVisible, EditConst, SaveGame, NativeAccessSpecifierPublic)
	TMap<TSoftClassPtr<class UClass>, struct FObjectSave> m_SubsystemSaved;                          // 0x0050(0x0050)(Edit, BlueprintVisible, EditConst, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_AppliedCheats;                                   // 0x00A0(0x0020)(Edit, BlueprintVisible, EditConst, SaveGame, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  m_UnlockedAchievements;                            // 0x00C0(0x0020)(Edit, BlueprintVisible, EditConst, SaveGame, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FGameplayTagContainer> m_NewlyUnlockedAchievements;             // 0x00E0(0x0050)(Edit, BlueprintVisible, EditConst, SaveGame, NativeAccessSpecifierPublic)
	TMap<TSoftClassPtr<class UClass>, float>      m_GameOptionsSave;                                 // 0x0130(0x0050)(Edit, BlueprintVisible, EditConst, SaveGame, NativeAccessSpecifierPublic)
	struct FIntPoint                              m_ResolutionSaved;                                 // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bPassedFirstLaunch;                              // 0x0188(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCrossplayWarningSeen;                           // 0x0189(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m_PreferredRegion;                                 // 0x0190(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCGameData;

// ScriptStruct SCCore.ShakeByGameplayTag
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FShakeByGameplayTag final
{
public:
	uint8                                         Pad_0[0x50];                                       // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FShakeByGameplayTag;

// ScriptStruct SCCore.SCSocketIK
// 0x0080 (0x0170 - 0x00F0)
struct FSCSocketIK final : public FSCBoneIK
{
public:
	uint8                                         Pad_F0[0x80];                                      // 0x00F0(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCSocketIK;

// ScriptStruct SCCore.SCSoundSwitchValue
// 0x0010 (0x0010 - 0x0000)
struct FSCSoundSwitchValue final
{
public:
	class FName                                   m_Group;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   m_State;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCSoundSwitchValue;

// ScriptStruct SCCore.SCSpawnImpostorInfos
// 0x00C0 (0x00C0 - 0x0000)
struct alignas(0x10) FSCSpawnImpostorInfos final
{
public:
	uint8                                         Pad_0[0xC0];                                       // 0x0000(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCSpawnImpostorInfos;

// ScriptStruct SCCore.SCStatId
// 0x0018 (0x0018 - 0x0000)
struct FSCStatId final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m_iPlayerId;                                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USCStatControllerBase>      m_StatClass;                                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCStatId;

// ScriptStruct SCCore.StatDataComputeInstance
// 0x0010 (0x0010 - 0x0000)
struct FStatDataComputeInstance final
{
public:
	TSubclassOf<class USCStatDataCompute>         m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCStatDataCompute*                     m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStatDataComputeInstance;

// ScriptStruct SCCore.StateTreeCompareActorsArrayDistanceConditionInstanceData
// 0x0020 (0x0020 - 0x0000)
struct FStateTreeCompareActorsArrayDistanceConditionInstanceData final
{
public:
	class AActor*                                 m_Source;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         m_Targets;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	double                                        m_Distance;                                        // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStateTreeCompareActorsArrayDistanceConditionInstanceData;

// ScriptStruct SCCore.StateTreeCompareActorsArrayDistanceCondition
// 0x0008 (0x0030 - 0x0028)
struct FStateTreeCompareActorsArrayDistanceCondition final : public FStateTreeConditionCommonBase
{
public:
	bool                                          m_bInvert;                                         // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGenericAICheck                               m_Operator;                                        // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeCompareActorsArrayDistanceCondition;

// ScriptStruct SCCore.StateTreeCompareTwoDistanceConditionInstanceData
// 0x0060 (0x0060 - 0x0000)
struct FStateTreeCompareTwoDistanceConditionInstanceData final
{
public:
	struct FVector                                m_vSourceA;                                        // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vTargetA;                                        // 0x0018(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vSourceB;                                        // 0x0030(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                m_vTargetB;                                        // 0x0048(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStateTreeCompareTwoDistanceConditionInstanceData;

// ScriptStruct SCCore.StateTreeCompareTwoDistanceCondition
// 0x0008 (0x0030 - 0x0028)
struct FStateTreeCompareTwoDistanceCondition final : public FStateTreeConditionCommonBase
{
public:
	bool                                          m_bInvert;                                         // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGenericAICheck                               m_Operator;                                        // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeCompareTwoDistanceCondition;

// ScriptStruct SCCore.StateTreeActorConditionInstanceData
// 0x0018 (0x0018 - 0x0000)
struct FStateTreeActorConditionInstanceData final
{
public:
	class AActor*                                 m_Target;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBaseActorConditionInstance            m_Condition;                                       // 0x0008(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStateTreeActorConditionInstanceData;

// ScriptStruct SCCore.StateTreeActorCondition
// 0x0000 (0x0028 - 0x0028)
struct FStateTreeActorCondition final : public FStateTreeConditionCommonBase
{
};
DUMPER7_ASSERTS_FStateTreeActorCondition;

// ScriptStruct SCCore.StateTreeActorTargetConditionInstanceData
// 0x0020 (0x0020 - 0x0000)
struct FStateTreeActorTargetConditionInstanceData final
{
public:
	class AActor*                                 m_Self;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 m_Target;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBaseActorTargetConditionInstance      m_Condition;                                       // 0x0010(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStateTreeActorTargetConditionInstanceData;

// ScriptStruct SCCore.StateTreeActorTargetCondition
// 0x0000 (0x0028 - 0x0028)
struct FStateTreeActorTargetCondition final : public FStateTreeConditionCommonBase
{
};
DUMPER7_ASSERTS_FStateTreeActorTargetCondition;

// ScriptStruct SCCore.StateTreeTargetDataConditionInstanceData
// 0x0028 (0x0028 - 0x0000)
struct FStateTreeTargetDataConditionInstanceData final
{
public:
	class AActor*                                 m_Self;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               m_TargetData;                                      // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTargetDataConditionInstance           m_Condition;                                       // 0x0018(0x0010)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStateTreeTargetDataConditionInstanceData;

// ScriptStruct SCCore.StateTreeTargetDataCondition
// 0x0000 (0x0028 - 0x0028)
struct FStateTreeTargetDataCondition final : public FStateTreeConditionCommonBase
{
};
DUMPER7_ASSERTS_FStateTreeTargetDataCondition;

// ScriptStruct SCCore.PlayersInvolved
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FPlayersInvolved final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPlayersInvolved;

// ScriptStruct SCCore.PlayersInvolvedTargetData
// 0x0018 (0x0028 - 0x0010)
struct FPlayersInvolvedTargetData final : public FSCGameplayAbilityTargetData
{
public:
	struct FPlayersInvolved                       m_PlayersInvolved;                                 // 0x0010(0x0018)(BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPlayersInvolvedTargetData;

// ScriptStruct SCCore.StateTreeTask_SubTree_InstanceData
// 0x0060 (0x0060 - 0x0000)
struct FStateTreeTask_SubTree_InstanceData final
{
public:
	struct FStateTreeInstanceData                 StateTreeInstanceData;                             // 0x0000(0x0010)(Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x50];                                      // 0x0010(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_SubTree_InstanceData;

// ScriptStruct SCCore.StateTreeTask_SubTree
// 0x0028 (0x0050 - 0x0028)
struct FStateTreeTask_SubTree final : public FStateTreeTaskCommonBase
{
public:
	struct FStateTreeReference                    m_SubTree;                                         // 0x0028(0x0028)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStateTreeTask_SubTree;

// ScriptStruct SCCore.SCCodeDrivenSpeedChangeTransitionSettings
// 0x0040 (0x0040 - 0x0000)
struct FSCCodeDrivenSpeedChangeTransitionSettings final
{
public:
	struct FSCCodeDrivenTransitionSettings        m_FromSpeedStateSettings[0x4];                     // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCodeDrivenSpeedChangeTransitionSettings;

// ScriptStruct SCCore.SCTransitionRange
// 0x000C (0x000C - 0x0000)
struct FSCTransitionRange final
{
public:
	bool                                          m_bIsRangeAllowed;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatInterval                         m_Range;                                           // 0x0004(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCTransitionRange;

// ScriptStruct SCCore.SCTransitionGameplayAbilityTargetData
// 0x0018 (0x0028 - 0x0010)
struct FSCTransitionGameplayAbilityTargetData final : public FSCGameplayAbilityTargetData
{
public:
	struct FSCTransition                          m_Transition;                                      // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCTransitionGameplayAbilityTargetData;

// ScriptStruct SCCore.SCCodeDrivenTurnTransitionSettings
// 0x0010 (0x0010 - 0x0000)
struct FSCCodeDrivenTurnTransitionSettings final
{
public:
	uint32                                        m_uiAllowedTurns;                                  // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USCCodeDrivenTurnTransitionDataAsset*   m_TaskSettings;                                    // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCCodeDrivenTurnTransitionSettings;

// ScriptStruct SCCore.SCTransitionAnimationEntry
// 0x0040 (0x0040 - 0x0000)
struct FSCTransitionAnimationEntry final
{
public:
	class UAnimSequence*                          m_Sequence;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bCanMirror;                                      // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEnabled;                                        // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bOverrideTransition;                             // 0x000A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCTransition                          m_TransitionOverride;                              // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCTransition                          m_GeneratedTransition;                             // 0x0028(0x0018)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCTransitionAnimationEntry;

// ScriptStruct SCCore.TransitionAnimSequencePlayInfos
// 0x0060 (0x0060 - 0x0000)
struct FTransitionAnimSequencePlayInfos final
{
public:
	class UAnimSequence*                          m_AnimSequence;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bMirror;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fDirAngleDiff;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FTransform>          m_BakedBoneTransformMap;                           // 0x0010(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTransitionAnimSequencePlayInfos;

// ScriptStruct SCCore.TransitionAnimSequencePlayInfosArray
// 0x0010 (0x0010 - 0x0000)
struct FTransitionAnimSequencePlayInfosArray final
{
public:
	TArray<struct FTransitionAnimSequencePlayInfos> m_Array;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTransitionAnimSequencePlayInfosArray;

// ScriptStruct SCCore.SCTransitionVisual
// 0x0038 (0x0038 - 0x0000)
struct FSCTransitionVisual final
{
public:
	struct FTransitionAnimSequencePlayInfosArray  m_Animations;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSCCodeDrivenTransitionSettings        m_FirstSettings;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FSCCodeDrivenTransitionSettings        m_SecondSettings;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                         m_fTurnTargetSpeedMultiplier;                      // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSCTransitionVisual;

// ScriptStruct SCCore.ProjectInViewportResult
// 0x0018 (0x0018 - 0x0000)
struct FProjectInViewportResult final
{
public:
	struct FVector2D                              m_v2DPosition;                                     // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIsOnScreen;                                     // 0x0010(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fAngle;                                          // 0x0014(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProjectInViewportResult;

// ScriptStruct SCCore.SCHUDLayoutRequest
// 0x0030 (0x0030 - 0x0000)
struct FSCHUDLayoutRequest final
{
public:
	TSoftClassPtr<class UClass>                   LayoutClass;                                       // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           LayerID;                                           // 0x0028(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCHUDLayoutRequest;

// ScriptStruct SCCore.SCHUDElementEntry
// 0x0030 (0x0030 - 0x0000)
struct FSCHUDElementEntry final
{
public:
	TSoftClassPtr<class UClass>                   WidgetClass;                                       // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           SlotID;                                            // 0x0028(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCHUDElementEntry;

// ScriptStruct SCCore.SCUserWidgetInstance
// 0x0010 (0x0010 - 0x0000)
struct FSCUserWidgetInstance final
{
public:
	TSubclassOf<class USCUserWidget>              m_DefaultClassObject;                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCUserWidget*                          m_Instance;                                        // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCUserWidgetInstance;

// ScriptStruct SCCore.ScheduledRefreshFlowGraphFromControllers_Data
// 0x0002 (0x0002 - 0x0000)
struct FScheduledRefreshFlowGraphFromControllers_Data final
{
public:
	uint8                                         Pad_0[0x2];                                        // 0x0000(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FScheduledRefreshFlowGraphFromControllers_Data;

// ScriptStruct SCCore.SCWorldNavFlowGraphSettings
// 0x00D8 (0x00D8 - 0x0000)
struct FSCWorldNavFlowGraphSettings final
{
public:
	class USCWorldNavFlowGraph*                   m_Instance;                                        // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class USCWorldNavSectorControllerComponent*, int32> m_SectorComponentsByDistance;           // 0x0008(0x0050)(Edit, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, int32>              m_SectorIdsByDistance;                             // 0x0058(0x0050)(Edit, DisableEditOnTemplate, Transient, EditConst, AdvancedDisplay, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USCWorldNavFlowGraph>    m_Asset;                                           // 0x00A8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_StartAt;                                         // 0x00D0(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCWorldNavFlowGraphSettings;

// ScriptStruct SCCore.SCWorldNavTransition
// 0x0020 (0x0020 - 0x0000)
struct FSCWorldNavTransition final
{
public:
	struct FGameplayTag                           m_IdSectorA;                                       // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           m_IdSectorB;                                       // 0x0008(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AActor>>          m_Owners;                                          // 0x0010(0x0010)(Edit, ZeroConstructor, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSCWorldNavTransition;

// ScriptStruct SCCore.StateTreeCooldownHandler
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FStateTreeCooldownHandler final
{
public:
	uint8                                         Pad_0[0x50];                                       // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeCooldownHandler;

// ScriptStruct SCCore.StateTreeTask_ActivateAbilityInstanceData
// 0x0020 (0x0020 - 0x0000)
struct FStateTreeTask_ActivateAbilityInstanceData final
{
public:
	TSubclassOf<class USCGameplayAbility>         m_Ability;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRequiredTargetDataHandler             m_TargetData;                                      // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayAbilitySpecHandle             m_Handle;                                          // 0x0018(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bGiveAbility;                                    // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_ActivateAbilityInstanceData;

// ScriptStruct SCCore.StateTreeTask_FindTargetInstanceData
// 0x00C0 (0x00C0 - 0x0000)
struct FStateTreeTask_FindTargetInstanceData final
{
public:
	class AActor*                                 m_Querier;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentTargetProvider                  m_TargetProvider;                                  // 0x0008(0x0058)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UScriptStruct*                          m_ExpectedResultType;                              // 0x0060(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRequiredTargetDataHandler             m_TargetData;                                      // 0x0068(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       m_Result;                                          // 0x0078(0x0010)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bSuccess;                                        // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateTreeEvent                        m_OnFoundTarget;                                   // 0x0090(0x0020)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0[0x10];                                      // 0x00B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_FindTargetInstanceData;

// ScriptStruct SCCore.StateTreeTask_HandleTaskCooldownInstanceData
// 0x000C (0x000C - 0x0000)
struct FStateTreeTask_HandleTaskCooldownInstanceData final
{
public:
	struct FFloatInterval                         m_Cooldown;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bStartCooldownOnExit;                            // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_HandleTaskCooldownInstanceData;

// ScriptStruct SCCore.StateTreeTask_RandomTransitionInstanceData
// 0x0001 (0x0001 - 0x0000)
struct FStateTreeTask_RandomTransitionInstanceData final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_RandomTransitionInstanceData;

// ScriptStruct SCCore.StateTreeTask_RandomChildTransitionInstanceData
// 0x0004 (0x0004 - 0x0000)
struct FStateTreeTask_RandomChildTransitionInstanceData final
{
public:
	float                                         m_fApplyCooldown;                                  // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStateTreeTask_RandomChildTransitionInstanceData;

// ScriptStruct SCCore.StateTreeTask_RandomChildTransition
// 0x0008 (0x0030 - 0x0028)
struct FStateTreeTask_RandomChildTransition final : public FStateTreeTaskCommonBase
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_RandomChildTransition;

// ScriptStruct SCCore.StateTreeTask_WaitForEventBinder
// 0x0028 (0x0050 - 0x0028)
struct FStateTreeTask_WaitForEventBinder final : public FStateTreeTaskCommonBase
{
public:
	struct FStateTreeEvent                        m_OnTriggerEvent;                                  // 0x0028(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FStateTreeStateLink                    m_OnTriggerTransition;                             // 0x0048(0x0002)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EStateTreeRunStatus                           m_OnTriggerTaskStatus;                             // 0x004A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateTreeTask_WaitForEventBinder;

// ScriptStruct SCCore.TagAvailabilityLayer
// 0x0070 (0x0070 - 0x0000)
struct FTagAvailabilityLayer final
{
public:
	struct FGameplayTag                           m_AvailabilityTagStackKey;                         // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETagLayerApplication                          m_eOperation;                                      // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x1];                                        // 0x0009(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	ETagLayerCreation                             m_eConstruction;                                   // 0x000A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  m_Tags;                                            // 0x0010(0x0020)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  m_ResultingTags;                                   // 0x0030(0x0020)(Edit, DisableEditOnInstance, EditConst, NativeAccessSpecifierPrivate)
	uint8                                         Pad_50[0x20];                                      // 0x0050(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTagAvailabilityLayer;

// ScriptStruct SCCore.TaggedObjectTableRow
// 0x0068 (0x0070 - 0x0008)
struct FTaggedObjectTableRow final : public FTableRowBase
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0008(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0028(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCGameplayTagHierarchy                RootTagHierarchy;                                  // 0x0050(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTaggedObjectTableRow;

// ScriptStruct SCCore.FromActorLocationIKComputation
// 0x0098 (0x00A0 - 0x0008)
struct FFromActorLocationIKComputation final : public FTargetIKComputation
{
public:
	struct FNameDataBinding                       m_TargetBoneName;                                  // 0x0008(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FFloatDataBinding                      m_MaxLengthDiff;                                   // 0x0038(0x0048)(Edit, NativeAccessSpecifierPublic)
	bool                                          m_bUseTargetDataInstigatorTransform;               // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseAnimInstanceMirrorDataTable;                 // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMirrorDataTable*                       m_MirrorDataTable;                                 // 0x0088(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bSwitchBoneOnMirror;                             // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptStruct*                          m_TargetDataStruct;                                // 0x0098(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFromActorLocationIKComputation;

// ScriptStruct SCCore.TargetReachableOnTimeWithLocoConditionData
// 0x0044 (0x0044 - 0x0000)
struct FTargetReachableOnTimeWithLocoConditionData final
{
public:
	float                                         m_fTimeMalus;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         m_LocoScaleTolerance;                              // 0x0004(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fServerTolerance;                                // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bIgnoreVerticalDistance;                         // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fMaxHeightToIgnoreVerticalDistance;              // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         m_DurationRange;                                   // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fDurationRangeServerTolerance;                   // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bAcceptTargetWithoutDelay;                       // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bUseSpeedStateOverAbsoluteValue;                 // 0x0025(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCCharacterSpeedState                        m_eMinSpeedState;                                  // 0x0026(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESCCharacterSpeedState                        m_eMaxSpeedState;                                  // 0x0027(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMinSpeedClamp;                                  // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fMaxSpeedClamp;                                  // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fApproxDistanceTolerance;                        // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bEnablePostponing;                               // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_fPostponeBestDurationTolerance;                  // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPostponeBestVelocityTolerance;                  // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         m_fPostponeTimeSecurityMargin;                     // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTargetReachableOnTimeWithLocoConditionData;

// ScriptStruct SCCore.TaskCooldownCondition
// 0x0008 (0x0030 - 0x0028)
struct FTaskCooldownCondition final : public FStateTreeConditionBase
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTaskCooldownCondition;

// ScriptStruct SCCore.WatchInputState
// 0x00A0 (0x00A0 - 0x0000)
struct FWatchInputState final
{
public:
	struct FInputActionState                      m_State;                                           // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         m_iActiveCount;                                    // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          m_bActive;                                         // 0x009C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWatchInputState;

// ScriptStruct SCCore.WeightedAnimSequencePickerData
// 0x0038 (0x0038 - 0x0000)
struct FWeightedAnimSequencePickerData final
{
public:
	struct FAnimSequencePickerInstance            m_AnimSequencePicker;                              // 0x0000(0x0038)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeightedAnimSequencePickerData;

// ScriptStruct SCCore.WidgetPoolElementArray
// 0x0010 (0x0010 - 0x0000)
struct FWidgetPoolElementArray final
{
public:
	TArray<struct FWidgetPoolElement>             m_Array;                                           // 0x0000(0x0010)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWidgetPoolElementArray;

// ScriptStruct SCCore.MovieSceneLightingChannelMask
// 0x0004 (0x0004 - 0x0000)
struct FMovieSceneLightingChannelMask final
{
public:
	uint32                                        Mask;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMovieSceneLightingChannelMask;

}

