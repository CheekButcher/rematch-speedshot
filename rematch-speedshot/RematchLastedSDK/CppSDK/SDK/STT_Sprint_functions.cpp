#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_Sprint

#include "Basic.hpp"

#include "STT_Sprint_classes.hpp"
#include "STT_Sprint_parameters.hpp"


namespace SDK
{

// Function STT_Sprint.STT_Sprint_C.ExecuteUbergraph_STT_Sprint
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USTT_Sprint_C::ExecuteUbergraph_STT_Sprint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("STT_Sprint_C", "ExecuteUbergraph_STT_Sprint");

	Params::STT_Sprint_C_ExecuteUbergraph_STT_Sprint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function STT_Sprint.STT_Sprint_C.OnAbility Cancel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilitySpecHandle&_abilityHanddle                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UGameplayAbility*                 _abilityActivated                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void USTT_Sprint_C::OnAbility_Cancel(const struct FGameplayAbilitySpecHandle& _abilityHanddle, class UGameplayAbility* _abilityActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("STT_Sprint_C", "OnAbility Cancel");

	Params::STT_Sprint_C_OnAbility_Cancel Parms{};

	Parms._abilityHanddle = std::move(_abilityHanddle);
	Parms._abilityActivated = _abilityActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function STT_Sprint.STT_Sprint_C.ReceiveExitState
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FStateTreeTransitionResult&TRANSITION                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USTT_Sprint_C::ReceiveExitState(const struct FStateTreeTransitionResult& TRANSITION)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("STT_Sprint_C", "ReceiveExitState");

	Params::STT_Sprint_C_ReceiveExitState Parms{};

	Parms.TRANSITION = std::move(TRANSITION);

	UObject::ProcessEvent(Func, &Parms);
}


// Function STT_Sprint.STT_Sprint_C.ReceiveLatentEnterState
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FStateTreeTransitionResult&TRANSITION                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USTT_Sprint_C::ReceiveLatentEnterState(const struct FStateTreeTransitionResult& TRANSITION)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("STT_Sprint_C", "ReceiveLatentEnterState");

	Params::STT_Sprint_C_ReceiveLatentEnterState Parms{};

	Parms.TRANSITION = std::move(TRANSITION);

	UObject::ProcessEvent(Func, &Parms);
}


// Function STT_Sprint.STT_Sprint_C.Trigger Sprint Ability
// (BlueprintCallable, BlueprintEvent)

void USTT_Sprint_C::Trigger_Sprint_Ability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("STT_Sprint_C", "Trigger Sprint Ability");

	UObject::ProcessEvent(Func, nullptr);
}

}

